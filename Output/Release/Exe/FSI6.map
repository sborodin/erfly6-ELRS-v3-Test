***********************************************************************************************
***                                                                                         ***
***                                    LINK INFORMATION                                     ***
***                                                                                         ***
***********************************************************************************************

Linker version:

  SEGGER ARM Linker 4.34.1 compiled Jun 28 2022 19:08:03
  Copyright (c) 2017-2022 SEGGER Microcontroller GmbH    www.segger.com


***********************************************************************************************
***                                                                                         ***
***                                     MODULE SUMMARY                                      ***
***                                                                                         ***
***********************************************************************************************

Memory use by input file:

  Object File                                       RX Code     RO Data     RW Data     ZI Data
  ---------------------------------------------  ----------  ----------  ----------  ----------
  A7105_SPI.o                                           776                       3          66
  AFHDS2A_a7105.o                                     1 860          88           4         230
  audio.o                                             1 800                      10          37
  BoardI6.o                                           3 444          57                      36
  crc.o                                                  46                                    
  crc_crsf.o                                             32         256                        
  crossfire.o                                         1 468          66                     224
  drivers.o                                           1 172           8                      64
  ELRS.o                                                 72                                 602
  elrsV2.o                                            3 366         155          11         798
  er9x.o                                              6 982         411           4       1 359
  file.o                                              1 470                                  64
  Kinetis_KL_Startup.o                                   40                                    
  lcd.o                                               2 302       1 895                   1 028
  main.o                                                 14                                    
  menus.o                                            28 670       4 113                     630
  MKL16Z4_Vectors.o                                     276                                    
  pers.o                                              1 812         127                      25
  pulses.o                                              596                       4         152
  SEGGER_crtinit_v6m_little.o                            94                                    
  SEGGER_THUMB_Startup.o                                 20                                    
  stamp.o                                                            49                        
  stubborn_receiver.o                                    20                                    
  stubborn_sender.o                                      38                                    
  SX127x.o                                               60                                   8
  SX127xHal.o                                            12                                   4
  system_MKL16Z4.o                                      148                                    
  templates.o                                           200                                    
  ---------------------------------------------  ----------  ----------  ----------  ----------
  Subtotal (28 objects)                              56 790       7 225          36       5 327
  ---------------------------------------------  ----------  ----------  ----------  ----------
  heapops_basic_v6m_little.a                             20                                   4
  libc_v6m_t_le_eabi_small.a                            446                                    
  ---------------------------------------------  ----------  ----------  ----------  ----------
  Subtotal (2 archives)                                 466                                   4
  ---------------------------------------------  ----------  ----------  ----------  ----------
  Linker created (shared data, fills, blocks):                       76                     512
  =============================================  ==========  ==========  ==========  ==========
  Total:                                             57 256       7 301          36       5 843
  =============================================  ==========  ==========  ==========  ==========

Memory use by archive member:

  Archive member                                    RX Code     RO Data     RW Data     ZI Data
  ---------------------------------------------  ----------  ----------  ----------  ----------
  heapops_basic.o (heapops_basic_v6m_little.a)           20                                   4
  intasmops_arm.o (libc_v6m_t_le_eabi_small.a)          210                                    
  intops.o (libc_v6m_t_le_eabi_small.a)                  42                                    
  strasmops_arm.o (libc_v6m_t_le_eabi_small.a)           96                                    
  strops.o (libc_v6m_t_le_eabi_small.a)                  98                                    
  ---------------------------------------------  ----------  ----------  ----------  ----------
  Subtotal (5 members from 2 archives)                  466                                   4
  Objects (28 files)                                 56 790       7 225          36       5 327
  Linker created (shared data, fills, blocks):                       76                     512
  =============================================  ==========  ==========  ==========  ==========
  Total:                                             57 256       7 301          36       5 843
  =============================================  ==========  ==========  ==========  ==========

Memory use by linker:

  Description                                       RX Code     RO Data     RW Data     ZI Data
  ---------------------------------------------  ----------  ----------  ----------  ----------
  Initialization table                                               76                        
  Memory for block 'heap'                                                                   256
  Memory for block 'stack'                                                                  256
  ---------------------------------------------  ----------  ----------  ----------  ----------
  Subtotal (linker created):                                         76                     512
  ---------------------------------------------  ----------  ----------  ----------  ----------
  Objects (28 files)                                 56 790       7 225          36       5 327
  Archives (2 files)                                    466                                   4
  =============================================  ==========  ==========  ==========  ==========
  Total:                                             57 256       7 301          36       5 843
  =============================================  ==========  ==========  ==========  ==========


***********************************************************************************************
***                                                                                         ***
***                                     SECTION DETAIL                                      ***
***                                                                                         ***
***********************************************************************************************

Sections by address:

  Range              Symbol or [section] Name         Size  Al  Init  Ac  Object File
  -----------------  -------------------------  ----------  --  ----  --  -----------
  00000000-000000bf  _vectors                          192   4  Code  RX  MKL16Z4_Vectors.o
  000000c0-000003fb  MState2::check_columns(unsigned char, unsigned char)
                                                       828   4  Code  RX  menus.o
  000003fc-000003fd  noopOpen(FieldProps*)               2   2  Code  RX  elrsV2.o
  000003fe-000003ff  ( UNUSED .=.+2 )                    2   -  ----  -   -
  00000400-0000040f  BackDoorKey                        16   2  Code  RX  MKL16Z4_Vectors.o
  00000410-000014f3  menuProcModelIndex(unsigned char)
                                                     4 324   4  Code  RX  menus.o
  000014f4-00002183  menuProcIndex(unsigned char)
                                                     3 216   4  Code  RX  menus.o
  00002184-00002d4b  perOut(short*, unsigned char)
                                                     3 016   4  Code  RX  menus.o
  00002d4c-000034df  mainSequence()                  1 940   4  Code  RX  er9x.o
  000034e0-00003a6b  menuProc0(unsigned char)        1 420   4  Code  RX  menus.o
  00003a6c-00003f2b  menuProcMixOne(unsigned char)
                                                     1 216   4  Code  RX  menus.o
  00003f2c-000043d7  menuProcMix(unsigned char)
                                                     1 196   4  Code  RX  menus.o
  000043d8-0000484b  menuProcVoiceOne(unsigned char)
                                                     1 140   4  Code  RX  menus.o
  0000484c-00004c1b  ActionAFHDS2A                     976   4  Code  RX  AFHDS2A_a7105.o
  00004c1c-00004fcb  HW_Init                           944   4  Code  RX  BoardI6.o
  00004fcc-00005303  processCrossfireTelemetryFrame()
                                                       824   4  Code  RX  crossfire.o
  00005304-0000561f  menuProcModelSelect(unsigned char)
                                                       796   4  Code  RX  menus.o
  00005620-00005937  timer()                           792   4  Code  RX  menus.o
  00005938-00005c2f  audioQueue::event(unsigned char, unsigned char)
                                                       760   4  Code  RX  audio.o
  00005c30-00005f0f  procOneVoiceAlarm(t_voiceAlarm*, unsigned char)
                                                       736   4  Code  RX  er9x.o
  00005f10-000061b3  menuProcProtocol(unsigned char)
                                                       676   4  Code  RX  menus.o
  000061b4-00006447  menuScaleOne(unsigned char)
                                                       660   4  Code  RX  menus.o
  00006448-00006667  mainER()                          544   4  Code  RX  er9x.o
  00006668-00006873  eeLoadModel(unsigned char)
                                                       524   4  Code  RX  pers.o
  00006874-00006a6f  parseParameterInfoMessage(unsigned char*, unsigned char)
                                                       508   4  Code  RX  elrsV2.o
  00006a70-00006c57  getSwitch(signed char, bool, unsigned char)
                                                       488   4  Code  RX  er9x.o
  00006c58-00006e3f  menuProcTelemetry(unsigned char)
                                                       488   4  Code  RX  menus.o
  00006e40-00007027  menuProcGlobals(unsigned char)
                                                       488   4  Code  RX  menus.o
  00007028-0000720f  lcd_outdezNAtt(unsigned char, unsigned char, int, unsigned char, signed char, unsigned char)
                                                       488   4  Code  RX  lcd.o
  00007210-000073eb  menuPhaseOne(unsigned char)
                                                       476   4  Code  RX  menus.o
  000073ec-000075b3  menuSetFailsafe(unsigned char)
                                                       456   4  Code  RX  menus.o
  000075b4-0000776f  putsTelemetryChannel(unsigned char, unsigned char, signed char, int, unsigned char, unsigned char)
                                                       444   4  Code  RX  menus.o
  00007770-000078f7  checkIncDec16(short, short, short, unsigned char)
                                                       392   4  Code  RX  er9x.o
  000078f8-00007a7b  perOutPhase(short*, unsigned char)
                                                       388   4  Code  RX  menus.o
  00007a7c-00007bf7  parseDeviceInfoMessage(unsigned char*)
                                                       380   4  Code  RX  elrsV2.o
  00007bf8-00007d5b  handleDevicePageEvent(unsigned char)
                                                       356   4  Code  RX  elrsV2.o
  00007d5c-00007ebf  AFHDS2A_build_packet(unsigned char)
                                                       356   4  Code  RX  AFHDS2A_a7105.o
  00007ec0-0000801f  i2c_master                        352   4  Code  RX  BoardI6.o
  00008020-0000817f  eeCheck(bool)                     352   4  Code  RX  pers.o
  00008180-000082df  menuProcCurveOne(unsigned char)
                                                       352   4  Code  RX  menus.o
  000082e0-0000843b  eeprom_write_page_cmp(char const*, unsigned short, unsigned int)
                                                       348   4  Code  RX  drivers.o
  0000843c-00008593  processFlySkySensor(unsigned char const*, unsigned char)
                                                       344   4  Code  RX  AFHDS2A_a7105.o
  00008594-000086d7  doPopup(char const*, unsigned char, unsigned char)
                                                       324   4  Code  RX  menus.o
  000086d8-00008803  lcd_putcAtt(unsigned char, unsigned char, char, unsigned char)
                                                       300   4  Code  RX  lcd.o
  00008804-0000891b  menuProcVoiceAlarm(unsigned char)
                                                       280   4  Code  RX  menus.o
  0000891c-00008a07  runCrossfireTelemetryCallback(unsigned char, unsigned char*, unsigned char)
                                                       236   4  Code  RX  elrsV2.o
  00008a08-00008af3  menuModelPhases(unsigned char)
                                                       236   4  Code  RX  menus.o
  00008af4-00008bdf  setupPulsesPPM(unsigned char)
                                                       236   4  Code  RX  pulses.o
  00008be0-00008cc3  checkSwitches()                   228   4  Code  RX  er9x.o
  00008cc4-00008da7  runPopupPage(unsigned char)
                                                       228   4  Code  RX  elrsV2.o
  00008da8-00008e7f  per10ms()                         216   4  Code  RX  drivers.o
  00008e80-00008f57  setStickCenter()                  216   4  Code  RX  menus.o
  00008f58-00009023  voice_telem_item(unsigned char)
                                                       204   4  Code  RX  menus.o
  00009024-000090ef  calc_scaler(unsigned char, unsigned char*, unsigned char*)
                                                       204   4  Code  RX  menus.o
  000090f0-000091b7  runDevicePage(unsigned char)
                                                       200   4  Code  RX  elrsV2.o
  000091b8-0000927b  EFile::write(unsigned char*, unsigned char)
                                                       196   4  Code  RX  file.o
  0000927c-0000933f  Key::input(bool, EnumKeys)
                                                       196   4  Code  RX  drivers.o
  00009340-000093ff  audioQueue::play(unsigned char, unsigned char, unsigned char, unsigned char)
                                                       192   4  Code  RX  audio.o
  00009400-000094bf  menuProcStatistic(unsigned char)
                                                       192   4  Code  RX  menus.o
  000094c0-0000957f  menuRXSetup(unsigned char)
                                                       192   4  Code  RX  menus.o
  00009580-0000963f  A7105_Init()                      192   4  Code  RX  A7105_SPI.o
  00009640-000096fb  calcExpo(unsigned char, short)
                                                       188   4  Code  RX  menus.o
  000096fc-000097b3  initAFHDS2A                       184   4  Code  RX  AFHDS2A_a7105.o
  000097b4-0000986b  menuProcCurve(unsigned char)
                                                       184   4  Code  RX  menus.o
  0000986c-0000991f  indexProcess(unsigned char, MState2*, unsigned char)
                                                       180   4  Code  RX  menus.o
  00009920-000099d3  setupPulses()                     180   4  Code  RX  pulses.o
  000099d4-00009a83  editName(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char)
                                                       176   4  Code  RX  menus.o
  00009a84-00009b33  editExpoVals(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
                                                       176   4  Code  RX  menus.o
  00009b34-00009bd7  EeFsck()                          164   4  Code  RX  file.o
  00009bd8-00009c7b  menuDeleteDupModel(unsigned char)
                                                       164   4  Code  RX  menus.o
  00009c7c-00009d1f  menuRangeBind(unsigned char)
                                                       164   4  Code  RX  menus.o
  00009d20-00009dc3  putsTmrMode(unsigned char, unsigned char, unsigned char, unsigned char)
                                                       164   4  Code  RX  er9x.o
  00009dc4-00009e63  drawFunction(unsigned char, unsigned char)
                                                       160   4  Code  RX  menus.o
  00009e64-00009ef7  SystemInit                        148   4  Code  RX  system_MKL16Z4.o
  00009ef8-00009f87  checkIndexed(unsigned char, char const*, unsigned char, unsigned char)
                                                       144   4  Code  RX  menus.o
  00009f88-0000a013  doMainScreenGrphics()             140   4  Code  RX  menus.o
  0000a014-0000a09f  refreshDiplay()                   140   4  Code  RX  lcd.o
  0000a0a0-0000a12b  gvarMenuItem(unsigned char, unsigned char, signed char, signed char, signed char, unsigned char)
                                                       140   4  Code  RX  menus.o
  0000a12c-0000a1b3  drawCurve(unsigned char)          136   4  Code  RX  menus.o
  0000a1b4-0000a23b  keyState(EnumKeys)                136   4  Code  RX  drivers.o
  0000a23c-0000a2c3  createCrossfireChannelsFrame(unsigned char*, short*)
                                                       136   4  Code  RX  crossfire.o
  0000a2c4-0000a34b  eeGeneralDefault()                136   4  Code  RX  pers.o
  0000a34c-0000a3d3  putsChnRaw(unsigned char, unsigned char, unsigned char, unsigned char)
                                                       136   4  Code  RX  er9x.o
  0000a3d4-0000a457  setup_crsf_serial_port            132   4  Code  RX  BoardI6.o
  0000a458-0000a4db  t_voice::voice_process()          132   4  Code  RX  audio.o
  0000a4dc-0000a55b  audioQueue::heartbeat()           128   4  Code  RX  audio.o
  0000a55c-0000a5d7  fieldTextSelectionLoad(FieldProps*, unsigned char*, unsigned char)
                                                       124   4  Code  RX  elrsV2.o
  0000a5d8-0000a653  selectField(signed char)          124   4  Code  RX  elrsV2.o
  0000a654-0000a6cf  scaleAnalog(short, unsigned char)
                                                       124   4  Code  RX  menus.o
  0000a6d0-0000a747  EFile::read(unsigned char*, unsigned short)
                                                       120   4  Code  RX  file.o
  0000a748-0000a7bf  lcd_vline(unsigned char, unsigned char, signed char)
                                                       120   4  Code  RX  lcd.o
  0000a7c0-0000a837  fieldTextSelectionDisplay(FieldProps*, unsigned char, unsigned char)
                                                       120   4  Code  RX  elrsV2.o
  0000a838-0000a8af  eeReadGeneral()                   120   4  Code  RX  pers.o
  0000a8b0-0000a923  get_telemetry_value(unsigned char)
                                                       116   4  Code  RX  menus.o
  0000a924-0000a997  getGvarSourceValue(unsigned char)
                                                       116   4  Code  RX  er9x.o
  0000a998-0000aa0b  fieldFolderOpen(FieldProps*)
                                                       116   4  Code  RX  elrsV2.o
  0000aa0c-0000aa7f  putsDrSwitches(unsigned char, unsigned char, signed char, unsigned char)
                                                       116   4  Code  RX  er9x.o
  0000aa80-0000aaf3  UIbackExec(FieldProps*)           116   4  Code  RX  elrsV2.o
  0000aaf4-0000ab63  insertMix(unsigned char, unsigned char)
                                                       112   4  Code  RX  menus.o
  0000ab64-0000abd3  getValue(unsigned char)           112   4  Code  RX  er9x.o
  0000abd4-0000ac43  alertx(char const*, bool)         112   4  Code  RX  er9x.o
  0000ac44-0000acb3  modelDefaultWrite(unsigned char)
                                                       112   4  Code  RX  pers.o
  0000acb4-0000ad23  menuDeleteMix(unsigned char)
                                                       112   4  Code  RX  menus.o
  0000ad24-0000ad93  UART2_IRQHandler                  112   4  Code  RX  BoardI6.o
  0000ad94-0000adff  processCrossfireTelemetryData(unsigned char)
                                                       108   4  Code  RX  crossfire.o
  0000ae00-0000ae6b  dispSignalQality(unsigned char)
                                                       108   4  Code  RX  menus.o
  0000ae6c-0000aed7  putsTelemValue(unsigned char, unsigned char, int, unsigned char, unsigned char)
                                                       108   4  Code  RX  er9x.o
  0000aed8-0000af43  SPI0_IRQHandler                   108   4  Code  RX  BoardI6.o
  0000af44-0000afab  eeDuplicateModel(unsigned char)
                                                       104   4  Code  RX  pers.o
  0000afac-0000b00f  crossfireTelemetryPush(unsigned char, unsigned char*, unsigned char)
                                                       100   4  Code  RX  crossfire.o
  0000b010-0000b073  A7105_AdjustLOBaseFreq()          100   4  Code  RX  A7105_SPI.o
  0000b074-0000b0d7  lcd_hlineStip(unsigned char, unsigned char, signed char, unsigned char)
                                                       100   4  Code  RX  lcd.o
  0000b0d8-0000b13b  PIND                              100   4  Code  RX  BoardI6.o
  0000b13c-0000b19b  eeLoadModelName(unsigned char, char*, unsigned char)
                                                        96   4  Code  RX  pers.o
  0000b19c-0000b1fb  setTrimValue(unsigned char, unsigned char, short)
                                                        96   4  Code  RX  er9x.o
  0000b1fc-0000b25b  PINB                               96   4  Code  RX  BoardI6.o
  0000b25c-0000b2b7  crsf_send_data                     92   4  Code  RX  BoardI6.o
  0000b2b8-0000b313  almess(char const*, unsigned char)
                                                        92   4  Code  RX  er9x.o
  0000b314-0000b36f  doBackLightVoice(unsigned char)
                                                        92   4  Code  RX  er9x.o
  0000b370-0000b3cb  calcStickScroll(unsigned char)
                                                        92   4  Code  RX  er9x.o
  0000b3cc-0000b427  allocateFields()                   92   4  Code  RX  elrsV2.o
  0000b428-0000b483  applyTemplate()                    92   4  Code  RX  templates.o
  0000b484-0000b4db  getADC_osmp                        88   4  Code  RX  BoardI6.o
  0000b4dc-0000b533  EFile::closeTrunc()                88   4  Code  RX  file.o
  0000b534-0000b58b  lcd_init()                         88   4  Code  RX  lcd.o
  0000b58c-0000b5e3  setMix(unsigned char, unsigned char)
                                                        88   4  Code  RX  templates.o
  0000b5e4-0000b63b  serialVoiceInit(void (*)(unsigned char*, unsigned char))
                                                        88   4  Code  RX  BoardI6.o
  0000b63c-0000b68f  eeWriteGeneral()                   84   4  Code  RX  pers.o
  0000b690-0000b6e3  putsChnOpRaw(unsigned char, unsigned char, t_MixData*, unsigned char)
                                                        84   4  Code  RX  menus.o
  0000b6e4-0000b737  TPM0_IRQHandler                    84   4  Code  RX  BoardI6.o
  0000b738-0000b78b  PINE                               84   4  Code  RX  BoardI6.o
  0000b78c-0000b7db  fieldUnifiedDisplay(FieldProps*, unsigned char, unsigned char)
                                                        80   4  Code  RX  elrsV2.o
  0000b7dc-0000b82b  A7105_WriteData(unsigned char, unsigned char)
                                                        80   4  Code  RX  A7105_SPI.o
  0000b82c-0000b87b  putsTrimMode(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
                                                        80   4  Code  RX  menus.o
  0000b87c-0000b8cb  ISR_TIMER0_COMP_vect               80   4  Code  RX  er9x.o
  0000b8cc-0000b917  incrField(signed char)             76   4  Code  RX  elrsV2.o
  0000b918-0000b963  checkTHR()                         76   4  Code  RX  er9x.o
  0000b964-0000b9af  lcd_img(unsigned char, unsigned char, unsigned char const*, unsigned char)
                                                        76   4  Code  RX  lcd.o
  0000b9b0-0000b9fb  check_backlight_voice()            76   4  Code  RX  er9x.o
  0000b9fc-0000ba47  checkThrottlePosition()            76   4  Code  RX  er9x.o
  0000ba48-0000ba93  setupPulsesCrossfire()             76   4  Code  RX  crossfire.o
  0000ba94-0000badf  uart_clear_error()                 76   4  Code  RX  BoardI6.o
  0000bae0-0000bb2b  SPI_RADIO_ReceiveBlock             76   4  Code  RX  BoardI6.o
  0000bb2c-0000bb73  SetStartPulsePol()                 72   4  Code  RX  pulses.o
  0000bb74-0000bbbb  yesNoMenuExit(unsigned char, char const*)
                                                        72   4  Code  RX  menus.o
  0000bbbc-0000bc03  _GLOBAL__sub_I_ELRS.cpp            72   4  Code  RX  ELRS.o
  0000bc04-0000bc4b  PIT_IRQHandler                     72   4  Code  RX  BoardI6.o
  0000bc4c-0000bc93  functions                          72   4  Cnst  RO  elrsV2.o
  0000bc94-0000bcd7  shutdown_crsf_serial_port          68   4  Code  RX  BoardI6.o
  0000bcd8-0000bd1b  eeprom_read_block(void*, void const*, unsigned int)
                                                        68   4  Code  RX  drivers.o
  0000bd1c-0000bd5f  eeWriteBlockCmp(void const*, unsigned short, unsigned int)
                                                        68   4  Code  RX  drivers.o
  0000bd60-0000bda3  ISR_TIMER1_COMPA_vect              68   4  Code  RX  pulses.o
  0000bda4-0000bde7  NMI_Handler                        68   4  Code  RX  MKL16Z4_Vectors.o
  0000bde8-0000be27  EFile::swap(unsigned char, unsigned char)
                                                        64   4  Code  RX  file.o
  0000be28-0000be67  audioQueue::getToneLength(unsigned char)
                                                        64   4  Code  RX  audio.o
  0000be68-0000bea7  processCrossfireTelemetryValue(unsigned char, int)
                                                        64   4  Code  RX  crossfire.o
  0000bea8-0000bee7  crossfileMenu(MState2&, unsigned char, unsigned char, unsigned char, unsigned char)
                                                        64   4  Code  RX  elrsV2.o
  0000bee8-0000bf27  ELRSV2_run(unsigned char)          64   4  Code  RX  elrsV2.o
  0000bf28-0000bf63  getField(unsigned char)            60   4  Code  RX  elrsV2.o
  0000bf64-0000bf9f  editSlowDelay(unsigned char, unsigned char, unsigned char)
                                                        60   4  Code  RX  menus.o
  0000bfa0-0000bfdb  anaIn(unsigned char)               60   4  Code  RX  er9x.o
  0000bfdc-0000c017  displayOneSwitch(unsigned char, unsigned char, unsigned char)
                                                        60   4  Code  RX  menus.o
  0000c018-0000c053  rangeBindAction(unsigned char, unsigned char)
                                                        60   4  Code  RX  menus.o
  0000c054-0000c08f  getRawTrimValue(unsigned char, unsigned char)
                                                        60   4  Code  RX  er9x.o
  0000c090-0000c0cb  ELRSV2_stop()                      60   4  Code  RX  elrsV2.o
  0000c0cc-0000c107  EeFsFormat()                       60   4  Code  RX  file.o
  0000c108-0000c13f  audioQueue::driver()               56   4  Code  RX  er9x.o
  0000c140-0000c177  REG(signed char, signed char, signed char)
                                                        56   4  Code  RX  er9x.o
  0000c178-0000c1af  getCrossfireTelemetryValue(unsigned char, int&, int)
                                                        56   4  Code  RX  crossfire.o
  0000c1b0-0000c1e7  convert_failsafe_ppm(unsigned char)
                                                        56   4  Code  RX  A7105_SPI.o
  0000c1e8-0000c21f  lcd_char_inverse(unsigned char, unsigned char, unsigned char, unsigned char)
                                                        56   4  Code  RX  lcd.o
  0000c220-0000c257  get_dr_state(unsigned char)
                                                        56   4  Code  RX  menus.o
  0000c258-0000c28f  resetTimern(unsigned char)
                                                        56   4  Code  RX  menus.o
  0000c290-0000c2c7  PORTC_PORTD_IRQHandler             56   4  Code  RX  BoardI6.o
  0000c2c8-0000c2ff  menuProcModelIndex(unsigned char)::n_Strings
                                                        56   4  Cnst  RO  menus.o
  0000c300-0000c337  [.rodata..Lswitch.table._Z18menuProcModelIndexh]
                                                        56   4  Cnst  RO  menus.o
  0000c338-0000c36b  put_curve(unsigned char, unsigned char, signed char, unsigned char)
                                                        52   4  Code  RX  menus.o
  0000c36c-0000c39f  pushMenu(void (*)(unsigned char))
                                                        52   4  Code  RX  er9x.o
  0000c3a0-0000c3d3  eeLoadModelForBackup(unsigned char)
                                                        52   4  Code  RX  pers.o
  0000c3d4-0000c407  fieldCommandSave(FieldProps*)
                                                        52   4  Code  RX  elrsV2.o
  0000c408-0000c43b  lcd_write_bits(unsigned char*, unsigned char)
                                                        52   4  Code  RX  lcd.o
  0000c43c-0000c46f  getFlightPhase()                   52   4  Code  RX  er9x.o
  0000c470-0000c4a3  A7105_SetPower()                   52   4  Code  RX  A7105_SPI.o
  0000c4a4-0000c4d7  SPI_RADIO_SendBlock                52   4  Code  RX  BoardI6.o
  0000c4d8-0000c507  EFile::create(unsigned char, unsigned char, unsigned short)
                                                        48   4  Code  RX  file.o
  0000c508-0000c537  EeFsFree(unsigned char)            48   4  Code  RX  file.o
  0000c538-0000c567  modelSave(unsigned char)           48   4  Code  RX  pers.o
  0000c568-0000c597  char2idx(char)                     48   4  Code  RX  menus.o
  0000c598-0000c5c7  EeFsOpen()                         48   4  Code  RX  file.o
  0000c5c8-0000c5f7  eeDirty(unsigned char)             48   4  Code  RX  pers.o
  0000c5f8-0000c627  displayVoiceRate(unsigned char, unsigned char, unsigned char, unsigned char)
                                                        48   4  Code  RX  menus.o
  0000c628-0000c657  A7105_ReadData(unsigned char)
                                                        48   4  Code  RX  A7105_SPI.o
  0000c658-0000c687  UART0_IRQHandler                   48   4  Code  RX  BoardI6.o
  0000c688-0000c6b3  SX127xDriver::SX127xDriver()
                                                        44   4  Code  RX  SX127x.o
  0000c6b4-0000c6df  dispGvar(unsigned char, unsigned char, unsigned char, unsigned char)
                                                        44   4  Code  RX  menus.o
  0000c6e0-0000c70b  popMenu(bool)                      44   4  Code  RX  er9x.o
  0000c70c-0000c737  crossfireTelemetryPush4(unsigned char, unsigned char, unsigned char)
                                                        44   4  Code  RX  elrsV2.o
  0000c738-0000c763  sendSerialVoiceData(unsigned char*, unsigned int)
                                                        44   4  Code  RX  BoardI6.o
  0000c764-0000c78f  putVoiceQueueLong(unsigned short)
                                                        44   4  Code  RX  audio.o
  0000c790-0000c7bb  fieldCommandLoad(FieldProps*, unsigned char*, unsigned char)
                                                        44   4  Code  RX  elrsV2.o
  0000c7bc-0000c7e7  menuMixersLimit(unsigned char)
                                                        44   4  Code  RX  menus.o
  0000c7e8-0000c813  PING                               44   4  Code  RX  BoardI6.o
  0000c814-0000c83f  menuProcIndex(unsigned char)::n_Strings
                                                        44   4  Cnst  RO  menus.o
  0000c840-0000c867  mDelay                             40   4  Code  RX  BoardI6.o
  0000c868-0000c88f  EFile::rm(unsigned char)           40   4  Code  RX  file.o
  0000c890-0000c8b7  EeFsAlloc()                        40   4  Code  RX  file.o
  0000c8b8-0000c8df  popupCompat(unsigned char)
                                                        40   4  Code  RX  elrsV2.o
  0000c8e0-0000c907  putsVolts(unsigned char, unsigned char, short, unsigned char)
                                                        40   4  Code  RX  lcd.o
  0000c908-0000c92f  putsVBat(unsigned char, unsigned char, unsigned char)
                                                        40   4  Code  RX  lcd.o
  0000c930-0000c957  lcd_plot(unsigned char, unsigned char)
                                                        40   4  Code  RX  lcd.o
  0000c958-0000c97f  A7105_AntSwitch()                  40   4  Code  RX  A7105_SPI.o
  0000c980-0000c9a7  eeWaitComplete()                   40   4  Code  RX  pers.o
  0000c9a8-0000c9cf  switchDisplay(unsigned char, unsigned char)
                                                        40   4  Code  RX  menus.o
  0000c9d0-0000c9f7  Uart_SendCMD(unsigned char, unsigned char, unsigned short)
                                                        40   4  Code  RX  audio.o
  0000c9f8-0000ca1f  startPulses()                      40   4  Code  RX  pulses.o
  0000ca20-0000ca47  evalOffset(signed char)            40   4  Code  RX  menus.o
  0000ca48-0000ca6f  Reset_Handler                      40   4  Code  RX  Kinetis_KL_Startup.o
  0000ca70-0000ca93  EFile::openRd(unsigned char)
                                                        36   4  Code  RX  file.o
  0000ca94-0000cab7  curveAddress(unsigned char)
                                                        36   4  Code  RX  menus.o
  0000cab8-0000cadb  crsf_init()                        36   4  Code  RX  crossfire.o
  0000cadc-0000caff  ee_waite()                         36   4  Code  RX  drivers.o
  0000cb00-0000cb23  reachMixerCountLimit()             36   4  Code  RX  menus.o
  0000cb24-0000cb47  dispFlightModename(unsigned char, unsigned char, unsigned char)
                                                        36   4  Code  RX  menus.o
  0000cb48-0000cb6b  evalChkSum()                       36   4  Code  RX  pers.o
  0000cb6c-0000cb8f  LCD_DATA                           36   4  Code  RX  BoardI6.o
  0000cb90-0000cbb3  processCrossfireTelemetryFrame()::power_values
                                                        36   4  Cnst  RO  crossfire.o
  0000cbb4-0000cbd3  EFile::size()                      32   4  Code  RX  file.o
  0000cbd4-0000cbf3  setVolume(unsigned char)           32   4  Code  RX  audio.o
  0000cbf4-0000cc13  chainMenu(void (*)(unsigned char))
                                                        32   4  Code  RX  er9x.o
  0000cc14-0000cc33  trace()                            32   4  Code  RX  menus.o
  0000cc34-0000cc53  crc8(unsigned char const*, unsigned int)
                                                        32   4  Code  RX  crc_crsf.o
  0000cc54-0000cc73  checkCrossfireTelemetryFrameCRC()
                                                        32   4  Code  RX  crossfire.o
  0000cc74-0000cc93  processVoiceAlarms()               32   4  Code  RX  er9x.o
  0000cc94-0000ccb3  fieldStringDisplay(FieldProps*, unsigned char, unsigned char)
                                                        32   4  Code  RX  elrsV2.o
  0000ccb4-0000ccd3  putsOffDecimal(unsigned char, unsigned char, unsigned short, unsigned char)
                                                        32   4  Code  RX  menus.o
  0000ccd4-0000ccf3  lcdSetRefVolt(unsigned char)
                                                        32   4  Code  RX  lcd.o
  0000ccf4-0000cd13  backlightKey()                     32   4  Code  RX  er9x.o
  0000cd14-0000cd33  pauseEvents(unsigned char)
                                                        32   4  Code  RX  drivers.o
  0000cd34-0000cd53  menuPressed()                      32   4  Code  RX  drivers.o
  0000cd54-0000cd73  EeFsGetFree()                      32   4  Code  RX  file.o
  0000cd74-0000cd93  SetPRTTimPeriod                    32   4  Code  RX  BoardI6.o
  0000cd94-0000cdaf  audioVoiceDefevent(unsigned char, unsigned char)
                                                        28   4  Code  RX  audio.o
  0000cdb0-0000cdcb  throttleReversed()                 28   4  Code  RX  er9x.o
  0000cdcc-0000cde7  putWarnSwitch(unsigned char, unsigned char)
                                                        28   4  Code  RX  er9x.o
  0000cde8-0000ce03  modeFixValue(unsigned char)
                                                        28   4  Code  RX  er9x.o
  0000ce04-0000ce1f  displayTimer(unsigned char, unsigned char, unsigned char, unsigned char)
                                                        28   4  Code  RX  menus.o
  0000ce20-0000ce3b  on_voice_cb(unsigned char*, unsigned char)
                                                        28   4  Code  RX  audio.o
  0000ce3c-0000ce57  crsf_action()                      28   4  Code  RX  crossfire.o
  0000ce58-0000ce73  killEvents(unsigned char)          28   4  Code  RX  drivers.o
  0000ce74-0000ce8f  TPM2_IRQHandler                    28   4  Code  RX  BoardI6.o
  0000ce90-0000ceab  TPM1_IRQHandler                    28   4  Code  RX  BoardI6.o
  0000ceac-0000cec7  EnableGIO                          28   4  Code  RX  BoardI6.o
  0000cec8-0000cedf  clearKeyEvents()                   24   4  Code  RX  er9x.o
  0000cee0-0000cef7  lcd_rect(unsigned char, unsigned char, unsigned char, unsigned char)
                                                        24   4  Code  RX  lcd.o
  0000cef8-0000cf0f  putsAttIdxTelemItems(unsigned char, unsigned char, unsigned char, unsigned char)
                                                        24   4  Code  RX  menus.o
  0000cf10-0000cf27  IS_EXPO_THROTTLE(unsigned char)
                                                        24   4  Code  RX  er9x.o
  0000cf28-0000cf3f  hyphinvMenuItem(unsigned char, unsigned char, unsigned char)
                                                        24   4  Code  RX  menus.o
  0000cf40-0000cf57  ISR_TIMER2_OVF_vect                24   4  Code  RX  er9x.o
  0000cf58-0000cf6f  GetChipID                          24   4  Code  RX  BoardI6.o
  0000cf70-0000cf87  __SEGGER_init_heap                 24   4  Code  RX  SEGGER_crtinit_v6m_little.o
  0000cf88-0000cf9f  [.rodata..Lswitch.table._Z19fieldUnifiedDisplayP10FieldPropshh]
                                                        24   4  Cnst  RO  elrsV2.o
  0000cfa0-0000cfb3  __SEGGER_RTL_init_heap             20   4  Code  RX  heapops_basic.o (heapops_basic_v6m_little.a)
  0000cfb4-0000cfc7  EFile::exists(unsigned char)
                                                        20   4  Code  RX  file.o
  0000cfc8-0000cfdb  EeFsFlush()                        20   4  Code  RX  file.o
  0000cfdc-0000cfef  EeFsFlushFreelist()                20   4  Code  RX  file.o
  0000cff0-0000d003  lcd_clear()                        20   4  Code  RX  lcd.o
  0000d004-0000d017  idx2char(unsigned char)            20   4  Code  RX  menus.o
  0000d018-0000d02b  checkIncDec_u0(short, unsigned char)
                                                        20   4  Code  RX  er9x.o
  0000d02c-0000d03f  checkIncDec_0(signed char, signed char)
                                                        20   4  Code  RX  er9x.o
  0000d040-0000d053  audioDefevent(unsigned char)
                                                        20   4  Code  RX  audio.o
  0000d054-0000d067  resetTimer1()                      20   4  Code  RX  menus.o
  0000d068-0000d07b  displayNext()                      20   4  Code  RX  menus.o
  0000d07c-0000d08f  clearMixes()                       20   4  Code  RX  templates.o
  0000d090-0000d0a3  audioEvent(unsigned char, unsigned short)
                                                        20   4  Code  RX  audio.o
  0000d0a4-0000d0b7  DisableGIO                         20   4  Code  RX  BoardI6.o
  0000d0b8-0000d0cb  _start                             20   4  Code  RX  SEGGER_THUMB_Startup.o
  0000d0cc-0000d0db  rw_0                               16   4  Code  RX  BoardI6.o
  0000d0dc-0000d0eb  rs_1                               16   4  Code  RX  BoardI6.o
  0000d0ec-0000d0fb  rs_0                               16   4  Code  RX  BoardI6.o
  0000d0fc-0000d10b  rd_1                               16   4  Code  RX  BoardI6.o
  0000d10c-0000d11b  rd_0                               16   4  Code  RX  BoardI6.o
  0000d11c-0000d12b  CS_STATE(unsigned char)            16   4  Code  RX  er9x.o
  0000d12c-0000d13b  lcdSetContrast()                   16   4  Code  RX  lcd.o
  0000d13c-0000d14b  checkIncDec_i8(signed char, signed char, signed char)
                                                        16   4  Code  RX  er9x.o
  0000d14c-0000d15b  mixaddress(unsigned char)          16   4  Code  RX  er9x.o
  0000d15c-0000d16b  _GLOBAL__sub_I_er9x.cpp            16   4  Code  RX  er9x.o
  0000d16c-0000d17b  _GLOBAL__sub_I_SX127x.cpp          16   4  Code  RX  SX127x.o
  0000d17c-0000d18b  TX_RX_PutVal                       16   4  Code  RX  BoardI6.o
  0000d18c-0000d19b  GetPPMTimCompareInterruptFlag
                                                        16   4  Code  RX  BoardI6.o
  0000d19c-0000d1ab  GetPPMOutState                     16   4  Code  RX  BoardI6.o
  0000d1ac-0000d1bb  ClearPPMTimCompareInterruptFlag
                                                        16   4  Code  RX  BoardI6.o
  0000d1bc-0000d1cb  Buzzer_SetVal                      16   4  Code  RX  BoardI6.o
  0000d1cc-0000d1db  Buzzer_ClrVal                      16   4  Code  RX  BoardI6.o
  0000d1dc-0000d1e7  rst_1                              12   4  Code  RX  BoardI6.o
  0000d1e8-0000d1f3  rst_0                              12   4  Code  RX  BoardI6.o
  0000d1f4-0000d1ff  cs_0                               12   4  Code  RX  BoardI6.o
  0000d200-0000d20b  backlight_on                       12   4  Code  RX  BoardI6.o
  0000d20c-0000d217  backlight_off                      12   4  Code  RX  BoardI6.o
  0000d218-0000d223  a7105_csn_on                       12   4  Code  RX  BoardI6.o
  0000d224-0000d22f  a7105_csn_off                      12   4  Code  RX  BoardI6.o
  0000d230-0000d23b  SX127xHal::SX127xHal()             12   4  Code  RX  SX127xHal.o
  0000d23c-0000d247  get_tmr10ms()                      12   4  Code  RX  er9x.o
  0000d248-0000d253  SetPPMTimCompare                   12   4  Code  RX  BoardI6.o
  0000d254-0000d25f  RF1_SetVal                         12   4  Code  RX  BoardI6.o
  0000d260-0000d26b  RF1_ClrVal                         12   4  Code  RX  BoardI6.o
  0000d26c-0000d277  RF0_SetVal                         12   4  Code  RX  BoardI6.o
  0000d278-0000d283  RF0_ClrVal                         12   4  Code  RX  BoardI6.o
  0000d284-0000d28f  GetPPMTimCompare                   12   4  Code  RX  BoardI6.o
  0000d290-0000d29b  EnablePRTTim                       12   4  Code  RX  BoardI6.o
  0000d29c-0000d2a7  EnablePPMTim                       12   4  Code  RX  BoardI6.o
  0000d2a8-0000d2b3  EnablePPMOut                       12   4  Code  RX  BoardI6.o
  0000d2b4-0000d2bf  DisablePRTTim                      12   4  Code  RX  BoardI6.o
  0000d2c0-0000d2cb  DisablePPMOut                      12   4  Code  RX  BoardI6.o
  0000d2cc-0000d3c1  voice_numeric(short, unsigned char, unsigned char)
                                                       246   2  Code  RX  audio.o
  0000d3c2-0000d4a1  EFile::writeRlc(unsigned char, unsigned char, unsigned char*, unsigned short, unsigned char)
                                                       224   2  Code  RX  file.o
  0000d4a2-0000d525  putsTime(unsigned char, unsigned char, short, unsigned char, unsigned char)
                                                       132   2  Code  RX  lcd.o
  0000d526-0000d599  intpol(short, unsigned char)
                                                       116   2  Code  RX  menus.o
  0000d59a-0000d60b  EFile::readRlc(unsigned char*, unsigned short)
                                                       114   2  Code  RX  file.o
  0000d60c-0000d677  displayIndex(char const* const*, unsigned char, unsigned char, unsigned char)
                                                       108   2  Code  RX  menus.o
  0000d678-0000d6d1  telltale(unsigned char, signed char, signed char)
                                                        90   2  Code  RX  menus.o
  0000d6d2-0000d729  tiny_sprintf(char*, char const*, char, char, ...)
                                                        88   2  Code  RX  elrsV2.o
  0000d72a-0000d773  lcd_hbar(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
                                                        74   2  Code  RX  lcd.o
  0000d774-0000d7b9  lcd_rect_xor(unsigned char, unsigned char, unsigned char, unsigned char)
                                                        70   2  Code  RX  lcd.o
  0000d7ba-0000d7fb  getTrimFlightPhase(unsigned char, unsigned char)
                                                        66   2  Code  RX  er9x.o
  0000d7fc-0000d83d  lcd_outhex4(unsigned char, unsigned char, unsigned short)
                                                        66   2  Code  RX  lcd.o
  0000d83e-0000d87d  __aeabi_idiv                       64   2  Code  RX  intasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  0000d87e-0000d8bb  displayOneSwitch3Pos(unsigned char, unsigned char, unsigned char)
                                                        62   2  Code  RX  menus.o
  0000d8bc-0000d8f7  expo(short, short)                 60   2  Code  RX  menus.o
  0000d8f8-0000d92f  __aeabi_uidiv                      56   2  Code  RX  intasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  0000d930-0000d967  edit_dr_switch(unsigned char, unsigned char, signed char, unsigned char, unsigned char)
                                                        56   2  Code  RX  menus.o
  0000d968-0000d99b  strstr                             52   2  Code  RX  strops.o (libc_v6m_t_le_eabi_small.a)
  0000d99c-0000d9cd  lcd_putsAtt(unsigned char, unsigned char, char const*, unsigned char)
                                                        50   2  Code  RX  lcd.o
  0000d9ce-0000d9fb  memcmp                             46   2  Code  RX  strops.o (libc_v6m_t_le_eabi_small.a)
  0000d9fc-0000da29  GENERIC_CRC14::GENERIC_CRC14(unsigned short)
                                                        46   2  Code  RX  crc.o
  0000da2a-0000da57  putsMomentDrSwitches(unsigned char, unsigned char, signed char, unsigned char)
                                                        46   2  Code  RX  er9x.o
  0000da58-0000da83  A7105_WriteID(unsigned int)
                                                        44   2  Code  RX  A7105_SPI.o
  0000da84-0000daaf  A7105_ReadReg(unsigned char)
                                                        44   2  Code  RX  A7105_SPI.o
  0000dab0-0000dad9  div                                42   2  Code  RX  intops.o (libc_v6m_t_le_eabi_small.a)
  0000dada-0000db03  lcd_putsnAtt(unsigned char, unsigned char, char const*, unsigned char, unsigned char)
                                                        42   2  Code  RX  lcd.o
  0000db04-0000db2b  doVoiceAlarmSource(t_voiceAlarm*)
                                                        40   2  Code  RX  er9x.o
  0000db2c-0000db51  lcd_puts_Pskip(unsigned char, char const*, unsigned char)
                                                        38   2  Code  RX  lcd.o
  0000db52-0000db77  A7105_Reset()                      38   2  Code  RX  A7105_SPI.o
  0000db78-0000db9b  DoSum(unsigned char*, unsigned char)
                                                        36   2  Code  RX  audio.o
  0000db9c-0000dbbf  scalerDecimal(unsigned char, unsigned char, unsigned char)
                                                        36   2  Code  RX  menus.o
  0000dbc0-0000dbe1  __aeabi_memmove                    34   2  Code  RX  strasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  0000dbe2-0000dc03  expou(unsigned short, unsigned short)
                                                        34   2  Code  RX  menus.o
  0000dc04-0000dc25  getCurrentSwitchStates()           34   2  Code  RX  er9x.o
  0000dc26-0000dc47  lcd_outdezAtt(unsigned char, unsigned char, short, unsigned char)
                                                        34   2  Code  RX  lcd.o
  0000dc48-0000dc69  lcd_2_digits(unsigned char, unsigned char, unsigned char, unsigned char)
                                                        34   2  Code  RX  lcd.o
  0000dc6a-0000dc89  lcdSendCtl(unsigned char)          32   2  Code  RX  lcd.o
  0000dc8a-0000dca9  stickMoveValue()                   32   2  Code  RX  er9x.o
  0000dcaa-0000dcc7  __aeabi_llsr                       30   2  Code  RX  intasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  0000dcc8-0000dce5  __aeabi_llsl                       30   2  Code  RX  intasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  0000dce6-0000dd03  A7105_WriteReg(unsigned char, unsigned char)
                                                        30   2  Code  RX  A7105_SPI.o
  0000dd04-0000dd1f  onoffMenuItem(unsigned char, unsigned char, char const*, unsigned char)
                                                        28   2  Code  RX  menus.o
  0000dd20-0000dd3b  validateName(char*, unsigned char)
                                                        28   2  Code  RX  pers.o
  0000dd3c-0000dd57  voiceMinutes(short)                28   2  Code  RX  menus.o
  0000dd58-0000dd73  A7105_Strobe(unsigned char)
                                                        28   2  Code  RX  A7105_SPI.o
  0000dd74-0000dd8d  lcd_putsAttIdx(unsigned char, unsigned char, char const*, unsigned char, unsigned char)
                                                        26   2  Code  RX  lcd.o
  0000dd8e-0000dda5  StubbornSender::ResetState()
                                                        24   2  Code  RX  stubborn_sender.o
  0000dda6-0000ddbd  EeFsRead(unsigned char, unsigned char)
                                                        24   2  Code  RX  file.o
  0000ddbe-0000ddd5  crossfireTelemetryPing()           24   2  Code  RX  elrsV2.o
  0000ddd6-0000ddeb  semicolonPos(char const*, unsigned char)
                                                        22   2  Code  RX  elrsV2.o
  0000ddec-0000de01  EeFsSetLink(unsigned char, unsigned char)
                                                        22   2  Code  RX  file.o
  0000de02-0000de17  gvarMenuItem125(unsigned char, unsigned char, signed char, unsigned char)
                                                        22   2  Code  RX  menus.o
  0000de18-0000de2d  calc100toRESX(signed char)
                                                        22   2  Code  RX  er9x.o
  0000de2e-0000de41  __aeabi_memclr                     20   2  Code  RX  strasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  0000de42-0000de55  StubbornReceiver::StubbornReceiver(unsigned char)
                                                        20   2  Code  RX  stubborn_receiver.o
  0000de56-0000de69  setNameP(char*, char const*)
                                                        20   2  Code  RX  pers.o
  0000de6a-0000de7d  lcd_xlabel_decimal(unsigned char, unsigned char, unsigned short, unsigned char, char const*)
                                                        20   2  Code  RX  menus.o
  0000de7e-0000de8f  onoffItem(unsigned char, unsigned char, unsigned char)
                                                        18   2  Code  RX  menus.o
  0000de90-0000dea1  offonItem(unsigned char, unsigned char, unsigned char)
                                                        18   2  Code  RX  menus.o
  0000dea2-0000deb3  offonMenuItem(unsigned char, unsigned char, char const*, unsigned char)
                                                        18   2  Code  RX  menus.o
  0000deb4-0000dec5  putc_0_1(unsigned char, unsigned char, unsigned char)
                                                        18   2  Code  RX  menus.o
  0000dec6-0000ded5  __aeabi_uidivmod                   16   2  Code  RX  intasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  0000ded6-0000dee5  putsChn(unsigned char, unsigned char, unsigned char, unsigned char)
                                                        16   2  Code  RX  er9x.o
  0000dee6-0000def5  TITLEP(char const*)                16   2  Code  RX  menus.o
  0000def6-0000df05  lcd_puts_Pleft(unsigned char, char const*)
                                                        16   2  Code  RX  lcd.o
  0000df06-0000df15  calc1000toRESX(short)              16   2  Code  RX  er9x.o
  0000df16-0000df25  putsTimeNoAtt(unsigned char, unsigned char, short)
                                                        16   2  Code  RX  menus.o
  0000df26-0000df35  getTrimValue(unsigned char, unsigned char)
                                                        16   2  Code  RX  er9x.o
  0000df36-0000df45  lcd_putsn_P(unsigned char, unsigned char, char const*, unsigned char)
                                                        16   2  Code  RX  lcd.o
  0000df46-0000df55  A7105_Sleep()                      16   2  Code  RX  A7105_SPI.o
  0000df56-0000df63  main                               14   2  Code  RX  main.o
  0000df64-0000df71  strlen                             14   2  Code  RX  strasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  0000df72-0000df7f  strcpy                             14   2  Code  RX  strasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  0000df80-0000df8d  memcpy                             14   2  Code  RX  strasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  0000df8e-0000df9b  __aeabi_idivmod                    14   2  Code  RX  intasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  0000df9c-0000dfa9  StubbornSender::StubbornSender(unsigned char)
                                                        14   2  Code  RX  stubborn_sender.o
  0000dfaa-0000dfb7  message(char const*)               14   2  Code  RX  er9x.o
  0000dfb8-0000dfc5  keyDown()                          14   2  Code  RX  er9x.o
  0000dfc6-0000dfd3  fieldTextSelectionSave(FieldProps*)
                                                        14   2  Code  RX  elrsV2.o
  0000dfd4-0000dfe1  putVoiceQueueUpper(unsigned char)
                                                        14   2  Code  RX  audio.o
  0000dfe2-0000dfef  REG100_100(signed char)            14   2  Code  RX  er9x.o
  0000dff0-0000dffb  switchPosition(unsigned char)
                                                        12   2  Code  RX  drivers.o
  0000dffc-0000e007  eeModelExists(unsigned char)
                                                        12   2  Code  RX  pers.o
  0000e008-0000e013  getSwitch00(signed char)           12   2  Code  RX  er9x.o
  0000e014-0000e01d  EeFsGetLink(unsigned char)
                                                        10   2  Code  RX  file.o
  0000e01e-0000e027  lcd_hline(unsigned char, unsigned char, signed char)
                                                        10   2  Code  RX  lcd.o
  0000e028-0000e031  lcd_putc(unsigned char, unsigned char, char)
                                                        10   2  Code  RX  lcd.o
  0000e032-0000e03b  alert(char const*)                 10   2  Code  RX  er9x.o
  0000e03c-0000e045  resetTimer2()                      10   2  Code  RX  menus.o
  0000e046-0000e04f  checkIncDec(signed char, signed char, signed char, unsigned char)
                                                        10   2  Code  RX  er9x.o
  0000e050-0000e059  lcd_puts_P(unsigned char, unsigned char, char const*)
                                                        10   2  Code  RX  lcd.o
  0000e05a-0000e063  lcd_outdez(unsigned char, unsigned char, short)
                                                        10   2  Code  RX  lcd.o
  0000e064-0000e06b  audioQueue::busy()                  8   2  Code  RX  audio.o
  0000e06c-0000e073  A7105_SetTxRxMode(unsigned char)
                                                         8   2  Code  RX  A7105_SPI.o
  0000e074-0000e07b  putVoiceQueue(unsigned char)
                                                         8   2  Code  RX  audio.o
  0000e07c-0000e083  crsf_shutdown()                     8   2  Code  RX  crossfire.o
  0000e084-0000e5e7  font_dblsize                    1 380   1  Cnst  RO  lcd.o
  0000e5e8-0000e7d6  font                              495   1  Cnst  RO  lcd.o
  0000e7d7-0000e8fe  Str_telemItems                    296   1  Cnst  RO  menus.o
  0000e8ff-0000e9fe  crc8tab                           256   1  Cnst  RO  crc_crsf.o
  0000e9ff-0000eaa4  Str_Chans_Gv                      166   1  Cnst  RO  menus.o
  0000eaa5-0000eb21  [.rodata..L.str.11]               125   1  Cnst  RO  menus.o
  0000eb22-0000eb93  Str_Cswitch                       114   1  Cnst  RO  menus.o
  0000eb94-0000ebf5  Str_Sounds                         98   1  Cnst  RO  menus.o
  0000ebf6-0000ec4d  AFHDS2A_tel                        88   1  Cnst  RO  AFHDS2A_a7105.o
  0000ec4e-0000ec9f  [.rodata..L.str.52]                82   1  Cnst  RO  menus.o
  0000eca0-0000eceb  [.rodata..L.str.46]                76   1  Cnst  RO  menus.o
  0000ecec-0000ed36  sticks                             75   1  Cnst  RO  menus.o
  0000ed37-0000ed81  [.rodata..L.str.110]               75   1  Cnst  RO  menus.o
  0000ed82-0000edcb  Curve_Str                          74   1  Cnst  RO  menus.o
  0000edcc-0000ee12  [.rodata..L.str.105]               71   1  Cnst  RO  menus.o
  0000ee13-0000ee55  s_charTab                          67   1  Cnst  RO  menus.o
  0000ee56-0000ee96  Str_Switches                       65   1  Cnst  RO  er9x.o
  0000ee97-0000eed7  [.rodata..L.str.4]                 65   1  Cnst  RO  menus.o
  0000eed8-0000ef16  [.rodata..L.str.6]                 63   1  Cnst  RO  menus.o
  0000ef17-0000ef50  Str_Main_Popup                     58   1  Cnst  RO  menus.o
  0000ef51-0000ef8a  TelemIndex                         58   1  Cnst  RO  menus.o
  0000ef8b-0000efc0  [.rodata..L.str.49]                54   1  Cnst  RO  menus.o
  0000efc1-0000eff5  [.rodata..L.str.103]               53   1  Cnst  RO  menus.o
  0000eff6-0000f029  [.rodata..L.str.107]               52   1  Cnst  RO  menus.o
  0000f02a-0000f05b  AFHDS2A_A7105_regs                 50   1  Cnst  RO  BoardI6.o
  0000f05c-0000f08c  Stamps                             49   1  Cnst  RO  stamp.o
  0000f08d-0000f0ba  [.rodata..L.str.51]                46   1  Cnst  RO  menus.o
  0000f0bb-0000f0e8  [.rodata..L.str.48]                46   1  Cnst  RO  menus.o
  0000f0e9-0000f116  [.rodata..L.str.16]                46   1  Cnst  RO  menus.o
  0000f117-0000f141  [.rodata..L.str.93]                43   1  Cnst  RO  menus.o
  0000f142-0000f16c  [.rodata..L.str.13]                43   1  Cnst  RO  er9x.o
  0000f16d-0000f197  [.rodata..L.str.115]               43   1  Cnst  RO  menus.o
  0000f198-0000f1c1  UnitsString                        42   1  Cnst  RO  menus.o
  0000f1c2-0000f1ea  Str_Gv_Source                      41   1  Cnst  RO  menus.o
  0000f1eb-0000f213  [.rodata..L.str.71]                41   1  Cnst  RO  menus.o
  0000f214-0000f23b  [.rodata..L.str.47]                40   1  Cnst  RO  menus.o
  0000f23c-0000f262  MixPopList                         39   1  Cnst  RO  menus.o
  0000f263-0000f288  ModelPopList                       38   1  Cnst  RO  menus.o
  0000f289-0000f2ae  [.rodata..L.str.99]                38   1  Cnst  RO  menus.o
  0000f2af-0000f2d3  [.rodata..L.str.72]                37   1  Cnst  RO  menus.o
  0000f2d4-0000f2f8  [.rodata..L.str.6]                 37   1  Cnst  RO  er9x.o
  0000f2f9-0000f31a  [.rodata..L.str.108]               34   1  Cnst  RO  menus.o
  0000f31b-0000f33b  [.rodata..L.str.5]                 33   1  Cnst  RO  er9x.o
  0000f33c-0000f35b  [.rodata..L.str.75]                32   1  Cnst  RO  menus.o
  0000f35c-0000f37b  [.rodata..L.str.58]                32   1  Cnst  RO  menus.o
  0000f37c-0000f39b  [.rodata..L.str.113]               32   1  Cnst  RO  menus.o
  0000f39c-0000f3b9  SW_3_IDX                           30   1  Cnst  RO  menus.o
  0000f3ba-0000f3d7  idx_to_afhds2a                     30   1  Cnst  RO  crossfire.o
  0000f3d8-0000f3f5  [.rodata..L.str.94]                30   1  Cnst  RO  menus.o
  0000f3f6-0000f413  [.rodata..L.str.27]                30   1  Cnst  RO  menus.o
  0000f414-0000f430  [.rodata..L.str.101]               29   1  Cnst  RO  menus.o
  0000f431-0000f44c  [.rodata..L.str.15]                28   1  Cnst  RO  menus.o
  0000f44d-0000f468  [.rodata..L.str.104]               28   1  Cnst  RO  menus.o
  0000f469-0000f483  [.rodata..L.str.86]                27   1  Cnst  RO  menus.o
  0000f484-0000f49d  [.rodata..L.str.54]                26   1  Cnst  RO  menus.o
  0000f49e-0000f4b6  [.rodata..L.str.17]                25   1  Cnst  RO  menus.o
  0000f4b7-0000f4ce  bchout_ar                          24   1  Cnst  RO  er9x.o
  0000f4cf-0000f4e6  [.rodata..L.str.116]               24   1  Cnst  RO  menus.o
  0000f4e7-0000f4fe  [.rodata..L.str.111]               24   1  Cnst  RO  menus.o
  0000f4ff-0000f515  [.rodata..L.str.35]                23   1  Cnst  RO  menus.o
  0000f516-0000f52b  Str_On_Off_Both                    22   1  Cnst  RO  menus.o
  0000f52c-0000f541  [.rodata..L.str.78]                22   1  Cnst  RO  menus.o
  0000f542-0000f557  [.rodata..L.str.76]                22   1  Cnst  RO  menus.o
  0000f558-0000f56d  [.rodata..L.str.2]                 22   1  Cnst  RO  er9x.o
  0000f56e-0000f582  [.rodata..L.str.2]                 21   1  Cnst  RO  pers.o
  0000f583-0000f596  [.rodata..L.str.44]                20   1  Cnst  RO  menus.o
  0000f597-0000f5a9  [.rodata..L.str.34]                19   1  Cnst  RO  menus.o
  0000f5aa-0000f5bc  [.rodata..L.str.3]                 19   1  Cnst  RO  pers.o
  0000f5bd-0000f5ce  modi12x3                           18   1  Cnst  RO  er9x.o
  0000f5cf-0000f5e0  [.rodata..L.str.69]                18   1  Cnst  RO  menus.o
  0000f5e1-0000f5f2  [.rodata..L.str.5]                 18   1  Cnst  RO  pers.o
  0000f5f3-0000f604  [.rodata..L.str.25]                18   1  Cnst  RO  menus.o
  0000f605-0000f616  [.rodata..L.str.23]                18   1  Cnst  RO  menus.o
  0000f617-0000f627  menuWhenDone                       17   1  Cnst  RO  menus.o
  0000f628-0000f638  [.rodata..L.str.67]                17   1  Cnst  RO  menus.o
  0000f639-0000f649  [.rodata..L.str.50]                17   1  Cnst  RO  menus.o
  0000f64a-0000f65a  [.rodata..L.str.41]                17   1  Cnst  RO  menus.o
  0000f65b-0000f66b  [.rodata..L.str.18]                17   1  Cnst  RO  menus.o
  0000f66c-0000f67c  [.rodata..L.str.119]               17   1  Cnst  RO  menus.o
  0000f67d-0000f68d  [.rodata..L.str.117]               17   1  Cnst  RO  menus.o
  0000f68e-0000f69e  [.rodata..L.str.102]               17   1  Cnst  RO  menus.o
  0000f69f-0000f6ae  stickScramble                      16   1  Cnst  RO  er9x.o
  0000f6af-0000f6be  Str_EEPROM_Overflow                16   1  Cnst  RO  pers.o
  0000f6bf-0000f6ce  [.rodata..L.str.74]                16   1  Cnst  RO  menus.o
  0000f6cf-0000f6de  [.rodata..L.str.62]                16   1  Cnst  RO  menus.o
  0000f6df-0000f6ee  [.rodata..L.str.4]                 16   1  Cnst  RO  pers.o
  0000f6ef-0000f6fe  [.rodata..L.str.21]                16   1  Cnst  RO  menus.o
  0000f6ff-0000f70e  [.rodata..L.str.121]               16   1  Cnst  RO  menus.o
  0000f70f-0000f71e  [.rodata..L.str.120]               16   1  Cnst  RO  menus.o
  0000f71f-0000f72e  [.rodata..L.str.12]                16   1  Cnst  RO  er9x.o
  0000f72f-0000f73e  [.rodata..L.str.106]               16   1  Cnst  RO  menus.o
  0000f73f-0000f74d  Str_Beep_Countdown                 15   1  Cnst  RO  menus.o
  0000f74e-0000f75c  csTypeTable                        15   1  Cnst  RO  er9x.o
  0000f75d-0000f76b  [.rodata..L.str.96]                15   1  Cnst  RO  menus.o
  0000f76c-0000f77a  [.rodata..L.str.90]                15   1  Cnst  RO  menus.o
  0000f77b-0000f789  [.rodata..L.str.6]                 15   1  Cnst  RO  pers.o
  0000f78a-0000f798  [.rodata..L.str.5]                 15   1  Cnst  RO  menus.o
  0000f799-0000f7a7  [.rodata..L.str.4]                 15   1  Cnst  RO  elrsV2.o
  0000f7a8-0000f7b6  [.rodata..L.str.12]                15   1  Cnst  RO  menus.o
  0000f7b7-0000f7c5  [.rodata..L.str.114]               15   1  Cnst  RO  menus.o
  0000f7c6-0000f7d4  [.rodata..L.str.11]                15   1  Cnst  RO  er9x.o
  0000f7d5-0000f7e2  [.rodata..L.str.87]                14   1  Cnst  RO  menus.o
  0000f7e3-0000f7f0  [.rodata..L.str.7]                 14   1  Cnst  RO  menus.o
  0000f7f1-0000f7fe  [.rodata..L.str.68]                14   1  Cnst  RO  menus.o
  0000f7ff-0000f80c  [.rodata..L.str.53]                14   1  Cnst  RO  menus.o
  0000f80d-0000f81a  [.rodata..L.str.3]                 14   1  Cnst  RO  er9x.o
  0000f81b-0000f828  [.rodata..L.str.100]               14   1  Cnst  RO  menus.o
  0000f829-0000f835  [.rodata..L.str.7]                 13   1  Cnst  RO  er9x.o
  0000f836-0000f842  [.rodata..L.str.63]                13   1  Cnst  RO  menus.o
  0000f843-0000f84f  [.rodata..L.str.22]                13   1  Cnst  RO  menus.o
  0000f850-0000f85c  [.rodata..L.str]                   13   1  Cnst  RO  er9x.o
  0000f85d-0000f868  Lcdinit                            12   1  Cnst  RO  lcd.o
  0000f869-0000f874  Str_minute_Beep                    12   1  Cnst  RO  menus.o
  0000f875-0000f880  Str_Calibration                    12   1  Cnst  RO  menus.o
  0000f881-0000f88c  Str_AudioHaptic                    12   1  Cnst  RO  menus.o
  0000f88d-0000f898  [.rodata..L.str.8]                 12   1  Cnst  RO  elrsV2.o
  0000f899-0000f8a4  [.rodata..L.str.77]                12   1  Cnst  RO  menus.o
  0000f8a5-0000f8b0  [.rodata..L.str.70]                12   1  Cnst  RO  menus.o
  0000f8b1-0000f8bc  [.rodata..L.str.56]                12   1  Cnst  RO  menus.o
  0000f8bd-0000f8c8  [.rodata..L.str.19]                12   1  Cnst  RO  menus.o
  0000f8c9-0000f8d4  [.rodata..L.str.112]               12   1  Cnst  RO  menus.o
  0000f8d5-0000f8df  Str_heli_setup                     11   1  Cnst  RO  menus.o
  0000f8e0-0000f8ea  Str_Cswitches                      11   1  Cnst  RO  menus.o
  0000f8eb-0000f8f5  Str_Globals                        11   1  Cnst  RO  menus.o
  0000f8f6-0000f900  Str_Safety                         11   1  Cnst  RO  menus.o
  0000f901-0000f90b  [.rodata..L.str.91]                11   1  Cnst  RO  menus.o
  0000f90c-0000f916  [.rodata..L.str.9]                 11   1  Cnst  RO  er9x.o
  0000f917-0000f921  [.rodata..L.str.79]                11   1  Cnst  RO  menus.o
  0000f922-0000f92c  [.rodata..L.str.64]                11   1  Cnst  RO  menus.o
  0000f92d-0000f937  [.rodata..L.str.1]                 11   1  Cnst  RO  pers.o
  0000f938-0000f942  [.rodata..L.str]                   11   1  Cnst  RO  pers.o
  0000f943-0000f94c  Str_Telemetry                      10   1  Cnst  RO  menus.o
  0000f94d-0000f956  Str_DiagSwtch                      10   1  Cnst  RO  menus.o
  0000f957-0000f960  Str_TRE012AG                       10   1  Cnst  RO  menus.o
  0000f961-0000f96a  [.rodata..L.str.97]                10   1  Cnst  RO  menus.o
  0000f96b-0000f974  [.rodata..L.str.81]                10   1  Cnst  RO  menus.o
  0000f975-0000f97e  [.rodata..L.str.55]                10   1  Cnst  RO  menus.o
  0000f97f-0000f988  [.rodata..L.str.29]                10   1  Cnst  RO  menus.o
  0000f989-0000f992  [.rodata..L.str.10]                10   1  Cnst  RO  menus.o
  0000f993-0000f99c  [.rodata..L.str]                   10   1  Cnst  RO  menus.o
  0000f99d-0000f9a5  Str_Protocol                        9   1  Cnst  RO  menus.o
  0000f9a6-0000f9ae  Str_Hardware                        9   1  Cnst  RO  menus.o
  0000f9af-0000f9b7  Str_Controls                        9   1  Cnst  RO  menus.o
  0000f9b8-0000f9c0  [.rodata..L.str.98]                 9   1  Cnst  RO  menus.o
  0000f9c1-0000f9c9  [.rodata..L.str.89]                 9   1  Cnst  RO  menus.o
  0000f9ca-0000f9d2  [.rodata..L.str.88]                 9   1  Cnst  RO  menus.o
  0000f9d3-0000f9db  [.rodata..L.str.84]                 9   1  Cnst  RO  menus.o
  0000f9dc-0000f9e4  [.rodata..L.str.8]                  9   1  Cnst  RO  er9x.o
  0000f9e5-0000f9ed  [.rodata..L.str.8]                  9   1  Cnst  RO  menus.o
  0000f9ee-0000f9f6  [.rodata..L.str.7]                  9   1  Cnst  RO  elrsV2.o
  0000f9f7-0000f9ff  [.rodata..L.str.45]                 9   1  Cnst  RO  menus.o
  0000fa00-0000fa08  [.rodata..L.str.33]                 9   1  Cnst  RO  menus.o
  0000fa09-0000fa11  [.rodata..L.str.30]                 9   1  Cnst  RO  menus.o
  0000fa12-0000fa1a  [.rodata..L.str.24]                 9   1  Cnst  RO  menus.o
  0000fa1b-0000fa22  per10ms()::crossTrim                8   1  Cnst  RO  drivers.o
  0000fa23-0000fa2a  UnitsText                           8   1  Cnst  RO  menus.o
  0000fa2b-0000fa32  _bitmask                            8   1  Cnst  RO  lcd.o
  0000fa33-0000fa3a  Str_Expo                            8   1  Cnst  RO  menus.o
  0000fa3b-0000fa42  rate                                8   1  Cnst  RO  er9x.o
  0000fa43-0000fa4a  Str_Version                         8   1  Cnst  RO  menus.o
  0000fa4b-0000fa52  Str_Trainer                         8   1  Cnst  RO  menus.o
  0000fa53-0000fa5a  Str_General                         8   1  Cnst  RO  menus.o
  0000fa5b-0000fa62  Str_Display                         8   1  Cnst  RO  menus.o
  0000fa63-0000fa6a  Str_DiagAna                         8   1  Cnst  RO  menus.o
  0000fa6b-0000fa72  UnitsVoice                          8   1  Cnst  RO  menus.o
  0000fa73-0000fa7a  [.rodata..L.str.85]                 8   1  Cnst  RO  menus.o
  0000fa7b-0000fa82  [.rodata..L.str.66]                 8   1  Cnst  RO  menus.o
  0000fa83-0000fa8a  [.rodata..L.str.59]                 8   1  Cnst  RO  menus.o
  0000fa8b-0000fa92  [.rodata..L.str.4]                  8   1  Cnst  RO  er9x.o
  0000fa93-0000fa9a  [.rodata..L.str.26]                 8   1  Cnst  RO  menus.o
  0000fa9b-0000faa2  [.rodata..L.str.109]                8   1  Cnst  RO  menus.o
  0000faa3-0000faa9  Str_Alert                           7   1  Cnst  RO  er9x.o
  0000faaa-0000fab0  ChannelToPin                        7   1  Cnst  RO  BoardI6.o
  0000fab1-0000fab7  Str_limits                          7   1  Cnst  RO  menus.o
  0000fab8-0000fabe  Str_Curves                          7   1  Cnst  RO  menus.o
  0000fabf-0000fac5  Str_Alarms                          7   1  Cnst  RO  menus.o
  0000fac6-0000facc  [.rodata..L.str.80]                 7   1  Cnst  RO  menus.o
  0000facd-0000fad3  [.rodata..L.str.61]                 7   1  Cnst  RO  menus.o
  0000fad4-0000fada  [.rodata..L.str.2]                  7   1  Cnst  RO  elrsV2.o
  0000fadb-0000fae1  [.rodata..L.str.10]                 7   1  Cnst  RO  er9x.o
  0000fae2-0000fae8  [.rodata..L.str.1]                  7   1  Cnst  RO  menus.o
  0000fae9-0000faee  Str_Timer                           6   1  Cnst  RO  menus.o
  0000faef-0000faf4  Str_Modes                           6   1  Cnst  RO  menus.o
  0000faf5-0000fafa  Str_Mixer                           6   1  Cnst  RO  menus.o
  0000fafb-0000fb00  Str_Curve                           6   1  Cnst  RO  menus.o
  0000fb01-0000fb06  Str_1_RETA                          6   1  Cnst  RO  menus.o
  0000fb07-0000fb0c  [.rodata..L.str.92]                 6   1  Cnst  RO  menus.o
  0000fb0d-0000fb12  [.rodata..L.str.82]                 6   1  Cnst  RO  menus.o
  0000fb13-0000fb18  [.rodata..L.str.31]                 6   1  Cnst  RO  menus.o
  0000fb19-0000fb1e  [.rodata..L.str.14]                 6   1  Cnst  RO  menus.o
  0000fb1f-0000fb24  [.rodata..L.str.13]                 6   1  Cnst  RO  menus.o
  0000fb25-0000fb29  Str_Name                            5   1  Cnst  RO  menus.o
  0000fb2a-0000fb2e  Str_Hyphens                         5   1  Cnst  RO  er9x.o
  0000fb2f-0000fb33  [.rodata..L.str.73]                 5   1  Cnst  RO  menus.o
  0000fb34-0000fb38  [.rodata..L.str.57]                 5   1  Cnst  RO  menus.o
  0000fb39-0000fb3d  [.rodata..L.str.5]                  5   1  Cnst  RO  elrsV2.o
  0000fb3e-0000fb42  [.rodata..L.str.38]                 5   1  Cnst  RO  menus.o
  0000fb43-0000fb47  [.rodata..L.str.32]                 5   1  Cnst  RO  menus.o
  0000fb48-0000fb4c  [.rodata..L.str.3]                  5   1  Cnst  RO  menus.o
  0000fb4d-0000fb51  [.rodata..L.str.20]                 5   1  Cnst  RO  menus.o
  0000fb52-0000fb55  menuProc0(unsigned char)::xt
                                                         4   1  Cnst  RO  menus.o
  0000fb56-0000fb59  Str_ON                              4   1  Cnst  RO  er9x.o
  0000fb5a-0000fb5d  Str_OFF                             4   1  Cnst  RO  er9x.o
  0000fb5e-0000fb61  [.rodata..L.str.95]                 4   1  Cnst  RO  menus.o
  0000fb62-0000fb65  [.rodata..L.str.65]                 4   1  Cnst  RO  menus.o
  0000fb66-0000fb69  [.rodata..L.str.60]                 4   1  Cnst  RO  menus.o
  0000fb6a-0000fb6d  [.rodata..L.str.40]                 4   1  Cnst  RO  menus.o
  0000fb6e-0000fb71  [.rodata..L.str.3]                  4   1  Cnst  RO  elrsV2.o
  0000fb72-0000fb75  [.rodata..L.str.28]                 4   1  Cnst  RO  menus.o
  0000fb76-0000fb79  [.rodata..L.str.118]                4   1  Cnst  RO  menus.o
  0000fb7a-0000fb7d  [.rodata..L.str.1]                  4   1  Cnst  RO  er9x.o
  0000fb7e-0000fb81  [.rodata..L.str.1]                  4   1  Cnst  RO  elrsV2.o
  0000fb82-0000fb84  Str_SC                              3   1  Cnst  RO  menus.o
  0000fb85-0000fb87  Str_GV                              3   1  Cnst  RO  menus.o
  0000fb88-0000fb8a  [.rodata..L.str.9]                  3   1  Cnst  RO  menus.o
  0000fb8b-0000fb8d  [.rodata..L.str.83]                 3   1  Cnst  RO  menus.o
  0000fb8e-0000fb90  [.rodata..L.str.43]                 3   1  Cnst  RO  menus.o
  0000fb91-0000fb93  [.rodata..L.str.42]                 3   1  Cnst  RO  menus.o
  0000fb94-0000fb96  [.rodata..L.str.39]                 3   1  Cnst  RO  menus.o
  0000fb97-0000fb99  [.rodata..L.str.2]                  3   1  Cnst  RO  menus.o
  0000fb9a-0000fb9c  [.rodata..L.str]                    3   1  Cnst  RO  elrsV2.o
  0000fb9d-0000fb9f  ( UNUSED .=.+3 )                    3   -  ----  -   -
  0000fba0-0000fba3  [.init_array]                       4   4  ----  --  er9x.o
  0000fba4-0000fba7  [.init_array]                       4   4  ----  --  SX127x.o
  0000fba8-0000fbab  [.init_array]                       4   4  ----  --  ELRS.o
  0000fbac-0000fbd3  __SEGGER_init_table__              40   4  Cnst  RO  [ Linker created ]
  0000fbd4-0000fbf7  __SEGGER_init_data__               36   4  Cnst  RO  [ Linker created ]
  0000fbf8-0000fc17  __SEGGER_init_ctors                32   4  Code  RX  SEGGER_crtinit_v6m_little.o
  0000fc18-0000fc2b  __SEGGER_init_copy                 20   2  Code  RX  SEGGER_crtinit_v6m_little.o
  0000fc2c-0000fc3d  __SEGGER_init_zero                 18   2  Code  RX  SEGGER_crtinit_v6m_little.o
  0000fc3e-1ffff7ff  ( UNUSED .=.+536804290 )   536 804 290
                                                             -  ----  -   -
  1ffff800-1ffff807  AFHDS2A_tel_status                  8   8  Zero  ZI  AFHDS2A_a7105.o
  1ffff808-1ffffc07  DisplayBuf                      1 024   4  Zero  ZI  lcd.o
  1ffffc08-1ffffe07  reusableBuffer                    512   4  Zero  ZI  elrsV2.o
  1ffffe08-1fffff07  Output                            256   4  Zero  ZI  menus.o
  1fffff08-1fffffb3  AFHDS2A_tel_data                  172   4  Zero  ZI  AFHDS2A_a7105.o
  1fffffb4-20000003  Fade                               80   4  Zero  ZI  menus.o
  20000004-20000044  g_crossfire                        65   4  Zero  ZI  crossfire.o
  20000045-20000045  voice_tx_idx                        1   1  Zero  ZI  BoardI6.o
  20000046-20000047  tmrEEPROM                           2   2  Zero  ZI  er9x.o
  20000048-20000087  eeFs                               64   4  Zero  ZI  file.o
  20000088-200000b7  Radio                              48   4  Zero  ZI  ELRS.o
  200000b8-200000df  packet                             40   4  Zero  ZI  A7105_SPI.o
  200000e0-200000f3  g_menuStack                        20   4  Zero  ZI  er9x.o
  200000f4-20000103  outputTelemetryBuffer              16   4  Zero  ZI  crossfire.o
  20000104-20000113  MspSender                          16   4  Zero  ZI  ELRS.o
  20000114-2000011f  i2c_buffer                         12   4  Zero  ZI  drivers.o
  20000120-2000012b  TelemetryReceiver                  12   4  Zero  ZI  ELRS.o
  2000012c-20000137  LQCalc                             12   4  Zero  ZI  ELRS.o
  20000138-20000141  voice_uart_send_buf                10   4  Zero  ZI  BoardI6.o
  20000142-20000143  g_tmr16KHz                          2   2  Zero  ZI  er9x.o
  20000144-20000147  telemetryErrors                     4   4  Zero  ZI  crossfire.o
  20000148-2000014b  hal                                 4   4  Zero  ZI  SX127x.o
  2000014c-2000014f  g_voice_cb                          4   4  Zero  ZI  BoardI6.o
  20000150-20000153  g_tmr10ms                           4   4  Zero  ZI  drivers.o
  20000154-20000157  g_elrs_update_rate                  4   4  Zero  ZI  crossfire.o
  20000158-2000015b  g_elrs_lag                          4   4  Zero  ZI  crossfire.o
  2000015c-2000015f  fieldTimeout                        4   4  Zero  ZI  elrsV2.o
  20000160-20000163  __SEGGER_RTL_heap_globals           4   4  Zero  ZI  heapops_basic.o (heapops_basic_v6m_little.a)
  20000164-20000167  perMain()::lastTMR                  4   4  Zero  ZI  er9x.o
  20000168-2000016b  SX127xHal::instance                 4   4  Zero  ZI  SX127xHal.o
  2000016c-2000016f  SX127xDriver::instance              4   4  Zero  ZI  SX127x.o
  20000170-20000173  g_crsf_read_callback                4   4  Zero  ZI  BoardI6.o
  20000174-20000177  fieldPopup                          4   4  Zero  ZI  elrsV2.o
  20000178-2000017b  SPI_BufferPtr                       4   4  Zero  ZI  BoardI6.o
  2000017c-2000017f  ID                                  4   4  Zero  ZI  A7105_SPI.o
  20000180-20000183  AlertMessage                        4   4  Zero  ZI  er9x.o
  20000184-20000385  ota_crc                           514   2  Zero  ZI  ELRS.o
  20000386-20000415  pulses2MHz                        144   2  Zero  ZI  pulses.o
  20000416-2000047f  Xmem                              106   2  Zero  ZI  menus.o
  20000480-200004a3  Voice                              36   2  Zero  ZI  audio.o
  200004a4-200004c3  s_timer                            32   2  Zero  ZI  menus.o
  200004c4-200004e3  g_chans512                         32   2  Zero  ZI  menus.o
  200004e4-20000503  Ex_chans                           32   2  Zero  ZI  menus.o
  20000504-2000051b  CsTimer                            24   2  Zero  ZI  er9x.o
  2000051c-2000052b  s_anaFilt                          16   2  Zero  ZI  er9x.o
  2000052c-2000053b  g_ppmIns                           16   2  Zero  ZI  er9x.o
  2000053c-2000054b  Nvs_timer                          16   2  Zero  ZI  er9x.o
  2000054c-20000559  calibratedStick                    14   2  Zero  ZI  menus.o
  2000055a-20000563  theWriteFile                       10   2  Zero  ZI  pers.o
  20000564-2000056d  theFile                            10   2  Zero  ZI  pers.o
  2000056e-20000577  P1values                           10   2  Zero  ZI  er9x.o
  20000578-2000057f  TimeGlobals                         8   2  Zero  ZI  menus.o
  20000580-20000585  Inactivity                          6   2  Zero  ZI  er9x.o
  20000586-20000587  g_latency                           2   2  Zero  ZI  menus.o
  20000588-20000589  g_LightOffCounter                   2   2  Zero  ZI  er9x.o
  2000058a-2000058b  trace()::s_time                     2   2  Zero  ZI  menus.o
  2000058c-2000058d  ActionAFHDS2A::packet_counter
                                                         2   2  Zero  ZI  AFHDS2A_a7105.o
  2000058e-2000058f  mainSequence()::timer               2   2  Zero  ZI  er9x.o
  20000590-20000591  s_eeDirtyTime10ms                   2   2  Zero  ZI  pers.o
  20000592-20000593  SPI_Size                            2   2  Zero  ZI  BoardI6.o
  20000594-20000595  GAltOffset                          2   2  Zero  ZI  AFHDS2A_a7105.o
  20000596-20000597  B3_comp_value                       2   2  Zero  ZI  pulses.o
  20000598-20000599  AltOffset                           2   2  Zero  ZI  AFHDS2A_a7105.o
  2000059a-20000983  g_model                         1 002   1  Zero  ZI  er9x.o
  20000984-20000a83  fields                            256   1  Zero  ZI  elrsV2.o
  20000a84-20000b03  telemetryRxBuffer                 128   1  Zero  ZI  crossfire.o
  20000b04-20000b79  g_eeGeneral                       118   1  Zero  ZI  er9x.o
  20000b7a-20000bb1  audio                              56   1  Zero  ZI  er9x.o
  20000bb2-20000bde  keys                               45   1  Zero  ZI  drivers.o
  20000bdf-20000c09  AFHDS2A_tel_res_cnt                43   1  Zero  ZI  AFHDS2A_a7105.o
  20000c0a-20000c19  hopping_frequency                  16   1  Zero  ZI  A7105_SPI.o
  20000c1a-20000c25  Last_switch                        12   1  Zero  ZI  er9x.o
  20000c26-20000c2f  voice_uart_recv_buf                10   1  Zero  ZI  BoardI6.o
  20000c30-20000c39  TimerConfig                        10   1  Zero  ZI  er9x.o
  20000c3a-20000c42  Rotary                              9   1  Zero  ZI  er9x.o
  20000c43-20000c4a  deviceIds                           8   1  Zero  ZI  elrsV2.o
  20000c4b-20000c52  Nvs_state                           8   1  Zero  ZI  er9x.o
  20000c53-20000c56  phyStick                            4   1  Zero  ZI  menus.o
  20000c57-20000c5a  PopupData                           4   1  Zero  ZI  menus.o
  20000c5b-20000c5d  MenuControl                         3   1  Zero  ZI  menus.o
  20000c5e-20000c5e  voice_rx_idx                        1   1  Zero  ZI  BoardI6.o
  20000c5f-20000c5f  valuesBufferOffset                  1   1  Zero  ZI  elrsV2.o
  20000c60-20000c60  tick10ms                            1   1  Zero  ZI  er9x.o
  20000c61-20000c61  telemetryRxBufferCount              1   1  Zero  ZI  crossfire.o
  20000c62-20000c62  sysFlags                            1   1  Zero  ZI  er9x.o
  20000c63-20000c63  stickMoved                          1   1  Zero  ZI  er9x.o
  20000c64-20000c64  statusComplete                      1   1  Zero  ZI  elrsV2.o
  20000c65-20000c65  serialDat0                          1   1  Zero  ZI  pulses.o
  20000c66-20000c66  scroll_disabled                     1   1  Zero  ZI  menus.o
  20000c67-20000c67  scrollUD                            1   1  Zero  ZI  menus.o
  20000c68-20000c68  scrollLR                            1   1  Zero  ZI  menus.o
  20000c69-20000c69  s_pgOfs                             1   1  Zero  ZI  menus.o
  20000c6a-20000c6a  s_noHi                              1   1  Zero  ZI  menus.o
  20000c6b-20000c6b  s_moveMode                          1   1  Zero  ZI  menus.o
  20000c6c-20000c6c  s_mixMaxSel                         1   1  Zero  ZI  menus.o
  20000c6d-20000c6d  s_evt                               1   1  Zero  ZI  drivers.o
  20000c6e-20000c6e  s_editing                           1   1  Zero  ZI  menus.o
  20000c6f-20000c6f  s_editMode                          1   1  Zero  ZI  menus.o
  20000c70-20000c70  reloadFolder                        1   1  Zero  ZI  elrsV2.o
  20000c71-20000c71  pxxFlag                             1   1  Zero  ZI  pulses.o
  20000c72-20000c72  protocol_flags                      1   1  Zero  ZI  A7105_SPI.o
  20000c73-20000c73  ppmInAvailable                      1   1  Zero  ZI  er9x.o
  20000c74-20000c74  plotType                            1   1  Zero  ZI  lcd.o
  20000c75-20000c75  pageOffset                          1   1  Zero  ZI  elrsV2.o
  20000c76-20000c76  packet_count                        1   1  Zero  ZI  A7105_SPI.o
  20000c77-20000c77  outputTelemetryBufferTrigger
                                                         1   1  Zero  ZI  crossfire.o
  20000c78-20000c78  outputTelemetryBufferSize           1   1  Zero  ZI  crossfire.o
  20000c79-20000c79  namesBufferOffset                   1   1  Zero  ZI  elrsV2.o
  20000c7a-20000c7a  mixToDelete                         1   1  Zero  ZI  menus.o
  20000c7b-20000c7b  hopping_frequency_no                1   1  Zero  ZI  A7105_SPI.o
  20000c7c-20000c7c  heartbeat                           1   1  Zero  ZI  pulses.o
  20000c7d-20000c7d  g_vbat100mV                         1   1  Zero  ZI  er9x.o
  20000c7e-20000c7e  g_posHorz                           1   1  Zero  ZI  menus.o
  20000c7f-20000c7f  g_menuStackPtr                      1   1  Zero  ZI  er9x.o
  20000c80-20000c80  g_blinkTmr10ms                      1   1  Zero  ZI  drivers.o
  20000c81-20000c81  folderAccess                        1   1  Zero  ZI  elrsV2.o
  20000c82-20000c82  fields_count                        1   1  Zero  ZI  elrsV2.o
  20000c83-20000c83  fieldsLen                           1   1  Zero  ZI  elrsV2.o
  20000c84-20000c84  fieldDataLen                        1   1  Zero  ZI  elrsV2.o
  20000c85-20000c85  fieldChunk                          1   1  Zero  ZI  elrsV2.o
  20000c86-20000c86  edit                                1   1  Zero  ZI  elrsV2.o
  20000c87-20000c87  devicesLen                          1   1  Zero  ZI  elrsV2.o
  20000c88-20000c88  deviceIsELRS_TX                     1   1  Zero  ZI  elrsV2.o
  20000c89-20000c89  bpanaCenter                         1   1  Zero  ZI  menus.o
  20000c8a-20000c8a  bind_phase                          1   1  Zero  ZI  A7105_SPI.o
  20000c8b-20000c8b  allParamsLoaded                     1   1  Zero  ZI  elrsV2.o
  20000c8c-20000c8c  MState2::check_columns(unsigned char, unsigned char)::lateUp
                                                         1   1  Zero  ZI  menus.o
  20000c8d-20000c8d  audioQueue::driver()::toneCounter
                                                         1   1  Zero  ZI  er9x.o
  20000c8e-20000c8e  perMain()::repeater                 1   1  Zero  ZI  er9x.o
  20000c8f-20000c8f  perMain()::alertKey                 1   1  Zero  ZI  er9x.o
  20000c90-20000c90  perMain()::s_batCheck               1   1  Zero  ZI  er9x.o
  20000c91-20000c91  menuProc0(unsigned char)::trimSwLock
                                                         1   1  Zero  ZI  menus.o
  20000c92-20000c92  per10ms()::current                  1   1  Zero  ZI  drivers.o
  20000c93-20000c93  perOut(short*, unsigned char)::sticky
                                                         1   1  Zero  ZI  menus.o
  20000c94-20000c94  check_backlight_voice()::tmr10ms
                                                         1   1  Zero  ZI  er9x.o
  20000c95-20000c95  menuProcModelSelect(unsigned char)::mstate2
                                                         1   1  Zero  ZI  menus.o
  20000c96-20000c96  menuProcModelSelect(unsigned char)::sel_editMode
                                                         1   1  Zero  ZI  menus.o
  20000c97-20000c97  menuProcVoiceAlarm(unsigned char)::mstate2
                                                         1   1  Zero  ZI  menus.o
  20000c98-20000c98  menuProcModelIndex(unsigned char)::mstate
                                                         1   1  Zero  ZI  menus.o
  20000c99-20000c99  menuProcTelemetry(unsigned char)::mstate2
                                                         1   1  Zero  ZI  menus.o
  20000c9a-20000c9a  menuProcVoiceOne(unsigned char)::mstate2
                                                         1   1  Zero  ZI  menus.o
  20000c9b-20000c9b  menuProcProtocol(unsigned char)::mstate2
                                                         1   1  Zero  ZI  menus.o
  20000c9c-20000c9c  menuProcCurveOne(unsigned char)::mstate2
                                                         1   1  Zero  ZI  menus.o
  20000c9d-20000c9d  menuProcCurveOne(unsigned char)::dfltCrv
                                                         1   1  Zero  ZI  menus.o
  20000c9e-20000c9e  menuSetFailsafe(unsigned char)::mstate2
                                                         1   1  Zero  ZI  menus.o
  20000c9f-20000c9f  menuProcGlobals(unsigned char)::mstate2
                                                         1   1  Zero  ZI  menus.o
  20000ca0-20000ca0  menuModelPhases(unsigned char)::mstate2
                                                         1   1  Zero  ZI  menus.o
  20000ca1-20000ca1  A7105_AntSwitch()::sw               1   1  Zero  ZI  A7105_SPI.o
  20000ca2-20000ca2  menuProcMixOne(unsigned char)::mstate2
                                                         1   1  Zero  ZI  menus.o
  20000ca3-20000ca3  menuRangeBind(unsigned char)::timer
                                                         1   1  Zero  ZI  menus.o
  20000ca4-20000ca4  menuProcIndex(unsigned char)::mstate
                                                         1   1  Zero  ZI  menus.o
  20000ca5-20000ca5  menuProcCurve(unsigned char)::mstate2
                                                         1   1  Zero  ZI  menus.o
  20000ca6-20000ca6  ActionAFHDS2A::packet_type
                                                         1   1  Zero  ZI  AFHDS2A_a7105.o
  20000ca7-20000ca7  menuScaleOne(unsigned char)::mstate2
                                                         1   1  Zero  ZI  menus.o
  20000ca8-20000ca8  menuPhaseOne(unsigned char)::mstate2
                                                         1   1  Zero  ZI  menus.o
  20000ca9-20000ca9  perOutPhase(short*, unsigned char)::lastPhase
                                                         1   1  Zero  ZI  menus.o
  20000caa-20000caa  menuRXSetup(unsigned char)::mstate2
                                                         1   1  Zero  ZI  menus.o
  20000cab-20000cab  menuProcMix(unsigned char)::mstate2
                                                         1   1  Zero  ZI  menus.o
  20000cac-20000cac  s_currIdx                           1   1  Zero  ZI  menus.o
  20000cad-20000cad  Columns                             1   1  Zero  ZI  menus.o
  20000cae-20000cae  wait_fin_count                      1   1  Zero  ZI  audio.o
  20000caf-20000caf  inputs_subview                      1   1  Zero  ZI  menus.o
  20000cb0-20000cb0  s_eeLongTimer                       1   1  Zero  ZI  pers.o
  20000cb1-20000cb1  LongMenuTimer                       1   1  Zero  ZI  er9x.o
  20000cb2-20000cb2  s_moveMixIdx                        1   1  Zero  ZI  menus.o
  20000cb3-20000cb3  s_eeDirtyMsk                        1   1  Zero  ZI  pers.o
  20000cb4-20000cb4  s_currMixIdx                        1   1  Zero  ZI  menus.o
  20000cb5-20000cb5  s_currDestCh                        1   1  Zero  ZI  menus.o
  20000cb6-20000cb6  s_curveChan                         1   1  Zero  ZI  menus.o
  20000cb7-20000cb7  IlinesCount                         1   1  Zero  ZI  menus.o
  20000cb8-20000cb8  s_expoChan                          1   1  Zero  ZI  menus.o
  20000cb9-20000cb9  ThrottleStickyOn                    1   1  Zero  ZI  menus.o
  20000cba-20000cba  Tevent                              1   1  Zero  ZI  er9x.o
  20000cbb-20000cbb  SystemOptions                       1   1  Zero  ZI  er9x.o
  20000cbc-20000cbc  StickScrollTimer                    1   1  Zero  ZI  er9x.o
  20000cbd-20000cbd  StickScrollAllowed                  1   1  Zero  ZI  er9x.o
  20000cbe-20000cbe  StepSize                            1   1  Zero  ZI  er9x.o
  20000cbf-20000cbf  RotaryState                         1   1  Zero  ZI  menus.o
  20000cc0-20000cc0  RadioState                          1   1  Zero  ZI  A7105_SPI.o
  20000cc1-20000cc1  RadioActive                         1   1  Zero  ZI  pulses.o
  20000cc2-20000cc2  PausePulses                         1   1  Zero  ZI  pulses.o
  20000cc3-20000cc3  Main_running                        1   1  Zero  ZI  er9x.o
  20000cc4-20000cc4  M_longMenuTimer                     1   1  Zero  ZI  menus.o
  20000cc5-20000cc5  Lcd_lastPos                         1   1  Zero  ZI  lcd.o
  20000cc6-20000cc6  LcdLock                             1   1  Zero  ZI  lcd.o
  20000cc7-20000cc7  InverseBlink                        1   1  Zero  ZI  menus.o
  20000cc8-20000cc8  EnterMenu                           1   1  Zero  ZI  er9x.o
  20000cc9-20000cc9  EepromActive                        1   1  Zero  ZI  lcd.o
  20000cca-20000cca  Ee_lock                             1   1  Zero  ZI  pers.o
  20000ccb-20000ccb  EditType                            1   1  Zero  ZI  menus.o
  20000ccc-20000ccc  EditColumns                         1   1  Zero  ZI  menus.o
  20000ccd-20000ccd  DupSub                              1   1  Zero  ZI  menus.o
  20000cce-20000cce  DupIfNonzero                        1   1  Zero  ZI  menus.o
  20000ccf-20000ccf  Current_protocol                    1   1  Zero  ZI  pulses.o
  20000cd0-20000cd0  CurrentVolume                       1   1  Zero  ZI  er9x.o
  20000cd1-20000cd1  CurrentPhase                        1   1  Zero  ZI  menus.o
  20000cd2-20000cd2  CalcScaleNest                       1   1  Zero  ZI  menus.o
  20000cd3-20000cd3  prev_power                          1   1  Init  RW  A7105_SPI.o
  20000cd4-20000cd7  devicesRefreshTimeout               4   4  Init  RW  elrsV2.o
  20000cd8-20000cdb  AFHDS2A_update_telemetry()::Dacc
                                                         4   4  Init  RW  AFHDS2A_a7105.o
  20000cdc-20000cdf  ISR_TIMER1_COMPA_vect::pulsePtr
                                                         4   4  Init  RW  pulses.o
  20000ce0-20000ce1  A7105_AdjustLOBaseFreq()::old_offset
                                                         2   2  Init  RW  A7105_SPI.o
  20000ce2-20000ceb  play_cmd_buf                       10   1  Init  RW  audio.o
  20000cec-20000cef  AlarmControl                        4   1  Init  RW  er9x.o
  20000cf0-20000cf0  otherDevicesId                      1   1  Init  RW  elrsV2.o
  20000cf1-20000cf1  lineIndex                           1   1  Init  RW  elrsV2.o
  20000cf2-20000cf2  handsetId                           1   1  Init  RW  elrsV2.o
  20000cf3-20000cf3  fieldId                             1   1  Init  RW  elrsV2.o
  20000cf4-20000cf4  expectedChunks                      1   1  Init  RW  elrsV2.o
  20000cf5-20000cf5  deviceId                            1   1  Init  RW  elrsV2.o
  20000cf6-20000cf6  backButtonId                        1   1  Init  RW  elrsV2.o
  20000cf7-20000cf7  ( UNUSED .=.+1 )                    1   -  ----  -   -
  20000cf8-20000df7  [.bss.block.heap]                 256   8  None  ZI  [ Linker created ]
  20000df8-200016ff  ( UNUSED .=.+2312 )             2 312   -  ----  -   -
  20001700-200017ff  [.bss.block.stack]                256   8  None  ZI  [ Linker created ]


***********************************************************************************************
***                                                                                         ***
***                                       SYMBOL LIST                                       ***
***                                                                                         ***
***********************************************************************************************

Function symbols by name:

  Symbol name                   Address        Size  Align  Type  Bd  Object File
  -------------------------  ----------  ----------  -----  ----  --  -----------
  A7105_AdjustLOBaseFreq()   0x0000B011         100      4  Code  Gb  A7105_SPI.o
  A7105_AntSwitch()          0x0000C959          40      4  Code  Gb  A7105_SPI.o
  A7105_Init()               0x00009581         192      4  Code  Gb  A7105_SPI.o
  A7105_ReadData(unsigned char)
                             0x0000C629          48      4  Code  Gb  A7105_SPI.o
  A7105_ReadReg(unsigned char)
                             0x0000DA85          44      2  Code  Gb  A7105_SPI.o
  A7105_Reset()              0x0000DB53          38      2  Code  Gb  A7105_SPI.o
  A7105_SetPower()           0x0000C471          52      4  Code  Gb  A7105_SPI.o
  A7105_SetTxRxMode(unsigned char)
                             0x0000E06D           8      2  Code  Gb  A7105_SPI.o
  A7105_Sleep()              0x0000DF47          16      2  Code  Gb  A7105_SPI.o
  A7105_Strobe(unsigned char)
                             0x0000DD59          28      2  Code  Gb  A7105_SPI.o
  A7105_WriteData(unsigned char, unsigned char)
                             0x0000B7DD          80      4  Code  Gb  A7105_SPI.o
  A7105_WriteID(unsigned int)
                             0x0000DA59          44      2  Code  Gb  A7105_SPI.o
  A7105_WriteReg(unsigned char, unsigned char)
                             0x0000DCE7          30      2  Code  Gb  A7105_SPI.o
  ADC0_IRQHandler            0x0000BDCD                  4  Code  Wk  MKL16Z4_Vectors.o
  AFHDS2A_build_packet(unsigned char)
                             0x00007D5D         356      4  Code  Gb  AFHDS2A_a7105.o
  ActionAFHDS2A              0x0000484D         976      4  Code  Gb  AFHDS2A_a7105.o
  Buzzer_ClrVal              0x0000D1CD          16      4  Code  Gb  BoardI6.o
  Buzzer_SetVal              0x0000D1BD          16      4  Code  Gb  BoardI6.o
  CMP0_IRQHandler            0x0000BDCF                  4  Code  Wk  MKL16Z4_Vectors.o
  CS_STATE(unsigned char)    0x0000D11D          16      4  Code  Gb  er9x.o
  ClearPPMTimCompareInterruptFlag
                             0x0000D1AD          16      4  Code  Gb  BoardI6.o
  DAC0_IRQHandler            0x0000BDDF                  4  Code  Wk  MKL16Z4_Vectors.o
  DMA0_IRQHandler            0x0000BDB1                  4  Code  Wk  MKL16Z4_Vectors.o
  DMA1_IRQHandler            0x0000BDB3                  4  Code  Wk  MKL16Z4_Vectors.o
  DMA2_IRQHandler            0x0000BDB5                  4  Code  Wk  MKL16Z4_Vectors.o
  DMA3_IRQHandler            0x0000BDB7                  4  Code  Wk  MKL16Z4_Vectors.o
  DisableGIO                 0x0000D0A5          20      4  Code  Gb  BoardI6.o
  DisablePPMOut              0x0000D2C1          12      4  Code  Gb  BoardI6.o
  DisablePRTTim              0x0000D2B5          12      4  Code  Gb  BoardI6.o
  DoSum(unsigned char*, unsigned char)
                             0x0000DB79          36      2  Code  Gb  audio.o
  Dummy_Handler              0x0000BDAF                  4  Code  Lc  MKL16Z4_Vectors.o
  EFile::closeTrunc()        0x0000B4DD          88      4  Code  Gb  file.o
  EFile::create(unsigned char, unsigned char, unsigned short)
                             0x0000C4D9          48      4  Code  Gb  file.o
  EFile::exists(unsigned char)
                             0x0000CFB5          20      4  Code  Gb  file.o
  EFile::openRd(unsigned char)
                             0x0000CA71          36      4  Code  Gb  file.o
  EFile::read(unsigned char*, unsigned short)
                             0x0000A6D1         120      4  Code  Gb  file.o
  EFile::readRlc(unsigned char*, unsigned short)
                             0x0000D59B         114      2  Code  Gb  file.o
  EFile::rm(unsigned char)   0x0000C869          40      4  Code  Gb  file.o
  EFile::size()              0x0000CBB5          32      4  Code  Gb  file.o
  EFile::swap(unsigned char, unsigned char)
                             0x0000BDE9          64      4  Code  Gb  file.o
  EFile::write(unsigned char*, unsigned char)
                             0x000091B9         196      4  Code  Gb  file.o
  EFile::writeRlc(unsigned char, unsigned char, unsigned char*, unsigned short, unsigned char)
                             0x0000D3C3         224      2  Code  Gb  file.o
  ELRSV2_run(unsigned char)  0x0000BEE9          64      4  Code  Gb  elrsV2.o
  ELRSV2_stop()              0x0000C091          60      4  Code  Gb  elrsV2.o
  EeFsAlloc()                0x0000C891          40      4  Code  Lc  file.o
  EeFsFlush()                0x0000CFC9          20      4  Code  Lc  file.o
  EeFsFlushFreelist()        0x0000CFDD          20      4  Code  Lc  file.o
  EeFsFormat()               0x0000C0CD          60      4  Code  Gb  file.o
  EeFsFree(unsigned char)    0x0000C509          48      4  Code  Lc  file.o
  EeFsGetFree()              0x0000CD55          32      4  Code  Gb  file.o
  EeFsGetLink(unsigned char)
                             0x0000E015          10      2  Code  Lc  file.o
  EeFsOpen()                 0x0000C599          48      4  Code  Gb  file.o
  EeFsRead(unsigned char, unsigned char)
                             0x0000DDA7          24      2  Code  Lc  file.o
  EeFsSetLink(unsigned char, unsigned char)
                             0x0000DDED          22      2  Code  Lc  file.o
  EeFsck()                   0x00009B35         164      4  Code  Gb  file.o
  EnableGIO                  0x0000CEAD          28      4  Code  Gb  BoardI6.o
  EnablePPMOut               0x0000D2A9          12      4  Code  Gb  BoardI6.o
  EnablePPMTim               0x0000D29D          12      4  Code  Gb  BoardI6.o
  EnablePRTTim               0x0000D291          12      4  Code  Gb  BoardI6.o
  FTFA_IRQHandler            0x0000BDB9                  4  Code  Wk  MKL16Z4_Vectors.o
  GENERIC_CRC14::GENERIC_CRC14(unsigned short)
                             0x0000D9FD          46      2  Code  Gb  crc.o
  GENERIC_CRC14::GENERIC_CRC14(unsigned short)
                             0x0000D9FD          46      2  Code  Gb  crc.o
  GetChipID                  0x0000CF59          24      4  Code  Gb  BoardI6.o
  GetPPMOutState             0x0000D19D          16      4  Code  Gb  BoardI6.o
  GetPPMTimCompare           0x0000D285          12      4  Code  Gb  BoardI6.o
  GetPPMTimCompareInterruptFlag
                             0x0000D18D          16      4  Code  Gb  BoardI6.o
  HW_Init                    0x00004C1D         944      4  Code  Gb  BoardI6.o
  HardFault_Handler          0x0000BDA7                  4  Code  Wk  MKL16Z4_Vectors.o
  I2C0_IRQHandler            0x0000BDBF                  4  Code  Wk  MKL16Z4_Vectors.o
  I2C1_IRQHandler            0x0000BDC1                  4  Code  Wk  MKL16Z4_Vectors.o
  I2S0_IRQHandler            0x0000BDDD                  4  Code  Wk  MKL16Z4_Vectors.o
  ISR_TIMER0_COMP_vect       0x0000B87D          80      4  Code  Gb  er9x.o
  ISR_TIMER1_COMPA_vect      0x0000BD61          68      4  Code  Gb  pulses.o
  ISR_TIMER2_OVF_vect        0x0000CF41          24      4  Code  Gb  er9x.o
  IS_EXPO_THROTTLE(unsigned char)
                             0x0000CF11          24      4  Code  Gb  er9x.o
  Key::input(bool, EnumKeys)
                             0x0000927D         196      4  Code  Gb  drivers.o
  LCD_DATA                   0x0000CB6D          36      4  Code  Gb  BoardI6.o
  LLW_IRQHandler             0x0000BDBD                  4  Code  Wk  MKL16Z4_Vectors.o
  LPTimer_IRQHandler         0x0000BDE3                  4  Code  Wk  MKL16Z4_Vectors.o
  LVD_LVW_IRQHandler         0x0000BDBB                  4  Code  Wk  MKL16Z4_Vectors.o
  MState2::check_columns(unsigned char, unsigned char)
                             0x000000C1         828      4  Code  Gb  menus.o
  NMI_Handler                0x0000BDA5                  4  Code  Wk  MKL16Z4_Vectors.o
  PINB                       0x0000B1FD          96      4  Code  Gb  BoardI6.o
  PIND                       0x0000B0D9         100      4  Code  Gb  BoardI6.o
  PINE                       0x0000B739          84      4  Code  Gb  BoardI6.o
  PING                       0x0000C7E9          44      4  Code  Gb  BoardI6.o
  PIT_IRQHandler             0x0000BC05          72      4  Code  Gb  BoardI6.o
  PIT_IRQHandler             0x0000BDDB                  4  Code  Wk  MKL16Z4_Vectors.o
  PORTA_IRQHandler           0x0000BDE5                  4  Code  Wk  MKL16Z4_Vectors.o
  PORTC_PORTD_IRQHandler     0x0000BDE7                  4  Code  Wk  MKL16Z4_Vectors.o
  PORTC_PORTD_IRQHandler     0x0000C291          56      4  Code  Gb  BoardI6.o
  PendSV_Handler             0x0000BDAB                  4  Code  Wk  MKL16Z4_Vectors.o
  REG(signed char, signed char, signed char)
                             0x0000C141          56      4  Code  Gb  er9x.o
  REG100_100(signed char)    0x0000DFE3          14      2  Code  Gb  er9x.o
  RF0_ClrVal                 0x0000D279          12      4  Code  Gb  BoardI6.o
  RF0_SetVal                 0x0000D26D          12      4  Code  Gb  BoardI6.o
  RF1_ClrVal                 0x0000D261          12      4  Code  Gb  BoardI6.o
  RF1_SetVal                 0x0000D255          12      4  Code  Gb  BoardI6.o
  RTC_IRQHandler             0x0000BDD7                  4  Code  Wk  MKL16Z4_Vectors.o
  RTC_Seconds_IRQHandler     0x0000BDD9                  4  Code  Wk  MKL16Z4_Vectors.o
  Reset_Handler              0x0000CA49                  4  Code  Gb  Kinetis_KL_Startup.o
  SPI0_IRQHandler            0x0000AED9         108      4  Code  Gb  BoardI6.o
  SPI0_IRQHandler            0x0000BDC3                  4  Code  Wk  MKL16Z4_Vectors.o
  SPI1_IRQHandler            0x0000BDC5                  4  Code  Wk  MKL16Z4_Vectors.o
  SPI_RADIO_ReceiveBlock     0x0000BAE1          76      4  Code  Gb  BoardI6.o
  SPI_RADIO_SendBlock        0x0000C4A5          52      4  Code  Gb  BoardI6.o
  SVC_Handler                0x0000BDA9                  4  Code  Wk  MKL16Z4_Vectors.o
  SX127xDriver::SX127xDriver()
                             0x0000C689          44      4  Code  Gb  SX127x.o
  SX127xDriver::SX127xDriver()
                             0x0000C689          44      4  Code  Gb  SX127x.o
  SX127xHal::SX127xHal()     0x0000D231          12      4  Code  Gb  SX127xHal.o
  SX127xHal::SX127xHal()     0x0000D231          12      4  Code  Gb  SX127xHal.o
  SetPPMTimCompare           0x0000D249          12      4  Code  Gb  BoardI6.o
  SetPRTTimPeriod            0x0000CD75          32      4  Code  Gb  BoardI6.o
  SetStartPulsePol()         0x0000BB2D          72      4  Code  Gb  pulses.o
  StubbornReceiver::StubbornReceiver(unsigned char)
                             0x0000DE43          20      2  Code  Gb  stubborn_receiver.o
  StubbornReceiver::StubbornReceiver(unsigned char)
                             0x0000DE43          20      2  Code  Gb  stubborn_receiver.o
  StubbornSender::ResetState()
                             0x0000DD8F          24      2  Code  Gb  stubborn_sender.o
  StubbornSender::StubbornSender(unsigned char)
                             0x0000DF9D          14      2  Code  Gb  stubborn_sender.o
  StubbornSender::StubbornSender(unsigned char)
                             0x0000DF9D          14      2  Code  Gb  stubborn_sender.o
  SysTick_Handler            0x0000BDAD                  4  Code  Wk  MKL16Z4_Vectors.o
  SystemInit                 0x00009E65         148      4  Code  Gb  system_MKL16Z4.o
  TITLEP(char const*)        0x0000DEE7          16      2  Code  Gb  menus.o
  TPM0_IRQHandler            0x0000B6E5          84      4  Code  Gb  BoardI6.o
  TPM0_IRQHandler            0x0000BDD1                  4  Code  Wk  MKL16Z4_Vectors.o
  TPM1_IRQHandler            0x0000BDD3                  4  Code  Wk  MKL16Z4_Vectors.o
  TPM1_IRQHandler            0x0000CE91          28      4  Code  Gb  BoardI6.o
  TPM2_IRQHandler            0x0000BDD5                  4  Code  Wk  MKL16Z4_Vectors.o
  TPM2_IRQHandler            0x0000CE75          28      4  Code  Gb  BoardI6.o
  TSI0_IRQHandler            0x0000BDE1                  4  Code  Wk  MKL16Z4_Vectors.o
  TX_RX_PutVal               0x0000D17D          16      4  Code  Gb  BoardI6.o
  UART0_IRQHandler           0x0000BDC7                  4  Code  Wk  MKL16Z4_Vectors.o
  UART0_IRQHandler           0x0000C659          48      4  Code  Gb  BoardI6.o
  UART1_IRQHandler           0x0000BDC9                  4  Code  Wk  MKL16Z4_Vectors.o
  UART2_IRQHandler           0x0000AD25         112      4  Code  Gb  BoardI6.o
  UART2_IRQHandler           0x0000BDCB                  4  Code  Wk  MKL16Z4_Vectors.o
  UIbackExec(FieldProps*)    0x0000AA81         116      4  Code  Gb  elrsV2.o
  Uart_SendCMD(unsigned char, unsigned char, unsigned short)
                             0x0000C9D1          40      4  Code  Gb  audio.o
  _GLOBAL__sub_I_ELRS.cpp    0x0000BBBD          72      4  Code  Lc  ELRS.o
  _GLOBAL__sub_I_SX127x.cpp  0x0000D16D          16      4  Code  Lc  SX127x.o
  _GLOBAL__sub_I_er9x.cpp    0x0000D15D          16      4  Code  Lc  er9x.o
  __SEGGER_RTL_init_heap     0x0000CFA1          20      4  Code  Wk  heapops_basic.o (heapops_basic_v6m_little.a)
  __SEGGER_init_copy         0x0000FC19          20      2  Code  Wk  SEGGER_crtinit_v6m_little.o
  __SEGGER_init_ctors        0x0000FBF9          24      4  Code  Wk  SEGGER_crtinit_v6m_little.o
  __SEGGER_init_done         0x0000D0C3                  4  Code  Gb  SEGGER_THUMB_Startup.o
  __SEGGER_init_heap         0x0000CF71          16      4  Code  Wk  SEGGER_crtinit_v6m_little.o
  __SEGGER_init_zero         0x0000FC2D          18      2  Code  Wk  SEGGER_crtinit_v6m_little.o
  __aeabi_idiv               0x0000D83F          64      2  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  __aeabi_idivmod            0x0000DF8F          14      2  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  __aeabi_llsl               0x0000DCC9          30      2  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  __aeabi_llsr               0x0000DCAB          30      2  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  __aeabi_memclr             0x0000DE2F          20      2  Code  Wk  strasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  __aeabi_memclr4            0x0000DE2F                  2  Code  Wk  strasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  __aeabi_memclr8            0x0000DE2F                  2  Code  Wk  strasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  __aeabi_memcpy             0x0000DF81                  2  Code  Wk  strasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  __aeabi_memcpy4            0x0000DF81                  2  Code  Wk  strasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  __aeabi_memcpy8            0x0000DF81                  2  Code  Wk  strasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  __aeabi_memmove            0x0000DBC1                  2  Code  Wk  strasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  __aeabi_memmove4           0x0000DBC1                  2  Code  Wk  strasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  __aeabi_memmove8           0x0000DBC1                  2  Code  Wk  strasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  __aeabi_memset             0x0000DE31                  2  Code  Wk  strasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  __aeabi_memset4            0x0000DE31                  2  Code  Wk  strasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  __aeabi_memset8            0x0000DE31                  2  Code  Wk  strasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  __aeabi_uidiv              0x0000D8F9          56      2  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  __aeabi_uidivmod           0x0000DEC7          16      2  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  _start                     0x0000D0B9          14      4  Code  Gb  SEGGER_THUMB_Startup.o
  a7105_csn_off              0x0000D225          12      4  Code  Gb  BoardI6.o
  a7105_csn_on               0x0000D219          12      4  Code  Gb  BoardI6.o
  alert(char const*)         0x0000E033          10      2  Code  Gb  er9x.o
  alertx(char const*, bool)  0x0000ABD5         112      4  Code  Gb  er9x.o
  allocateFields()           0x0000B3CD          92      4  Code  Gb  elrsV2.o
  almess(char const*, unsigned char)
                             0x0000B2B9          92      4  Code  Gb  er9x.o
  anaIn(unsigned char)       0x0000BFA1          60      4  Code  Gb  er9x.o
  applyTemplate()            0x0000B429          92      4  Code  Gb  templates.o
  audioDefevent(unsigned char)
                             0x0000D041          20      4  Code  Gb  audio.o
  audioEvent(unsigned char, unsigned short)
                             0x0000D091          20      4  Code  Gb  audio.o
  audioQueue::busy()         0x0000E065           8      2  Code  Gb  audio.o
  audioQueue::driver()       0x0000C109          56      4  Code  Wk  er9x.o
  audioQueue::event(unsigned char, unsigned char)
                             0x00005939         760      4  Code  Gb  audio.o
  audioQueue::getToneLength(unsigned char)
                             0x0000BE29          64      4  Code  Wk  audio.o
  audioQueue::heartbeat()    0x0000A4DD         128      4  Code  Gb  audio.o
  audioQueue::play(unsigned char, unsigned char, unsigned char, unsigned char)
                             0x00009341         192      4  Code  Gb  audio.o
  audioVoiceDefevent(unsigned char, unsigned char)
                             0x0000CD95          28      4  Code  Gb  audio.o
  backlightKey()             0x0000CCF5          32      4  Code  Gb  er9x.o
  backlight_off              0x0000D20D          12      4  Code  Gb  BoardI6.o
  backlight_on               0x0000D201          12      4  Code  Gb  BoardI6.o
  calc1000toRESX(short)      0x0000DF07          16      2  Code  Gb  er9x.o
  calc100toRESX(signed char)
                             0x0000DE19          22      2  Code  Gb  er9x.o
  calcExpo(unsigned char, short)
                             0x00009641         188      4  Code  Gb  menus.o
  calcStickScroll(unsigned char)
                             0x0000B371          92      4  Code  Gb  er9x.o
  calc_scaler(unsigned char, unsigned char*, unsigned char*)
                             0x00009025         204      4  Code  Gb  menus.o
  chainMenu(void (*)(unsigned char))
                             0x0000CBF5          32      4  Code  Gb  er9x.o
  char2idx(char)             0x0000C569          48      4  Code  Gb  menus.o
  checkCrossfireTelemetryFrameCRC()
                             0x0000CC55          32      4  Code  Gb  crossfire.o
  checkIncDec(signed char, signed char, signed char, unsigned char)
                             0x0000E047          10      2  Code  Gb  er9x.o
  checkIncDec16(short, short, short, unsigned char)
                             0x00007771         392      4  Code  Gb  er9x.o
  checkIncDec_0(signed char, signed char)
                             0x0000D02D          20      4  Code  Gb  er9x.o
  checkIncDec_i8(signed char, signed char, signed char)
                             0x0000D13D          16      4  Code  Gb  er9x.o
  checkIncDec_u0(short, unsigned char)
                             0x0000D019          20      4  Code  Gb  er9x.o
  checkIndexed(unsigned char, char const*, unsigned char, unsigned char)
                             0x00009EF9         144      4  Code  Gb  menus.o
  checkSwitches()            0x00008BE1         228      4  Code  Gb  er9x.o
  checkTHR()                 0x0000B919          76      4  Code  Gb  er9x.o
  checkThrottlePosition()    0x0000B9FD          76      4  Code  Gb  er9x.o
  check_backlight_voice()    0x0000B9B1          76      4  Code  Gb  er9x.o
  clearKeyEvents()           0x0000CEC9          24      4  Code  Lc  er9x.o
  clearMixes()               0x0000D07D          20      4  Code  Gb  templates.o
  convert_failsafe_ppm(unsigned char)
                             0x0000C1B1          56      4  Code  Gb  A7105_SPI.o
  crc8(unsigned char const*, unsigned int)
                             0x0000CC35          32      4  Code  Gb  crc_crsf.o
  createCrossfireChannelsFrame(unsigned char*, short*)
                             0x0000A23D         136      4  Code  Gb  crossfire.o
  crossfileMenu(MState2&, unsigned char, unsigned char, unsigned char, unsigned char)
                             0x0000BEA9          64      4  Code  Gb  elrsV2.o
  crossfireTelemetryPing()   0x0000DDBF          24      2  Code  Gb  elrsV2.o
  crossfireTelemetryPush(unsigned char, unsigned char*, unsigned char)
                             0x0000AFAD         100      4  Code  Gb  crossfire.o
  crossfireTelemetryPush4(unsigned char, unsigned char, unsigned char)
                             0x0000C70D          44      4  Code  Gb  elrsV2.o
  crsf_action()              0x0000CE3D          28      4  Code  Gb  crossfire.o
  crsf_init()                0x0000CAB9          36      4  Code  Gb  crossfire.o
  crsf_send_data             0x0000B25D          92      4  Code  Gb  BoardI6.o
  crsf_shutdown()            0x0000E07D           8      2  Code  Gb  crossfire.o
  cs_0                       0x0000D1F5          12      4  Code  Gb  BoardI6.o
  curveAddress(unsigned char)
                             0x0000CA95          36      4  Code  Lc  menus.o
  dispFlightModename(unsigned char, unsigned char, unsigned char)
                             0x0000CB25          36      4  Code  Gb  menus.o
  dispGvar(unsigned char, unsigned char, unsigned char, unsigned char)
                             0x0000C6B5          44      4  Code  Gb  menus.o
  dispSignalQality(unsigned char)
                             0x0000AE01         108      4  Code  Gb  menus.o
  displayIndex(char const* const*, unsigned char, unsigned char, unsigned char)
                             0x0000D60D         108      2  Code  Lc  menus.o
  displayNext()              0x0000D069          20      4  Code  Gb  menus.o
  displayOneSwitch(unsigned char, unsigned char, unsigned char)
                             0x0000BFDD          60      4  Code  Gb  menus.o
  displayOneSwitch3Pos(unsigned char, unsigned char, unsigned char)
                             0x0000D87F          62      2  Code  Gb  menus.o
  displayTimer(unsigned char, unsigned char, unsigned char, unsigned char)
                             0x0000CE05          28      4  Code  Gb  menus.o
  displayVoiceRate(unsigned char, unsigned char, unsigned char, unsigned char)
                             0x0000C5F9          48      4  Code  Gb  menus.o
  div                        0x0000DAB1          42      2  Code  Wk  intops.o (libc_v6m_t_le_eabi_small.a)
  doBackLightVoice(unsigned char)
                             0x0000B315          92      4  Code  Gb  er9x.o
  doMainScreenGrphics()      0x00009F89         140      4  Code  Gb  menus.o
  doPopup(char const*, unsigned char, unsigned char)
                             0x00008595         324      4  Code  Gb  menus.o
  doVoiceAlarmSource(t_voiceAlarm*)
                             0x0000DB05          40      2  Code  Gb  er9x.o
  drawCurve(unsigned char)   0x0000A12D         136      4  Code  Gb  menus.o
  drawFunction(unsigned char, unsigned char)
                             0x00009DC5         160      4  Code  Gb  menus.o
  editExpoVals(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
                             0x00009A85         176      4  Code  Gb  menus.o
  editName(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char)
                             0x000099D5         176      4  Code  Gb  menus.o
  editSlowDelay(unsigned char, unsigned char, unsigned char)
                             0x0000BF65          60      4  Code  Lc  menus.o
  edit_dr_switch(unsigned char, unsigned char, signed char, unsigned char, unsigned char)
                             0x0000D931          56      2  Code  Gb  menus.o
  eeCheck(bool)              0x00008021         352      4  Code  Gb  pers.o
  eeDirty(unsigned char)     0x0000C5C9          48      4  Code  Gb  pers.o
  eeDuplicateModel(unsigned char)
                             0x0000AF45         104      4  Code  Gb  pers.o
  eeGeneralDefault()         0x0000A2C5         136      4  Code  Gb  pers.o
  eeLoadModel(unsigned char)
                             0x00006669         524      4  Code  Gb  pers.o
  eeLoadModelForBackup(unsigned char)
                             0x0000C3A1          52      4  Code  Gb  pers.o
  eeLoadModelName(unsigned char, char*, unsigned char)
                             0x0000B13D          96      4  Code  Gb  pers.o
  eeModelExists(unsigned char)
                             0x0000DFFD          12      2  Code  Gb  pers.o
  eeReadGeneral()            0x0000A839         120      4  Code  Gb  pers.o
  eeWaitComplete()           0x0000C981          40      4  Code  Gb  pers.o
  eeWriteBlockCmp(void const*, unsigned short, unsigned int)
                             0x0000BD1D          68      4  Code  Gb  drivers.o
  eeWriteGeneral()           0x0000B63D          84      4  Code  Gb  pers.o
  ee_waite()                 0x0000CADD          36      4  Code  Gb  drivers.o
  eeprom_read_block(void*, void const*, unsigned int)
                             0x0000BCD9          68      4  Code  Gb  drivers.o
  eeprom_write_page_cmp(char const*, unsigned short, unsigned int)
                             0x000082E1         348      4  Code  Gb  drivers.o
  evalChkSum()               0x0000CB49          36      4  Code  Gb  pers.o
  evalOffset(signed char)    0x0000CA21          40      4  Code  Gb  menus.o
  exit                       0x0000D0C7           2      4  Code  Gb  SEGGER_THUMB_Startup.o
  expo(short, short)         0x0000D8BD          60      2  Code  Gb  menus.o
  expou(unsigned short, unsigned short)
                             0x0000DBE3          34      2  Code  Gb  menus.o
  fieldCommandLoad(FieldProps*, unsigned char*, unsigned char)
                             0x0000C791          44      4  Code  Gb  elrsV2.o
  fieldCommandSave(FieldProps*)
                             0x0000C3D5          52      4  Code  Gb  elrsV2.o
  fieldFolderOpen(FieldProps*)
                             0x0000A999         116      4  Code  Gb  elrsV2.o
  fieldStringDisplay(FieldProps*, unsigned char, unsigned char)
                             0x0000CC95          32      4  Code  Gb  elrsV2.o
  fieldTextSelectionDisplay(FieldProps*, unsigned char, unsigned char)
                             0x0000A7C1         120      4  Code  Gb  elrsV2.o
  fieldTextSelectionLoad(FieldProps*, unsigned char*, unsigned char)
                             0x0000A55D         124      4  Code  Gb  elrsV2.o
  fieldTextSelectionSave(FieldProps*)
                             0x0000DFC7          14      2  Code  Gb  elrsV2.o
  fieldUnifiedDisplay(FieldProps*, unsigned char, unsigned char)
                             0x0000B78D          80      4  Code  Gb  elrsV2.o
  getADC_osmp                0x0000B485          88      4  Code  Gb  BoardI6.o
  getCrossfireTelemetryValue(unsigned char, int&, int)
                             0x0000C179          56      4  Code  Gb  crossfire.o
  getCurrentSwitchStates()   0x0000DC05          34      2  Code  Gb  er9x.o
  getField(unsigned char)    0x0000BF29          60      4  Code  Lc  elrsV2.o
  getFlightPhase()           0x0000C43D          52      4  Code  Gb  er9x.o
  getGvarSourceValue(unsigned char)
                             0x0000A925         116      4  Code  Gb  er9x.o
  getRawTrimValue(unsigned char, unsigned char)
                             0x0000C055          60      4  Code  Gb  er9x.o
  getSwitch(signed char, bool, unsigned char)
                             0x00006A71         488      4  Code  Gb  er9x.o
  getSwitch00(signed char)   0x0000E009          12      2  Code  Gb  er9x.o
  getTrimFlightPhase(unsigned char, unsigned char)
                             0x0000D7BB          66      2  Code  Gb  er9x.o
  getTrimValue(unsigned char, unsigned char)
                             0x0000DF27          16      2  Code  Gb  er9x.o
  getValue(unsigned char)    0x0000AB65         112      4  Code  Gb  er9x.o
  get_dr_state(unsigned char)
                             0x0000C221          56      4  Code  Gb  menus.o
  get_telemetry_value(unsigned char)
                             0x0000A8B1         116      4  Code  Gb  menus.o
  get_tmr10ms()              0x0000D23D          12      4  Code  Gb  er9x.o
  gvarMenuItem(unsigned char, unsigned char, signed char, signed char, signed char, unsigned char)
                             0x0000A0A1         140      4  Code  Gb  menus.o
  gvarMenuItem125(unsigned char, unsigned char, signed char, unsigned char)
                             0x0000DE03          22      2  Code  Gb  menus.o
  handleDevicePageEvent(unsigned char)
                             0x00007BF9         356      4  Code  Gb  elrsV2.o
  hyphinvMenuItem(unsigned char, unsigned char, unsigned char)
                             0x0000CF29          24      4  Code  Gb  menus.o
  i2c_master                 0x00007EC1         352      4  Code  Gb  BoardI6.o
  idx2char(unsigned char)    0x0000D005          20      4  Code  Gb  menus.o
  incrField(signed char)     0x0000B8CD          76      4  Code  Lc  elrsV2.o
  indexProcess(unsigned char, MState2*, unsigned char)
                             0x0000986D         180      4  Code  Lc  menus.o
  initAFHDS2A                0x000096FD         184      4  Code  Gb  AFHDS2A_a7105.o
  insertMix(unsigned char, unsigned char)
                             0x0000AAF5         112      4  Code  Lc  menus.o
  intpol(short, unsigned char)
                             0x0000D527         116      2  Code  Gb  menus.o
  keyDown()                  0x0000DFB9          14      2  Code  Wk  er9x.o
  keyState(EnumKeys)         0x0000A1B5         136      4  Code  Gb  drivers.o
  killEvents(unsigned char)  0x0000CE59          28      4  Code  Gb  drivers.o
  lcdSendCtl(unsigned char)  0x0000DC6B          32      2  Code  Lc  lcd.o
  lcdSetContrast()           0x0000D12D          16      4  Code  Gb  lcd.o
  lcdSetRefVolt(unsigned char)
                             0x0000CCD5          32      4  Code  Gb  lcd.o
  lcd_2_digits(unsigned char, unsigned char, unsigned char, unsigned char)
                             0x0000DC49          34      2  Code  Gb  lcd.o
  lcd_char_inverse(unsigned char, unsigned char, unsigned char, unsigned char)
                             0x0000C1E9          56      4  Code  Gb  lcd.o
  lcd_clear()                0x0000CFF1          20      4  Code  Gb  lcd.o
  lcd_hbar(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
                             0x0000D72B          74      2  Code  Gb  lcd.o
  lcd_hline(unsigned char, unsigned char, signed char)
                             0x0000E01F          10      2  Code  Gb  lcd.o
  lcd_hlineStip(unsigned char, unsigned char, signed char, unsigned char)
                             0x0000B075         100      4  Code  Gb  lcd.o
  lcd_img(unsigned char, unsigned char, unsigned char const*, unsigned char)
                             0x0000B965          76      4  Code  Gb  lcd.o
  lcd_init()                 0x0000B535          88      4  Code  Gb  lcd.o
  lcd_outdez(unsigned char, unsigned char, short)
                             0x0000E05B          10      2  Code  Gb  lcd.o
  lcd_outdezAtt(unsigned char, unsigned char, short, unsigned char)
                             0x0000DC27          34      2  Code  Gb  lcd.o
  lcd_outdezNAtt(unsigned char, unsigned char, int, unsigned char, signed char, unsigned char)
                             0x00007029         488      4  Code  Gb  lcd.o
  lcd_outhex4(unsigned char, unsigned char, unsigned short)
                             0x0000D7FD          66      2  Code  Gb  lcd.o
  lcd_plot(unsigned char, unsigned char)
                             0x0000C931          40      4  Code  Gb  lcd.o
  lcd_putc(unsigned char, unsigned char, char)
                             0x0000E029          10      2  Code  Gb  lcd.o
  lcd_putcAtt(unsigned char, unsigned char, char, unsigned char)
                             0x000086D9         300      4  Code  Gb  lcd.o
  lcd_putsAtt(unsigned char, unsigned char, char const*, unsigned char)
                             0x0000D99D          50      2  Code  Gb  lcd.o
  lcd_putsAttIdx(unsigned char, unsigned char, char const*, unsigned char, unsigned char)
                             0x0000DD75          26      2  Code  Gb  lcd.o
  lcd_puts_P(unsigned char, unsigned char, char const*)
                             0x0000E051          10      2  Code  Gb  lcd.o
  lcd_puts_Pleft(unsigned char, char const*)
                             0x0000DEF7          16      2  Code  Gb  lcd.o
  lcd_puts_Pskip(unsigned char, char const*, unsigned char)
                             0x0000DB2D          38      2  Code  Gb  lcd.o
  lcd_putsnAtt(unsigned char, unsigned char, char const*, unsigned char, unsigned char)
                             0x0000DADB          42      2  Code  Gb  lcd.o
  lcd_putsn_P(unsigned char, unsigned char, char const*, unsigned char)
                             0x0000DF37          16      2  Code  Gb  lcd.o
  lcd_rect(unsigned char, unsigned char, unsigned char, unsigned char)
                             0x0000CEE1          24      4  Code  Gb  lcd.o
  lcd_rect_xor(unsigned char, unsigned char, unsigned char, unsigned char)
                             0x0000D775          70      2  Code  Gb  lcd.o
  lcd_vline(unsigned char, unsigned char, signed char)
                             0x0000A749         120      4  Code  Gb  lcd.o
  lcd_write_bits(unsigned char*, unsigned char)
                             0x0000C409          52      4  Code  Gb  lcd.o
  lcd_xlabel_decimal(unsigned char, unsigned char, unsigned short, unsigned char, char const*)
                             0x0000DE6B          20      2  Code  Gb  menus.o
  mDelay                     0x0000C841          40      4  Code  Gb  BoardI6.o
  main                       0x0000DF57          14      2  Code  Gb  main.o
  mainER()                   0x00006449         544      4  Code  Gb  er9x.o
  mainSequence()             0x00002D4D       1 940      4  Code  Gb  er9x.o
  memcmp                     0x0000D9CF          46      2  Code  Wk  strops.o (libc_v6m_t_le_eabi_small.a)
  memcpy                     0x0000DF81          14      2  Code  Wk  strasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  memset                     0x0000DE37                  2  Code  Wk  strasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  menuDeleteDupModel(unsigned char)
                             0x00009BD9         164      4  Code  Gb  menus.o
  menuDeleteMix(unsigned char)
                             0x0000ACB5         112      4  Code  Gb  menus.o
  menuMixersLimit(unsigned char)
                             0x0000C7BD          44      4  Code  Gb  menus.o
  menuModelPhases(unsigned char)
                             0x00008A09         236      4  Code  Gb  menus.o
  menuPhaseOne(unsigned char)
                             0x00007211         476      4  Code  Gb  menus.o
  menuPressed()              0x0000CD35          32      4  Code  Gb  drivers.o
  menuProc0(unsigned char)   0x000034E1       1 420      4  Code  Gb  menus.o
  menuProcCurve(unsigned char)
                             0x000097B5         184      4  Code  Gb  menus.o
  menuProcCurveOne(unsigned char)
                             0x00008181         352      4  Code  Gb  menus.o
  menuProcGlobals(unsigned char)
                             0x00006E41         488      4  Code  Gb  menus.o
  menuProcIndex(unsigned char)
                             0x000014F5       3 216      4  Code  Gb  menus.o
  menuProcMix(unsigned char)
                             0x00003F2D       1 196      4  Code  Gb  menus.o
  menuProcMixOne(unsigned char)
                             0x00003A6D       1 216      4  Code  Gb  menus.o
  menuProcModelIndex(unsigned char)
                             0x00000411       4 324      4  Code  Gb  menus.o
  menuProcModelSelect(unsigned char)
                             0x00005305         796      4  Code  Gb  menus.o
  menuProcProtocol(unsigned char)
                             0x00005F11         676      4  Code  Gb  menus.o
  menuProcStatistic(unsigned char)
                             0x00009401         192      4  Code  Gb  menus.o
  menuProcTelemetry(unsigned char)
                             0x00006C59         488      4  Code  Gb  menus.o
  menuProcVoiceAlarm(unsigned char)
                             0x00008805         280      4  Code  Gb  menus.o
  menuProcVoiceOne(unsigned char)
                             0x000043D9       1 140      4  Code  Gb  menus.o
  menuRXSetup(unsigned char)
                             0x000094C1         192      4  Code  Gb  menus.o
  menuRangeBind(unsigned char)
                             0x00009C7D         164      4  Code  Gb  menus.o
  menuScaleOne(unsigned char)
                             0x000061B5         660      4  Code  Gb  menus.o
  menuSetFailsafe(unsigned char)
                             0x000073ED         456      4  Code  Gb  menus.o
  message(char const*)       0x0000DFAB          14      2  Code  Gb  er9x.o
  mixaddress(unsigned char)  0x0000D14D          16      4  Code  Gb  er9x.o
  modeFixValue(unsigned char)
                             0x0000CDE9          28      4  Code  Gb  er9x.o
  modelDefaultWrite(unsigned char)
                             0x0000AC45         112      4  Code  Gb  pers.o
  modelSave(unsigned char)   0x0000C539          48      4  Code  Gb  pers.o
  noopOpen(FieldProps*)      0x000003FD           2      2  Code  Gb  elrsV2.o
  offonItem(unsigned char, unsigned char, unsigned char)
                             0x0000DE91          18      2  Code  Lc  menus.o
  offonMenuItem(unsigned char, unsigned char, char const*, unsigned char)
                             0x0000DEA3          18      2  Code  Lc  menus.o
  on_voice_cb(unsigned char*, unsigned char)
                             0x0000CE21          28      4  Code  Gb  audio.o
  onoffItem(unsigned char, unsigned char, unsigned char)
                             0x0000DE7F          18      2  Code  Lc  menus.o
  onoffMenuItem(unsigned char, unsigned char, char const*, unsigned char)
                             0x0000DD05          28      2  Code  Lc  menus.o
  parseDeviceInfoMessage(unsigned char*)
                             0x00007A7D         380      4  Code  Gb  elrsV2.o
  parseParameterInfoMessage(unsigned char*, unsigned char)
                             0x00006875         508      4  Code  Gb  elrsV2.o
  pauseEvents(unsigned char)
                             0x0000CD15          32      4  Code  Gb  drivers.o
  per10ms()                  0x00008DA9         216      4  Code  Gb  drivers.o
  perOut(short*, unsigned char)
                             0x00002185       3 016      4  Code  Gb  menus.o
  perOutPhase(short*, unsigned char)
                             0x000078F9         388      4  Code  Gb  menus.o
  popMenu(bool)              0x0000C6E1          44      4  Code  Gb  er9x.o
  popupCompat(unsigned char)
                             0x0000C8B9          40      4  Code  Lc  elrsV2.o
  procOneVoiceAlarm(t_voiceAlarm*, unsigned char)
                             0x00005C31         736      4  Code  Gb  er9x.o
  processCrossfireTelemetryData(unsigned char)
                             0x0000AD95         108      4  Code  Gb  crossfire.o
  processCrossfireTelemetryFrame()
                             0x00004FCD         824      4  Code  Gb  crossfire.o
  processCrossfireTelemetryValue(unsigned char, int)
                             0x0000BE69          64      4  Code  Gb  crossfire.o
  processFlySkySensor(unsigned char const*, unsigned char)
                             0x0000843D         344      4  Code  Lc  AFHDS2A_a7105.o
  processVoiceAlarms()       0x0000CC75          32      4  Code  Gb  er9x.o
  pushMenu(void (*)(unsigned char))
                             0x0000C36D          52      4  Code  Gb  er9x.o
  putVoiceQueue(unsigned char)
                             0x0000E075           8      2  Code  Gb  audio.o
  putVoiceQueueLong(unsigned short)
                             0x0000C765          44      4  Code  Gb  audio.o
  putVoiceQueueUpper(unsigned char)
                             0x0000DFD5          14      2  Code  Gb  audio.o
  putWarnSwitch(unsigned char, unsigned char)
                             0x0000CDCD          28      4  Code  Gb  er9x.o
  put_curve(unsigned char, unsigned char, signed char, unsigned char)
                             0x0000C339          52      4  Code  Gb  menus.o
  putc_0_1(unsigned char, unsigned char, unsigned char)
                             0x0000DEB5          18      2  Code  Gb  menus.o
  putsAttIdxTelemItems(unsigned char, unsigned char, unsigned char, unsigned char)
                             0x0000CEF9          24      4  Code  Gb  menus.o
  putsChn(unsigned char, unsigned char, unsigned char, unsigned char)
                             0x0000DED7          16      2  Code  Gb  er9x.o
  putsChnOpRaw(unsigned char, unsigned char, t_MixData*, unsigned char)
                             0x0000B691          84      4  Code  Gb  menus.o
  putsChnRaw(unsigned char, unsigned char, unsigned char, unsigned char)
                             0x0000A34D         136      4  Code  Gb  er9x.o
  putsDrSwitches(unsigned char, unsigned char, signed char, unsigned char)
                             0x0000AA0D         116      4  Code  Gb  er9x.o
  putsMomentDrSwitches(unsigned char, unsigned char, signed char, unsigned char)
                             0x0000DA2B          46      2  Code  Gb  er9x.o
  putsOffDecimal(unsigned char, unsigned char, unsigned short, unsigned char)
                             0x0000CCB5          32      4  Code  Gb  menus.o
  putsTelemValue(unsigned char, unsigned char, int, unsigned char, unsigned char)
                             0x0000AE6D         108      4  Code  Gb  er9x.o
  putsTelemetryChannel(unsigned char, unsigned char, signed char, int, unsigned char, unsigned char)
                             0x000075B5         444      4  Code  Gb  menus.o
  putsTime(unsigned char, unsigned char, short, unsigned char, unsigned char)
                             0x0000D4A3         132      2  Code  Gb  lcd.o
  putsTimeNoAtt(unsigned char, unsigned char, short)
                             0x0000DF17          16      2  Code  Gb  menus.o
  putsTmrMode(unsigned char, unsigned char, unsigned char, unsigned char)
                             0x00009D21         164      4  Code  Gb  er9x.o
  putsTrimMode(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
                             0x0000B82D          80      4  Code  Gb  menus.o
  putsVBat(unsigned char, unsigned char, unsigned char)
                             0x0000C909          40      4  Code  Gb  lcd.o
  putsVolts(unsigned char, unsigned char, short, unsigned char)
                             0x0000C8E1          40      4  Code  Gb  lcd.o
  rangeBindAction(unsigned char, unsigned char)
                             0x0000C019          60      4  Code  Gb  menus.o
  rd_0                       0x0000D10D          16      4  Code  Gb  BoardI6.o
  rd_1                       0x0000D0FD          16      4  Code  Gb  BoardI6.o
  reachMixerCountLimit()     0x0000CB01          36      4  Code  Gb  menus.o
  refreshDiplay()            0x0000A015         140      4  Code  Gb  lcd.o
  resetTimer1()              0x0000D055          20      4  Code  Gb  menus.o
  resetTimer2()              0x0000E03D          10      2  Code  Gb  menus.o
  resetTimern(unsigned char)
                             0x0000C259          56      4  Code  Gb  menus.o
  rs_0                       0x0000D0ED          16      4  Code  Gb  BoardI6.o
  rs_1                       0x0000D0DD          16      4  Code  Gb  BoardI6.o
  rst_0                      0x0000D1E9          12      4  Code  Gb  BoardI6.o
  rst_1                      0x0000D1DD          12      4  Code  Gb  BoardI6.o
  runCrossfireTelemetryCallback(unsigned char, unsigned char*, unsigned char)
                             0x0000891D         236      4  Code  Gb  elrsV2.o
  runDevicePage(unsigned char)
                             0x000090F1         200      4  Code  Gb  elrsV2.o
  runPopupPage(unsigned char)
                             0x00008CC5         228      4  Code  Gb  elrsV2.o
  rw_0                       0x0000D0CD          16      4  Code  Gb  BoardI6.o
  scaleAnalog(short, unsigned char)
                             0x0000A655         124      4  Code  Gb  menus.o
  scalerDecimal(unsigned char, unsigned char, unsigned char)
                             0x0000DB9D          36      2  Code  Gb  menus.o
  selectField(signed char)   0x0000A5D9         124      4  Code  Gb  elrsV2.o
  semicolonPos(char const*, unsigned char)
                             0x0000DDD7          22      2  Code  Lc  elrsV2.o
  sendSerialVoiceData(unsigned char*, unsigned int)
                             0x0000C739          44      4  Code  Gb  BoardI6.o
  serialVoiceInit(void (*)(unsigned char*, unsigned char))
                             0x0000B5E5          88      4  Code  Gb  BoardI6.o
  setMix(unsigned char, unsigned char)
                             0x0000B58D          88      4  Code  Gb  templates.o
  setNameP(char*, char const*)
                             0x0000DE57          20      2  Code  Gb  pers.o
  setStickCenter()           0x00008E81         216      4  Code  Gb  menus.o
  setTrimValue(unsigned char, unsigned char, short)
                             0x0000B19D          96      4  Code  Gb  er9x.o
  setVolume(unsigned char)   0x0000CBD5          32      4  Code  Gb  audio.o
  setupPulses()              0x00009921         180      4  Code  Gb  pulses.o
  setupPulsesCrossfire()     0x0000BA49          76      4  Code  Gb  crossfire.o
  setupPulsesPPM(unsigned char)
                             0x00008AF5         236      4  Code  Gb  pulses.o
  setup_crsf_serial_port     0x0000A3D5         132      4  Code  Gb  BoardI6.o
  shutdown_crsf_serial_port  0x0000BC95          68      4  Code  Gb  BoardI6.o
  startPulses()              0x0000C9F9          40      4  Code  Gb  pulses.o
  stickMoveValue()           0x0000DC8B          32      2  Code  Gb  er9x.o
  strcpy                     0x0000DF73          14      2  Code  Wk  strasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  strlen                     0x0000DF65          14      2  Code  Wk  strasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  strstr                     0x0000D969          52      2  Code  Wk  strops.o (libc_v6m_t_le_eabi_small.a)
  switchDisplay(unsigned char, unsigned char)
                             0x0000C9A9          40      4  Code  Gb  menus.o
  switchPosition(unsigned char)
                             0x0000DFF1          12      2  Code  Gb  drivers.o
  t_voice::voice_process()   0x0000A459         132      4  Code  Gb  audio.o
  telltale(unsigned char, signed char, signed char)
                             0x0000D679          90      2  Code  Gb  menus.o
  throttleReversed()         0x0000CDB1          28      4  Code  Gb  er9x.o
  timer()                    0x00005621         792      4  Code  Gb  menus.o
  tiny_sprintf(char*, char const*, char, char, ...)
                             0x0000D6D3          88      2  Code  Gb  elrsV2.o
  trace()                    0x0000CC15          32      4  Code  Gb  menus.o
  uart_clear_error()         0x0000BA95          76      4  Code  Gb  BoardI6.o
  validateName(char*, unsigned char)
                             0x0000DD21          28      2  Code  Lc  pers.o
  voiceMinutes(short)        0x0000DD3D          28      2  Code  Gb  menus.o
  voice_numeric(short, unsigned char, unsigned char)
                             0x0000D2CD         246      2  Code  Gb  audio.o
  voice_telem_item(unsigned char)
                             0x00008F59         204      4  Code  Gb  menus.o
  yesNoMenuExit(unsigned char, char const*)
                             0x0000BB75          72      4  Code  Gb  menus.o

Function symbols by address:

     Address  Symbol name                      Size  Align  Type  Bd  Object File
  ----------  -------------------------  ----------  -----  ----  --  -----------
  0x000000C1  MState2::check_columns(unsigned char, unsigned char)
                                                828      4  Code  Gb  menus.o
  0x000003FD  noopOpen(FieldProps*)               2      2  Code  Gb  elrsV2.o
  0x00000411  menuProcModelIndex(unsigned char)
                                              4 324      4  Code  Gb  menus.o
  0x000014F5  menuProcIndex(unsigned char)
                                              3 216      4  Code  Gb  menus.o
  0x00002185  perOut(short*, unsigned char)
                                              3 016      4  Code  Gb  menus.o
  0x00002D4D  mainSequence()                  1 940      4  Code  Gb  er9x.o
  0x000034E1  menuProc0(unsigned char)        1 420      4  Code  Gb  menus.o
  0x00003A6D  menuProcMixOne(unsigned char)
                                              1 216      4  Code  Gb  menus.o
  0x00003F2D  menuProcMix(unsigned char)
                                              1 196      4  Code  Gb  menus.o
  0x000043D9  menuProcVoiceOne(unsigned char)
                                              1 140      4  Code  Gb  menus.o
  0x0000484D  ActionAFHDS2A                     976      4  Code  Gb  AFHDS2A_a7105.o
  0x00004C1D  HW_Init                           944      4  Code  Gb  BoardI6.o
  0x00004FCD  processCrossfireTelemetryFrame()
                                                824      4  Code  Gb  crossfire.o
  0x00005305  menuProcModelSelect(unsigned char)
                                                796      4  Code  Gb  menus.o
  0x00005621  timer()                           792      4  Code  Gb  menus.o
  0x00005939  audioQueue::event(unsigned char, unsigned char)
                                                760      4  Code  Gb  audio.o
  0x00005C31  procOneVoiceAlarm(t_voiceAlarm*, unsigned char)
                                                736      4  Code  Gb  er9x.o
  0x00005F11  menuProcProtocol(unsigned char)
                                                676      4  Code  Gb  menus.o
  0x000061B5  menuScaleOne(unsigned char)
                                                660      4  Code  Gb  menus.o
  0x00006449  mainER()                          544      4  Code  Gb  er9x.o
  0x00006669  eeLoadModel(unsigned char)
                                                524      4  Code  Gb  pers.o
  0x00006875  parseParameterInfoMessage(unsigned char*, unsigned char)
                                                508      4  Code  Gb  elrsV2.o
  0x00006A71  getSwitch(signed char, bool, unsigned char)
                                                488      4  Code  Gb  er9x.o
  0x00006C59  menuProcTelemetry(unsigned char)
                                                488      4  Code  Gb  menus.o
  0x00006E41  menuProcGlobals(unsigned char)
                                                488      4  Code  Gb  menus.o
  0x00007029  lcd_outdezNAtt(unsigned char, unsigned char, int, unsigned char, signed char, unsigned char)
                                                488      4  Code  Gb  lcd.o
  0x00007211  menuPhaseOne(unsigned char)
                                                476      4  Code  Gb  menus.o
  0x000073ED  menuSetFailsafe(unsigned char)
                                                456      4  Code  Gb  menus.o
  0x000075B5  putsTelemetryChannel(unsigned char, unsigned char, signed char, int, unsigned char, unsigned char)
                                                444      4  Code  Gb  menus.o
  0x00007771  checkIncDec16(short, short, short, unsigned char)
                                                392      4  Code  Gb  er9x.o
  0x000078F9  perOutPhase(short*, unsigned char)
                                                388      4  Code  Gb  menus.o
  0x00007A7D  parseDeviceInfoMessage(unsigned char*)
                                                380      4  Code  Gb  elrsV2.o
  0x00007BF9  handleDevicePageEvent(unsigned char)
                                                356      4  Code  Gb  elrsV2.o
  0x00007D5D  AFHDS2A_build_packet(unsigned char)
                                                356      4  Code  Gb  AFHDS2A_a7105.o
  0x00007EC1  i2c_master                        352      4  Code  Gb  BoardI6.o
  0x00008021  eeCheck(bool)                     352      4  Code  Gb  pers.o
  0x00008181  menuProcCurveOne(unsigned char)
                                                352      4  Code  Gb  menus.o
  0x000082E1  eeprom_write_page_cmp(char const*, unsigned short, unsigned int)
                                                348      4  Code  Gb  drivers.o
  0x0000843D  processFlySkySensor(unsigned char const*, unsigned char)
                                                344      4  Code  Lc  AFHDS2A_a7105.o
  0x00008595  doPopup(char const*, unsigned char, unsigned char)
                                                324      4  Code  Gb  menus.o
  0x000086D9  lcd_putcAtt(unsigned char, unsigned char, char, unsigned char)
                                                300      4  Code  Gb  lcd.o
  0x00008805  menuProcVoiceAlarm(unsigned char)
                                                280      4  Code  Gb  menus.o
  0x0000891D  runCrossfireTelemetryCallback(unsigned char, unsigned char*, unsigned char)
                                                236      4  Code  Gb  elrsV2.o
  0x00008A09  menuModelPhases(unsigned char)
                                                236      4  Code  Gb  menus.o
  0x00008AF5  setupPulsesPPM(unsigned char)
                                                236      4  Code  Gb  pulses.o
  0x00008BE1  checkSwitches()                   228      4  Code  Gb  er9x.o
  0x00008CC5  runPopupPage(unsigned char)
                                                228      4  Code  Gb  elrsV2.o
  0x00008DA9  per10ms()                         216      4  Code  Gb  drivers.o
  0x00008E81  setStickCenter()                  216      4  Code  Gb  menus.o
  0x00008F59  voice_telem_item(unsigned char)
                                                204      4  Code  Gb  menus.o
  0x00009025  calc_scaler(unsigned char, unsigned char*, unsigned char*)
                                                204      4  Code  Gb  menus.o
  0x000090F1  runDevicePage(unsigned char)
                                                200      4  Code  Gb  elrsV2.o
  0x000091B9  EFile::write(unsigned char*, unsigned char)
                                                196      4  Code  Gb  file.o
  0x0000927D  Key::input(bool, EnumKeys)
                                                196      4  Code  Gb  drivers.o
  0x00009341  audioQueue::play(unsigned char, unsigned char, unsigned char, unsigned char)
                                                192      4  Code  Gb  audio.o
  0x00009401  menuProcStatistic(unsigned char)
                                                192      4  Code  Gb  menus.o
  0x000094C1  menuRXSetup(unsigned char)
                                                192      4  Code  Gb  menus.o
  0x00009581  A7105_Init()                      192      4  Code  Gb  A7105_SPI.o
  0x00009641  calcExpo(unsigned char, short)
                                                188      4  Code  Gb  menus.o
  0x000096FD  initAFHDS2A                       184      4  Code  Gb  AFHDS2A_a7105.o
  0x000097B5  menuProcCurve(unsigned char)
                                                184      4  Code  Gb  menus.o
  0x0000986D  indexProcess(unsigned char, MState2*, unsigned char)
                                                180      4  Code  Lc  menus.o
  0x00009921  setupPulses()                     180      4  Code  Gb  pulses.o
  0x000099D5  editName(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char)
                                                176      4  Code  Gb  menus.o
  0x00009A85  editExpoVals(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
                                                176      4  Code  Gb  menus.o
  0x00009B35  EeFsck()                          164      4  Code  Gb  file.o
  0x00009BD9  menuDeleteDupModel(unsigned char)
                                                164      4  Code  Gb  menus.o
  0x00009C7D  menuRangeBind(unsigned char)
                                                164      4  Code  Gb  menus.o
  0x00009D21  putsTmrMode(unsigned char, unsigned char, unsigned char, unsigned char)
                                                164      4  Code  Gb  er9x.o
  0x00009DC5  drawFunction(unsigned char, unsigned char)
                                                160      4  Code  Gb  menus.o
  0x00009E65  SystemInit                        148      4  Code  Gb  system_MKL16Z4.o
  0x00009EF9  checkIndexed(unsigned char, char const*, unsigned char, unsigned char)
                                                144      4  Code  Gb  menus.o
  0x00009F89  doMainScreenGrphics()             140      4  Code  Gb  menus.o
  0x0000A015  refreshDiplay()                   140      4  Code  Gb  lcd.o
  0x0000A0A1  gvarMenuItem(unsigned char, unsigned char, signed char, signed char, signed char, unsigned char)
                                                140      4  Code  Gb  menus.o
  0x0000A12D  drawCurve(unsigned char)          136      4  Code  Gb  menus.o
  0x0000A1B5  keyState(EnumKeys)                136      4  Code  Gb  drivers.o
  0x0000A23D  createCrossfireChannelsFrame(unsigned char*, short*)
                                                136      4  Code  Gb  crossfire.o
  0x0000A2C5  eeGeneralDefault()                136      4  Code  Gb  pers.o
  0x0000A34D  putsChnRaw(unsigned char, unsigned char, unsigned char, unsigned char)
                                                136      4  Code  Gb  er9x.o
  0x0000A3D5  setup_crsf_serial_port            132      4  Code  Gb  BoardI6.o
  0x0000A459  t_voice::voice_process()          132      4  Code  Gb  audio.o
  0x0000A4DD  audioQueue::heartbeat()           128      4  Code  Gb  audio.o
  0x0000A55D  fieldTextSelectionLoad(FieldProps*, unsigned char*, unsigned char)
                                                124      4  Code  Gb  elrsV2.o
  0x0000A5D9  selectField(signed char)          124      4  Code  Gb  elrsV2.o
  0x0000A655  scaleAnalog(short, unsigned char)
                                                124      4  Code  Gb  menus.o
  0x0000A6D1  EFile::read(unsigned char*, unsigned short)
                                                120      4  Code  Gb  file.o
  0x0000A749  lcd_vline(unsigned char, unsigned char, signed char)
                                                120      4  Code  Gb  lcd.o
  0x0000A7C1  fieldTextSelectionDisplay(FieldProps*, unsigned char, unsigned char)
                                                120      4  Code  Gb  elrsV2.o
  0x0000A839  eeReadGeneral()                   120      4  Code  Gb  pers.o
  0x0000A8B1  get_telemetry_value(unsigned char)
                                                116      4  Code  Gb  menus.o
  0x0000A925  getGvarSourceValue(unsigned char)
                                                116      4  Code  Gb  er9x.o
  0x0000A999  fieldFolderOpen(FieldProps*)
                                                116      4  Code  Gb  elrsV2.o
  0x0000AA0D  putsDrSwitches(unsigned char, unsigned char, signed char, unsigned char)
                                                116      4  Code  Gb  er9x.o
  0x0000AA81  UIbackExec(FieldProps*)           116      4  Code  Gb  elrsV2.o
  0x0000AAF5  insertMix(unsigned char, unsigned char)
                                                112      4  Code  Lc  menus.o
  0x0000AB65  getValue(unsigned char)           112      4  Code  Gb  er9x.o
  0x0000ABD5  alertx(char const*, bool)         112      4  Code  Gb  er9x.o
  0x0000AC45  modelDefaultWrite(unsigned char)
                                                112      4  Code  Gb  pers.o
  0x0000ACB5  menuDeleteMix(unsigned char)
                                                112      4  Code  Gb  menus.o
  0x0000AD25  UART2_IRQHandler                  112      4  Code  Gb  BoardI6.o
  0x0000AD95  processCrossfireTelemetryData(unsigned char)
                                                108      4  Code  Gb  crossfire.o
  0x0000AE01  dispSignalQality(unsigned char)
                                                108      4  Code  Gb  menus.o
  0x0000AE6D  putsTelemValue(unsigned char, unsigned char, int, unsigned char, unsigned char)
                                                108      4  Code  Gb  er9x.o
  0x0000AED9  SPI0_IRQHandler                   108      4  Code  Gb  BoardI6.o
  0x0000AF45  eeDuplicateModel(unsigned char)
                                                104      4  Code  Gb  pers.o
  0x0000AFAD  crossfireTelemetryPush(unsigned char, unsigned char*, unsigned char)
                                                100      4  Code  Gb  crossfire.o
  0x0000B011  A7105_AdjustLOBaseFreq()          100      4  Code  Gb  A7105_SPI.o
  0x0000B075  lcd_hlineStip(unsigned char, unsigned char, signed char, unsigned char)
                                                100      4  Code  Gb  lcd.o
  0x0000B0D9  PIND                              100      4  Code  Gb  BoardI6.o
  0x0000B13D  eeLoadModelName(unsigned char, char*, unsigned char)
                                                 96      4  Code  Gb  pers.o
  0x0000B19D  setTrimValue(unsigned char, unsigned char, short)
                                                 96      4  Code  Gb  er9x.o
  0x0000B1FD  PINB                               96      4  Code  Gb  BoardI6.o
  0x0000B25D  crsf_send_data                     92      4  Code  Gb  BoardI6.o
  0x0000B2B9  almess(char const*, unsigned char)
                                                 92      4  Code  Gb  er9x.o
  0x0000B315  doBackLightVoice(unsigned char)
                                                 92      4  Code  Gb  er9x.o
  0x0000B371  calcStickScroll(unsigned char)
                                                 92      4  Code  Gb  er9x.o
  0x0000B3CD  allocateFields()                   92      4  Code  Gb  elrsV2.o
  0x0000B429  applyTemplate()                    92      4  Code  Gb  templates.o
  0x0000B485  getADC_osmp                        88      4  Code  Gb  BoardI6.o
  0x0000B4DD  EFile::closeTrunc()                88      4  Code  Gb  file.o
  0x0000B535  lcd_init()                         88      4  Code  Gb  lcd.o
  0x0000B58D  setMix(unsigned char, unsigned char)
                                                 88      4  Code  Gb  templates.o
  0x0000B5E5  serialVoiceInit(void (*)(unsigned char*, unsigned char))
                                                 88      4  Code  Gb  BoardI6.o
  0x0000B63D  eeWriteGeneral()                   84      4  Code  Gb  pers.o
  0x0000B691  putsChnOpRaw(unsigned char, unsigned char, t_MixData*, unsigned char)
                                                 84      4  Code  Gb  menus.o
  0x0000B6E5  TPM0_IRQHandler                    84      4  Code  Gb  BoardI6.o
  0x0000B739  PINE                               84      4  Code  Gb  BoardI6.o
  0x0000B78D  fieldUnifiedDisplay(FieldProps*, unsigned char, unsigned char)
                                                 80      4  Code  Gb  elrsV2.o
  0x0000B7DD  A7105_WriteData(unsigned char, unsigned char)
                                                 80      4  Code  Gb  A7105_SPI.o
  0x0000B82D  putsTrimMode(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
                                                 80      4  Code  Gb  menus.o
  0x0000B87D  ISR_TIMER0_COMP_vect               80      4  Code  Gb  er9x.o
  0x0000B8CD  incrField(signed char)             76      4  Code  Lc  elrsV2.o
  0x0000B919  checkTHR()                         76      4  Code  Gb  er9x.o
  0x0000B965  lcd_img(unsigned char, unsigned char, unsigned char const*, unsigned char)
                                                 76      4  Code  Gb  lcd.o
  0x0000B9B1  check_backlight_voice()            76      4  Code  Gb  er9x.o
  0x0000B9FD  checkThrottlePosition()            76      4  Code  Gb  er9x.o
  0x0000BA49  setupPulsesCrossfire()             76      4  Code  Gb  crossfire.o
  0x0000BA95  uart_clear_error()                 76      4  Code  Gb  BoardI6.o
  0x0000BAE1  SPI_RADIO_ReceiveBlock             76      4  Code  Gb  BoardI6.o
  0x0000BB2D  SetStartPulsePol()                 72      4  Code  Gb  pulses.o
  0x0000BB75  yesNoMenuExit(unsigned char, char const*)
                                                 72      4  Code  Gb  menus.o
  0x0000BBBD  _GLOBAL__sub_I_ELRS.cpp            72      4  Code  Lc  ELRS.o
  0x0000BC05  PIT_IRQHandler                     72      4  Code  Gb  BoardI6.o
  0x0000BC95  shutdown_crsf_serial_port          68      4  Code  Gb  BoardI6.o
  0x0000BCD9  eeprom_read_block(void*, void const*, unsigned int)
                                                 68      4  Code  Gb  drivers.o
  0x0000BD1D  eeWriteBlockCmp(void const*, unsigned short, unsigned int)
                                                 68      4  Code  Gb  drivers.o
  0x0000BD61  ISR_TIMER1_COMPA_vect              68      4  Code  Gb  pulses.o
  0x0000BDA5  NMI_Handler                                4  Code  Wk  MKL16Z4_Vectors.o
  0x0000BDA7  HardFault_Handler                          4  Code  Wk  MKL16Z4_Vectors.o
  0x0000BDA9  SVC_Handler                                4  Code  Wk  MKL16Z4_Vectors.o
  0x0000BDAB  PendSV_Handler                             4  Code  Wk  MKL16Z4_Vectors.o
  0x0000BDAD  SysTick_Handler                            4  Code  Wk  MKL16Z4_Vectors.o
  0x0000BDAF  Dummy_Handler                              4  Code  Lc  MKL16Z4_Vectors.o
  0x0000BDB1  DMA0_IRQHandler                            4  Code  Wk  MKL16Z4_Vectors.o
  0x0000BDB3  DMA1_IRQHandler                            4  Code  Wk  MKL16Z4_Vectors.o
  0x0000BDB5  DMA2_IRQHandler                            4  Code  Wk  MKL16Z4_Vectors.o
  0x0000BDB7  DMA3_IRQHandler                            4  Code  Wk  MKL16Z4_Vectors.o
  0x0000BDB9  FTFA_IRQHandler                            4  Code  Wk  MKL16Z4_Vectors.o
  0x0000BDBB  LVD_LVW_IRQHandler                         4  Code  Wk  MKL16Z4_Vectors.o
  0x0000BDBD  LLW_IRQHandler                             4  Code  Wk  MKL16Z4_Vectors.o
  0x0000BDBF  I2C0_IRQHandler                            4  Code  Wk  MKL16Z4_Vectors.o
  0x0000BDC1  I2C1_IRQHandler                            4  Code  Wk  MKL16Z4_Vectors.o
  0x0000BDC3  SPI0_IRQHandler                            4  Code  Wk  MKL16Z4_Vectors.o
  0x0000BDC5  SPI1_IRQHandler                            4  Code  Wk  MKL16Z4_Vectors.o
  0x0000BDC7  UART0_IRQHandler                           4  Code  Wk  MKL16Z4_Vectors.o
  0x0000BDC9  UART1_IRQHandler                           4  Code  Wk  MKL16Z4_Vectors.o
  0x0000BDCB  UART2_IRQHandler                           4  Code  Wk  MKL16Z4_Vectors.o
  0x0000BDCD  ADC0_IRQHandler                            4  Code  Wk  MKL16Z4_Vectors.o
  0x0000BDCF  CMP0_IRQHandler                            4  Code  Wk  MKL16Z4_Vectors.o
  0x0000BDD1  TPM0_IRQHandler                            4  Code  Wk  MKL16Z4_Vectors.o
  0x0000BDD3  TPM1_IRQHandler                            4  Code  Wk  MKL16Z4_Vectors.o
  0x0000BDD5  TPM2_IRQHandler                            4  Code  Wk  MKL16Z4_Vectors.o
  0x0000BDD7  RTC_IRQHandler                             4  Code  Wk  MKL16Z4_Vectors.o
  0x0000BDD9  RTC_Seconds_IRQHandler                     4  Code  Wk  MKL16Z4_Vectors.o
  0x0000BDDB  PIT_IRQHandler                             4  Code  Wk  MKL16Z4_Vectors.o
  0x0000BDDD  I2S0_IRQHandler                            4  Code  Wk  MKL16Z4_Vectors.o
  0x0000BDDF  DAC0_IRQHandler                            4  Code  Wk  MKL16Z4_Vectors.o
  0x0000BDE1  TSI0_IRQHandler                            4  Code  Wk  MKL16Z4_Vectors.o
  0x0000BDE3  LPTimer_IRQHandler                         4  Code  Wk  MKL16Z4_Vectors.o
  0x0000BDE5  PORTA_IRQHandler                           4  Code  Wk  MKL16Z4_Vectors.o
  0x0000BDE7  PORTC_PORTD_IRQHandler                     4  Code  Wk  MKL16Z4_Vectors.o
  0x0000BDE9  EFile::swap(unsigned char, unsigned char)
                                                 64      4  Code  Gb  file.o
  0x0000BE29  audioQueue::getToneLength(unsigned char)
                                                 64      4  Code  Wk  audio.o
  0x0000BE69  processCrossfireTelemetryValue(unsigned char, int)
                                                 64      4  Code  Gb  crossfire.o
  0x0000BEA9  crossfileMenu(MState2&, unsigned char, unsigned char, unsigned char, unsigned char)
                                                 64      4  Code  Gb  elrsV2.o
  0x0000BEE9  ELRSV2_run(unsigned char)          64      4  Code  Gb  elrsV2.o
  0x0000BF29  getField(unsigned char)            60      4  Code  Lc  elrsV2.o
  0x0000BF65  editSlowDelay(unsigned char, unsigned char, unsigned char)
                                                 60      4  Code  Lc  menus.o
  0x0000BFA1  anaIn(unsigned char)               60      4  Code  Gb  er9x.o
  0x0000BFDD  displayOneSwitch(unsigned char, unsigned char, unsigned char)
                                                 60      4  Code  Gb  menus.o
  0x0000C019  rangeBindAction(unsigned char, unsigned char)
                                                 60      4  Code  Gb  menus.o
  0x0000C055  getRawTrimValue(unsigned char, unsigned char)
                                                 60      4  Code  Gb  er9x.o
  0x0000C091  ELRSV2_stop()                      60      4  Code  Gb  elrsV2.o
  0x0000C0CD  EeFsFormat()                       60      4  Code  Gb  file.o
  0x0000C109  audioQueue::driver()               56      4  Code  Wk  er9x.o
  0x0000C141  REG(signed char, signed char, signed char)
                                                 56      4  Code  Gb  er9x.o
  0x0000C179  getCrossfireTelemetryValue(unsigned char, int&, int)
                                                 56      4  Code  Gb  crossfire.o
  0x0000C1B1  convert_failsafe_ppm(unsigned char)
                                                 56      4  Code  Gb  A7105_SPI.o
  0x0000C1E9  lcd_char_inverse(unsigned char, unsigned char, unsigned char, unsigned char)
                                                 56      4  Code  Gb  lcd.o
  0x0000C221  get_dr_state(unsigned char)
                                                 56      4  Code  Gb  menus.o
  0x0000C259  resetTimern(unsigned char)
                                                 56      4  Code  Gb  menus.o
  0x0000C291  PORTC_PORTD_IRQHandler             56      4  Code  Gb  BoardI6.o
  0x0000C339  put_curve(unsigned char, unsigned char, signed char, unsigned char)
                                                 52      4  Code  Gb  menus.o
  0x0000C36D  pushMenu(void (*)(unsigned char))
                                                 52      4  Code  Gb  er9x.o
  0x0000C3A1  eeLoadModelForBackup(unsigned char)
                                                 52      4  Code  Gb  pers.o
  0x0000C3D5  fieldCommandSave(FieldProps*)
                                                 52      4  Code  Gb  elrsV2.o
  0x0000C409  lcd_write_bits(unsigned char*, unsigned char)
                                                 52      4  Code  Gb  lcd.o
  0x0000C43D  getFlightPhase()                   52      4  Code  Gb  er9x.o
  0x0000C471  A7105_SetPower()                   52      4  Code  Gb  A7105_SPI.o
  0x0000C4A5  SPI_RADIO_SendBlock                52      4  Code  Gb  BoardI6.o
  0x0000C4D9  EFile::create(unsigned char, unsigned char, unsigned short)
                                                 48      4  Code  Gb  file.o
  0x0000C509  EeFsFree(unsigned char)            48      4  Code  Lc  file.o
  0x0000C539  modelSave(unsigned char)           48      4  Code  Gb  pers.o
  0x0000C569  char2idx(char)                     48      4  Code  Gb  menus.o
  0x0000C599  EeFsOpen()                         48      4  Code  Gb  file.o
  0x0000C5C9  eeDirty(unsigned char)             48      4  Code  Gb  pers.o
  0x0000C5F9  displayVoiceRate(unsigned char, unsigned char, unsigned char, unsigned char)
                                                 48      4  Code  Gb  menus.o
  0x0000C629  A7105_ReadData(unsigned char)
                                                 48      4  Code  Gb  A7105_SPI.o
  0x0000C659  UART0_IRQHandler                   48      4  Code  Gb  BoardI6.o
  0x0000C689  SX127xDriver::SX127xDriver()
                                                 44      4  Code  Gb  SX127x.o
  0x0000C689  SX127xDriver::SX127xDriver()
                                                 44      4  Code  Gb  SX127x.o
  0x0000C6B5  dispGvar(unsigned char, unsigned char, unsigned char, unsigned char)
                                                 44      4  Code  Gb  menus.o
  0x0000C6E1  popMenu(bool)                      44      4  Code  Gb  er9x.o
  0x0000C70D  crossfireTelemetryPush4(unsigned char, unsigned char, unsigned char)
                                                 44      4  Code  Gb  elrsV2.o
  0x0000C739  sendSerialVoiceData(unsigned char*, unsigned int)
                                                 44      4  Code  Gb  BoardI6.o
  0x0000C765  putVoiceQueueLong(unsigned short)
                                                 44      4  Code  Gb  audio.o
  0x0000C791  fieldCommandLoad(FieldProps*, unsigned char*, unsigned char)
                                                 44      4  Code  Gb  elrsV2.o
  0x0000C7BD  menuMixersLimit(unsigned char)
                                                 44      4  Code  Gb  menus.o
  0x0000C7E9  PING                               44      4  Code  Gb  BoardI6.o
  0x0000C841  mDelay                             40      4  Code  Gb  BoardI6.o
  0x0000C869  EFile::rm(unsigned char)           40      4  Code  Gb  file.o
  0x0000C891  EeFsAlloc()                        40      4  Code  Lc  file.o
  0x0000C8B9  popupCompat(unsigned char)
                                                 40      4  Code  Lc  elrsV2.o
  0x0000C8E1  putsVolts(unsigned char, unsigned char, short, unsigned char)
                                                 40      4  Code  Gb  lcd.o
  0x0000C909  putsVBat(unsigned char, unsigned char, unsigned char)
                                                 40      4  Code  Gb  lcd.o
  0x0000C931  lcd_plot(unsigned char, unsigned char)
                                                 40      4  Code  Gb  lcd.o
  0x0000C959  A7105_AntSwitch()                  40      4  Code  Gb  A7105_SPI.o
  0x0000C981  eeWaitComplete()                   40      4  Code  Gb  pers.o
  0x0000C9A9  switchDisplay(unsigned char, unsigned char)
                                                 40      4  Code  Gb  menus.o
  0x0000C9D1  Uart_SendCMD(unsigned char, unsigned char, unsigned short)
                                                 40      4  Code  Gb  audio.o
  0x0000C9F9  startPulses()                      40      4  Code  Gb  pulses.o
  0x0000CA21  evalOffset(signed char)            40      4  Code  Gb  menus.o
  0x0000CA49  Reset_Handler                              4  Code  Gb  Kinetis_KL_Startup.o
  0x0000CA71  EFile::openRd(unsigned char)
                                                 36      4  Code  Gb  file.o
  0x0000CA95  curveAddress(unsigned char)
                                                 36      4  Code  Lc  menus.o
  0x0000CAB9  crsf_init()                        36      4  Code  Gb  crossfire.o
  0x0000CADD  ee_waite()                         36      4  Code  Gb  drivers.o
  0x0000CB01  reachMixerCountLimit()             36      4  Code  Gb  menus.o
  0x0000CB25  dispFlightModename(unsigned char, unsigned char, unsigned char)
                                                 36      4  Code  Gb  menus.o
  0x0000CB49  evalChkSum()                       36      4  Code  Gb  pers.o
  0x0000CB6D  LCD_DATA                           36      4  Code  Gb  BoardI6.o
  0x0000CBB5  EFile::size()                      32      4  Code  Gb  file.o
  0x0000CBD5  setVolume(unsigned char)           32      4  Code  Gb  audio.o
  0x0000CBF5  chainMenu(void (*)(unsigned char))
                                                 32      4  Code  Gb  er9x.o
  0x0000CC15  trace()                            32      4  Code  Gb  menus.o
  0x0000CC35  crc8(unsigned char const*, unsigned int)
                                                 32      4  Code  Gb  crc_crsf.o
  0x0000CC55  checkCrossfireTelemetryFrameCRC()
                                                 32      4  Code  Gb  crossfire.o
  0x0000CC75  processVoiceAlarms()               32      4  Code  Gb  er9x.o
  0x0000CC95  fieldStringDisplay(FieldProps*, unsigned char, unsigned char)
                                                 32      4  Code  Gb  elrsV2.o
  0x0000CCB5  putsOffDecimal(unsigned char, unsigned char, unsigned short, unsigned char)
                                                 32      4  Code  Gb  menus.o
  0x0000CCD5  lcdSetRefVolt(unsigned char)
                                                 32      4  Code  Gb  lcd.o
  0x0000CCF5  backlightKey()                     32      4  Code  Gb  er9x.o
  0x0000CD15  pauseEvents(unsigned char)
                                                 32      4  Code  Gb  drivers.o
  0x0000CD35  menuPressed()                      32      4  Code  Gb  drivers.o
  0x0000CD55  EeFsGetFree()                      32      4  Code  Gb  file.o
  0x0000CD75  SetPRTTimPeriod                    32      4  Code  Gb  BoardI6.o
  0x0000CD95  audioVoiceDefevent(unsigned char, unsigned char)
                                                 28      4  Code  Gb  audio.o
  0x0000CDB1  throttleReversed()                 28      4  Code  Gb  er9x.o
  0x0000CDCD  putWarnSwitch(unsigned char, unsigned char)
                                                 28      4  Code  Gb  er9x.o
  0x0000CDE9  modeFixValue(unsigned char)
                                                 28      4  Code  Gb  er9x.o
  0x0000CE05  displayTimer(unsigned char, unsigned char, unsigned char, unsigned char)
                                                 28      4  Code  Gb  menus.o
  0x0000CE21  on_voice_cb(unsigned char*, unsigned char)
                                                 28      4  Code  Gb  audio.o
  0x0000CE3D  crsf_action()                      28      4  Code  Gb  crossfire.o
  0x0000CE59  killEvents(unsigned char)          28      4  Code  Gb  drivers.o
  0x0000CE75  TPM2_IRQHandler                    28      4  Code  Gb  BoardI6.o
  0x0000CE91  TPM1_IRQHandler                    28      4  Code  Gb  BoardI6.o
  0x0000CEAD  EnableGIO                          28      4  Code  Gb  BoardI6.o
  0x0000CEC9  clearKeyEvents()                   24      4  Code  Lc  er9x.o
  0x0000CEE1  lcd_rect(unsigned char, unsigned char, unsigned char, unsigned char)
                                                 24      4  Code  Gb  lcd.o
  0x0000CEF9  putsAttIdxTelemItems(unsigned char, unsigned char, unsigned char, unsigned char)
                                                 24      4  Code  Gb  menus.o
  0x0000CF11  IS_EXPO_THROTTLE(unsigned char)
                                                 24      4  Code  Gb  er9x.o
  0x0000CF29  hyphinvMenuItem(unsigned char, unsigned char, unsigned char)
                                                 24      4  Code  Gb  menus.o
  0x0000CF41  ISR_TIMER2_OVF_vect                24      4  Code  Gb  er9x.o
  0x0000CF59  GetChipID                          24      4  Code  Gb  BoardI6.o
  0x0000CF71  __SEGGER_init_heap                 16      4  Code  Wk  SEGGER_crtinit_v6m_little.o
  0x0000CFA1  __SEGGER_RTL_init_heap             20      4  Code  Wk  heapops_basic.o (heapops_basic_v6m_little.a)
  0x0000CFB5  EFile::exists(unsigned char)
                                                 20      4  Code  Gb  file.o
  0x0000CFC9  EeFsFlush()                        20      4  Code  Lc  file.o
  0x0000CFDD  EeFsFlushFreelist()                20      4  Code  Lc  file.o
  0x0000CFF1  lcd_clear()                        20      4  Code  Gb  lcd.o
  0x0000D005  idx2char(unsigned char)            20      4  Code  Gb  menus.o
  0x0000D019  checkIncDec_u0(short, unsigned char)
                                                 20      4  Code  Gb  er9x.o
  0x0000D02D  checkIncDec_0(signed char, signed char)
                                                 20      4  Code  Gb  er9x.o
  0x0000D041  audioDefevent(unsigned char)
                                                 20      4  Code  Gb  audio.o
  0x0000D055  resetTimer1()                      20      4  Code  Gb  menus.o
  0x0000D069  displayNext()                      20      4  Code  Gb  menus.o
  0x0000D07D  clearMixes()                       20      4  Code  Gb  templates.o
  0x0000D091  audioEvent(unsigned char, unsigned short)
                                                 20      4  Code  Gb  audio.o
  0x0000D0A5  DisableGIO                         20      4  Code  Gb  BoardI6.o
  0x0000D0B9  _start                             14      4  Code  Gb  SEGGER_THUMB_Startup.o
  0x0000D0C3  __SEGGER_init_done                         4  Code  Gb  SEGGER_THUMB_Startup.o
  0x0000D0C7  exit                                2      4  Code  Gb  SEGGER_THUMB_Startup.o
  0x0000D0CD  rw_0                               16      4  Code  Gb  BoardI6.o
  0x0000D0DD  rs_1                               16      4  Code  Gb  BoardI6.o
  0x0000D0ED  rs_0                               16      4  Code  Gb  BoardI6.o
  0x0000D0FD  rd_1                               16      4  Code  Gb  BoardI6.o
  0x0000D10D  rd_0                               16      4  Code  Gb  BoardI6.o
  0x0000D11D  CS_STATE(unsigned char)            16      4  Code  Gb  er9x.o
  0x0000D12D  lcdSetContrast()                   16      4  Code  Gb  lcd.o
  0x0000D13D  checkIncDec_i8(signed char, signed char, signed char)
                                                 16      4  Code  Gb  er9x.o
  0x0000D14D  mixaddress(unsigned char)          16      4  Code  Gb  er9x.o
  0x0000D15D  _GLOBAL__sub_I_er9x.cpp            16      4  Code  Lc  er9x.o
  0x0000D16D  _GLOBAL__sub_I_SX127x.cpp          16      4  Code  Lc  SX127x.o
  0x0000D17D  TX_RX_PutVal                       16      4  Code  Gb  BoardI6.o
  0x0000D18D  GetPPMTimCompareInterruptFlag
                                                 16      4  Code  Gb  BoardI6.o
  0x0000D19D  GetPPMOutState                     16      4  Code  Gb  BoardI6.o
  0x0000D1AD  ClearPPMTimCompareInterruptFlag
                                                 16      4  Code  Gb  BoardI6.o
  0x0000D1BD  Buzzer_SetVal                      16      4  Code  Gb  BoardI6.o
  0x0000D1CD  Buzzer_ClrVal                      16      4  Code  Gb  BoardI6.o
  0x0000D1DD  rst_1                              12      4  Code  Gb  BoardI6.o
  0x0000D1E9  rst_0                              12      4  Code  Gb  BoardI6.o
  0x0000D1F5  cs_0                               12      4  Code  Gb  BoardI6.o
  0x0000D201  backlight_on                       12      4  Code  Gb  BoardI6.o
  0x0000D20D  backlight_off                      12      4  Code  Gb  BoardI6.o
  0x0000D219  a7105_csn_on                       12      4  Code  Gb  BoardI6.o
  0x0000D225  a7105_csn_off                      12      4  Code  Gb  BoardI6.o
  0x0000D231  SX127xHal::SX127xHal()             12      4  Code  Gb  SX127xHal.o
  0x0000D231  SX127xHal::SX127xHal()             12      4  Code  Gb  SX127xHal.o
  0x0000D23D  get_tmr10ms()                      12      4  Code  Gb  er9x.o
  0x0000D249  SetPPMTimCompare                   12      4  Code  Gb  BoardI6.o
  0x0000D255  RF1_SetVal                         12      4  Code  Gb  BoardI6.o
  0x0000D261  RF1_ClrVal                         12      4  Code  Gb  BoardI6.o
  0x0000D26D  RF0_SetVal                         12      4  Code  Gb  BoardI6.o
  0x0000D279  RF0_ClrVal                         12      4  Code  Gb  BoardI6.o
  0x0000D285  GetPPMTimCompare                   12      4  Code  Gb  BoardI6.o
  0x0000D291  EnablePRTTim                       12      4  Code  Gb  BoardI6.o
  0x0000D29D  EnablePPMTim                       12      4  Code  Gb  BoardI6.o
  0x0000D2A9  EnablePPMOut                       12      4  Code  Gb  BoardI6.o
  0x0000D2B5  DisablePRTTim                      12      4  Code  Gb  BoardI6.o
  0x0000D2C1  DisablePPMOut                      12      4  Code  Gb  BoardI6.o
  0x0000D2CD  voice_numeric(short, unsigned char, unsigned char)
                                                246      2  Code  Gb  audio.o
  0x0000D3C3  EFile::writeRlc(unsigned char, unsigned char, unsigned char*, unsigned short, unsigned char)
                                                224      2  Code  Gb  file.o
  0x0000D4A3  putsTime(unsigned char, unsigned char, short, unsigned char, unsigned char)
                                                132      2  Code  Gb  lcd.o
  0x0000D527  intpol(short, unsigned char)
                                                116      2  Code  Gb  menus.o
  0x0000D59B  EFile::readRlc(unsigned char*, unsigned short)
                                                114      2  Code  Gb  file.o
  0x0000D60D  displayIndex(char const* const*, unsigned char, unsigned char, unsigned char)
                                                108      2  Code  Lc  menus.o
  0x0000D679  telltale(unsigned char, signed char, signed char)
                                                 90      2  Code  Gb  menus.o
  0x0000D6D3  tiny_sprintf(char*, char const*, char, char, ...)
                                                 88      2  Code  Gb  elrsV2.o
  0x0000D72B  lcd_hbar(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
                                                 74      2  Code  Gb  lcd.o
  0x0000D775  lcd_rect_xor(unsigned char, unsigned char, unsigned char, unsigned char)
                                                 70      2  Code  Gb  lcd.o
  0x0000D7BB  getTrimFlightPhase(unsigned char, unsigned char)
                                                 66      2  Code  Gb  er9x.o
  0x0000D7FD  lcd_outhex4(unsigned char, unsigned char, unsigned short)
                                                 66      2  Code  Gb  lcd.o
  0x0000D83F  __aeabi_idiv                       64      2  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  0x0000D87F  displayOneSwitch3Pos(unsigned char, unsigned char, unsigned char)
                                                 62      2  Code  Gb  menus.o
  0x0000D8BD  expo(short, short)                 60      2  Code  Gb  menus.o
  0x0000D8F9  __aeabi_uidiv                      56      2  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  0x0000D931  edit_dr_switch(unsigned char, unsigned char, signed char, unsigned char, unsigned char)
                                                 56      2  Code  Gb  menus.o
  0x0000D969  strstr                             52      2  Code  Wk  strops.o (libc_v6m_t_le_eabi_small.a)
  0x0000D99D  lcd_putsAtt(unsigned char, unsigned char, char const*, unsigned char)
                                                 50      2  Code  Gb  lcd.o
  0x0000D9CF  memcmp                             46      2  Code  Wk  strops.o (libc_v6m_t_le_eabi_small.a)
  0x0000D9FD  GENERIC_CRC14::GENERIC_CRC14(unsigned short)
                                                 46      2  Code  Gb  crc.o
  0x0000D9FD  GENERIC_CRC14::GENERIC_CRC14(unsigned short)
                                                 46      2  Code  Gb  crc.o
  0x0000DA2B  putsMomentDrSwitches(unsigned char, unsigned char, signed char, unsigned char)
                                                 46      2  Code  Gb  er9x.o
  0x0000DA59  A7105_WriteID(unsigned int)
                                                 44      2  Code  Gb  A7105_SPI.o
  0x0000DA85  A7105_ReadReg(unsigned char)
                                                 44      2  Code  Gb  A7105_SPI.o
  0x0000DAB1  div                                42      2  Code  Wk  intops.o (libc_v6m_t_le_eabi_small.a)
  0x0000DADB  lcd_putsnAtt(unsigned char, unsigned char, char const*, unsigned char, unsigned char)
                                                 42      2  Code  Gb  lcd.o
  0x0000DB05  doVoiceAlarmSource(t_voiceAlarm*)
                                                 40      2  Code  Gb  er9x.o
  0x0000DB2D  lcd_puts_Pskip(unsigned char, char const*, unsigned char)
                                                 38      2  Code  Gb  lcd.o
  0x0000DB53  A7105_Reset()                      38      2  Code  Gb  A7105_SPI.o
  0x0000DB79  DoSum(unsigned char*, unsigned char)
                                                 36      2  Code  Gb  audio.o
  0x0000DB9D  scalerDecimal(unsigned char, unsigned char, unsigned char)
                                                 36      2  Code  Gb  menus.o
  0x0000DBC1  __aeabi_memmove8                           2  Code  Wk  strasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  0x0000DBC1  __aeabi_memmove4                           2  Code  Wk  strasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  0x0000DBC1  __aeabi_memmove                            2  Code  Wk  strasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  0x0000DBE3  expou(unsigned short, unsigned short)
                                                 34      2  Code  Gb  menus.o
  0x0000DC05  getCurrentSwitchStates()           34      2  Code  Gb  er9x.o
  0x0000DC27  lcd_outdezAtt(unsigned char, unsigned char, short, unsigned char)
                                                 34      2  Code  Gb  lcd.o
  0x0000DC49  lcd_2_digits(unsigned char, unsigned char, unsigned char, unsigned char)
                                                 34      2  Code  Gb  lcd.o
  0x0000DC6B  lcdSendCtl(unsigned char)          32      2  Code  Lc  lcd.o
  0x0000DC8B  stickMoveValue()                   32      2  Code  Gb  er9x.o
  0x0000DCAB  __aeabi_llsr                       30      2  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  0x0000DCC9  __aeabi_llsl                       30      2  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  0x0000DCE7  A7105_WriteReg(unsigned char, unsigned char)
                                                 30      2  Code  Gb  A7105_SPI.o
  0x0000DD05  onoffMenuItem(unsigned char, unsigned char, char const*, unsigned char)
                                                 28      2  Code  Lc  menus.o
  0x0000DD21  validateName(char*, unsigned char)
                                                 28      2  Code  Lc  pers.o
  0x0000DD3D  voiceMinutes(short)                28      2  Code  Gb  menus.o
  0x0000DD59  A7105_Strobe(unsigned char)
                                                 28      2  Code  Gb  A7105_SPI.o
  0x0000DD75  lcd_putsAttIdx(unsigned char, unsigned char, char const*, unsigned char, unsigned char)
                                                 26      2  Code  Gb  lcd.o
  0x0000DD8F  StubbornSender::ResetState()
                                                 24      2  Code  Gb  stubborn_sender.o
  0x0000DDA7  EeFsRead(unsigned char, unsigned char)
                                                 24      2  Code  Lc  file.o
  0x0000DDBF  crossfireTelemetryPing()           24      2  Code  Gb  elrsV2.o
  0x0000DDD7  semicolonPos(char const*, unsigned char)
                                                 22      2  Code  Lc  elrsV2.o
  0x0000DDED  EeFsSetLink(unsigned char, unsigned char)
                                                 22      2  Code  Lc  file.o
  0x0000DE03  gvarMenuItem125(unsigned char, unsigned char, signed char, unsigned char)
                                                 22      2  Code  Gb  menus.o
  0x0000DE19  calc100toRESX(signed char)
                                                 22      2  Code  Gb  er9x.o
  0x0000DE2F  __aeabi_memclr8                            2  Code  Wk  strasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  0x0000DE2F  __aeabi_memclr4                            2  Code  Wk  strasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  0x0000DE2F  __aeabi_memclr                     20      2  Code  Wk  strasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  0x0000DE31  __aeabi_memset8                            2  Code  Wk  strasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  0x0000DE31  __aeabi_memset4                            2  Code  Wk  strasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  0x0000DE31  __aeabi_memset                             2  Code  Wk  strasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  0x0000DE37  memset                                     2  Code  Wk  strasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  0x0000DE43  StubbornReceiver::StubbornReceiver(unsigned char)
                                                 20      2  Code  Gb  stubborn_receiver.o
  0x0000DE43  StubbornReceiver::StubbornReceiver(unsigned char)
                                                 20      2  Code  Gb  stubborn_receiver.o
  0x0000DE57  setNameP(char*, char const*)
                                                 20      2  Code  Gb  pers.o
  0x0000DE6B  lcd_xlabel_decimal(unsigned char, unsigned char, unsigned short, unsigned char, char const*)
                                                 20      2  Code  Gb  menus.o
  0x0000DE7F  onoffItem(unsigned char, unsigned char, unsigned char)
                                                 18      2  Code  Lc  menus.o
  0x0000DE91  offonItem(unsigned char, unsigned char, unsigned char)
                                                 18      2  Code  Lc  menus.o
  0x0000DEA3  offonMenuItem(unsigned char, unsigned char, char const*, unsigned char)
                                                 18      2  Code  Lc  menus.o
  0x0000DEB5  putc_0_1(unsigned char, unsigned char, unsigned char)
                                                 18      2  Code  Gb  menus.o
  0x0000DEC7  __aeabi_uidivmod                   16      2  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  0x0000DED7  putsChn(unsigned char, unsigned char, unsigned char, unsigned char)
                                                 16      2  Code  Gb  er9x.o
  0x0000DEE7  TITLEP(char const*)                16      2  Code  Gb  menus.o
  0x0000DEF7  lcd_puts_Pleft(unsigned char, char const*)
                                                 16      2  Code  Gb  lcd.o
  0x0000DF07  calc1000toRESX(short)              16      2  Code  Gb  er9x.o
  0x0000DF17  putsTimeNoAtt(unsigned char, unsigned char, short)
                                                 16      2  Code  Gb  menus.o
  0x0000DF27  getTrimValue(unsigned char, unsigned char)
                                                 16      2  Code  Gb  er9x.o
  0x0000DF37  lcd_putsn_P(unsigned char, unsigned char, char const*, unsigned char)
                                                 16      2  Code  Gb  lcd.o
  0x0000DF47  A7105_Sleep()                      16      2  Code  Gb  A7105_SPI.o
  0x0000DF57  main                               14      2  Code  Gb  main.o
  0x0000DF65  strlen                             14      2  Code  Wk  strasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  0x0000DF73  strcpy                             14      2  Code  Wk  strasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  0x0000DF81  memcpy                             14      2  Code  Wk  strasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  0x0000DF81  __aeabi_memcpy8                            2  Code  Wk  strasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  0x0000DF81  __aeabi_memcpy4                            2  Code  Wk  strasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  0x0000DF81  __aeabi_memcpy                             2  Code  Wk  strasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  0x0000DF8F  __aeabi_idivmod                    14      2  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  0x0000DF9D  StubbornSender::StubbornSender(unsigned char)
                                                 14      2  Code  Gb  stubborn_sender.o
  0x0000DF9D  StubbornSender::StubbornSender(unsigned char)
                                                 14      2  Code  Gb  stubborn_sender.o
  0x0000DFAB  message(char const*)               14      2  Code  Gb  er9x.o
  0x0000DFB9  keyDown()                          14      2  Code  Wk  er9x.o
  0x0000DFC7  fieldTextSelectionSave(FieldProps*)
                                                 14      2  Code  Gb  elrsV2.o
  0x0000DFD5  putVoiceQueueUpper(unsigned char)
                                                 14      2  Code  Gb  audio.o
  0x0000DFE3  REG100_100(signed char)            14      2  Code  Gb  er9x.o
  0x0000DFF1  switchPosition(unsigned char)
                                                 12      2  Code  Gb  drivers.o
  0x0000DFFD  eeModelExists(unsigned char)
                                                 12      2  Code  Gb  pers.o
  0x0000E009  getSwitch00(signed char)           12      2  Code  Gb  er9x.o
  0x0000E015  EeFsGetLink(unsigned char)
                                                 10      2  Code  Lc  file.o
  0x0000E01F  lcd_hline(unsigned char, unsigned char, signed char)
                                                 10      2  Code  Gb  lcd.o
  0x0000E029  lcd_putc(unsigned char, unsigned char, char)
                                                 10      2  Code  Gb  lcd.o
  0x0000E033  alert(char const*)                 10      2  Code  Gb  er9x.o
  0x0000E03D  resetTimer2()                      10      2  Code  Gb  menus.o
  0x0000E047  checkIncDec(signed char, signed char, signed char, unsigned char)
                                                 10      2  Code  Gb  er9x.o
  0x0000E051  lcd_puts_P(unsigned char, unsigned char, char const*)
                                                 10      2  Code  Gb  lcd.o
  0x0000E05B  lcd_outdez(unsigned char, unsigned char, short)
                                                 10      2  Code  Gb  lcd.o
  0x0000E065  audioQueue::busy()                  8      2  Code  Gb  audio.o
  0x0000E06D  A7105_SetTxRxMode(unsigned char)
                                                  8      2  Code  Gb  A7105_SPI.o
  0x0000E075  putVoiceQueue(unsigned char)
                                                  8      2  Code  Gb  audio.o
  0x0000E07D  crsf_shutdown()                     8      2  Code  Gb  crossfire.o
  0x0000FBF9  __SEGGER_init_ctors                24      4  Code  Wk  SEGGER_crtinit_v6m_little.o
  0x0000FC19  __SEGGER_init_copy                 20      2  Code  Wk  SEGGER_crtinit_v6m_little.o
  0x0000FC2D  __SEGGER_init_zero                 18      2  Code  Wk  SEGGER_crtinit_v6m_little.o

Function symbols by descending size:

  Symbol name                      Size  Align  Type  Bd  Object File
  -------------------------  ----------  -----  ----  --  -----------
  menuProcModelIndex(unsigned char)
                                  4 324      4  Code  Gb  menus.o
  menuProcIndex(unsigned char)
                                  3 216      4  Code  Gb  menus.o
  perOut(short*, unsigned char)
                                  3 016      4  Code  Gb  menus.o
  mainSequence()                  1 940      4  Code  Gb  er9x.o
  menuProc0(unsigned char)        1 420      4  Code  Gb  menus.o
  menuProcMixOne(unsigned char)
                                  1 216      4  Code  Gb  menus.o
  menuProcMix(unsigned char)
                                  1 196      4  Code  Gb  menus.o
  menuProcVoiceOne(unsigned char)
                                  1 140      4  Code  Gb  menus.o
  ActionAFHDS2A                     976      4  Code  Gb  AFHDS2A_a7105.o
  HW_Init                           944      4  Code  Gb  BoardI6.o
  MState2::check_columns(unsigned char, unsigned char)
                                    828      4  Code  Gb  menus.o
  processCrossfireTelemetryFrame()
                                    824      4  Code  Gb  crossfire.o
  menuProcModelSelect(unsigned char)
                                    796      4  Code  Gb  menus.o
  timer()                           792      4  Code  Gb  menus.o
  audioQueue::event(unsigned char, unsigned char)
                                    760      4  Code  Gb  audio.o
  procOneVoiceAlarm(t_voiceAlarm*, unsigned char)
                                    736      4  Code  Gb  er9x.o
  menuProcProtocol(unsigned char)
                                    676      4  Code  Gb  menus.o
  menuScaleOne(unsigned char)
                                    660      4  Code  Gb  menus.o
  mainER()                          544      4  Code  Gb  er9x.o
  eeLoadModel(unsigned char)
                                    524      4  Code  Gb  pers.o
  parseParameterInfoMessage(unsigned char*, unsigned char)
                                    508      4  Code  Gb  elrsV2.o
  getSwitch(signed char, bool, unsigned char)
                                    488      4  Code  Gb  er9x.o
  lcd_outdezNAtt(unsigned char, unsigned char, int, unsigned char, signed char, unsigned char)
                                    488      4  Code  Gb  lcd.o
  menuProcGlobals(unsigned char)
                                    488      4  Code  Gb  menus.o
  menuProcTelemetry(unsigned char)
                                    488      4  Code  Gb  menus.o
  menuPhaseOne(unsigned char)
                                    476      4  Code  Gb  menus.o
  menuSetFailsafe(unsigned char)
                                    456      4  Code  Gb  menus.o
  putsTelemetryChannel(unsigned char, unsigned char, signed char, int, unsigned char, unsigned char)
                                    444      4  Code  Gb  menus.o
  checkIncDec16(short, short, short, unsigned char)
                                    392      4  Code  Gb  er9x.o
  perOutPhase(short*, unsigned char)
                                    388      4  Code  Gb  menus.o
  parseDeviceInfoMessage(unsigned char*)
                                    380      4  Code  Gb  elrsV2.o
  AFHDS2A_build_packet(unsigned char)
                                    356      4  Code  Gb  AFHDS2A_a7105.o
  handleDevicePageEvent(unsigned char)
                                    356      4  Code  Gb  elrsV2.o
  eeCheck(bool)                     352      4  Code  Gb  pers.o
  i2c_master                        352      4  Code  Gb  BoardI6.o
  menuProcCurveOne(unsigned char)
                                    352      4  Code  Gb  menus.o
  eeprom_write_page_cmp(char const*, unsigned short, unsigned int)
                                    348      4  Code  Gb  drivers.o
  processFlySkySensor(unsigned char const*, unsigned char)
                                    344      4  Code  Lc  AFHDS2A_a7105.o
  doPopup(char const*, unsigned char, unsigned char)
                                    324      4  Code  Gb  menus.o
  lcd_putcAtt(unsigned char, unsigned char, char, unsigned char)
                                    300      4  Code  Gb  lcd.o
  menuProcVoiceAlarm(unsigned char)
                                    280      4  Code  Gb  menus.o
  voice_numeric(short, unsigned char, unsigned char)
                                    246      2  Code  Gb  audio.o
  menuModelPhases(unsigned char)
                                    236      4  Code  Gb  menus.o
  runCrossfireTelemetryCallback(unsigned char, unsigned char*, unsigned char)
                                    236      4  Code  Gb  elrsV2.o
  setupPulsesPPM(unsigned char)
                                    236      4  Code  Gb  pulses.o
  checkSwitches()                   228      4  Code  Gb  er9x.o
  runPopupPage(unsigned char)
                                    228      4  Code  Gb  elrsV2.o
  EFile::writeRlc(unsigned char, unsigned char, unsigned char*, unsigned short, unsigned char)
                                    224      2  Code  Gb  file.o
  per10ms()                         216      4  Code  Gb  drivers.o
  setStickCenter()                  216      4  Code  Gb  menus.o
  calc_scaler(unsigned char, unsigned char*, unsigned char*)
                                    204      4  Code  Gb  menus.o
  voice_telem_item(unsigned char)
                                    204      4  Code  Gb  menus.o
  runDevicePage(unsigned char)
                                    200      4  Code  Gb  elrsV2.o
  EFile::write(unsigned char*, unsigned char)
                                    196      4  Code  Gb  file.o
  Key::input(bool, EnumKeys)
                                    196      4  Code  Gb  drivers.o
  A7105_Init()                      192      4  Code  Gb  A7105_SPI.o
  audioQueue::play(unsigned char, unsigned char, unsigned char, unsigned char)
                                    192      4  Code  Gb  audio.o
  menuProcStatistic(unsigned char)
                                    192      4  Code  Gb  menus.o
  menuRXSetup(unsigned char)
                                    192      4  Code  Gb  menus.o
  calcExpo(unsigned char, short)
                                    188      4  Code  Gb  menus.o
  initAFHDS2A                       184      4  Code  Gb  AFHDS2A_a7105.o
  menuProcCurve(unsigned char)
                                    184      4  Code  Gb  menus.o
  indexProcess(unsigned char, MState2*, unsigned char)
                                    180      4  Code  Lc  menus.o
  setupPulses()                     180      4  Code  Gb  pulses.o
  editExpoVals(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
                                    176      4  Code  Gb  menus.o
  editName(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char)
                                    176      4  Code  Gb  menus.o
  EeFsck()                          164      4  Code  Gb  file.o
  menuDeleteDupModel(unsigned char)
                                    164      4  Code  Gb  menus.o
  menuRangeBind(unsigned char)
                                    164      4  Code  Gb  menus.o
  putsTmrMode(unsigned char, unsigned char, unsigned char, unsigned char)
                                    164      4  Code  Gb  er9x.o
  drawFunction(unsigned char, unsigned char)
                                    160      4  Code  Gb  menus.o
  SystemInit                        148      4  Code  Gb  system_MKL16Z4.o
  checkIndexed(unsigned char, char const*, unsigned char, unsigned char)
                                    144      4  Code  Gb  menus.o
  doMainScreenGrphics()             140      4  Code  Gb  menus.o
  gvarMenuItem(unsigned char, unsigned char, signed char, signed char, signed char, unsigned char)
                                    140      4  Code  Gb  menus.o
  refreshDiplay()                   140      4  Code  Gb  lcd.o
  createCrossfireChannelsFrame(unsigned char*, short*)
                                    136      4  Code  Gb  crossfire.o
  drawCurve(unsigned char)          136      4  Code  Gb  menus.o
  eeGeneralDefault()                136      4  Code  Gb  pers.o
  keyState(EnumKeys)                136      4  Code  Gb  drivers.o
  putsChnRaw(unsigned char, unsigned char, unsigned char, unsigned char)
                                    136      4  Code  Gb  er9x.o
  putsTime(unsigned char, unsigned char, short, unsigned char, unsigned char)
                                    132      2  Code  Gb  lcd.o
  setup_crsf_serial_port            132      4  Code  Gb  BoardI6.o
  t_voice::voice_process()          132      4  Code  Gb  audio.o
  audioQueue::heartbeat()           128      4  Code  Gb  audio.o
  fieldTextSelectionLoad(FieldProps*, unsigned char*, unsigned char)
                                    124      4  Code  Gb  elrsV2.o
  scaleAnalog(short, unsigned char)
                                    124      4  Code  Gb  menus.o
  selectField(signed char)          124      4  Code  Gb  elrsV2.o
  EFile::read(unsigned char*, unsigned short)
                                    120      4  Code  Gb  file.o
  eeReadGeneral()                   120      4  Code  Gb  pers.o
  fieldTextSelectionDisplay(FieldProps*, unsigned char, unsigned char)
                                    120      4  Code  Gb  elrsV2.o
  lcd_vline(unsigned char, unsigned char, signed char)
                                    120      4  Code  Gb  lcd.o
  UIbackExec(FieldProps*)           116      4  Code  Gb  elrsV2.o
  fieldFolderOpen(FieldProps*)
                                    116      4  Code  Gb  elrsV2.o
  getGvarSourceValue(unsigned char)
                                    116      4  Code  Gb  er9x.o
  get_telemetry_value(unsigned char)
                                    116      4  Code  Gb  menus.o
  intpol(short, unsigned char)
                                    116      2  Code  Gb  menus.o
  putsDrSwitches(unsigned char, unsigned char, signed char, unsigned char)
                                    116      4  Code  Gb  er9x.o
  EFile::readRlc(unsigned char*, unsigned short)
                                    114      2  Code  Gb  file.o
  UART2_IRQHandler                  112      4  Code  Gb  BoardI6.o
  alertx(char const*, bool)         112      4  Code  Gb  er9x.o
  getValue(unsigned char)           112      4  Code  Gb  er9x.o
  insertMix(unsigned char, unsigned char)
                                    112      4  Code  Lc  menus.o
  menuDeleteMix(unsigned char)
                                    112      4  Code  Gb  menus.o
  modelDefaultWrite(unsigned char)
                                    112      4  Code  Gb  pers.o
  SPI0_IRQHandler                   108      4  Code  Gb  BoardI6.o
  dispSignalQality(unsigned char)
                                    108      4  Code  Gb  menus.o
  displayIndex(char const* const*, unsigned char, unsigned char, unsigned char)
                                    108      2  Code  Lc  menus.o
  processCrossfireTelemetryData(unsigned char)
                                    108      4  Code  Gb  crossfire.o
  putsTelemValue(unsigned char, unsigned char, int, unsigned char, unsigned char)
                                    108      4  Code  Gb  er9x.o
  eeDuplicateModel(unsigned char)
                                    104      4  Code  Gb  pers.o
  A7105_AdjustLOBaseFreq()          100      4  Code  Gb  A7105_SPI.o
  PIND                              100      4  Code  Gb  BoardI6.o
  crossfireTelemetryPush(unsigned char, unsigned char*, unsigned char)
                                    100      4  Code  Gb  crossfire.o
  lcd_hlineStip(unsigned char, unsigned char, signed char, unsigned char)
                                    100      4  Code  Gb  lcd.o
  PINB                               96      4  Code  Gb  BoardI6.o
  eeLoadModelName(unsigned char, char*, unsigned char)
                                     96      4  Code  Gb  pers.o
  setTrimValue(unsigned char, unsigned char, short)
                                     96      4  Code  Gb  er9x.o
  allocateFields()                   92      4  Code  Gb  elrsV2.o
  almess(char const*, unsigned char)
                                     92      4  Code  Gb  er9x.o
  applyTemplate()                    92      4  Code  Gb  templates.o
  calcStickScroll(unsigned char)
                                     92      4  Code  Gb  er9x.o
  crsf_send_data                     92      4  Code  Gb  BoardI6.o
  doBackLightVoice(unsigned char)
                                     92      4  Code  Gb  er9x.o
  telltale(unsigned char, signed char, signed char)
                                     90      2  Code  Gb  menus.o
  EFile::closeTrunc()                88      4  Code  Gb  file.o
  getADC_osmp                        88      4  Code  Gb  BoardI6.o
  lcd_init()                         88      4  Code  Gb  lcd.o
  serialVoiceInit(void (*)(unsigned char*, unsigned char))
                                     88      4  Code  Gb  BoardI6.o
  setMix(unsigned char, unsigned char)
                                     88      4  Code  Gb  templates.o
  tiny_sprintf(char*, char const*, char, char, ...)
                                     88      2  Code  Gb  elrsV2.o
  PINE                               84      4  Code  Gb  BoardI6.o
  TPM0_IRQHandler                    84      4  Code  Gb  BoardI6.o
  eeWriteGeneral()                   84      4  Code  Gb  pers.o
  putsChnOpRaw(unsigned char, unsigned char, t_MixData*, unsigned char)
                                     84      4  Code  Gb  menus.o
  A7105_WriteData(unsigned char, unsigned char)
                                     80      4  Code  Gb  A7105_SPI.o
  ISR_TIMER0_COMP_vect               80      4  Code  Gb  er9x.o
  fieldUnifiedDisplay(FieldProps*, unsigned char, unsigned char)
                                     80      4  Code  Gb  elrsV2.o
  putsTrimMode(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
                                     80      4  Code  Gb  menus.o
  SPI_RADIO_ReceiveBlock             76      4  Code  Gb  BoardI6.o
  checkTHR()                         76      4  Code  Gb  er9x.o
  checkThrottlePosition()            76      4  Code  Gb  er9x.o
  check_backlight_voice()            76      4  Code  Gb  er9x.o
  incrField(signed char)             76      4  Code  Lc  elrsV2.o
  lcd_img(unsigned char, unsigned char, unsigned char const*, unsigned char)
                                     76      4  Code  Gb  lcd.o
  setupPulsesCrossfire()             76      4  Code  Gb  crossfire.o
  uart_clear_error()                 76      4  Code  Gb  BoardI6.o
  lcd_hbar(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
                                     74      2  Code  Gb  lcd.o
  PIT_IRQHandler                     72      4  Code  Gb  BoardI6.o
  SetStartPulsePol()                 72      4  Code  Gb  pulses.o
  _GLOBAL__sub_I_ELRS.cpp            72      4  Code  Lc  ELRS.o
  yesNoMenuExit(unsigned char, char const*)
                                     72      4  Code  Gb  menus.o
  lcd_rect_xor(unsigned char, unsigned char, unsigned char, unsigned char)
                                     70      2  Code  Gb  lcd.o
  ISR_TIMER1_COMPA_vect              68      4  Code  Gb  pulses.o
  eeWriteBlockCmp(void const*, unsigned short, unsigned int)
                                     68      4  Code  Gb  drivers.o
  eeprom_read_block(void*, void const*, unsigned int)
                                     68      4  Code  Gb  drivers.o
  shutdown_crsf_serial_port          68      4  Code  Gb  BoardI6.o
  getTrimFlightPhase(unsigned char, unsigned char)
                                     66      2  Code  Gb  er9x.o
  lcd_outhex4(unsigned char, unsigned char, unsigned short)
                                     66      2  Code  Gb  lcd.o
  EFile::swap(unsigned char, unsigned char)
                                     64      4  Code  Gb  file.o
  ELRSV2_run(unsigned char)          64      4  Code  Gb  elrsV2.o
  __aeabi_idiv                       64      2  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  audioQueue::getToneLength(unsigned char)
                                     64      4  Code  Wk  audio.o
  crossfileMenu(MState2&, unsigned char, unsigned char, unsigned char, unsigned char)
                                     64      4  Code  Gb  elrsV2.o
  processCrossfireTelemetryValue(unsigned char, int)
                                     64      4  Code  Gb  crossfire.o
  displayOneSwitch3Pos(unsigned char, unsigned char, unsigned char)
                                     62      2  Code  Gb  menus.o
  ELRSV2_stop()                      60      4  Code  Gb  elrsV2.o
  EeFsFormat()                       60      4  Code  Gb  file.o
  anaIn(unsigned char)               60      4  Code  Gb  er9x.o
  displayOneSwitch(unsigned char, unsigned char, unsigned char)
                                     60      4  Code  Gb  menus.o
  editSlowDelay(unsigned char, unsigned char, unsigned char)
                                     60      4  Code  Lc  menus.o
  expo(short, short)                 60      2  Code  Gb  menus.o
  getField(unsigned char)            60      4  Code  Lc  elrsV2.o
  getRawTrimValue(unsigned char, unsigned char)
                                     60      4  Code  Gb  er9x.o
  rangeBindAction(unsigned char, unsigned char)
                                     60      4  Code  Gb  menus.o
  PORTC_PORTD_IRQHandler             56      4  Code  Gb  BoardI6.o
  REG(signed char, signed char, signed char)
                                     56      4  Code  Gb  er9x.o
  __aeabi_uidiv                      56      2  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  audioQueue::driver()               56      4  Code  Wk  er9x.o
  convert_failsafe_ppm(unsigned char)
                                     56      4  Code  Gb  A7105_SPI.o
  edit_dr_switch(unsigned char, unsigned char, signed char, unsigned char, unsigned char)
                                     56      2  Code  Gb  menus.o
  getCrossfireTelemetryValue(unsigned char, int&, int)
                                     56      4  Code  Gb  crossfire.o
  get_dr_state(unsigned char)
                                     56      4  Code  Gb  menus.o
  lcd_char_inverse(unsigned char, unsigned char, unsigned char, unsigned char)
                                     56      4  Code  Gb  lcd.o
  resetTimern(unsigned char)
                                     56      4  Code  Gb  menus.o
  A7105_SetPower()                   52      4  Code  Gb  A7105_SPI.o
  SPI_RADIO_SendBlock                52      4  Code  Gb  BoardI6.o
  eeLoadModelForBackup(unsigned char)
                                     52      4  Code  Gb  pers.o
  fieldCommandSave(FieldProps*)
                                     52      4  Code  Gb  elrsV2.o
  getFlightPhase()                   52      4  Code  Gb  er9x.o
  lcd_write_bits(unsigned char*, unsigned char)
                                     52      4  Code  Gb  lcd.o
  pushMenu(void (*)(unsigned char))
                                     52      4  Code  Gb  er9x.o
  put_curve(unsigned char, unsigned char, signed char, unsigned char)
                                     52      4  Code  Gb  menus.o
  strstr                             52      2  Code  Wk  strops.o (libc_v6m_t_le_eabi_small.a)
  lcd_putsAtt(unsigned char, unsigned char, char const*, unsigned char)
                                     50      2  Code  Gb  lcd.o
  A7105_ReadData(unsigned char)
                                     48      4  Code  Gb  A7105_SPI.o
  EFile::create(unsigned char, unsigned char, unsigned short)
                                     48      4  Code  Gb  file.o
  EeFsFree(unsigned char)            48      4  Code  Lc  file.o
  EeFsOpen()                         48      4  Code  Gb  file.o
  UART0_IRQHandler                   48      4  Code  Gb  BoardI6.o
  char2idx(char)                     48      4  Code  Gb  menus.o
  displayVoiceRate(unsigned char, unsigned char, unsigned char, unsigned char)
                                     48      4  Code  Gb  menus.o
  eeDirty(unsigned char)             48      4  Code  Gb  pers.o
  modelSave(unsigned char)           48      4  Code  Gb  pers.o
  GENERIC_CRC14::GENERIC_CRC14(unsigned short)
                                     46      2  Code  Gb  crc.o
  GENERIC_CRC14::GENERIC_CRC14(unsigned short)
                                     46      2  Code  Gb  crc.o
  memcmp                             46      2  Code  Wk  strops.o (libc_v6m_t_le_eabi_small.a)
  putsMomentDrSwitches(unsigned char, unsigned char, signed char, unsigned char)
                                     46      2  Code  Gb  er9x.o
  A7105_ReadReg(unsigned char)
                                     44      2  Code  Gb  A7105_SPI.o
  A7105_WriteID(unsigned int)
                                     44      2  Code  Gb  A7105_SPI.o
  PING                               44      4  Code  Gb  BoardI6.o
  SX127xDriver::SX127xDriver()
                                     44      4  Code  Gb  SX127x.o
  SX127xDriver::SX127xDriver()
                                     44      4  Code  Gb  SX127x.o
  crossfireTelemetryPush4(unsigned char, unsigned char, unsigned char)
                                     44      4  Code  Gb  elrsV2.o
  dispGvar(unsigned char, unsigned char, unsigned char, unsigned char)
                                     44      4  Code  Gb  menus.o
  fieldCommandLoad(FieldProps*, unsigned char*, unsigned char)
                                     44      4  Code  Gb  elrsV2.o
  menuMixersLimit(unsigned char)
                                     44      4  Code  Gb  menus.o
  popMenu(bool)                      44      4  Code  Gb  er9x.o
  putVoiceQueueLong(unsigned short)
                                     44      4  Code  Gb  audio.o
  sendSerialVoiceData(unsigned char*, unsigned int)
                                     44      4  Code  Gb  BoardI6.o
  div                                42      2  Code  Wk  intops.o (libc_v6m_t_le_eabi_small.a)
  lcd_putsnAtt(unsigned char, unsigned char, char const*, unsigned char, unsigned char)
                                     42      2  Code  Gb  lcd.o
  A7105_AntSwitch()                  40      4  Code  Gb  A7105_SPI.o
  EFile::rm(unsigned char)           40      4  Code  Gb  file.o
  EeFsAlloc()                        40      4  Code  Lc  file.o
  Uart_SendCMD(unsigned char, unsigned char, unsigned short)
                                     40      4  Code  Gb  audio.o
  doVoiceAlarmSource(t_voiceAlarm*)
                                     40      2  Code  Gb  er9x.o
  eeWaitComplete()                   40      4  Code  Gb  pers.o
  evalOffset(signed char)            40      4  Code  Gb  menus.o
  lcd_plot(unsigned char, unsigned char)
                                     40      4  Code  Gb  lcd.o
  mDelay                             40      4  Code  Gb  BoardI6.o
  popupCompat(unsigned char)
                                     40      4  Code  Lc  elrsV2.o
  putsVBat(unsigned char, unsigned char, unsigned char)
                                     40      4  Code  Gb  lcd.o
  putsVolts(unsigned char, unsigned char, short, unsigned char)
                                     40      4  Code  Gb  lcd.o
  startPulses()                      40      4  Code  Gb  pulses.o
  switchDisplay(unsigned char, unsigned char)
                                     40      4  Code  Gb  menus.o
  A7105_Reset()                      38      2  Code  Gb  A7105_SPI.o
  lcd_puts_Pskip(unsigned char, char const*, unsigned char)
                                     38      2  Code  Gb  lcd.o
  DoSum(unsigned char*, unsigned char)
                                     36      2  Code  Gb  audio.o
  EFile::openRd(unsigned char)
                                     36      4  Code  Gb  file.o
  LCD_DATA                           36      4  Code  Gb  BoardI6.o
  crsf_init()                        36      4  Code  Gb  crossfire.o
  curveAddress(unsigned char)
                                     36      4  Code  Lc  menus.o
  dispFlightModename(unsigned char, unsigned char, unsigned char)
                                     36      4  Code  Gb  menus.o
  ee_waite()                         36      4  Code  Gb  drivers.o
  evalChkSum()                       36      4  Code  Gb  pers.o
  reachMixerCountLimit()             36      4  Code  Gb  menus.o
  scalerDecimal(unsigned char, unsigned char, unsigned char)
                                     36      2  Code  Gb  menus.o
  expou(unsigned short, unsigned short)
                                     34      2  Code  Gb  menus.o
  getCurrentSwitchStates()           34      2  Code  Gb  er9x.o
  lcd_2_digits(unsigned char, unsigned char, unsigned char, unsigned char)
                                     34      2  Code  Gb  lcd.o
  lcd_outdezAtt(unsigned char, unsigned char, short, unsigned char)
                                     34      2  Code  Gb  lcd.o
  EFile::size()                      32      4  Code  Gb  file.o
  EeFsGetFree()                      32      4  Code  Gb  file.o
  SetPRTTimPeriod                    32      4  Code  Gb  BoardI6.o
  backlightKey()                     32      4  Code  Gb  er9x.o
  chainMenu(void (*)(unsigned char))
                                     32      4  Code  Gb  er9x.o
  checkCrossfireTelemetryFrameCRC()
                                     32      4  Code  Gb  crossfire.o
  crc8(unsigned char const*, unsigned int)
                                     32      4  Code  Gb  crc_crsf.o
  fieldStringDisplay(FieldProps*, unsigned char, unsigned char)
                                     32      4  Code  Gb  elrsV2.o
  lcdSendCtl(unsigned char)          32      2  Code  Lc  lcd.o
  lcdSetRefVolt(unsigned char)
                                     32      4  Code  Gb  lcd.o
  menuPressed()                      32      4  Code  Gb  drivers.o
  pauseEvents(unsigned char)
                                     32      4  Code  Gb  drivers.o
  processVoiceAlarms()               32      4  Code  Gb  er9x.o
  putsOffDecimal(unsigned char, unsigned char, unsigned short, unsigned char)
                                     32      4  Code  Gb  menus.o
  setVolume(unsigned char)           32      4  Code  Gb  audio.o
  stickMoveValue()                   32      2  Code  Gb  er9x.o
  trace()                            32      4  Code  Gb  menus.o
  A7105_WriteReg(unsigned char, unsigned char)
                                     30      2  Code  Gb  A7105_SPI.o
  __aeabi_llsl                       30      2  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  __aeabi_llsr                       30      2  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  A7105_Strobe(unsigned char)
                                     28      2  Code  Gb  A7105_SPI.o
  EnableGIO                          28      4  Code  Gb  BoardI6.o
  TPM1_IRQHandler                    28      4  Code  Gb  BoardI6.o
  TPM2_IRQHandler                    28      4  Code  Gb  BoardI6.o
  audioVoiceDefevent(unsigned char, unsigned char)
                                     28      4  Code  Gb  audio.o
  crsf_action()                      28      4  Code  Gb  crossfire.o
  displayTimer(unsigned char, unsigned char, unsigned char, unsigned char)
                                     28      4  Code  Gb  menus.o
  killEvents(unsigned char)          28      4  Code  Gb  drivers.o
  modeFixValue(unsigned char)
                                     28      4  Code  Gb  er9x.o
  on_voice_cb(unsigned char*, unsigned char)
                                     28      4  Code  Gb  audio.o
  onoffMenuItem(unsigned char, unsigned char, char const*, unsigned char)
                                     28      2  Code  Lc  menus.o
  putWarnSwitch(unsigned char, unsigned char)
                                     28      4  Code  Gb  er9x.o
  throttleReversed()                 28      4  Code  Gb  er9x.o
  validateName(char*, unsigned char)
                                     28      2  Code  Lc  pers.o
  voiceMinutes(short)                28      2  Code  Gb  menus.o
  lcd_putsAttIdx(unsigned char, unsigned char, char const*, unsigned char, unsigned char)
                                     26      2  Code  Gb  lcd.o
  EeFsRead(unsigned char, unsigned char)
                                     24      2  Code  Lc  file.o
  GetChipID                          24      4  Code  Gb  BoardI6.o
  ISR_TIMER2_OVF_vect                24      4  Code  Gb  er9x.o
  IS_EXPO_THROTTLE(unsigned char)
                                     24      4  Code  Gb  er9x.o
  StubbornSender::ResetState()
                                     24      2  Code  Gb  stubborn_sender.o
  __SEGGER_init_ctors                24      4  Code  Wk  SEGGER_crtinit_v6m_little.o
  clearKeyEvents()                   24      4  Code  Lc  er9x.o
  crossfireTelemetryPing()           24      2  Code  Gb  elrsV2.o
  hyphinvMenuItem(unsigned char, unsigned char, unsigned char)
                                     24      4  Code  Gb  menus.o
  lcd_rect(unsigned char, unsigned char, unsigned char, unsigned char)
                                     24      4  Code  Gb  lcd.o
  putsAttIdxTelemItems(unsigned char, unsigned char, unsigned char, unsigned char)
                                     24      4  Code  Gb  menus.o
  EeFsSetLink(unsigned char, unsigned char)
                                     22      2  Code  Lc  file.o
  calc100toRESX(signed char)
                                     22      2  Code  Gb  er9x.o
  gvarMenuItem125(unsigned char, unsigned char, signed char, unsigned char)
                                     22      2  Code  Gb  menus.o
  semicolonPos(char const*, unsigned char)
                                     22      2  Code  Lc  elrsV2.o
  DisableGIO                         20      4  Code  Gb  BoardI6.o
  EFile::exists(unsigned char)
                                     20      4  Code  Gb  file.o
  EeFsFlush()                        20      4  Code  Lc  file.o
  EeFsFlushFreelist()                20      4  Code  Lc  file.o
  StubbornReceiver::StubbornReceiver(unsigned char)
                                     20      2  Code  Gb  stubborn_receiver.o
  StubbornReceiver::StubbornReceiver(unsigned char)
                                     20      2  Code  Gb  stubborn_receiver.o
  __SEGGER_RTL_init_heap             20      4  Code  Wk  heapops_basic.o (heapops_basic_v6m_little.a)
  __SEGGER_init_copy                 20      2  Code  Wk  SEGGER_crtinit_v6m_little.o
  __aeabi_memclr                     20      2  Code  Wk  strasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  audioDefevent(unsigned char)
                                     20      4  Code  Gb  audio.o
  audioEvent(unsigned char, unsigned short)
                                     20      4  Code  Gb  audio.o
  checkIncDec_0(signed char, signed char)
                                     20      4  Code  Gb  er9x.o
  checkIncDec_u0(short, unsigned char)
                                     20      4  Code  Gb  er9x.o
  clearMixes()                       20      4  Code  Gb  templates.o
  displayNext()                      20      4  Code  Gb  menus.o
  idx2char(unsigned char)            20      4  Code  Gb  menus.o
  lcd_clear()                        20      4  Code  Gb  lcd.o
  lcd_xlabel_decimal(unsigned char, unsigned char, unsigned short, unsigned char, char const*)
                                     20      2  Code  Gb  menus.o
  resetTimer1()                      20      4  Code  Gb  menus.o
  setNameP(char*, char const*)
                                     20      2  Code  Gb  pers.o
  __SEGGER_init_zero                 18      2  Code  Wk  SEGGER_crtinit_v6m_little.o
  offonItem(unsigned char, unsigned char, unsigned char)
                                     18      2  Code  Lc  menus.o
  offonMenuItem(unsigned char, unsigned char, char const*, unsigned char)
                                     18      2  Code  Lc  menus.o
  onoffItem(unsigned char, unsigned char, unsigned char)
                                     18      2  Code  Lc  menus.o
  putc_0_1(unsigned char, unsigned char, unsigned char)
                                     18      2  Code  Gb  menus.o
  A7105_Sleep()                      16      2  Code  Gb  A7105_SPI.o
  Buzzer_ClrVal                      16      4  Code  Gb  BoardI6.o
  Buzzer_SetVal                      16      4  Code  Gb  BoardI6.o
  CS_STATE(unsigned char)            16      4  Code  Gb  er9x.o
  ClearPPMTimCompareInterruptFlag
                                     16      4  Code  Gb  BoardI6.o
  GetPPMOutState                     16      4  Code  Gb  BoardI6.o
  GetPPMTimCompareInterruptFlag
                                     16      4  Code  Gb  BoardI6.o
  TITLEP(char const*)                16      2  Code  Gb  menus.o
  TX_RX_PutVal                       16      4  Code  Gb  BoardI6.o
  _GLOBAL__sub_I_SX127x.cpp          16      4  Code  Lc  SX127x.o
  _GLOBAL__sub_I_er9x.cpp            16      4  Code  Lc  er9x.o
  __SEGGER_init_heap                 16      4  Code  Wk  SEGGER_crtinit_v6m_little.o
  __aeabi_uidivmod                   16      2  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  calc1000toRESX(short)              16      2  Code  Gb  er9x.o
  checkIncDec_i8(signed char, signed char, signed char)
                                     16      4  Code  Gb  er9x.o
  getTrimValue(unsigned char, unsigned char)
                                     16      2  Code  Gb  er9x.o
  lcdSetContrast()                   16      4  Code  Gb  lcd.o
  lcd_puts_Pleft(unsigned char, char const*)
                                     16      2  Code  Gb  lcd.o
  lcd_putsn_P(unsigned char, unsigned char, char const*, unsigned char)
                                     16      2  Code  Gb  lcd.o
  mixaddress(unsigned char)          16      4  Code  Gb  er9x.o
  putsChn(unsigned char, unsigned char, unsigned char, unsigned char)
                                     16      2  Code  Gb  er9x.o
  putsTimeNoAtt(unsigned char, unsigned char, short)
                                     16      2  Code  Gb  menus.o
  rd_0                               16      4  Code  Gb  BoardI6.o
  rd_1                               16      4  Code  Gb  BoardI6.o
  rs_0                               16      4  Code  Gb  BoardI6.o
  rs_1                               16      4  Code  Gb  BoardI6.o
  rw_0                               16      4  Code  Gb  BoardI6.o
  REG100_100(signed char)            14      2  Code  Gb  er9x.o
  StubbornSender::StubbornSender(unsigned char)
                                     14      2  Code  Gb  stubborn_sender.o
  StubbornSender::StubbornSender(unsigned char)
                                     14      2  Code  Gb  stubborn_sender.o
  __aeabi_idivmod                    14      2  Code  Wk  intasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  _start                             14      4  Code  Gb  SEGGER_THUMB_Startup.o
  fieldTextSelectionSave(FieldProps*)
                                     14      2  Code  Gb  elrsV2.o
  keyDown()                          14      2  Code  Wk  er9x.o
  main                               14      2  Code  Gb  main.o
  memcpy                             14      2  Code  Wk  strasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  message(char const*)               14      2  Code  Gb  er9x.o
  putVoiceQueueUpper(unsigned char)
                                     14      2  Code  Gb  audio.o
  strcpy                             14      2  Code  Wk  strasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  strlen                             14      2  Code  Wk  strasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  DisablePPMOut                      12      4  Code  Gb  BoardI6.o
  DisablePRTTim                      12      4  Code  Gb  BoardI6.o
  EnablePPMOut                       12      4  Code  Gb  BoardI6.o
  EnablePPMTim                       12      4  Code  Gb  BoardI6.o
  EnablePRTTim                       12      4  Code  Gb  BoardI6.o
  GetPPMTimCompare                   12      4  Code  Gb  BoardI6.o
  RF0_ClrVal                         12      4  Code  Gb  BoardI6.o
  RF0_SetVal                         12      4  Code  Gb  BoardI6.o
  RF1_ClrVal                         12      4  Code  Gb  BoardI6.o
  RF1_SetVal                         12      4  Code  Gb  BoardI6.o
  SX127xHal::SX127xHal()             12      4  Code  Gb  SX127xHal.o
  SX127xHal::SX127xHal()             12      4  Code  Gb  SX127xHal.o
  SetPPMTimCompare                   12      4  Code  Gb  BoardI6.o
  a7105_csn_off                      12      4  Code  Gb  BoardI6.o
  a7105_csn_on                       12      4  Code  Gb  BoardI6.o
  backlight_off                      12      4  Code  Gb  BoardI6.o
  backlight_on                       12      4  Code  Gb  BoardI6.o
  cs_0                               12      4  Code  Gb  BoardI6.o
  eeModelExists(unsigned char)
                                     12      2  Code  Gb  pers.o
  getSwitch00(signed char)           12      2  Code  Gb  er9x.o
  get_tmr10ms()                      12      4  Code  Gb  er9x.o
  rst_0                              12      4  Code  Gb  BoardI6.o
  rst_1                              12      4  Code  Gb  BoardI6.o
  switchPosition(unsigned char)
                                     12      2  Code  Gb  drivers.o
  EeFsGetLink(unsigned char)
                                     10      2  Code  Lc  file.o
  alert(char const*)                 10      2  Code  Gb  er9x.o
  checkIncDec(signed char, signed char, signed char, unsigned char)
                                     10      2  Code  Gb  er9x.o
  lcd_hline(unsigned char, unsigned char, signed char)
                                     10      2  Code  Gb  lcd.o
  lcd_outdez(unsigned char, unsigned char, short)
                                     10      2  Code  Gb  lcd.o
  lcd_putc(unsigned char, unsigned char, char)
                                     10      2  Code  Gb  lcd.o
  lcd_puts_P(unsigned char, unsigned char, char const*)
                                     10      2  Code  Gb  lcd.o
  resetTimer2()                      10      2  Code  Gb  menus.o
  A7105_SetTxRxMode(unsigned char)
                                      8      2  Code  Gb  A7105_SPI.o
  audioQueue::busy()                  8      2  Code  Gb  audio.o
  crsf_shutdown()                     8      2  Code  Gb  crossfire.o
  putVoiceQueue(unsigned char)
                                      8      2  Code  Gb  audio.o
  exit                                2      4  Code  Gb  SEGGER_THUMB_Startup.o
  noopOpen(FieldProps*)               2      2  Code  Gb  elrsV2.o
  ADC0_IRQHandler                            4  Code  Wk  MKL16Z4_Vectors.o
  CMP0_IRQHandler                            4  Code  Wk  MKL16Z4_Vectors.o
  DAC0_IRQHandler                            4  Code  Wk  MKL16Z4_Vectors.o
  DMA0_IRQHandler                            4  Code  Wk  MKL16Z4_Vectors.o
  DMA1_IRQHandler                            4  Code  Wk  MKL16Z4_Vectors.o
  DMA2_IRQHandler                            4  Code  Wk  MKL16Z4_Vectors.o
  DMA3_IRQHandler                            4  Code  Wk  MKL16Z4_Vectors.o
  Dummy_Handler                              4  Code  Lc  MKL16Z4_Vectors.o
  FTFA_IRQHandler                            4  Code  Wk  MKL16Z4_Vectors.o
  HardFault_Handler                          4  Code  Wk  MKL16Z4_Vectors.o
  I2C0_IRQHandler                            4  Code  Wk  MKL16Z4_Vectors.o
  I2C1_IRQHandler                            4  Code  Wk  MKL16Z4_Vectors.o
  I2S0_IRQHandler                            4  Code  Wk  MKL16Z4_Vectors.o
  LLW_IRQHandler                             4  Code  Wk  MKL16Z4_Vectors.o
  LPTimer_IRQHandler                         4  Code  Wk  MKL16Z4_Vectors.o
  LVD_LVW_IRQHandler                         4  Code  Wk  MKL16Z4_Vectors.o
  NMI_Handler                                4  Code  Wk  MKL16Z4_Vectors.o
  PIT_IRQHandler                             4  Code  Wk  MKL16Z4_Vectors.o
  PORTA_IRQHandler                           4  Code  Wk  MKL16Z4_Vectors.o
  PORTC_PORTD_IRQHandler                     4  Code  Wk  MKL16Z4_Vectors.o
  PendSV_Handler                             4  Code  Wk  MKL16Z4_Vectors.o
  RTC_IRQHandler                             4  Code  Wk  MKL16Z4_Vectors.o
  RTC_Seconds_IRQHandler                     4  Code  Wk  MKL16Z4_Vectors.o
  Reset_Handler                              4  Code  Gb  Kinetis_KL_Startup.o
  SPI0_IRQHandler                            4  Code  Wk  MKL16Z4_Vectors.o
  SPI1_IRQHandler                            4  Code  Wk  MKL16Z4_Vectors.o
  SVC_Handler                                4  Code  Wk  MKL16Z4_Vectors.o
  SysTick_Handler                            4  Code  Wk  MKL16Z4_Vectors.o
  TPM0_IRQHandler                            4  Code  Wk  MKL16Z4_Vectors.o
  TPM1_IRQHandler                            4  Code  Wk  MKL16Z4_Vectors.o
  TPM2_IRQHandler                            4  Code  Wk  MKL16Z4_Vectors.o
  TSI0_IRQHandler                            4  Code  Wk  MKL16Z4_Vectors.o
  UART0_IRQHandler                           4  Code  Wk  MKL16Z4_Vectors.o
  UART1_IRQHandler                           4  Code  Wk  MKL16Z4_Vectors.o
  UART2_IRQHandler                           4  Code  Wk  MKL16Z4_Vectors.o
  __SEGGER_init_done                         4  Code  Gb  SEGGER_THUMB_Startup.o
  __aeabi_memclr4                            2  Code  Wk  strasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  __aeabi_memclr8                            2  Code  Wk  strasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  __aeabi_memcpy                             2  Code  Wk  strasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  __aeabi_memcpy4                            2  Code  Wk  strasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  __aeabi_memcpy8                            2  Code  Wk  strasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  __aeabi_memmove                            2  Code  Wk  strasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  __aeabi_memmove4                           2  Code  Wk  strasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  __aeabi_memmove8                           2  Code  Wk  strasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  __aeabi_memset                             2  Code  Wk  strasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  __aeabi_memset4                            2  Code  Wk  strasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  __aeabi_memset8                            2  Code  Wk  strasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  memset                                     2  Code  Wk  strasmops_arm.o (libc_v6m_t_le_eabi_small.a)

Read-write data symbols by name:

  Symbol name                   Address        Size  Align  Type  Bd  Object File
  -------------------------  ----------  ----------  -----  ----  --  -----------
  A7105_AdjustLOBaseFreq()::old_offset
                             0x20000CE0           2      2  Init  Lc  A7105_SPI.o
  A7105_AntSwitch()::sw      0x20000CA1           1         Zero  Lc  A7105_SPI.o
  AFHDS2A_tel_data           0x1FFFFF08         172      4  Zero  Gb  AFHDS2A_a7105.o
  AFHDS2A_tel_res_cnt        0x20000BDF          43         Zero  Gb  AFHDS2A_a7105.o
  AFHDS2A_tel_status         0x1FFFF800           8      8  Zero  Gb  AFHDS2A_a7105.o
  AFHDS2A_update_telemetry()::Dacc
                             0x20000CD8           4      4  Init  Lc  AFHDS2A_a7105.o
  ActionAFHDS2A::packet_counter
                             0x2000058C           2      2  Zero  Lc  AFHDS2A_a7105.o
  ActionAFHDS2A::packet_type
                             0x20000CA6           1         Zero  Lc  AFHDS2A_a7105.o
  AlarmControl               0x20000CEC           4         Init  Gb  er9x.o
  AlertMessage               0x20000180           4      4  Zero  Gb  er9x.o
  AltOffset                  0x20000598           2      2  Zero  Gb  AFHDS2A_a7105.o
  B3_comp_value              0x20000596           2      2  Zero  Gb  pulses.o
  CalcScaleNest              0x20000CD2           1         Zero  Gb  menus.o
  Columns                    0x20000CAD           1         Zero  Lc  menus.o
  CsTimer                    0x20000504          24      2  Zero  Gb  er9x.o
  CurrentPhase               0x20000CD1           1         Zero  Gb  menus.o
  CurrentVolume              0x20000CD0           1         Zero  Gb  er9x.o
  Current_protocol           0x20000CCF           1         Zero  Gb  pulses.o
  DisplayBuf                 0x1FFFF808       1 024      4  Zero  Gb  lcd.o
  DupIfNonzero               0x20000CCE           1         Zero  Gb  menus.o
  DupSub                     0x20000CCD           1         Zero  Gb  menus.o
  EditColumns                0x20000CCC           1         Zero  Gb  menus.o
  EditType                   0x20000CCB           1         Zero  Gb  menus.o
  Ee_lock                    0x20000CCA           1         Zero  Gb  pers.o
  EepromActive               0x20000CC9           1         Zero  Gb  lcd.o
  EnterMenu                  0x20000CC8           1         Zero  Gb  er9x.o
  Ex_chans                   0x200004E4          32      2  Zero  Gb  menus.o
  Fade                       0x1FFFFFB4          80      4  Zero  Gb  menus.o
  GAltOffset                 0x20000594           2      2  Zero  Gb  AFHDS2A_a7105.o
  ID                         0x2000017C           4      4  Zero  Gb  A7105_SPI.o
  ISR_TIMER1_COMPA_vect::pulsePtr
                             0x20000CDC           4      4  Init  Lc  pulses.o
  IlinesCount                0x20000CB7           1         Zero  Lc  menus.o
  Inactivity                 0x20000580           6      2  Zero  Gb  er9x.o
  InverseBlink               0x20000CC7           1         Zero  Gb  menus.o
  LQCalc                     0x2000012C          12      4  Zero  Gb  ELRS.o
  Last_switch                0x20000C1A          12         Zero  Gb  er9x.o
  LcdLock                    0x20000CC6           1         Zero  Gb  lcd.o
  Lcd_lastPos                0x20000CC5           1         Zero  Gb  lcd.o
  LongMenuTimer              0x20000CB1           1         Zero  Lc  er9x.o
  MState2::check_columns(unsigned char, unsigned char)::lateUp
                             0x20000C8C           1         Zero  Lc  menus.o
  M_longMenuTimer            0x20000CC4           1         Zero  Gb  menus.o
  Main_running               0x20000CC3           1         Zero  Gb  er9x.o
  MenuControl                0x20000C5B           3         Zero  Gb  menus.o
  MspSender                  0x20000104          16      4  Zero  Gb  ELRS.o
  Nvs_state                  0x20000C4B           8         Zero  Gb  er9x.o
  Nvs_timer                  0x2000053C          16      2  Zero  Gb  er9x.o
  Output                     0x1FFFFE08         256      4  Zero  Gb  menus.o
  P1values                   0x2000056E          10      2  Zero  Gb  er9x.o
  PausePulses                0x20000CC2           1         Zero  Gb  pulses.o
  PopupData                  0x20000C57           4         Zero  Gb  menus.o
  Radio                      0x20000088          48      4  Zero  Gb  ELRS.o
  RadioActive                0x20000CC1           1         Zero  Gb  pulses.o
  RadioState                 0x20000CC0           1         Zero  Gb  A7105_SPI.o
  Rotary                     0x20000C3A           9         Zero  Gb  er9x.o
  RotaryState                0x20000CBF           1         Zero  Gb  menus.o
  SPI_BufferPtr              0x20000178           4      4  Zero  Gb  BoardI6.o
  SPI_Size                   0x20000592           2      2  Zero  Gb  BoardI6.o
  SX127xDriver::instance     0x2000016C           4      4  Zero  Gb  SX127x.o
  SX127xHal::instance        0x20000168           4      4  Zero  Gb  SX127xHal.o
  StepSize                   0x20000CBE           1         Zero  Gb  er9x.o
  StickScrollAllowed         0x20000CBD           1         Zero  Gb  er9x.o
  StickScrollTimer           0x20000CBC           1         Zero  Gb  er9x.o
  SystemOptions              0x20000CBB           1         Zero  Gb  er9x.o
  TelemetryReceiver          0x20000120          12      4  Zero  Gb  ELRS.o
  Tevent                     0x20000CBA           1         Zero  Gb  er9x.o
  ThrottleStickyOn           0x20000CB9           1         Zero  Gb  menus.o
  TimeGlobals                0x20000578           8      2  Zero  Gb  menus.o
  TimerConfig                0x20000C30          10         Zero  Gb  er9x.o
  Voice                      0x20000480          36      2  Zero  Gb  audio.o
  Xmem                       0x20000416         106      2  Zero  Gb  menus.o
  __SEGGER_RTL_heap_globals  0x20000160           4      4  Zero  Lc  heapops_basic.o (heapops_basic_v6m_little.a)
  allParamsLoaded            0x20000C8B           1         Zero  Gb  elrsV2.o
  audio                      0x20000B7A          56         Zero  Gb  er9x.o
  audioQueue::driver()::toneCounter
                             0x20000C8D           1         Zero  Wk  er9x.o
  backButtonId               0x20000CF6           1         Init  Gb  elrsV2.o
  bind_phase                 0x20000C8A           1         Zero  Gb  A7105_SPI.o
  bpanaCenter                0x20000C89           1         Zero  Gb  menus.o
  calibratedStick            0x2000054C          14      2  Zero  Gb  menus.o
  check_backlight_voice()::tmr10ms
                             0x20000C94           1         Zero  Lc  er9x.o
  deviceId                   0x20000CF5           1         Init  Gb  elrsV2.o
  deviceIds                  0x20000C43           8         Zero  Lc  elrsV2.o
  deviceIsELRS_TX            0x20000C88           1         Zero  Gb  elrsV2.o
  devicesLen                 0x20000C87           1         Zero  Gb  elrsV2.o
  devicesRefreshTimeout      0x20000CD4           4      4  Init  Gb  elrsV2.o
  edit                       0x20000C86           1         Zero  Gb  elrsV2.o
  eeFs                       0x20000048          64      4  Zero  Gb  file.o
  expectedChunks             0x20000CF4           1         Init  Gb  elrsV2.o
  fieldChunk                 0x20000C85           1         Zero  Gb  elrsV2.o
  fieldDataLen               0x20000C84           1         Zero  Gb  elrsV2.o
  fieldId                    0x20000CF3           1         Init  Gb  elrsV2.o
  fieldPopup                 0x20000174           4      4  Zero  Lc  elrsV2.o
  fieldTimeout               0x2000015C           4      4  Zero  Gb  elrsV2.o
  fields                     0x20000984         256         Zero  Lc  elrsV2.o
  fieldsLen                  0x20000C83           1         Zero  Gb  elrsV2.o
  fields_count               0x20000C82           1         Zero  Gb  elrsV2.o
  folderAccess               0x20000C81           1         Zero  Gb  elrsV2.o
  g_LightOffCounter          0x20000588           2      2  Zero  Gb  er9x.o
  g_blinkTmr10ms             0x20000C80           1         Zero  Gb  drivers.o
  g_chans512                 0x200004C4          32      2  Zero  Gb  menus.o
  g_crossfire                0x20000004          65      4  Zero  Gb  crossfire.o
  g_crsf_read_callback       0x20000170           4      4  Zero  Lc  BoardI6.o
  g_eeGeneral                0x20000B04         118         Zero  Gb  er9x.o
  g_elrs_lag                 0x20000158           4      4  Zero  Gb  crossfire.o
  g_elrs_update_rate         0x20000154           4      4  Zero  Gb  crossfire.o
  g_latency                  0x20000586           2      2  Zero  Gb  menus.o
  g_menuStack                0x200000E0          20      4  Zero  Gb  er9x.o
  g_menuStackPtr             0x20000C7F           1         Zero  Gb  er9x.o
  g_model                    0x2000059A       1 002         Zero  Gb  er9x.o
  g_posHorz                  0x20000C7E           1         Zero  Gb  menus.o
  g_ppmIns                   0x2000052C          16      2  Zero  Gb  er9x.o
  g_tmr10ms                  0x20000150           4      4  Zero  Gb  drivers.o
  g_tmr16KHz                 0x20000142           2      2  Zero  Gb  er9x.o
  g_vbat100mV                0x20000C7D           1         Zero  Gb  er9x.o
  g_voice_cb                 0x2000014C           4      4  Zero  Gb  BoardI6.o
  hal                        0x20000148           4      4  Zero  Gb  SX127x.o
  handsetId                  0x20000CF2           1         Init  Gb  elrsV2.o
  heartbeat                  0x20000C7C           1         Zero  Gb  pulses.o
  hopping_frequency          0x20000C0A          16         Zero  Gb  A7105_SPI.o
  hopping_frequency_no       0x20000C7B           1         Zero  Gb  A7105_SPI.o
  i2c_buffer                 0x20000114          12      4  Zero  Gb  drivers.o
  inputs_subview             0x20000CAF           1         Zero  Lc  menus.o
  keys                       0x20000BB2          45         Zero  Gb  drivers.o
  lineIndex                  0x20000CF1           1         Init  Gb  elrsV2.o
  mainSequence()::timer      0x2000058E           2      2  Zero  Lc  er9x.o
  menuModelPhases(unsigned char)::mstate2
                             0x20000CA0           1         Zero  Lc  menus.o
  menuPhaseOne(unsigned char)::mstate2
                             0x20000CA8           1         Zero  Lc  menus.o
  menuProc0(unsigned char)::trimSwLock
                             0x20000C91           1         Zero  Lc  menus.o
  menuProcCurve(unsigned char)::mstate2
                             0x20000CA5           1         Zero  Lc  menus.o
  menuProcCurveOne(unsigned char)::dfltCrv
                             0x20000C9D           1         Zero  Lc  menus.o
  menuProcCurveOne(unsigned char)::mstate2
                             0x20000C9C           1         Zero  Lc  menus.o
  menuProcGlobals(unsigned char)::mstate2
                             0x20000C9F           1         Zero  Lc  menus.o
  menuProcIndex(unsigned char)::mstate
                             0x20000CA4           1         Zero  Lc  menus.o
  menuProcMix(unsigned char)::mstate2
                             0x20000CAB           1         Zero  Lc  menus.o
  menuProcMixOne(unsigned char)::mstate2
                             0x20000CA2           1         Zero  Lc  menus.o
  menuProcModelIndex(unsigned char)::mstate
                             0x20000C98           1         Zero  Lc  menus.o
  menuProcModelSelect(unsigned char)::mstate2
                             0x20000C95           1         Zero  Lc  menus.o
  menuProcModelSelect(unsigned char)::sel_editMode
                             0x20000C96           1         Zero  Lc  menus.o
  menuProcProtocol(unsigned char)::mstate2
                             0x20000C9B           1         Zero  Lc  menus.o
  menuProcTelemetry(unsigned char)::mstate2
                             0x20000C99           1         Zero  Lc  menus.o
  menuProcVoiceAlarm(unsigned char)::mstate2
                             0x20000C97           1         Zero  Lc  menus.o
  menuProcVoiceOne(unsigned char)::mstate2
                             0x20000C9A           1         Zero  Lc  menus.o
  menuRXSetup(unsigned char)::mstate2
                             0x20000CAA           1         Zero  Lc  menus.o
  menuRangeBind(unsigned char)::timer
                             0x20000CA3           1         Zero  Lc  menus.o
  menuScaleOne(unsigned char)::mstate2
                             0x20000CA7           1         Zero  Lc  menus.o
  menuSetFailsafe(unsigned char)::mstate2
                             0x20000C9E           1         Zero  Lc  menus.o
  mixToDelete                0x20000C7A           1         Zero  Gb  menus.o
  namesBufferOffset          0x20000C79           1         Zero  Gb  elrsV2.o
  ota_crc                    0x20000184         514      2  Zero  Gb  ELRS.o
  otherDevicesId             0x20000CF0           1         Init  Gb  elrsV2.o
  outputTelemetryBuffer      0x200000F4          16      4  Zero  Gb  crossfire.o
  outputTelemetryBufferSize  0x20000C78           1         Zero  Gb  crossfire.o
  outputTelemetryBufferTrigger
                             0x20000C77           1         Zero  Gb  crossfire.o
  packet                     0x200000B8          40      4  Zero  Gb  A7105_SPI.o
  packet_count               0x20000C76           1         Zero  Gb  A7105_SPI.o
  pageOffset                 0x20000C75           1         Zero  Gb  elrsV2.o
  per10ms()::current         0x20000C92           1         Zero  Lc  drivers.o
  perMain()::alertKey        0x20000C8F           1         Zero  Lc  er9x.o
  perMain()::lastTMR         0x20000164           4      4  Zero  Lc  er9x.o
  perMain()::repeater        0x20000C8E           1         Zero  Lc  er9x.o
  perMain()::s_batCheck      0x20000C90           1         Zero  Lc  er9x.o
  perOut(short*, unsigned char)::sticky
                             0x20000C93           1         Zero  Lc  menus.o
  perOutPhase(short*, unsigned char)::lastPhase
                             0x20000CA9           1         Zero  Lc  menus.o
  phyStick                   0x20000C53           4         Zero  Gb  menus.o
  play_cmd_buf               0x20000CE2          10         Init  Gb  audio.o
  plotType                   0x20000C74           1         Zero  Gb  lcd.o
  ppmInAvailable             0x20000C73           1         Zero  Gb  er9x.o
  prev_power                 0x20000CD3           1         Init  Gb  A7105_SPI.o
  protocol_flags             0x20000C72           1         Zero  Gb  A7105_SPI.o
  pulses2MHz                 0x20000386         144      2  Zero  Gb  pulses.o
  pxxFlag                    0x20000C71           1         Zero  Gb  pulses.o
  reloadFolder               0x20000C70           1         Zero  Gb  elrsV2.o
  reusableBuffer             0x1FFFFC08         512      4  Zero  Lc  elrsV2.o
  s_anaFilt                  0x2000051C          16      2  Zero  Gb  er9x.o
  s_currDestCh               0x20000CB5           1         Zero  Lc  menus.o
  s_currIdx                  0x20000CAC           1         Zero  Lc  menus.o
  s_currMixIdx               0x20000CB4           1         Zero  Lc  menus.o
  s_curveChan                0x20000CB6           1         Zero  Lc  menus.o
  s_editMode                 0x20000C6F           1         Zero  Gb  menus.o
  s_editing                  0x20000C6E           1         Zero  Gb  menus.o
  s_eeDirtyMsk               0x20000CB3           1         Zero  Lc  pers.o
  s_eeDirtyTime10ms          0x20000590           2      2  Zero  Lc  pers.o
  s_eeLongTimer              0x20000CB0           1         Zero  Lc  pers.o
  s_evt                      0x20000C6D           1         Zero  Gb  drivers.o
  s_expoChan                 0x20000CB8           1         Zero  Lc  menus.o
  s_mixMaxSel                0x20000C6C           1         Zero  Gb  menus.o
  s_moveMixIdx               0x20000CB2           1         Zero  Lc  menus.o
  s_moveMode                 0x20000C6B           1         Zero  Gb  menus.o
  s_noHi                     0x20000C6A           1         Zero  Gb  menus.o
  s_pgOfs                    0x20000C69           1         Zero  Gb  menus.o
  s_timer                    0x200004A4          32      2  Zero  Gb  menus.o
  scrollLR                   0x20000C68           1         Zero  Gb  menus.o
  scrollUD                   0x20000C67           1         Zero  Gb  menus.o
  scroll_disabled            0x20000C66           1         Zero  Gb  menus.o
  serialDat0                 0x20000C65           1         Zero  Gb  pulses.o
  statusComplete             0x20000C64           1         Zero  Gb  elrsV2.o
  stickMoved                 0x20000C63           1         Zero  Gb  er9x.o
  sysFlags                   0x20000C62           1         Zero  Gb  er9x.o
  telemetryErrors            0x20000144           4      4  Zero  Gb  crossfire.o
  telemetryRxBuffer          0x20000A84         128         Zero  Gb  crossfire.o
  telemetryRxBufferCount     0x20000C61           1         Zero  Gb  crossfire.o
  theFile                    0x20000564          10      2  Zero  Gb  pers.o
  theWriteFile               0x2000055A          10      2  Zero  Gb  pers.o
  tick10ms                   0x20000C60           1         Zero  Gb  er9x.o
  tmrEEPROM                  0x20000046           2      2  Zero  Gb  er9x.o
  trace()::s_time            0x2000058A           2      2  Zero  Lc  menus.o
  valuesBufferOffset         0x20000C5F           1         Zero  Gb  elrsV2.o
  voice_rx_idx               0x20000C5E           1         Zero  Gb  BoardI6.o
  voice_tx_idx               0x20000045           1         Zero  Gb  BoardI6.o
  voice_uart_recv_buf        0x20000C26          10         Zero  Gb  BoardI6.o
  voice_uart_send_buf        0x20000138          10      4  Zero  Gb  BoardI6.o
  wait_fin_count             0x20000CAE           1         Zero  Lc  audio.o

Read-write data symbols by address:

     Address  Symbol name                      Size  Align  Type  Bd  Object File
  ----------  -------------------------  ----------  -----  ----  --  -----------
  0x1FFFF800  AFHDS2A_tel_status                  8      8  Zero  Gb  AFHDS2A_a7105.o
  0x1FFFF808  DisplayBuf                      1 024      4  Zero  Gb  lcd.o
  0x1FFFFC08  reusableBuffer                    512      4  Zero  Lc  elrsV2.o
  0x1FFFFE08  Output                            256      4  Zero  Gb  menus.o
  0x1FFFFF08  AFHDS2A_tel_data                  172      4  Zero  Gb  AFHDS2A_a7105.o
  0x1FFFFFB4  Fade                               80      4  Zero  Gb  menus.o
  0x20000004  g_crossfire                        65      4  Zero  Gb  crossfire.o
  0x20000045  voice_tx_idx                        1         Zero  Gb  BoardI6.o
  0x20000046  tmrEEPROM                           2      2  Zero  Gb  er9x.o
  0x20000048  eeFs                               64      4  Zero  Gb  file.o
  0x20000088  Radio                              48      4  Zero  Gb  ELRS.o
  0x200000B8  packet                             40      4  Zero  Gb  A7105_SPI.o
  0x200000E0  g_menuStack                        20      4  Zero  Gb  er9x.o
  0x200000F4  outputTelemetryBuffer              16      4  Zero  Gb  crossfire.o
  0x20000104  MspSender                          16      4  Zero  Gb  ELRS.o
  0x20000114  i2c_buffer                         12      4  Zero  Gb  drivers.o
  0x20000120  TelemetryReceiver                  12      4  Zero  Gb  ELRS.o
  0x2000012C  LQCalc                             12      4  Zero  Gb  ELRS.o
  0x20000138  voice_uart_send_buf                10      4  Zero  Gb  BoardI6.o
  0x20000142  g_tmr16KHz                          2      2  Zero  Gb  er9x.o
  0x20000144  telemetryErrors                     4      4  Zero  Gb  crossfire.o
  0x20000148  hal                                 4      4  Zero  Gb  SX127x.o
  0x2000014C  g_voice_cb                          4      4  Zero  Gb  BoardI6.o
  0x20000150  g_tmr10ms                           4      4  Zero  Gb  drivers.o
  0x20000154  g_elrs_update_rate                  4      4  Zero  Gb  crossfire.o
  0x20000158  g_elrs_lag                          4      4  Zero  Gb  crossfire.o
  0x2000015C  fieldTimeout                        4      4  Zero  Gb  elrsV2.o
  0x20000160  __SEGGER_RTL_heap_globals           4      4  Zero  Lc  heapops_basic.o (heapops_basic_v6m_little.a)
  0x20000164  perMain()::lastTMR                  4      4  Zero  Lc  er9x.o
  0x20000168  SX127xHal::instance                 4      4  Zero  Gb  SX127xHal.o
  0x2000016C  SX127xDriver::instance              4      4  Zero  Gb  SX127x.o
  0x20000170  g_crsf_read_callback                4      4  Zero  Lc  BoardI6.o
  0x20000174  fieldPopup                          4      4  Zero  Lc  elrsV2.o
  0x20000178  SPI_BufferPtr                       4      4  Zero  Gb  BoardI6.o
  0x2000017C  ID                                  4      4  Zero  Gb  A7105_SPI.o
  0x20000180  AlertMessage                        4      4  Zero  Gb  er9x.o
  0x20000184  ota_crc                           514      2  Zero  Gb  ELRS.o
  0x20000386  pulses2MHz                        144      2  Zero  Gb  pulses.o
  0x20000416  Xmem                              106      2  Zero  Gb  menus.o
  0x20000480  Voice                              36      2  Zero  Gb  audio.o
  0x200004A4  s_timer                            32      2  Zero  Gb  menus.o
  0x200004C4  g_chans512                         32      2  Zero  Gb  menus.o
  0x200004E4  Ex_chans                           32      2  Zero  Gb  menus.o
  0x20000504  CsTimer                            24      2  Zero  Gb  er9x.o
  0x2000051C  s_anaFilt                          16      2  Zero  Gb  er9x.o
  0x2000052C  g_ppmIns                           16      2  Zero  Gb  er9x.o
  0x2000053C  Nvs_timer                          16      2  Zero  Gb  er9x.o
  0x2000054C  calibratedStick                    14      2  Zero  Gb  menus.o
  0x2000055A  theWriteFile                       10      2  Zero  Gb  pers.o
  0x20000564  theFile                            10      2  Zero  Gb  pers.o
  0x2000056E  P1values                           10      2  Zero  Gb  er9x.o
  0x20000578  TimeGlobals                         8      2  Zero  Gb  menus.o
  0x20000580  Inactivity                          6      2  Zero  Gb  er9x.o
  0x20000586  g_latency                           2      2  Zero  Gb  menus.o
  0x20000588  g_LightOffCounter                   2      2  Zero  Gb  er9x.o
  0x2000058A  trace()::s_time                     2      2  Zero  Lc  menus.o
  0x2000058C  ActionAFHDS2A::packet_counter
                                                  2      2  Zero  Lc  AFHDS2A_a7105.o
  0x2000058E  mainSequence()::timer               2      2  Zero  Lc  er9x.o
  0x20000590  s_eeDirtyTime10ms                   2      2  Zero  Lc  pers.o
  0x20000592  SPI_Size                            2      2  Zero  Gb  BoardI6.o
  0x20000594  GAltOffset                          2      2  Zero  Gb  AFHDS2A_a7105.o
  0x20000596  B3_comp_value                       2      2  Zero  Gb  pulses.o
  0x20000598  AltOffset                           2      2  Zero  Gb  AFHDS2A_a7105.o
  0x2000059A  g_model                         1 002         Zero  Gb  er9x.o
  0x20000984  fields                            256         Zero  Lc  elrsV2.o
  0x20000A84  telemetryRxBuffer                 128         Zero  Gb  crossfire.o
  0x20000B04  g_eeGeneral                       118         Zero  Gb  er9x.o
  0x20000B7A  audio                              56         Zero  Gb  er9x.o
  0x20000BB2  keys                               45         Zero  Gb  drivers.o
  0x20000BDF  AFHDS2A_tel_res_cnt                43         Zero  Gb  AFHDS2A_a7105.o
  0x20000C0A  hopping_frequency                  16         Zero  Gb  A7105_SPI.o
  0x20000C1A  Last_switch                        12         Zero  Gb  er9x.o
  0x20000C26  voice_uart_recv_buf                10         Zero  Gb  BoardI6.o
  0x20000C30  TimerConfig                        10         Zero  Gb  er9x.o
  0x20000C3A  Rotary                              9         Zero  Gb  er9x.o
  0x20000C43  deviceIds                           8         Zero  Lc  elrsV2.o
  0x20000C4B  Nvs_state                           8         Zero  Gb  er9x.o
  0x20000C53  phyStick                            4         Zero  Gb  menus.o
  0x20000C57  PopupData                           4         Zero  Gb  menus.o
  0x20000C5B  MenuControl                         3         Zero  Gb  menus.o
  0x20000C5E  voice_rx_idx                        1         Zero  Gb  BoardI6.o
  0x20000C5F  valuesBufferOffset                  1         Zero  Gb  elrsV2.o
  0x20000C60  tick10ms                            1         Zero  Gb  er9x.o
  0x20000C61  telemetryRxBufferCount              1         Zero  Gb  crossfire.o
  0x20000C62  sysFlags                            1         Zero  Gb  er9x.o
  0x20000C63  stickMoved                          1         Zero  Gb  er9x.o
  0x20000C64  statusComplete                      1         Zero  Gb  elrsV2.o
  0x20000C65  serialDat0                          1         Zero  Gb  pulses.o
  0x20000C66  scroll_disabled                     1         Zero  Gb  menus.o
  0x20000C67  scrollUD                            1         Zero  Gb  menus.o
  0x20000C68  scrollLR                            1         Zero  Gb  menus.o
  0x20000C69  s_pgOfs                             1         Zero  Gb  menus.o
  0x20000C6A  s_noHi                              1         Zero  Gb  menus.o
  0x20000C6B  s_moveMode                          1         Zero  Gb  menus.o
  0x20000C6C  s_mixMaxSel                         1         Zero  Gb  menus.o
  0x20000C6D  s_evt                               1         Zero  Gb  drivers.o
  0x20000C6E  s_editing                           1         Zero  Gb  menus.o
  0x20000C6F  s_editMode                          1         Zero  Gb  menus.o
  0x20000C70  reloadFolder                        1         Zero  Gb  elrsV2.o
  0x20000C71  pxxFlag                             1         Zero  Gb  pulses.o
  0x20000C72  protocol_flags                      1         Zero  Gb  A7105_SPI.o
  0x20000C73  ppmInAvailable                      1         Zero  Gb  er9x.o
  0x20000C74  plotType                            1         Zero  Gb  lcd.o
  0x20000C75  pageOffset                          1         Zero  Gb  elrsV2.o
  0x20000C76  packet_count                        1         Zero  Gb  A7105_SPI.o
  0x20000C77  outputTelemetryBufferTrigger
                                                  1         Zero  Gb  crossfire.o
  0x20000C78  outputTelemetryBufferSize           1         Zero  Gb  crossfire.o
  0x20000C79  namesBufferOffset                   1         Zero  Gb  elrsV2.o
  0x20000C7A  mixToDelete                         1         Zero  Gb  menus.o
  0x20000C7B  hopping_frequency_no                1         Zero  Gb  A7105_SPI.o
  0x20000C7C  heartbeat                           1         Zero  Gb  pulses.o
  0x20000C7D  g_vbat100mV                         1         Zero  Gb  er9x.o
  0x20000C7E  g_posHorz                           1         Zero  Gb  menus.o
  0x20000C7F  g_menuStackPtr                      1         Zero  Gb  er9x.o
  0x20000C80  g_blinkTmr10ms                      1         Zero  Gb  drivers.o
  0x20000C81  folderAccess                        1         Zero  Gb  elrsV2.o
  0x20000C82  fields_count                        1         Zero  Gb  elrsV2.o
  0x20000C83  fieldsLen                           1         Zero  Gb  elrsV2.o
  0x20000C84  fieldDataLen                        1         Zero  Gb  elrsV2.o
  0x20000C85  fieldChunk                          1         Zero  Gb  elrsV2.o
  0x20000C86  edit                                1         Zero  Gb  elrsV2.o
  0x20000C87  devicesLen                          1         Zero  Gb  elrsV2.o
  0x20000C88  deviceIsELRS_TX                     1         Zero  Gb  elrsV2.o
  0x20000C89  bpanaCenter                         1         Zero  Gb  menus.o
  0x20000C8A  bind_phase                          1         Zero  Gb  A7105_SPI.o
  0x20000C8B  allParamsLoaded                     1         Zero  Gb  elrsV2.o
  0x20000C8C  MState2::check_columns(unsigned char, unsigned char)::lateUp
                                                  1         Zero  Lc  menus.o
  0x20000C8D  audioQueue::driver()::toneCounter
                                                  1         Zero  Wk  er9x.o
  0x20000C8E  perMain()::repeater                 1         Zero  Lc  er9x.o
  0x20000C8F  perMain()::alertKey                 1         Zero  Lc  er9x.o
  0x20000C90  perMain()::s_batCheck               1         Zero  Lc  er9x.o
  0x20000C91  menuProc0(unsigned char)::trimSwLock
                                                  1         Zero  Lc  menus.o
  0x20000C92  per10ms()::current                  1         Zero  Lc  drivers.o
  0x20000C93  perOut(short*, unsigned char)::sticky
                                                  1         Zero  Lc  menus.o
  0x20000C94  check_backlight_voice()::tmr10ms
                                                  1         Zero  Lc  er9x.o
  0x20000C95  menuProcModelSelect(unsigned char)::mstate2
                                                  1         Zero  Lc  menus.o
  0x20000C96  menuProcModelSelect(unsigned char)::sel_editMode
                                                  1         Zero  Lc  menus.o
  0x20000C97  menuProcVoiceAlarm(unsigned char)::mstate2
                                                  1         Zero  Lc  menus.o
  0x20000C98  menuProcModelIndex(unsigned char)::mstate
                                                  1         Zero  Lc  menus.o
  0x20000C99  menuProcTelemetry(unsigned char)::mstate2
                                                  1         Zero  Lc  menus.o
  0x20000C9A  menuProcVoiceOne(unsigned char)::mstate2
                                                  1         Zero  Lc  menus.o
  0x20000C9B  menuProcProtocol(unsigned char)::mstate2
                                                  1         Zero  Lc  menus.o
  0x20000C9C  menuProcCurveOne(unsigned char)::mstate2
                                                  1         Zero  Lc  menus.o
  0x20000C9D  menuProcCurveOne(unsigned char)::dfltCrv
                                                  1         Zero  Lc  menus.o
  0x20000C9E  menuSetFailsafe(unsigned char)::mstate2
                                                  1         Zero  Lc  menus.o
  0x20000C9F  menuProcGlobals(unsigned char)::mstate2
                                                  1         Zero  Lc  menus.o
  0x20000CA0  menuModelPhases(unsigned char)::mstate2
                                                  1         Zero  Lc  menus.o
  0x20000CA1  A7105_AntSwitch()::sw               1         Zero  Lc  A7105_SPI.o
  0x20000CA2  menuProcMixOne(unsigned char)::mstate2
                                                  1         Zero  Lc  menus.o
  0x20000CA3  menuRangeBind(unsigned char)::timer
                                                  1         Zero  Lc  menus.o
  0x20000CA4  menuProcIndex(unsigned char)::mstate
                                                  1         Zero  Lc  menus.o
  0x20000CA5  menuProcCurve(unsigned char)::mstate2
                                                  1         Zero  Lc  menus.o
  0x20000CA6  ActionAFHDS2A::packet_type
                                                  1         Zero  Lc  AFHDS2A_a7105.o
  0x20000CA7  menuScaleOne(unsigned char)::mstate2
                                                  1         Zero  Lc  menus.o
  0x20000CA8  menuPhaseOne(unsigned char)::mstate2
                                                  1         Zero  Lc  menus.o
  0x20000CA9  perOutPhase(short*, unsigned char)::lastPhase
                                                  1         Zero  Lc  menus.o
  0x20000CAA  menuRXSetup(unsigned char)::mstate2
                                                  1         Zero  Lc  menus.o
  0x20000CAB  menuProcMix(unsigned char)::mstate2
                                                  1         Zero  Lc  menus.o
  0x20000CAC  s_currIdx                           1         Zero  Lc  menus.o
  0x20000CAD  Columns                             1         Zero  Lc  menus.o
  0x20000CAE  wait_fin_count                      1         Zero  Lc  audio.o
  0x20000CAF  inputs_subview                      1         Zero  Lc  menus.o
  0x20000CB0  s_eeLongTimer                       1         Zero  Lc  pers.o
  0x20000CB1  LongMenuTimer                       1         Zero  Lc  er9x.o
  0x20000CB2  s_moveMixIdx                        1         Zero  Lc  menus.o
  0x20000CB3  s_eeDirtyMsk                        1         Zero  Lc  pers.o
  0x20000CB4  s_currMixIdx                        1         Zero  Lc  menus.o
  0x20000CB5  s_currDestCh                        1         Zero  Lc  menus.o
  0x20000CB6  s_curveChan                         1         Zero  Lc  menus.o
  0x20000CB7  IlinesCount                         1         Zero  Lc  menus.o
  0x20000CB8  s_expoChan                          1         Zero  Lc  menus.o
  0x20000CB9  ThrottleStickyOn                    1         Zero  Gb  menus.o
  0x20000CBA  Tevent                              1         Zero  Gb  er9x.o
  0x20000CBB  SystemOptions                       1         Zero  Gb  er9x.o
  0x20000CBC  StickScrollTimer                    1         Zero  Gb  er9x.o
  0x20000CBD  StickScrollAllowed                  1         Zero  Gb  er9x.o
  0x20000CBE  StepSize                            1         Zero  Gb  er9x.o
  0x20000CBF  RotaryState                         1         Zero  Gb  menus.o
  0x20000CC0  RadioState                          1         Zero  Gb  A7105_SPI.o
  0x20000CC1  RadioActive                         1         Zero  Gb  pulses.o
  0x20000CC2  PausePulses                         1         Zero  Gb  pulses.o
  0x20000CC3  Main_running                        1         Zero  Gb  er9x.o
  0x20000CC4  M_longMenuTimer                     1         Zero  Gb  menus.o
  0x20000CC5  Lcd_lastPos                         1         Zero  Gb  lcd.o
  0x20000CC6  LcdLock                             1         Zero  Gb  lcd.o
  0x20000CC7  InverseBlink                        1         Zero  Gb  menus.o
  0x20000CC8  EnterMenu                           1         Zero  Gb  er9x.o
  0x20000CC9  EepromActive                        1         Zero  Gb  lcd.o
  0x20000CCA  Ee_lock                             1         Zero  Gb  pers.o
  0x20000CCB  EditType                            1         Zero  Gb  menus.o
  0x20000CCC  EditColumns                         1         Zero  Gb  menus.o
  0x20000CCD  DupSub                              1         Zero  Gb  menus.o
  0x20000CCE  DupIfNonzero                        1         Zero  Gb  menus.o
  0x20000CCF  Current_protocol                    1         Zero  Gb  pulses.o
  0x20000CD0  CurrentVolume                       1         Zero  Gb  er9x.o
  0x20000CD1  CurrentPhase                        1         Zero  Gb  menus.o
  0x20000CD2  CalcScaleNest                       1         Zero  Gb  menus.o
  0x20000CD3  prev_power                          1         Init  Gb  A7105_SPI.o
  0x20000CD4  devicesRefreshTimeout               4      4  Init  Gb  elrsV2.o
  0x20000CD8  AFHDS2A_update_telemetry()::Dacc
                                                  4      4  Init  Lc  AFHDS2A_a7105.o
  0x20000CDC  ISR_TIMER1_COMPA_vect::pulsePtr
                                                  4      4  Init  Lc  pulses.o
  0x20000CE0  A7105_AdjustLOBaseFreq()::old_offset
                                                  2      2  Init  Lc  A7105_SPI.o
  0x20000CE2  play_cmd_buf                       10         Init  Gb  audio.o
  0x20000CEC  AlarmControl                        4         Init  Gb  er9x.o
  0x20000CF0  otherDevicesId                      1         Init  Gb  elrsV2.o
  0x20000CF1  lineIndex                           1         Init  Gb  elrsV2.o
  0x20000CF2  handsetId                           1         Init  Gb  elrsV2.o
  0x20000CF3  fieldId                             1         Init  Gb  elrsV2.o
  0x20000CF4  expectedChunks                      1         Init  Gb  elrsV2.o
  0x20000CF5  deviceId                            1         Init  Gb  elrsV2.o
  0x20000CF6  backButtonId                        1         Init  Gb  elrsV2.o

Read-write data symbols by descending size:

  Symbol name                      Size  Align  Type  Bd  Object File
  -------------------------  ----------  -----  ----  --  -----------
  DisplayBuf                      1 024      4  Zero  Gb  lcd.o
  g_model                         1 002         Zero  Gb  er9x.o
  ota_crc                           514      2  Zero  Gb  ELRS.o
  reusableBuffer                    512      4  Zero  Lc  elrsV2.o
  Output                            256      4  Zero  Gb  menus.o
  fields                            256         Zero  Lc  elrsV2.o
  AFHDS2A_tel_data                  172      4  Zero  Gb  AFHDS2A_a7105.o
  pulses2MHz                        144      2  Zero  Gb  pulses.o
  telemetryRxBuffer                 128         Zero  Gb  crossfire.o
  g_eeGeneral                       118         Zero  Gb  er9x.o
  Xmem                              106      2  Zero  Gb  menus.o
  Fade                               80      4  Zero  Gb  menus.o
  g_crossfire                        65      4  Zero  Gb  crossfire.o
  eeFs                               64      4  Zero  Gb  file.o
  audio                              56         Zero  Gb  er9x.o
  Radio                              48      4  Zero  Gb  ELRS.o
  keys                               45         Zero  Gb  drivers.o
  AFHDS2A_tel_res_cnt                43         Zero  Gb  AFHDS2A_a7105.o
  packet                             40      4  Zero  Gb  A7105_SPI.o
  Voice                              36      2  Zero  Gb  audio.o
  Ex_chans                           32      2  Zero  Gb  menus.o
  g_chans512                         32      2  Zero  Gb  menus.o
  s_timer                            32      2  Zero  Gb  menus.o
  CsTimer                            24      2  Zero  Gb  er9x.o
  g_menuStack                        20      4  Zero  Gb  er9x.o
  MspSender                          16      4  Zero  Gb  ELRS.o
  Nvs_timer                          16      2  Zero  Gb  er9x.o
  g_ppmIns                           16      2  Zero  Gb  er9x.o
  hopping_frequency                  16         Zero  Gb  A7105_SPI.o
  outputTelemetryBuffer              16      4  Zero  Gb  crossfire.o
  s_anaFilt                          16      2  Zero  Gb  er9x.o
  calibratedStick                    14      2  Zero  Gb  menus.o
  LQCalc                             12      4  Zero  Gb  ELRS.o
  Last_switch                        12         Zero  Gb  er9x.o
  TelemetryReceiver                  12      4  Zero  Gb  ELRS.o
  i2c_buffer                         12      4  Zero  Gb  drivers.o
  P1values                           10      2  Zero  Gb  er9x.o
  TimerConfig                        10         Zero  Gb  er9x.o
  play_cmd_buf                       10         Init  Gb  audio.o
  theFile                            10      2  Zero  Gb  pers.o
  theWriteFile                       10      2  Zero  Gb  pers.o
  voice_uart_recv_buf                10         Zero  Gb  BoardI6.o
  voice_uart_send_buf                10      4  Zero  Gb  BoardI6.o
  Rotary                              9         Zero  Gb  er9x.o
  AFHDS2A_tel_status                  8      8  Zero  Gb  AFHDS2A_a7105.o
  Nvs_state                           8         Zero  Gb  er9x.o
  TimeGlobals                         8      2  Zero  Gb  menus.o
  deviceIds                           8         Zero  Lc  elrsV2.o
  Inactivity                          6      2  Zero  Gb  er9x.o
  AFHDS2A_update_telemetry()::Dacc
                                      4      4  Init  Lc  AFHDS2A_a7105.o
  AlarmControl                        4         Init  Gb  er9x.o
  AlertMessage                        4      4  Zero  Gb  er9x.o
  ID                                  4      4  Zero  Gb  A7105_SPI.o
  ISR_TIMER1_COMPA_vect::pulsePtr
                                      4      4  Init  Lc  pulses.o
  PopupData                           4         Zero  Gb  menus.o
  SPI_BufferPtr                       4      4  Zero  Gb  BoardI6.o
  SX127xDriver::instance              4      4  Zero  Gb  SX127x.o
  SX127xHal::instance                 4      4  Zero  Gb  SX127xHal.o
  __SEGGER_RTL_heap_globals           4      4  Zero  Lc  heapops_basic.o (heapops_basic_v6m_little.a)
  devicesRefreshTimeout               4      4  Init  Gb  elrsV2.o
  fieldPopup                          4      4  Zero  Lc  elrsV2.o
  fieldTimeout                        4      4  Zero  Gb  elrsV2.o
  g_crsf_read_callback                4      4  Zero  Lc  BoardI6.o
  g_elrs_lag                          4      4  Zero  Gb  crossfire.o
  g_elrs_update_rate                  4      4  Zero  Gb  crossfire.o
  g_tmr10ms                           4      4  Zero  Gb  drivers.o
  g_voice_cb                          4      4  Zero  Gb  BoardI6.o
  hal                                 4      4  Zero  Gb  SX127x.o
  perMain()::lastTMR                  4      4  Zero  Lc  er9x.o
  phyStick                            4         Zero  Gb  menus.o
  telemetryErrors                     4      4  Zero  Gb  crossfire.o
  MenuControl                         3         Zero  Gb  menus.o
  A7105_AdjustLOBaseFreq()::old_offset
                                      2      2  Init  Lc  A7105_SPI.o
  ActionAFHDS2A::packet_counter
                                      2      2  Zero  Lc  AFHDS2A_a7105.o
  AltOffset                           2      2  Zero  Gb  AFHDS2A_a7105.o
  B3_comp_value                       2      2  Zero  Gb  pulses.o
  GAltOffset                          2      2  Zero  Gb  AFHDS2A_a7105.o
  SPI_Size                            2      2  Zero  Gb  BoardI6.o
  g_LightOffCounter                   2      2  Zero  Gb  er9x.o
  g_latency                           2      2  Zero  Gb  menus.o
  g_tmr16KHz                          2      2  Zero  Gb  er9x.o
  mainSequence()::timer               2      2  Zero  Lc  er9x.o
  s_eeDirtyTime10ms                   2      2  Zero  Lc  pers.o
  tmrEEPROM                           2      2  Zero  Gb  er9x.o
  trace()::s_time                     2      2  Zero  Lc  menus.o
  A7105_AntSwitch()::sw               1         Zero  Lc  A7105_SPI.o
  ActionAFHDS2A::packet_type
                                      1         Zero  Lc  AFHDS2A_a7105.o
  CalcScaleNest                       1         Zero  Gb  menus.o
  Columns                             1         Zero  Lc  menus.o
  CurrentPhase                        1         Zero  Gb  menus.o
  CurrentVolume                       1         Zero  Gb  er9x.o
  Current_protocol                    1         Zero  Gb  pulses.o
  DupIfNonzero                        1         Zero  Gb  menus.o
  DupSub                              1         Zero  Gb  menus.o
  EditColumns                         1         Zero  Gb  menus.o
  EditType                            1         Zero  Gb  menus.o
  Ee_lock                             1         Zero  Gb  pers.o
  EepromActive                        1         Zero  Gb  lcd.o
  EnterMenu                           1         Zero  Gb  er9x.o
  IlinesCount                         1         Zero  Lc  menus.o
  InverseBlink                        1         Zero  Gb  menus.o
  LcdLock                             1         Zero  Gb  lcd.o
  Lcd_lastPos                         1         Zero  Gb  lcd.o
  LongMenuTimer                       1         Zero  Lc  er9x.o
  MState2::check_columns(unsigned char, unsigned char)::lateUp
                                      1         Zero  Lc  menus.o
  M_longMenuTimer                     1         Zero  Gb  menus.o
  Main_running                        1         Zero  Gb  er9x.o
  PausePulses                         1         Zero  Gb  pulses.o
  RadioActive                         1         Zero  Gb  pulses.o
  RadioState                          1         Zero  Gb  A7105_SPI.o
  RotaryState                         1         Zero  Gb  menus.o
  StepSize                            1         Zero  Gb  er9x.o
  StickScrollAllowed                  1         Zero  Gb  er9x.o
  StickScrollTimer                    1         Zero  Gb  er9x.o
  SystemOptions                       1         Zero  Gb  er9x.o
  Tevent                              1         Zero  Gb  er9x.o
  ThrottleStickyOn                    1         Zero  Gb  menus.o
  allParamsLoaded                     1         Zero  Gb  elrsV2.o
  audioQueue::driver()::toneCounter
                                      1         Zero  Wk  er9x.o
  backButtonId                        1         Init  Gb  elrsV2.o
  bind_phase                          1         Zero  Gb  A7105_SPI.o
  bpanaCenter                         1         Zero  Gb  menus.o
  check_backlight_voice()::tmr10ms
                                      1         Zero  Lc  er9x.o
  deviceId                            1         Init  Gb  elrsV2.o
  deviceIsELRS_TX                     1         Zero  Gb  elrsV2.o
  devicesLen                          1         Zero  Gb  elrsV2.o
  edit                                1         Zero  Gb  elrsV2.o
  expectedChunks                      1         Init  Gb  elrsV2.o
  fieldChunk                          1         Zero  Gb  elrsV2.o
  fieldDataLen                        1         Zero  Gb  elrsV2.o
  fieldId                             1         Init  Gb  elrsV2.o
  fieldsLen                           1         Zero  Gb  elrsV2.o
  fields_count                        1         Zero  Gb  elrsV2.o
  folderAccess                        1         Zero  Gb  elrsV2.o
  g_blinkTmr10ms                      1         Zero  Gb  drivers.o
  g_menuStackPtr                      1         Zero  Gb  er9x.o
  g_posHorz                           1         Zero  Gb  menus.o
  g_vbat100mV                         1         Zero  Gb  er9x.o
  handsetId                           1         Init  Gb  elrsV2.o
  heartbeat                           1         Zero  Gb  pulses.o
  hopping_frequency_no                1         Zero  Gb  A7105_SPI.o
  inputs_subview                      1         Zero  Lc  menus.o
  lineIndex                           1         Init  Gb  elrsV2.o
  menuModelPhases(unsigned char)::mstate2
                                      1         Zero  Lc  menus.o
  menuPhaseOne(unsigned char)::mstate2
                                      1         Zero  Lc  menus.o
  menuProc0(unsigned char)::trimSwLock
                                      1         Zero  Lc  menus.o
  menuProcCurve(unsigned char)::mstate2
                                      1         Zero  Lc  menus.o
  menuProcCurveOne(unsigned char)::dfltCrv
                                      1         Zero  Lc  menus.o
  menuProcCurveOne(unsigned char)::mstate2
                                      1         Zero  Lc  menus.o
  menuProcGlobals(unsigned char)::mstate2
                                      1         Zero  Lc  menus.o
  menuProcIndex(unsigned char)::mstate
                                      1         Zero  Lc  menus.o
  menuProcMix(unsigned char)::mstate2
                                      1         Zero  Lc  menus.o
  menuProcMixOne(unsigned char)::mstate2
                                      1         Zero  Lc  menus.o
  menuProcModelIndex(unsigned char)::mstate
                                      1         Zero  Lc  menus.o
  menuProcModelSelect(unsigned char)::mstate2
                                      1         Zero  Lc  menus.o
  menuProcModelSelect(unsigned char)::sel_editMode
                                      1         Zero  Lc  menus.o
  menuProcProtocol(unsigned char)::mstate2
                                      1         Zero  Lc  menus.o
  menuProcTelemetry(unsigned char)::mstate2
                                      1         Zero  Lc  menus.o
  menuProcVoiceAlarm(unsigned char)::mstate2
                                      1         Zero  Lc  menus.o
  menuProcVoiceOne(unsigned char)::mstate2
                                      1         Zero  Lc  menus.o
  menuRXSetup(unsigned char)::mstate2
                                      1         Zero  Lc  menus.o
  menuRangeBind(unsigned char)::timer
                                      1         Zero  Lc  menus.o
  menuScaleOne(unsigned char)::mstate2
                                      1         Zero  Lc  menus.o
  menuSetFailsafe(unsigned char)::mstate2
                                      1         Zero  Lc  menus.o
  mixToDelete                         1         Zero  Gb  menus.o
  namesBufferOffset                   1         Zero  Gb  elrsV2.o
  otherDevicesId                      1         Init  Gb  elrsV2.o
  outputTelemetryBufferSize           1         Zero  Gb  crossfire.o
  outputTelemetryBufferTrigger
                                      1         Zero  Gb  crossfire.o
  packet_count                        1         Zero  Gb  A7105_SPI.o
  pageOffset                          1         Zero  Gb  elrsV2.o
  per10ms()::current                  1         Zero  Lc  drivers.o
  perMain()::alertKey                 1         Zero  Lc  er9x.o
  perMain()::repeater                 1         Zero  Lc  er9x.o
  perMain()::s_batCheck               1         Zero  Lc  er9x.o
  perOut(short*, unsigned char)::sticky
                                      1         Zero  Lc  menus.o
  perOutPhase(short*, unsigned char)::lastPhase
                                      1         Zero  Lc  menus.o
  plotType                            1         Zero  Gb  lcd.o
  ppmInAvailable                      1         Zero  Gb  er9x.o
  prev_power                          1         Init  Gb  A7105_SPI.o
  protocol_flags                      1         Zero  Gb  A7105_SPI.o
  pxxFlag                             1         Zero  Gb  pulses.o
  reloadFolder                        1         Zero  Gb  elrsV2.o
  s_currDestCh                        1         Zero  Lc  menus.o
  s_currIdx                           1         Zero  Lc  menus.o
  s_currMixIdx                        1         Zero  Lc  menus.o
  s_curveChan                         1         Zero  Lc  menus.o
  s_editMode                          1         Zero  Gb  menus.o
  s_editing                           1         Zero  Gb  menus.o
  s_eeDirtyMsk                        1         Zero  Lc  pers.o
  s_eeLongTimer                       1         Zero  Lc  pers.o
  s_evt                               1         Zero  Gb  drivers.o
  s_expoChan                          1         Zero  Lc  menus.o
  s_mixMaxSel                         1         Zero  Gb  menus.o
  s_moveMixIdx                        1         Zero  Lc  menus.o
  s_moveMode                          1         Zero  Gb  menus.o
  s_noHi                              1         Zero  Gb  menus.o
  s_pgOfs                             1         Zero  Gb  menus.o
  scrollLR                            1         Zero  Gb  menus.o
  scrollUD                            1         Zero  Gb  menus.o
  scroll_disabled                     1         Zero  Gb  menus.o
  serialDat0                          1         Zero  Gb  pulses.o
  statusComplete                      1         Zero  Gb  elrsV2.o
  stickMoved                          1         Zero  Gb  er9x.o
  sysFlags                            1         Zero  Gb  er9x.o
  telemetryRxBufferCount              1         Zero  Gb  crossfire.o
  tick10ms                            1         Zero  Gb  er9x.o
  valuesBufferOffset                  1         Zero  Gb  elrsV2.o
  voice_rx_idx                        1         Zero  Gb  BoardI6.o
  voice_tx_idx                        1         Zero  Gb  BoardI6.o
  wait_fin_count                      1         Zero  Lc  audio.o

Read-only data symbols by name:

  Symbol name                   Address        Size  Align  Type  Bd  Object File
  -------------------------  ----------  ----------  -----  ----  --  -----------
  AFHDS2A_A7105_regs         0x0000F02A          50         Cnst  Gb  BoardI6.o
  AFHDS2A_tel                0x0000EBF6          88         Cnst  Gb  AFHDS2A_a7105.o
  ChannelToPin               0x0000FAAA           7         Cnst  Lc  BoardI6.o
  Curve_Str                  0x0000ED82          74         Cnst  Gb  menus.o
  Lcdinit                    0x0000F85D          12         Cnst  Lc  lcd.o
  MixPopList                 0x0000F23C          39         Cnst  Lc  menus.o
  ModelPopList               0x0000F263          38         Cnst  Lc  menus.o
  SW_3_IDX                   0x0000F39C          30         Cnst  Lc  menus.o
  Stamps                     0x0000F05C          49         Cnst  Gb  stamp.o
  Str_1_RETA                 0x0000FB01           6         Cnst  Lc  menus.o
  Str_Alarms                 0x0000FABF           7         Cnst  Lc  menus.o
  Str_Alert                  0x0000FAA3           7         Cnst  Lc  er9x.o
  Str_AudioHaptic            0x0000F881          12         Cnst  Lc  menus.o
  Str_Beep_Countdown         0x0000F73F          15         Cnst  Lc  menus.o
  Str_Calibration            0x0000F875          12         Cnst  Lc  menus.o
  Str_Chans_Gv               0x0000E9FF         166         Cnst  Gb  menus.o
  Str_Controls               0x0000F9AF           9         Cnst  Lc  menus.o
  Str_Cswitch                0x0000EB22         114         Cnst  Lc  menus.o
  Str_Cswitches              0x0000F8E0          11         Cnst  Lc  menus.o
  Str_Curve                  0x0000FAFB           6         Cnst  Lc  menus.o
  Str_Curves                 0x0000FAB8           7         Cnst  Lc  menus.o
  Str_DiagAna                0x0000FA63           8         Cnst  Lc  menus.o
  Str_DiagSwtch              0x0000F94D          10         Cnst  Lc  menus.o
  Str_Display                0x0000FA5B           8         Cnst  Lc  menus.o
  Str_EEPROM_Overflow        0x0000F6AF          16         Cnst  Lc  pers.o
  Str_Expo                   0x0000FA33           8         Cnst  Lc  menus.o
  Str_GV                     0x0000FB85           3         Cnst  Lc  menus.o
  Str_General                0x0000FA53           8         Cnst  Lc  menus.o
  Str_Globals                0x0000F8EB          11         Cnst  Lc  menus.o
  Str_Gv_Source              0x0000F1C2          41         Cnst  Lc  menus.o
  Str_Hardware               0x0000F9A6           9         Cnst  Lc  menus.o
  Str_Hyphens                0x0000FB2A           5         Cnst  Lc  er9x.o
  Str_Main_Popup             0x0000EF17          58         Cnst  Lc  menus.o
  Str_Mixer                  0x0000FAF5           6         Cnst  Lc  menus.o
  Str_Modes                  0x0000FAEF           6         Cnst  Lc  menus.o
  Str_Name                   0x0000FB25           5         Cnst  Lc  menus.o
  Str_OFF                    0x0000FB5A           4         Cnst  Gb  er9x.o
  Str_ON                     0x0000FB56           4         Cnst  Gb  er9x.o
  Str_On_Off_Both            0x0000F516          22         Cnst  Lc  menus.o
  Str_Protocol               0x0000F99D           9         Cnst  Lc  menus.o
  Str_SC                     0x0000FB82           3         Cnst  Lc  menus.o
  Str_Safety                 0x0000F8F6          11         Cnst  Lc  menus.o
  Str_Sounds                 0x0000EB94          98         Cnst  Lc  menus.o
  Str_Switches               0x0000EE56          65         Cnst  Gb  er9x.o
  Str_TRE012AG               0x0000F957          10         Cnst  Lc  menus.o
  Str_Telemetry              0x0000F943          10         Cnst  Lc  menus.o
  Str_Timer                  0x0000FAE9           6         Cnst  Lc  menus.o
  Str_Trainer                0x0000FA4B           8         Cnst  Lc  menus.o
  Str_Version                0x0000FA43           8         Cnst  Lc  menus.o
  Str_heli_setup             0x0000F8D5          11         Cnst  Lc  menus.o
  Str_limits                 0x0000FAB1           7         Cnst  Lc  menus.o
  Str_minute_Beep            0x0000F869          12         Cnst  Lc  menus.o
  Str_telemItems             0x0000E7D7         296         Cnst  Gb  menus.o
  TelemIndex                 0x0000EF51          58         Cnst  Gb  menus.o
  UnitsString                0x0000F198          42         Cnst  Lc  menus.o
  UnitsText                  0x0000FA23           8         Cnst  Lc  menus.o
  UnitsVoice                 0x0000FA6B           8         Cnst  Lc  menus.o
  __SEGGER_init_data__       0x0000FBD4        [36]      4  Cnst  Lc  [ Linker created ]
  __SEGGER_init_table__      0x0000FBAC        [40]      4  Cnst  Lc  [ Linker created ]
  _bitmask                   0x0000FA2B           8         Cnst  Lc  lcd.o
  bchout_ar                  0x0000F4B7          24         Cnst  Gb  er9x.o
  crc8tab                    0x0000E8FF         256         Cnst  Lc  crc_crsf.o
  csTypeTable                0x0000F74E          15         Cnst  Lc  er9x.o
  font                       0x0000E5E8         495         Cnst  Lc  lcd.o
  font_dblsize               0x0000E084       1 380         Cnst  Lc  lcd.o
  functions                  0x0000BC4C          72      4  Cnst  Lc  elrsV2.o
  idx_to_afhds2a             0x0000F3BA          30         Cnst  Lc  crossfire.o
  menuProc0(unsigned char)::xt
                             0x0000FB52           4         Cnst  Lc  menus.o
  menuProcIndex(unsigned char)::n_Strings
                             0x0000C814          44      4  Cnst  Lc  menus.o
  menuProcModelIndex(unsigned char)::n_Strings
                             0x0000C2C8          56      4  Cnst  Lc  menus.o
  menuWhenDone               0x0000F617          17         Cnst  Lc  menus.o
  modi12x3                   0x0000F5BD          18         Cnst  Gb  er9x.o
  per10ms()::crossTrim       0x0000FA1B           8         Cnst  Lc  drivers.o
  processCrossfireTelemetryFrame()::power_values
                             0x0000CB90          36      4  Cnst  Lc  crossfire.o
  rate                       0x0000FA3B           8         Cnst  Lc  er9x.o
  s_charTab                  0x0000EE13          67         Cnst  Lc  menus.o
  stickScramble              0x0000F69F          16         Cnst  Gb  er9x.o
  sticks                     0x0000ECEC          75         Cnst  Lc  menus.o

Read-only data symbols by address:

     Address  Symbol name                      Size  Align  Type  Bd  Object File
  ----------  -------------------------  ----------  -----  ----  --  -----------
  0x0000BC4C  functions                          72      4  Cnst  Lc  elrsV2.o
  0x0000C2C8  menuProcModelIndex(unsigned char)::n_Strings
                                                 56      4  Cnst  Lc  menus.o
  0x0000C814  menuProcIndex(unsigned char)::n_Strings
                                                 44      4  Cnst  Lc  menus.o
  0x0000CB90  processCrossfireTelemetryFrame()::power_values
                                                 36      4  Cnst  Lc  crossfire.o
  0x0000E084  font_dblsize                    1 380         Cnst  Lc  lcd.o
  0x0000E5E8  font                              495         Cnst  Lc  lcd.o
  0x0000E7D7  Str_telemItems                    296         Cnst  Gb  menus.o
  0x0000E8FF  crc8tab                           256         Cnst  Lc  crc_crsf.o
  0x0000E9FF  Str_Chans_Gv                      166         Cnst  Gb  menus.o
  0x0000EB22  Str_Cswitch                       114         Cnst  Lc  menus.o
  0x0000EB94  Str_Sounds                         98         Cnst  Lc  menus.o
  0x0000EBF6  AFHDS2A_tel                        88         Cnst  Gb  AFHDS2A_a7105.o
  0x0000ECEC  sticks                             75         Cnst  Lc  menus.o
  0x0000ED82  Curve_Str                          74         Cnst  Gb  menus.o
  0x0000EE13  s_charTab                          67         Cnst  Lc  menus.o
  0x0000EE56  Str_Switches                       65         Cnst  Gb  er9x.o
  0x0000EF17  Str_Main_Popup                     58         Cnst  Lc  menus.o
  0x0000EF51  TelemIndex                         58         Cnst  Gb  menus.o
  0x0000F02A  AFHDS2A_A7105_regs                 50         Cnst  Gb  BoardI6.o
  0x0000F05C  Stamps                             49         Cnst  Gb  stamp.o
  0x0000F198  UnitsString                        42         Cnst  Lc  menus.o
  0x0000F1C2  Str_Gv_Source                      41         Cnst  Lc  menus.o
  0x0000F23C  MixPopList                         39         Cnst  Lc  menus.o
  0x0000F263  ModelPopList                       38         Cnst  Lc  menus.o
  0x0000F39C  SW_3_IDX                           30         Cnst  Lc  menus.o
  0x0000F3BA  idx_to_afhds2a                     30         Cnst  Lc  crossfire.o
  0x0000F4B7  bchout_ar                          24         Cnst  Gb  er9x.o
  0x0000F516  Str_On_Off_Both                    22         Cnst  Lc  menus.o
  0x0000F5BD  modi12x3                           18         Cnst  Gb  er9x.o
  0x0000F617  menuWhenDone                       17         Cnst  Lc  menus.o
  0x0000F69F  stickScramble                      16         Cnst  Gb  er9x.o
  0x0000F6AF  Str_EEPROM_Overflow                16         Cnst  Lc  pers.o
  0x0000F73F  Str_Beep_Countdown                 15         Cnst  Lc  menus.o
  0x0000F74E  csTypeTable                        15         Cnst  Lc  er9x.o
  0x0000F85D  Lcdinit                            12         Cnst  Lc  lcd.o
  0x0000F869  Str_minute_Beep                    12         Cnst  Lc  menus.o
  0x0000F875  Str_Calibration                    12         Cnst  Lc  menus.o
  0x0000F881  Str_AudioHaptic                    12         Cnst  Lc  menus.o
  0x0000F8D5  Str_heli_setup                     11         Cnst  Lc  menus.o
  0x0000F8E0  Str_Cswitches                      11         Cnst  Lc  menus.o
  0x0000F8EB  Str_Globals                        11         Cnst  Lc  menus.o
  0x0000F8F6  Str_Safety                         11         Cnst  Lc  menus.o
  0x0000F943  Str_Telemetry                      10         Cnst  Lc  menus.o
  0x0000F94D  Str_DiagSwtch                      10         Cnst  Lc  menus.o
  0x0000F957  Str_TRE012AG                       10         Cnst  Lc  menus.o
  0x0000F99D  Str_Protocol                        9         Cnst  Lc  menus.o
  0x0000F9A6  Str_Hardware                        9         Cnst  Lc  menus.o
  0x0000F9AF  Str_Controls                        9         Cnst  Lc  menus.o
  0x0000FA1B  per10ms()::crossTrim                8         Cnst  Lc  drivers.o
  0x0000FA23  UnitsText                           8         Cnst  Lc  menus.o
  0x0000FA2B  _bitmask                            8         Cnst  Lc  lcd.o
  0x0000FA33  Str_Expo                            8         Cnst  Lc  menus.o
  0x0000FA3B  rate                                8         Cnst  Lc  er9x.o
  0x0000FA43  Str_Version                         8         Cnst  Lc  menus.o
  0x0000FA4B  Str_Trainer                         8         Cnst  Lc  menus.o
  0x0000FA53  Str_General                         8         Cnst  Lc  menus.o
  0x0000FA5B  Str_Display                         8         Cnst  Lc  menus.o
  0x0000FA63  Str_DiagAna                         8         Cnst  Lc  menus.o
  0x0000FA6B  UnitsVoice                          8         Cnst  Lc  menus.o
  0x0000FAA3  Str_Alert                           7         Cnst  Lc  er9x.o
  0x0000FAAA  ChannelToPin                        7         Cnst  Lc  BoardI6.o
  0x0000FAB1  Str_limits                          7         Cnst  Lc  menus.o
  0x0000FAB8  Str_Curves                          7         Cnst  Lc  menus.o
  0x0000FABF  Str_Alarms                          7         Cnst  Lc  menus.o
  0x0000FAE9  Str_Timer                           6         Cnst  Lc  menus.o
  0x0000FAEF  Str_Modes                           6         Cnst  Lc  menus.o
  0x0000FAF5  Str_Mixer                           6         Cnst  Lc  menus.o
  0x0000FAFB  Str_Curve                           6         Cnst  Lc  menus.o
  0x0000FB01  Str_1_RETA                          6         Cnst  Lc  menus.o
  0x0000FB25  Str_Name                            5         Cnst  Lc  menus.o
  0x0000FB2A  Str_Hyphens                         5         Cnst  Lc  er9x.o
  0x0000FB52  menuProc0(unsigned char)::xt
                                                  4         Cnst  Lc  menus.o
  0x0000FB56  Str_ON                              4         Cnst  Gb  er9x.o
  0x0000FB5A  Str_OFF                             4         Cnst  Gb  er9x.o
  0x0000FB82  Str_SC                              3         Cnst  Lc  menus.o
  0x0000FB85  Str_GV                              3         Cnst  Lc  menus.o
  0x0000FBAC  __SEGGER_init_table__            [40]      4  Cnst  Lc  [ Linker created ]
  0x0000FBD4  __SEGGER_init_data__             [36]      4  Cnst  Lc  [ Linker created ]

Untyped symbols by name:

  Symbol name                     Value        Size  Align  Type  Bd  Object File
  -------------------------  ----------  ----------  -----  ----  --  -----------
  BackDoorKey                0x00000400        [16]      2  Code  Lc  MKL16Z4_Vectors.o
  FDPROT                     0x0000040F                  2  Code  Lc  MKL16Z4_Vectors.o
  FEPROT                     0x0000040E                  2  Code  Lc  MKL16Z4_Vectors.o
  FOPT                       0x0000040D                  2  Code  Lc  MKL16Z4_Vectors.o
  FPROT                      0x00000408                  2  Code  Lc  MKL16Z4_Vectors.o
  FSEC                       0x0000040C                  2  Code  Lc  MKL16Z4_Vectors.o
  __CFM_segment_end__        0x00000410                     ----  Gb  [ Linker created ]
  __CFM_segment_size__       0x00000010                     ----  Gb  [ Linker created ]
  __CFM_segment_start__      0x00000400                     ----  Gb  [ Linker created ]
  __CFM_segment_used_end__   0x00000410                     ----  Gb  [ Linker created ]
  __CFM_segment_used_size__  0x00000010                     ----  Gb  [ Linker created ]
  __CFM_segment_used_start__
                             0x00000400                     ----  Gb  [ Linker created ]
  __FLASH_segment_end__      0x00010000                     ----  Gb  [ Linker created ]
  __FLASH_segment_size__     0x00010000                     ----  Gb  [ Linker created ]
  __FLASH_segment_start__    0x00000000                     ----  Gb  [ Linker created ]
  __FLASH_segment_used_end__
                             0x0000FC3E                     ----  Gb  [ Linker created ]
  __FLASH_segment_used_size__
                             0x0000FC3E                     ----  Gb  [ Linker created ]
  __FLASH_segment_used_start__
                             0x00000000                     ----  Gb  [ Linker created ]
  __HEAPSIZE__               0x00000100                     ----  Gb  [ Linker created ]
  __RAM_segment_end__        0x20001800                     ----  Gb  [ Linker created ]
  __RAM_segment_size__       0x00002000                     ----  Gb  [ Linker created ]
  __RAM_segment_start__      0x1FFFF800                     ----  Gb  [ Linker created ]
  __RAM_segment_used_end__   0x20001800                     ----  Gb  [ Linker created ]
  __RAM_segment_used_size__  0x00002000                     ----  Gb  [ Linker created ]
  __RAM_segment_used_start__
                             0x1FFFF800                     ----  Gb  [ Linker created ]
  __STACKSIZE_PROCESS__      0x00000000                     ----  Gb  [ Linker created ]
  __STACKSIZE__              0x00000100                     ----  Gb  [ Linker created ]
  __ctors_end__              0x0000FBAC                     ----  Gb  [ Linker created ]
  __ctors_start__            0x0000FBA0                     ----  Gb  [ Linker created ]
  __dso_handle               0x00000000                     ----  Gb  [ Linker created ]
  __heap_end__               0x20000DF8                     ----  Gb  [ Linker created ]
  __heap_start__             0x20000CF8                     ----  Gb  [ Linker created ]
  __stack_end__              0x20001800                     ----  Gb  [ Linker created ]
  __thread_pointer$          0x00000000                     ----  Gb  [ Linker created ]
  _vectors                   0x00000000       [192]      4  Code  Gb  MKL16Z4_Vectors.o
  _vectors_end               0x000000C0                  4  Code  Lc  MKL16Z4_Vectors.o

Untyped symbols by address:

       Value  Symbol name                      Size  Align  Type  Bd  Object File
  ----------  -------------------------  ----------  -----  ----  --  -----------
  0x00000000  _vectors                        [192]      4  Code  Gb  MKL16Z4_Vectors.o
  0x00000000  __thread_pointer$                             ----  Gb  [ Linker created ]
  0x00000000  __dso_handle                                  ----  Gb  [ Linker created ]
  0x00000000  __STACKSIZE_PROCESS__                         ----  Gb  [ Linker created ]
  0x00000000  __FLASH_segment_used_start__
                                                            ----  Gb  [ Linker created ]
  0x00000000  __FLASH_segment_start__                       ----  Gb  [ Linker created ]
  0x00000010  __CFM_segment_used_size__                     ----  Gb  [ Linker created ]
  0x00000010  __CFM_segment_size__                          ----  Gb  [ Linker created ]
  0x000000C0  _vectors_end                               4  Code  Lc  MKL16Z4_Vectors.o
  0x00000100  __STACKSIZE__                                 ----  Gb  [ Linker created ]
  0x00000100  __HEAPSIZE__                                  ----  Gb  [ Linker created ]
  0x00000400  __CFM_segment_used_start__
                                                            ----  Gb  [ Linker created ]
  0x00000400  __CFM_segment_start__                         ----  Gb  [ Linker created ]
  0x00000400  BackDoorKey                      [16]      2  Code  Lc  MKL16Z4_Vectors.o
  0x00000408  FPROT                                      2  Code  Lc  MKL16Z4_Vectors.o
  0x0000040C  FSEC                                       2  Code  Lc  MKL16Z4_Vectors.o
  0x0000040D  FOPT                                       2  Code  Lc  MKL16Z4_Vectors.o
  0x0000040E  FEPROT                                     2  Code  Lc  MKL16Z4_Vectors.o
  0x0000040F  FDPROT                                     2  Code  Lc  MKL16Z4_Vectors.o
  0x00000410  __CFM_segment_used_end__                      ----  Gb  [ Linker created ]
  0x00000410  __CFM_segment_end__                           ----  Gb  [ Linker created ]
  0x00002000  __RAM_segment_used_size__                     ----  Gb  [ Linker created ]
  0x00002000  __RAM_segment_size__                          ----  Gb  [ Linker created ]
  0x0000FBA0  __ctors_start__                               ----  Gb  [ Linker created ]
  0x0000FBAC  __ctors_end__                                 ----  Gb  [ Linker created ]
  0x0000FC3E  __FLASH_segment_used_size__
                                                            ----  Gb  [ Linker created ]
  0x0000FC3E  __FLASH_segment_used_end__
                                                            ----  Gb  [ Linker created ]
  0x00010000  __FLASH_segment_size__                        ----  Gb  [ Linker created ]
  0x00010000  __FLASH_segment_end__                         ----  Gb  [ Linker created ]
  0x1FFFF800  __RAM_segment_used_start__
                                                            ----  Gb  [ Linker created ]
  0x1FFFF800  __RAM_segment_start__                         ----  Gb  [ Linker created ]
  0x20000CF8  __heap_start__                                ----  Gb  [ Linker created ]
  0x20000DF8  __heap_end__                                  ----  Gb  [ Linker created ]
  0x20001800  __stack_end__                                 ----  Gb  [ Linker created ]
  0x20001800  __RAM_segment_used_end__                      ----  Gb  [ Linker created ]
  0x20001800  __RAM_segment_end__                           ----  Gb  [ Linker created ]


***********************************************************************************************
***                                                                                         ***
***                                      LINK SUMMARY                                       ***
***                                                                                         ***
***********************************************************************************************

Memory breakdown:

   57 256 bytes read-only  code    + 
    7 301 bytes read-only  data    =  64 557 bytes read-only (total)
    5 879 bytes read-write data

Region summary:

  Name        Range                     Size                 Used               Unused       Alignment Loss
  ----------  -----------------  -----------  -------------------  -------------------  -------------------
  FLASH       00000000-0000ffff       65 536       64 569  98.52%          967   1.48%            0   0.00%
  RAM         1ffff800-200017ff        8 192        5 879  71.77%        2 313  28.23%            0   0.00%

Link complete: 0 errors, 0 warnings, 1 remarks
