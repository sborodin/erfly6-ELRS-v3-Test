

***************************************************************************************
***                                                                                 ***
***                                  Parse script                                   ***
***                                                                                 ***
***************************************************************************************

  Define symbols added by command line:
      Define symbol __STACKSIZE__ as 256
      Define global symbol __STACKSIZE__ = 0x00000100
      Define symbol __STACKSIZE_PROCESS__ as 0
      Define global symbol __STACKSIZE_PROCESS__ = 0x00000000
      Define symbol __HEAPSIZE__ as 256
      Define global symbol __HEAPSIZE__ = 0x00000100
      Define symbol __SEGGER_RTL_vfprintf as __SEGGER_RTL_vfprintf_int_nwp
      Define symbol __SEGGER_RTL_vfscanf as __SEGGER_RTL_vfscanf_int
      Define symbol __dso_handle as 0
      Define global symbol __dso_handle = 0x00000000


***************************************************************************************
***                                                                                 ***
***                                  Check options                                  ***
***                                                                                 ***
***************************************************************************************



***************************************************************************************
***                                                                                 ***
***                                     Ingest                                      ***
***                                                                                 ***
***************************************************************************************

  Loading 29 sections from 'system_MKL16Z4.o'
  Loading 21 symbols from 'system_MKL16Z4.o'
  Loading 82 sections from 'lcd.o'
  Loading 114 symbols from 'lcd.o'
  Loading 110 sections from 'BoardI6.o'
  Loading 238 symbols from 'BoardI6.o'
  Loading 198 sections from 'er9x.o'
      Removing SHF_WRITE from section .init_array (er9x.o)
  Loading 337 symbols from 'er9x.o'
  Loading 49 sections from 'A7105_SPI.o'
  Loading 67 symbols from 'A7105_SPI.o'
  Loading 24 sections from 'AFHDS2A_a7105.o'
  Loading 58 symbols from 'AFHDS2A_a7105.o'
  Loading 48 sections from 'audio.o'
  Loading 74 symbols from 'audio.o'
  Loading 36 sections from 'drivers.o'
  Loading 59 symbols from 'drivers.o'
  Loading 52 sections from 'file.o'
  Loading 71 symbols from 'file.o'
  Loading 452 sections from 'menus.o'
  Loading 800 symbols from 'menus.o'
  Loading 51 sections from 'pulses.o'
  Loading 84 symbols from 'pulses.o'
  Loading 8 sections from 'stamp.o'
  Loading 3 symbols from 'stamp.o'
  Loading 13 sections from 'templates.o'
  Loading 16 symbols from 'templates.o'
  Loading 9 sections from 'main.o'
  Loading 6 symbols from 'main.o'
  Loading 7 sections from 'Vario.o'
  Loading 2 symbols from 'Vario.o'
  Loading 7 sections from 'AFHDS.o'
  Loading 2 symbols from 'AFHDS.o'
  Loading 109 sections from 'elrsV2.o'
  Loading 147 symbols from 'elrsV2.o'
  Loading 13 sections from 'crc_crsf.o'
  Loading 12 symbols from 'crc_crsf.o'
  Loading 43 sections from 'crossfire.o'
  Loading 65 symbols from 'crossfire.o'
  Loading 52 sections from 'pers.o'
  Loading 101 symbols from 'pers.o'
  Loading 32 sections from 'common.o'
  Loading 33 symbols from 'common.o'
  Loading 17 sections from 'OTA.o'
  Loading 20 symbols from 'OTA.o'
  Loading 92 sections from 'SX127x.o'
      Removing SHF_WRITE from section .init_array (SX127x.o)
  Loading 134 symbols from 'SX127x.o'
  Loading 38 sections from 'SX127xHal.o'
  Loading 50 symbols from 'SX127xHal.o'
  Loading 64 sections from 'ELRS.o'
      Removing SHF_WRITE from section .init_array (ELRS.o)
  Loading 119 symbols from 'ELRS.o'
  Loading 7 sections from 'config.o'
  Loading 2 symbols from 'config.o'
  Loading 16 sections from 'FHSS.o'
  Loading 16 symbols from 'FHSS.o'
  Loading 18 sections from 'random.o'
  Loading 20 symbols from 'random.o'
  Loading 9 sections from 'POWERMGNT.o'
  Loading 4 symbols from 'POWERMGNT.o'
  Loading 14 sections from 'stubborn_receiver.o'
  Loading 17 symbols from 'stubborn_receiver.o'
  Loading 17 sections from 'stubborn_sender.o'
  Loading 18 symbols from 'stubborn_sender.o'
  Loading 13 sections from 'crc.o'
  Loading 18 symbols from 'crc.o'
  Loading 7 sections from 'CRSF.o'
  Loading 2 symbols from 'CRSF.o'
  Loading 21 sections from 'fsl_adc16.o'
  Loading 29 symbols from 'fsl_adc16.o'
  Loading 83 sections from 'fsl_clock.o'
  Loading 156 symbols from 'fsl_clock.o'
  Loading 22 sections from 'fsl_cmp.o'
  Loading 30 symbols from 'fsl_cmp.o'
  Loading 9 sections from 'fsl_common.o'
  Loading 8 symbols from 'fsl_common.o'
  Loading 10 sections from 'fsl_cop.o'
  Loading 9 symbols from 'fsl_cop.o'
  Loading 21 sections from 'fsl_dac.o'
  Loading 29 symbols from 'fsl_dac.o'
  Loading 12 sections from 'fsl_dmamux.o'
  Loading 11 symbols from 'fsl_dmamux.o'
  Loading 61 sections from 'fsl_flash.o'
  Loading 94 symbols from 'fsl_flash.o'
  Loading 24 sections from 'fsl_gpio.o'
  Loading 30 symbols from 'fsl_gpio.o'
  Loading 66 sections from 'fsl_i2c.o'
  Loading 104 symbols from 'fsl_i2c.o'
  Loading 13 sections from 'fsl_llwu.o'
  Loading 16 symbols from 'fsl_llwu.o'
  Loading 42 sections from 'fsl_lpsci.o'
  Loading 70 symbols from 'fsl_lpsci.o'
  Loading 13 sections from 'fsl_lptmr.o'
  Loading 13 symbols from 'fsl_lptmr.o'
  Loading 13 sections from 'fsl_pit.o'
  Loading 13 symbols from 'fsl_pit.o'
  Loading 10 sections from 'fsl_pmc.o'
  Loading 8 symbols from 'fsl_pmc.o'
  Loading 8 sections from 'fsl_rcm.o'
  Loading 4 symbols from 'fsl_rcm.o'
  Loading 26 sections from 'fsl_rtc.o'
  Loading 30 symbols from 'fsl_rtc.o'
  Loading 57 sections from 'fsl_sai.o'
  Loading 88 symbols from 'fsl_sai.o'
  Loading 8 sections from 'fsl_sim.o'
  Loading 5 symbols from 'fsl_sim.o'
  Loading 15 sections from 'fsl_smc.o'
  Loading 24 symbols from 'fsl_smc.o'
  Loading 58 sections from 'fsl_spi.o'
  Loading 88 symbols from 'fsl_spi.o'
  Loading 26 sections from 'fsl_tpm.o'
  Loading 35 symbols from 'fsl_tpm.o'
  Loading 15 sections from 'fsl_tsi_v4.o'
  Loading 26 symbols from 'fsl_tsi_v4.o'
  Loading 52 sections from 'fsl_uart.o'
  Loading 84 symbols from 'fsl_uart.o'
  Loading 18 sections from 'Kinetis_KL_Startup.o'
  Loading 19 symbols from 'Kinetis_KL_Startup.o'
  Loading 20 sections from 'MKL16Z4_Vectors.o'
  Loading 60 symbols from 'MKL16Z4_Vectors.o'
      Strong symbol SPI0_IRQHandler [BoardI6.o] kept after finding weak definition [MKL16Z4_Vectors.o]
      Strong symbol UART0_IRQHandler [BoardI6.o] kept after finding weak definition [MKL16Z4_Vectors.o]
      Strong symbol UART2_IRQHandler [BoardI6.o] kept after finding weak definition [MKL16Z4_Vectors.o]
      Strong symbol TPM0_IRQHandler [BoardI6.o] kept after finding weak definition [MKL16Z4_Vectors.o]
      Strong symbol TPM1_IRQHandler [BoardI6.o] kept after finding weak definition [MKL16Z4_Vectors.o]
      Strong symbol TPM2_IRQHandler [BoardI6.o] kept after finding weak definition [MKL16Z4_Vectors.o]
      Strong symbol PIT_IRQHandler [BoardI6.o] kept after finding weak definition [MKL16Z4_Vectors.o]
      Strong symbol PORTC_PORTD_IRQHandler [BoardI6.o] kept after finding weak definition [MKL16Z4_Vectors.o]
  Loading 18 sections from 'SEGGER_THUMB_Startup.o'
  Loading 18 symbols from 'SEGGER_THUMB_Startup.o'
  Loading archive: libc_v6m_t_le_eabi_small.a
      Detected symbol lookup table
      Loading 461 sections from 'codesets.o (libc_v6m_t_le_eabi_small.a)'
      Loading 580 symbols from 'codesets.o (libc_v6m_t_le_eabi_small.a)'
      Loading 13 sections from 'compilerasmops_arm.o (libc_v6m_t_le_eabi_small.a)'
      Loading 20 symbols from 'compilerasmops_arm.o (libc_v6m_t_le_eabi_small.a)'
      Loading 7 sections from 'config.o (libc_v6m_t_le_eabi_small.a)'
      Loading 2 symbols from 'config.o (libc_v6m_t_le_eabi_small.a)'
      Loading 51 sections from 'convops.o (libc_v6m_t_le_eabi_small.a)'
      Loading 66 symbols from 'convops.o (libc_v6m_t_le_eabi_small.a)'
      Loading 10 sections from 'errno.o (libc_v6m_t_le_eabi_small.a)'
      Loading 7 symbols from 'errno.o (libc_v6m_t_le_eabi_small.a)'
      Loading 10 sections from 'errno_arm.o (libc_v6m_t_le_eabi_small.a)'
      Loading 5 symbols from 'errno_arm.o (libc_v6m_t_le_eabi_small.a)'
      Loading 32 sections from 'execops.o (libc_v6m_t_le_eabi_small.a)'
      Loading 46 symbols from 'execops.o (libc_v6m_t_le_eabi_small.a)'
      Loading 13 sections from 'execops_arm.o (libc_v6m_t_le_eabi_small.a)'
      Loading 8 symbols from 'execops_arm.o (libc_v6m_t_le_eabi_small.a)'
      Loading 70 sections from 'fileops.o (libc_v6m_t_le_eabi_small.a)'
      Loading 95 symbols from 'fileops.o (libc_v6m_t_le_eabi_small.a)'
      Loading 19 sections from 'fenvops.o (libc_v6m_t_le_eabi_small.a)'
      Loading 25 symbols from 'fenvops.o (libc_v6m_t_le_eabi_small.a)'
      Loading 71 sections from 'floatasmops_arm.o (libc_v6m_t_le_eabi_small.a)'
      Loading 167 symbols from 'floatasmops_arm.o (libc_v6m_t_le_eabi_small.a)'
      Loading 604 sections from 'floatops.o (libc_v6m_t_le_eabi_small.a)'
      Loading 858 symbols from 'floatops.o (libc_v6m_t_le_eabi_small.a)'
      Loading 38 sections from 'intasmops_arm.o (libc_v6m_t_le_eabi_small.a)'
      Loading 67 symbols from 'intasmops_arm.o (libc_v6m_t_le_eabi_small.a)'
      Loading 27 sections from 'intops.o (libc_v6m_t_le_eabi_small.a)'
      Loading 41 symbols from 'intops.o (libc_v6m_t_le_eabi_small.a)'
      Loading 10 sections from 'jumpasmops_arm.o (libc_v6m_t_le_eabi_small.a)'
      Loading 11 symbols from 'jumpasmops_arm.o (libc_v6m_t_le_eabi_small.a)'
      Loading 5585 sections from 'locales.o (libc_v6m_t_le_eabi_small.a)'
      Loading 10013 symbols from 'locales.o (libc_v6m_t_le_eabi_small.a)'
      Loading 288 sections from 'mbops.o (libc_v6m_t_le_eabi_small.a)'
      Loading 423 symbols from 'mbops.o (libc_v6m_t_le_eabi_small.a)'
      Loading 7 sections from 'phantomops.o (libc_v6m_t_le_eabi_small.a)'
      Loading 2 symbols from 'phantomops.o (libc_v6m_t_le_eabi_small.a)'
      Loading 10 sections from 'sortops.o (libc_v6m_t_le_eabi_small.a)'
      Loading 7 symbols from 'sortops.o (libc_v6m_t_le_eabi_small.a)'
      Loading 15 sections from 'strasmops_arm.o (libc_v6m_t_le_eabi_small.a)'
      Loading 37 symbols from 'strasmops_arm.o (libc_v6m_t_le_eabi_small.a)'
      Loading 83 sections from 'strops.o (libc_v6m_t_le_eabi_small.a)'
      Loading 109 symbols from 'strops.o (libc_v6m_t_le_eabi_small.a)'
      Loading 68 sections from 'timeops.o (libc_v6m_t_le_eabi_small.a)'
      Loading 100 symbols from 'timeops.o (libc_v6m_t_le_eabi_small.a)'
      Loading 17 sections from 'utilops.o (libc_v6m_t_le_eabi_small.a)'
      Loading 26 symbols from 'utilops.o (libc_v6m_t_le_eabi_small.a)'
      Loading 25 sections from 'wconvops.o (libc_v6m_t_le_eabi_small.a)'
      Loading 37 symbols from 'wconvops.o (libc_v6m_t_le_eabi_small.a)'
      Loading 20 sections from 'wprinops.o (libc_v6m_t_le_eabi_small.a)'
      Loading 61 symbols from 'wprinops.o (libc_v6m_t_le_eabi_small.a)'
      Loading 17 sections from 'wscanops.o (libc_v6m_t_le_eabi_small.a)'
      Loading 34 symbols from 'wscanops.o (libc_v6m_t_le_eabi_small.a)'
      Loading 54 sections from 'wstrops.o (libc_v6m_t_le_eabi_small.a)'
      Loading 72 symbols from 'wstrops.o (libc_v6m_t_le_eabi_small.a)'
      Loading 43 sections from 'scanops.o (libc_v6m_t_le_eabi_small.a)'
      Loading 52 symbols from 'scanops.o (libc_v6m_t_le_eabi_small.a)'
      Loading 70 sections from 'prinops.o (libc_v6m_t_le_eabi_small.a)'
      Loading 87 symbols from 'prinops.o (libc_v6m_t_le_eabi_small.a)'
      Loading 10 sections from '__SEGGER_RTL_vfprintf_int.o (libc_v6m_t_le_eabi_small.a)'
      Loading 25 symbols from '__SEGGER_RTL_vfprintf_int.o (libc_v6m_t_le_eabi_small.a)'
      Loading 9 sections from '__SEGGER_RTL_vfprintf_int_nwp.o (libc_v6m_t_le_eabi_small.a)'
      Loading 15 symbols from '__SEGGER_RTL_vfprintf_int_nwp.o (libc_v6m_t_le_eabi_small.a)'
      Loading 10 sections from '__SEGGER_RTL_vfprintf_long.o (libc_v6m_t_le_eabi_small.a)'
      Loading 25 symbols from '__SEGGER_RTL_vfprintf_long.o (libc_v6m_t_le_eabi_small.a)'
      Loading 9 sections from '__SEGGER_RTL_vfprintf_long_nwp.o (libc_v6m_t_le_eabi_small.a)'
      Loading 15 symbols from '__SEGGER_RTL_vfprintf_long_nwp.o (libc_v6m_t_le_eabi_small.a)'
      Loading 10 sections from '__SEGGER_RTL_vfprintf_long_long.o (libc_v6m_t_le_eabi_small.a)'
      Loading 25 symbols from '__SEGGER_RTL_vfprintf_long_long.o (libc_v6m_t_le_eabi_small.a)'
      Loading 9 sections from '__SEGGER_RTL_vfprintf_long_long_nwp.o (libc_v6m_t_le_eabi_small.a)'
      Loading 15 symbols from '__SEGGER_RTL_vfprintf_long_long_nwp.o (libc_v6m_t_le_eabi_small.a)'
      Loading 16 sections from '__SEGGER_RTL_vfprintf_float_long.o (libc_v6m_t_le_eabi_small.a)'
      Loading 53 symbols from '__SEGGER_RTL_vfprintf_float_long.o (libc_v6m_t_le_eabi_small.a)'
      Loading 16 sections from '__SEGGER_RTL_vfprintf_float_long_long.o (libc_v6m_t_le_eabi_small.a)'
      Loading 53 symbols from '__SEGGER_RTL_vfprintf_float_long_long.o (libc_v6m_t_le_eabi_small.a)'
      Loading 16 sections from '__SEGGER_RTL_vfprintf_short_float_long.o (libc_v6m_t_le_eabi_small.a)'
      Loading 58 symbols from '__SEGGER_RTL_vfprintf_short_float_long.o (libc_v6m_t_le_eabi_small.a)'
      Loading 16 sections from '__SEGGER_RTL_vfprintf_short_float_long_long.o (libc_v6m_t_le_eabi_small.a)'
      Loading 58 symbols from '__SEGGER_RTL_vfprintf_short_float_long_long.o (libc_v6m_t_le_eabi_small.a)'
      Loading 10 sections from '__SEGGER_RTL_vfprintf_int_wchar.o (libc_v6m_t_le_eabi_small.a)'
      Loading 27 symbols from '__SEGGER_RTL_vfprintf_int_wchar.o (libc_v6m_t_le_eabi_small.a)'
      Loading 9 sections from '__SEGGER_RTL_vfprintf_int_nwp_wchar.o (libc_v6m_t_le_eabi_small.a)'
      Loading 16 symbols from '__SEGGER_RTL_vfprintf_int_nwp_wchar.o (libc_v6m_t_le_eabi_small.a)'
      Loading 10 sections from '__SEGGER_RTL_vfprintf_long_wchar.o (libc_v6m_t_le_eabi_small.a)'
      Loading 27 symbols from '__SEGGER_RTL_vfprintf_long_wchar.o (libc_v6m_t_le_eabi_small.a)'
      Loading 9 sections from '__SEGGER_RTL_vfprintf_long_nwp_wchar.o (libc_v6m_t_le_eabi_small.a)'
      Loading 16 symbols from '__SEGGER_RTL_vfprintf_long_nwp_wchar.o (libc_v6m_t_le_eabi_small.a)'
      Loading 10 sections from '__SEGGER_RTL_vfprintf_long_long_wchar.o (libc_v6m_t_le_eabi_small.a)'
      Loading 27 symbols from '__SEGGER_RTL_vfprintf_long_long_wchar.o (libc_v6m_t_le_eabi_small.a)'
      Loading 9 sections from '__SEGGER_RTL_vfprintf_long_long_nwp_wchar.o (libc_v6m_t_le_eabi_small.a)'
      Loading 16 symbols from '__SEGGER_RTL_vfprintf_long_long_nwp_wchar.o (libc_v6m_t_le_eabi_small.a)'
      Loading 16 sections from '__SEGGER_RTL_vfprintf_float_long_wchar.o (libc_v6m_t_le_eabi_small.a)'
      Loading 57 symbols from '__SEGGER_RTL_vfprintf_float_long_wchar.o (libc_v6m_t_le_eabi_small.a)'
      Loading 16 sections from '__SEGGER_RTL_vfprintf_float_long_long_wchar.o (libc_v6m_t_le_eabi_small.a)'
      Loading 57 symbols from '__SEGGER_RTL_vfprintf_float_long_long_wchar.o (libc_v6m_t_le_eabi_small.a)'
      Loading 16 sections from '__SEGGER_RTL_vfprintf_short_float_long_wchar.o (libc_v6m_t_le_eabi_small.a)'
      Loading 59 symbols from '__SEGGER_RTL_vfprintf_short_float_long_wchar.o (libc_v6m_t_le_eabi_small.a)'
      Loading 16 sections from '__SEGGER_RTL_vfprintf_short_float_long_long_wchar.o (libc_v6m_t_le_eabi_small.a)'
      Loading 59 symbols from '__SEGGER_RTL_vfprintf_short_float_long_long_wchar.o (libc_v6m_t_le_eabi_small.a)'
      Loading 13 sections from '__SEGGER_RTL_vfscanf_int.o (libc_v6m_t_le_eabi_small.a)'
      Loading 18 symbols from '__SEGGER_RTL_vfscanf_int.o (libc_v6m_t_le_eabi_small.a)'
      Loading 13 sections from '__SEGGER_RTL_vfscanf_int_cc.o (libc_v6m_t_le_eabi_small.a)'
      Loading 19 symbols from '__SEGGER_RTL_vfscanf_int_cc.o (libc_v6m_t_le_eabi_small.a)'
      Loading 13 sections from '__SEGGER_RTL_vfscanf_long.o (libc_v6m_t_le_eabi_small.a)'
      Loading 18 symbols from '__SEGGER_RTL_vfscanf_long.o (libc_v6m_t_le_eabi_small.a)'
      Loading 13 sections from '__SEGGER_RTL_vfscanf_long_cc.o (libc_v6m_t_le_eabi_small.a)'
      Loading 19 symbols from '__SEGGER_RTL_vfscanf_long_cc.o (libc_v6m_t_le_eabi_small.a)'
      Loading 13 sections from '__SEGGER_RTL_vfscanf_long_long.o (libc_v6m_t_le_eabi_small.a)'
      Loading 19 symbols from '__SEGGER_RTL_vfscanf_long_long.o (libc_v6m_t_le_eabi_small.a)'
      Loading 13 sections from '__SEGGER_RTL_vfscanf_long_long_cc.o (libc_v6m_t_le_eabi_small.a)'
      Loading 20 symbols from '__SEGGER_RTL_vfscanf_long_long_cc.o (libc_v6m_t_le_eabi_small.a)'
      Loading 13 sections from '__SEGGER_RTL_vfscanf_float_long.o (libc_v6m_t_le_eabi_small.a)'
      Loading 28 symbols from '__SEGGER_RTL_vfscanf_float_long.o (libc_v6m_t_le_eabi_small.a)'
      Loading 13 sections from '__SEGGER_RTL_vfscanf_float_long_cc.o (libc_v6m_t_le_eabi_small.a)'
      Loading 31 symbols from '__SEGGER_RTL_vfscanf_float_long_cc.o (libc_v6m_t_le_eabi_small.a)'
      Loading 13 sections from '__SEGGER_RTL_vfscanf_float_long_long.o (libc_v6m_t_le_eabi_small.a)'
      Loading 28 symbols from '__SEGGER_RTL_vfscanf_float_long_long.o (libc_v6m_t_le_eabi_small.a)'
      Loading 13 sections from '__SEGGER_RTL_vfscanf_float_long_long_cc.o (libc_v6m_t_le_eabi_small.a)'
      Loading 31 symbols from '__SEGGER_RTL_vfscanf_float_long_long_cc.o (libc_v6m_t_le_eabi_small.a)'
  Loading 24 sections from 'SEGGER_crtinit_v6m_little.o'
  Loading 53 symbols from 'SEGGER_crtinit_v6m_little.o'
  Loading archive: heapops_basic_v6m_little.a
      Detected symbol lookup table
      Loading 18 sections from 'heapops_basic.o (heapops_basic_v6m_little.a)'
      Loading 28 symbols from 'heapops_basic.o (heapops_basic_v6m_little.a)'
  Loading archive: heapops_disable_interrupts_locking_v6m_little.a
      Detected symbol lookup table
      Loading 23 sections from 'heapops.o (heapops_disable_interrupts_locking_v6m_little.a)'
      Loading 37 symbols from 'heapops.o (heapops_disable_interrupts_locking_v6m_little.a)'
  Loading archive: libcxxabi_noexcept_v6m_t_le_eabi_small.a
      Detected symbol lookup table
      Loading 12 sections from 'abort_message.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 12 symbols from 'abort_message.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 17 sections from 'cxa_atexit.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 26 symbols from 'cxa_atexit.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 16 sections from 'cxa_aux_runtime.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 18 symbols from 'cxa_aux_runtime.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 20 sections from 'cxa_default_handlers.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
          Removing SHF_WRITE from section .init_array (cxa_default_handlers.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a))
      Loading 30 symbols from 'cxa_default_handlers.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 15 sections from 'cxa_exception_storage.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 19 symbols from 'cxa_exception_storage.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 13 sections from 'cxa_guard.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 17 symbols from 'cxa_guard.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 29 sections from 'cxa_handlers.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 48 symbols from 'cxa_handlers.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 19 sections from 'cxa_noexception.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 27 symbols from 'cxa_noexception.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 10 sections from 'cxa_unexpected.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 8 symbols from 'cxa_unexpected.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 27 sections from 'cxa_vector.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 43 symbols from 'cxa_vector.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 16 sections from 'cxa_virtual.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 19 symbols from 'cxa_virtual.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 22 sections from 'fallback_malloc.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 35 symbols from 'fallback_malloc.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 544 sections from 'private_typeinfo.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 829 symbols from 'private_typeinfo.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 31 sections from 'stdlib_new_delete.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 45 symbols from 'stdlib_new_delete.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 46 sections from 'stdlib_typeinfo.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 80 symbols from 'stdlib_typeinfo.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'


***************************************************************************************
***                                                                                 ***
***                                  Wrap symbols                                   ***
***                                                                                 ***
***************************************************************************************



***************************************************************************************
***                                                                                 ***
***                                  Find sections                                  ***
***                                                                                 ***
***************************************************************************************

  Defining any required ES block symbols
  Testing input sections to see if nonzero selected size
      block heap has size 256
  Initialize by calling __SEGGER_init_heap has nonzero selector size, must include
  Testing input sections to see if nonzero selected size
      All inputs (if any) have zero size
  Initialize by calling __SEGGER_init_ctors has zero selector size, not included yet
  
  Selecting Kinetis_KL_Startup.o to define Reset_Handler
      Definition:     Reset_Handler
      Pushing section .init to worklist [originates from symbol Reset_Handler]
  
  Processing section: .init from Kinetis_KL_Startup.o
      Load REL relocations for .init (Kinetis_KL_Startup.o)
      Reference:      _start
      Reference:      __RAM_segment_end__
      Reference:      SystemInit
  
  Selecting system_MKL16Z4.o to define SystemInit
      Definition:     SystemInit
      Pushing section .init.SystemInit to worklist [originates from symbol SystemInit]
  
  Processing section: .init.SystemInit from system_MKL16Z4.o
  
  Selecting SEGGER_crtinit_v6m_little.o to define __SEGGER_init_heap
      Definition:     __SEGGER_init_heap
      Pushing section .segger.init.__SEGGER_init_heap to worklist [originates from symbol __SEGGER_init_heap]
  
  Processing section: .segger.init.__SEGGER_init_heap from SEGGER_crtinit_v6m_little.o
      Load REL relocations for .segger.init.__SEGGER_init_heap (SEGGER_crtinit_v6m_little.o)
      Reference:      __SEGGER_RTL_init_heap
      Reference:      __heap_start__
      Reference:      __heap_end__
  
  Selecting heapops_basic.o (heapops_basic_v6m_little.a) to define __SEGGER_RTL_init_heap
      Definition:     __SEGGER_RTL_init_heap
      Pushing section .text.__SEGGER_RTL_init_heap to worklist [originates from symbol __SEGGER_RTL_init_heap]
  
  Processing section: .text.__SEGGER_RTL_init_heap from heapops_basic.o (heapops_basic_v6m_little.a)
      Load REL relocations for .text.__SEGGER_RTL_init_heap (heapops_basic.o (heapops_basic_v6m_little.a))
      Local section:  .bss.__SEGGER_RTL_heap_globals from heapops_basic.o (heapops_basic_v6m_little.a) using relocation R_ARM_ABS32
  
  Processing section: .bss.__SEGGER_RTL_heap_globals from heapops_basic.o (heapops_basic_v6m_little.a)
  
  Selecting SEGGER_THUMB_Startup.o to define _start
      Definition:     _start
      Pushing section .init._start to worklist [originates from symbol _start]
  
  Processing section: .init._start from SEGGER_THUMB_Startup.o
      Load REL relocations for .init._start (SEGGER_THUMB_Startup.o)
      Reference:      main
      Reference:      __SEGGER_init_table__
  
  Selecting MKL16Z4_Vectors.o to define _vectors
      Definition:     _vectors
      Pushing section .vectors to worklist [originates from symbol _vectors]
  
  Processing section: .vectors from MKL16Z4_Vectors.o
      Load REL relocations for .vectors (MKL16Z4_Vectors.o)
      Reference:      __stack_end__
      Weak reference: NMI_Handler
      Weak reference: HardFault_Handler
      Weak reference: SVC_Handler
      Weak reference: PendSV_Handler
      Weak reference: SysTick_Handler
      Weak reference: DMA0_IRQHandler
      Weak reference: DMA1_IRQHandler
      Weak reference: DMA2_IRQHandler
      Weak reference: DMA3_IRQHandler
      Local section:  .init from MKL16Z4_Vectors.o using relocation R_ARM_ABS32
      Weak reference: FTFA_IRQHandler
      Weak reference: LVD_LVW_IRQHandler
      Weak reference: LLW_IRQHandler
      Weak reference: I2C0_IRQHandler
      Weak reference: I2C1_IRQHandler
      Weak reference: SPI0_IRQHandler
      Weak reference: SPI1_IRQHandler
      Weak reference: UART0_IRQHandler
      Weak reference: UART1_IRQHandler
      Weak reference: UART2_IRQHandler
      Weak reference: ADC0_IRQHandler
      Weak reference: CMP0_IRQHandler
      Weak reference: TPM0_IRQHandler
      Weak reference: TPM1_IRQHandler
      Weak reference: TPM2_IRQHandler
      Weak reference: RTC_IRQHandler
      Weak reference: RTC_Seconds_IRQHandler
      Weak reference: PIT_IRQHandler
      Weak reference: I2S0_IRQHandler
      Weak reference: DAC0_IRQHandler
      Weak reference: TSI0_IRQHandler
      Weak reference: LPTimer_IRQHandler
      Weak reference: PORTA_IRQHandler
      Weak reference: PORTC_PORTD_IRQHandler
  
  Processing section: .init from MKL16Z4_Vectors.o
  
  Selecting MKL16Z4_Vectors.o to define ADC0_IRQHandler
      Definition:     ADC0_IRQHandler
  
  Selecting MKL16Z4_Vectors.o to define CMP0_IRQHandler
      Definition:     CMP0_IRQHandler
  
  Selecting MKL16Z4_Vectors.o to define DAC0_IRQHandler
      Definition:     DAC0_IRQHandler
  
  Selecting MKL16Z4_Vectors.o to define DMA0_IRQHandler
      Definition:     DMA0_IRQHandler
  
  Selecting MKL16Z4_Vectors.o to define DMA1_IRQHandler
      Definition:     DMA1_IRQHandler
  
  Selecting MKL16Z4_Vectors.o to define DMA2_IRQHandler
      Definition:     DMA2_IRQHandler
  
  Selecting MKL16Z4_Vectors.o to define DMA3_IRQHandler
      Definition:     DMA3_IRQHandler
  
  Selecting MKL16Z4_Vectors.o to define FTFA_IRQHandler
      Definition:     FTFA_IRQHandler
  
  Selecting MKL16Z4_Vectors.o to define HardFault_Handler
      Definition:     HardFault_Handler
  
  Selecting MKL16Z4_Vectors.o to define I2C0_IRQHandler
      Definition:     I2C0_IRQHandler
  
  Selecting MKL16Z4_Vectors.o to define I2C1_IRQHandler
      Definition:     I2C1_IRQHandler
  
  Selecting MKL16Z4_Vectors.o to define I2S0_IRQHandler
      Definition:     I2S0_IRQHandler
  
  Selecting MKL16Z4_Vectors.o to define LLW_IRQHandler
      Definition:     LLW_IRQHandler
  
  Selecting MKL16Z4_Vectors.o to define LPTimer_IRQHandler
      Definition:     LPTimer_IRQHandler
  
  Selecting MKL16Z4_Vectors.o to define LVD_LVW_IRQHandler
      Definition:     LVD_LVW_IRQHandler
  
  Selecting MKL16Z4_Vectors.o to define NMI_Handler
      Definition:     NMI_Handler
  
  Selecting BoardI6.o to define PIT_IRQHandler
      Definition:     PIT_IRQHandler
      Pushing section .text.PIT_IRQHandler to worklist [originates from symbol PIT_IRQHandler]
  
  Processing section: .text.PIT_IRQHandler from BoardI6.o
      Load REL relocations for .text.PIT_IRQHandler (BoardI6.o)
      Reference:      ISR_TIMER0_COMP_vect
      Reference:      g_tmr16KHz
      Reference:      tmrEEPROM
  
  Selecting er9x.o to define ISR_TIMER0_COMP_vect
      Definition:     ISR_TIMER0_COMP_vect
      Pushing section .text.ISR_TIMER0_COMP_vect to worklist [originates from symbol ISR_TIMER0_COMP_vect]
      Pushing section .init_array to worklist as %init_array is required for this file
  
  Processing section: .text.ISR_TIMER0_COMP_vect from er9x.o
      Load REL relocations for .text.ISR_TIMER0_COMP_vect (er9x.o)
      Reference:      audioQueue::heartbeat()
      Reference:      per10ms()
      Reference:      audio
      Reference:      heartbeat
      Reference:      AlarmControl
  
  Processing section: .init_array from er9x.o
      Load REL relocations for .init_array (er9x.o)
      Local section:  .text._GLOBAL__sub_I_er9x.cpp from er9x.o using relocation R_ARM_TARGET1
  
  Processing section: .text._GLOBAL__sub_I_er9x.cpp from er9x.o
      Load REL relocations for .text._GLOBAL__sub_I_er9x.cpp (er9x.o)
      Reference:      audioQueue::audioQueue()
  
  Selecting er9x.o to define AlarmControl
      Definition:     AlarmControl
      Pushing section .data.AlarmControl to worklist [originates from symbol AlarmControl]
  
  Processing section: .data.AlarmControl from er9x.o
  
  Selecting MKL16Z4_Vectors.o to define PORTA_IRQHandler
      Definition:     PORTA_IRQHandler
  
  Selecting BoardI6.o to define PORTC_PORTD_IRQHandler
      Definition:     PORTC_PORTD_IRQHandler
      Pushing section .text.PORTC_PORTD_IRQHandler to worklist [originates from symbol PORTC_PORTD_IRQHandler]
  
  Processing section: .text.PORTC_PORTD_IRQHandler from BoardI6.o
      Load REL relocations for .text.PORTC_PORTD_IRQHandler (BoardI6.o)
      Reference:      ActionAFHDS2A
      Reference:      RadioState
  
  Selecting AFHDS2A_a7105.o to define ActionAFHDS2A
      Definition:     ActionAFHDS2A
      Pushing section .text.ActionAFHDS2A to worklist [originates from symbol ActionAFHDS2A]
  
  Processing section: .text.ActionAFHDS2A from AFHDS2A_a7105.o
      Load REL relocations for .text.ActionAFHDS2A (AFHDS2A_a7105.o)
      Reference:      A7105_AdjustLOBaseFreq()
      Reference:      A7105_SetPower()
      Reference:      A7105_SetTxRxMode(unsigned char)
      Reference:      A7105_Strobe(unsigned char)
      Reference:      EnableGIO
      Reference:      A7105_ReadData(unsigned char)
      Reference:      A7105_ReadReg(unsigned char)
      Reference:      AFHDS2A_build_packet(unsigned char)
      Reference:      __aeabi_memset
      Reference:      A7105_AntSwitch()
      Reference:      A7105_WriteData(unsigned char, unsigned char)
      Reference:      __aeabi_uidivmod
      Reference:      __aeabi_llsl
      Reference:      memcmp
      Reference:      __aeabi_uidiv
      Local section:  .text.processFlySkySensor(unsigned char const*, unsigned char) from AFHDS2A_a7105.o using relocation R_ARM_THM_CALL
      Reference:      RadioActive
      Reference:      protocol_flags
      Reference:      packet
      Reference:      ID
      Reference:      AFHDS2A_tel_res_cnt
      Reference:      AFHDS2A_tel_status
      Reference:      AFHDS2A_tel_data
      Local section:  .data.AFHDS2A_update_telemetry()::Dacc from AFHDS2A_a7105.o using relocation R_ARM_ABS32
      Local section:  .bss.ActionAFHDS2A::packet_type from AFHDS2A_a7105.o using relocation R_ARM_ABS32
      Local section:  .bss.ActionAFHDS2A::packet_counter from AFHDS2A_a7105.o using relocation R_ARM_ABS32
      Reference:      hopping_frequency_no
      Reference:      hopping_frequency
      Reference:      bind_phase
      Reference:      packet_count
      Reference:      g_model
  
  Processing section: .text.processFlySkySensor(unsigned char const*, unsigned char) from AFHDS2A_a7105.o
      Load REL relocations for .text.processFlySkySensor(unsigned char const*, unsigned char) (AFHDS2A_a7105.o)
      Reference:      __aeabi_idiv
      Reference:      AFHDS2A_tel
      Reference:      GAltOffset
      Reference:      AltOffset
  
  Processing section: .data.AFHDS2A_update_telemetry()::Dacc from AFHDS2A_a7105.o
  
  Processing section: .bss.ActionAFHDS2A::packet_type from AFHDS2A_a7105.o
  
  Processing section: .bss.ActionAFHDS2A::packet_counter from AFHDS2A_a7105.o
  
  Selecting AFHDS2A_a7105.o to define AFHDS2A_tel
      Definition:     AFHDS2A_tel
      Pushing section .rodata.AFHDS2A_tel to worklist [originates from symbol AFHDS2A_tel]
  
  Processing section: .rodata.AFHDS2A_tel from AFHDS2A_a7105.o
  
  Selecting AFHDS2A_a7105.o to define AFHDS2A_tel_data
      Definition:     AFHDS2A_tel_data
      Pushing section .bss.AFHDS2A_tel_data to worklist [originates from symbol AFHDS2A_tel_data]
  
  Processing section: .bss.AFHDS2A_tel_data from AFHDS2A_a7105.o
  
  Selecting AFHDS2A_a7105.o to define AFHDS2A_tel_res_cnt
      Definition:     AFHDS2A_tel_res_cnt
      Pushing section .bss.AFHDS2A_tel_res_cnt to worklist [originates from symbol AFHDS2A_tel_res_cnt]
  
  Processing section: .bss.AFHDS2A_tel_res_cnt from AFHDS2A_a7105.o
  
  Selecting AFHDS2A_a7105.o to define AFHDS2A_tel_status
      Definition:     AFHDS2A_tel_status
      Pushing section .bss.AFHDS2A_tel_status to worklist [originates from symbol AFHDS2A_tel_status]
  
  Processing section: .bss.AFHDS2A_tel_status from AFHDS2A_a7105.o
  
  Selecting AFHDS2A_a7105.o to define AltOffset
      Definition:     AltOffset
      Pushing section .bss.AltOffset to worklist [originates from symbol AltOffset]
  
  Processing section: .bss.AltOffset from AFHDS2A_a7105.o
  
  Selecting BoardI6.o to define EnableGIO
      Definition:     EnableGIO
      Pushing section .text.EnableGIO to worklist [originates from symbol EnableGIO]
  
  Processing section: .text.EnableGIO from BoardI6.o
  
  Selecting AFHDS2A_a7105.o to define GAltOffset
      Definition:     GAltOffset
      Pushing section .bss.GAltOffset to worklist [originates from symbol GAltOffset]
  
  Processing section: .bss.GAltOffset from AFHDS2A_a7105.o
  
  Selecting A7105_SPI.o to define ID
      Definition:     ID
      Pushing section .bss.ID to worklist [originates from symbol ID]
  
  Processing section: .bss.ID from A7105_SPI.o
  
  Selecting MKL16Z4_Vectors.o to define PendSV_Handler
      Definition:     PendSV_Handler
  
  Selecting MKL16Z4_Vectors.o to define RTC_IRQHandler
      Definition:     RTC_IRQHandler
  
  Selecting MKL16Z4_Vectors.o to define RTC_Seconds_IRQHandler
      Definition:     RTC_Seconds_IRQHandler
  
  Selecting pulses.o to define RadioActive
      Definition:     RadioActive
      Pushing section .bss.RadioActive to worklist [originates from symbol RadioActive]
  
  Processing section: .bss.RadioActive from pulses.o
  
  Selecting A7105_SPI.o to define RadioState
      Definition:     RadioState
      Pushing section .bss.RadioState to worklist [originates from symbol RadioState]
  
  Processing section: .bss.RadioState from A7105_SPI.o
  
  Selecting BoardI6.o to define SPI0_IRQHandler
      Definition:     SPI0_IRQHandler
      Pushing section .text.SPI0_IRQHandler to worklist [originates from symbol SPI0_IRQHandler]
  
  Processing section: .text.SPI0_IRQHandler from BoardI6.o
      Load REL relocations for .text.SPI0_IRQHandler (BoardI6.o)
      Reference:      SPI_BufferPtr
      Reference:      SPI_Size
  
  Selecting MKL16Z4_Vectors.o to define SPI1_IRQHandler
      Definition:     SPI1_IRQHandler
  
  Selecting BoardI6.o to define SPI_BufferPtr
      Definition:     SPI_BufferPtr
      Pushing section .bss.SPI_BufferPtr to worklist [originates from symbol SPI_BufferPtr]
  
  Processing section: .bss.SPI_BufferPtr from BoardI6.o
  
  Selecting BoardI6.o to define SPI_Size
      Definition:     SPI_Size
      Pushing section .bss.SPI_Size to worklist [originates from symbol SPI_Size]
  
  Processing section: .bss.SPI_Size from BoardI6.o
  
  Selecting MKL16Z4_Vectors.o to define SVC_Handler
      Definition:     SVC_Handler
  
  Selecting MKL16Z4_Vectors.o to define SysTick_Handler
      Definition:     SysTick_Handler
  
  Selecting BoardI6.o to define TPM0_IRQHandler
      Definition:     TPM0_IRQHandler
      Pushing section .text.TPM0_IRQHandler to worklist [originates from symbol TPM0_IRQHandler]
  
  Processing section: .text.TPM0_IRQHandler from BoardI6.o
      Load REL relocations for .text.TPM0_IRQHandler (BoardI6.o)
      Reference:      crsf_action()
      Reference:      PausePulses
  
  Selecting pulses.o to define PausePulses
      Definition:     PausePulses
      Pushing section .bss.PausePulses to worklist [originates from symbol PausePulses]
  
  Processing section: .bss.PausePulses from pulses.o
  
  Selecting BoardI6.o to define TPM1_IRQHandler
      Definition:     TPM1_IRQHandler
      Pushing section .text.TPM1_IRQHandler to worklist [originates from symbol TPM1_IRQHandler]
  
  Processing section: .text.TPM1_IRQHandler from BoardI6.o
      Load REL relocations for .text.TPM1_IRQHandler (BoardI6.o)
      Reference:      ISR_TIMER2_OVF_vect
  
  Selecting er9x.o to define ISR_TIMER2_OVF_vect
      Definition:     ISR_TIMER2_OVF_vect
      Pushing section .text.ISR_TIMER2_OVF_vect to worklist [originates from symbol ISR_TIMER2_OVF_vect]
  
  Processing section: .text.ISR_TIMER2_OVF_vect from er9x.o
      Load REL relocations for .text.ISR_TIMER2_OVF_vect (er9x.o)
      Reference:      audioQueue::busy()
      Weak reference: audioQueue::driver()
  
  Selecting BoardI6.o to define TPM2_IRQHandler
      Definition:     TPM2_IRQHandler
      Pushing section .text.TPM2_IRQHandler to worklist [originates from symbol TPM2_IRQHandler]
  
  Processing section: .text.TPM2_IRQHandler from BoardI6.o
      Load REL relocations for .text.TPM2_IRQHandler (BoardI6.o)
      Reference:      ISR_TIMER1_COMPA_vect
  
  Selecting pulses.o to define ISR_TIMER1_COMPA_vect
      Definition:     ISR_TIMER1_COMPA_vect
      Pushing section .text.ISR_TIMER1_COMPA_vect to worklist [originates from symbol ISR_TIMER1_COMPA_vect]
  
  Processing section: .text.ISR_TIMER1_COMPA_vect from pulses.o
      Load REL relocations for .text.ISR_TIMER1_COMPA_vect (pulses.o)
      Reference:      GetPPMTimCompare
      Reference:      SetPPMTimCompare
      Reference:      SetStartPulsePol()
      Reference:      setupPulses()
      Local section:  .data.ISR_TIMER1_COMPA_vect::pulsePtr from pulses.o using relocation R_ARM_ABS32
      Reference:      pulses2MHz
  
  Processing section: .data.ISR_TIMER1_COMPA_vect::pulsePtr from pulses.o
      Load REL relocations for .data.ISR_TIMER1_COMPA_vect::pulsePtr (pulses.o)
  
  Selecting BoardI6.o to define GetPPMTimCompare
      Definition:     GetPPMTimCompare
      Pushing section .text.GetPPMTimCompare to worklist [originates from symbol GetPPMTimCompare]
  
  Processing section: .text.GetPPMTimCompare from BoardI6.o
  
  Selecting BoardI6.o to define SetPPMTimCompare
      Definition:     SetPPMTimCompare
      Pushing section .text.SetPPMTimCompare to worklist [originates from symbol SetPPMTimCompare]
  
  Processing section: .text.SetPPMTimCompare from BoardI6.o
  
  Selecting MKL16Z4_Vectors.o to define TSI0_IRQHandler
      Definition:     TSI0_IRQHandler
  
  Selecting BoardI6.o to define UART0_IRQHandler
      Definition:     UART0_IRQHandler
      Pushing section .text.UART0_IRQHandler to worklist [originates from symbol UART0_IRQHandler]
  
  Processing section: .text.UART0_IRQHandler from BoardI6.o
      Load REL relocations for .text.UART0_IRQHandler (BoardI6.o)
      Reference:      uart_clear_error()
      Local section:  .bss.g_crsf_read_callback from BoardI6.o using relocation R_ARM_ABS32
  
  Processing section: .bss.g_crsf_read_callback from BoardI6.o
  
  Selecting MKL16Z4_Vectors.o to define UART1_IRQHandler
      Definition:     UART1_IRQHandler
  
  Selecting BoardI6.o to define UART2_IRQHandler
      Definition:     UART2_IRQHandler
      Pushing section .text.UART2_IRQHandler to worklist [originates from symbol UART2_IRQHandler]
  
  Processing section: .text.UART2_IRQHandler from BoardI6.o
      Load REL relocations for .text.UART2_IRQHandler (BoardI6.o)
      Reference:      voice_rx_idx
      Reference:      voice_uart_recv_buf
      Reference:      g_voice_cb
      Reference:      voice_tx_idx
      Reference:      voice_uart_send_buf
  
  Selecting crossfire.o to define crsf_action()
      Definition:     crsf_action()
      Pushing section .text.crsf_action() to worklist [originates from symbol crsf_action()]
  
  Processing section: .text.crsf_action() from crossfire.o
      Load REL relocations for .text.crsf_action() (crossfire.o)
      Reference:      setupPulsesCrossfire()
      Reference:      crsf_send_data
      Reference:      g_crossfire
  
  Selecting pulses.o to define setupPulses()
      Definition:     setupPulses()
      Pushing section .text.setupPulses() to worklist [originates from symbol setupPulses()]
  
  Processing section: .text.setupPulses() from pulses.o
      Load REL relocations for .text.setupPulses() (pulses.o)
      Reference:      EnablePPMTim
      Reference:      DisableGIO
      Reference:      DisablePRTTim
      Reference:      crsf_shutdown()
      Reference:      A7105_Sleep()
      Reference:      EnablePPMOut
      Reference:      setupPulsesPPM(unsigned char)
      Reference:      DisablePPMOut
      Reference:      crsf_init()
      Reference:      EnablePRTTim
      Reference:      initAFHDS2A
      Reference:      Current_protocol
  
  Selecting pulses.o to define Current_protocol
      Definition:     Current_protocol
      Pushing section .bss.Current_protocol to worklist [originates from symbol Current_protocol]
  
  Processing section: .bss.Current_protocol from pulses.o
  
  Selecting BoardI6.o to define DisableGIO
      Definition:     DisableGIO
      Pushing section .text.DisableGIO to worklist [originates from symbol DisableGIO]
  
  Processing section: .text.DisableGIO from BoardI6.o
  
  Selecting BoardI6.o to define DisablePPMOut
      Definition:     DisablePPMOut
      Pushing section .text.DisablePPMOut to worklist [originates from symbol DisablePPMOut]
  
  Processing section: .text.DisablePPMOut from BoardI6.o
  
  Selecting BoardI6.o to define DisablePRTTim
      Definition:     DisablePRTTim
      Pushing section .text.DisablePRTTim to worklist [originates from symbol DisablePRTTim]
  
  Processing section: .text.DisablePRTTim from BoardI6.o
  
  Selecting BoardI6.o to define EnablePPMOut
      Definition:     EnablePPMOut
      Pushing section .text.EnablePPMOut to worklist [originates from symbol EnablePPMOut]
  
  Processing section: .text.EnablePPMOut from BoardI6.o
  
  Selecting BoardI6.o to define EnablePPMTim
      Definition:     EnablePPMTim
      Pushing section .text.EnablePPMTim to worklist [originates from symbol EnablePPMTim]
  
  Processing section: .text.EnablePPMTim from BoardI6.o
  
  Selecting BoardI6.o to define EnablePRTTim
      Definition:     EnablePRTTim
      Pushing section .text.EnablePRTTim to worklist [originates from symbol EnablePRTTim]
  
  Processing section: .text.EnablePRTTim from BoardI6.o
  
  Selecting A7105_SPI.o to define A7105_Sleep()
      Definition:     A7105_Sleep()
      Pushing section .text.A7105_Sleep() to worklist [originates from symbol A7105_Sleep()]
  
  Processing section: .text.A7105_Sleep() from A7105_SPI.o
      Load REL relocations for .text.A7105_Sleep() (A7105_SPI.o)
      Reference:      TX_RX_PutVal
  
  Selecting BoardI6.o to define TX_RX_PutVal
      Definition:     TX_RX_PutVal
      Pushing section .text.TX_RX_PutVal to worklist [originates from symbol TX_RX_PutVal]
  
  Processing section: .text.TX_RX_PutVal from BoardI6.o
  
  Selecting A7105_SPI.o to define A7105_Strobe(unsigned char)
      Definition:     A7105_Strobe(unsigned char)
      Pushing section .text.A7105_Strobe(unsigned char) to worklist [originates from symbol A7105_Strobe(unsigned char)]
  
  Processing section: .text.A7105_Strobe(unsigned char) from A7105_SPI.o
      Load REL relocations for .text.A7105_Strobe(unsigned char) (A7105_SPI.o)
      Reference:      a7105_csn_off
      Reference:      SPI_RADIO_SendBlock
      Reference:      a7105_csn_on
  
  Selecting BoardI6.o to define SPI_RADIO_SendBlock
      Definition:     SPI_RADIO_SendBlock
      Pushing section .text.SPI_RADIO_SendBlock to worklist [originates from symbol SPI_RADIO_SendBlock]
  
  Processing section: .text.SPI_RADIO_SendBlock from BoardI6.o
      Load REL relocations for .text.SPI_RADIO_SendBlock (BoardI6.o)
  
  Selecting A7105_SPI.o to define A7105_ReadReg(unsigned char)
      Definition:     A7105_ReadReg(unsigned char)
      Pushing section .text.A7105_ReadReg(unsigned char) to worklist [originates from symbol A7105_ReadReg(unsigned char)]
  
  Processing section: .text.A7105_ReadReg(unsigned char) from A7105_SPI.o
      Load REL relocations for .text.A7105_ReadReg(unsigned char) (A7105_SPI.o)
      Reference:      SPI_RADIO_ReceiveBlock
  
  Selecting BoardI6.o to define SPI_RADIO_ReceiveBlock
      Definition:     SPI_RADIO_ReceiveBlock
      Pushing section .text.SPI_RADIO_ReceiveBlock to worklist [originates from symbol SPI_RADIO_ReceiveBlock]
  
  Processing section: .text.SPI_RADIO_ReceiveBlock from BoardI6.o
      Load REL relocations for .text.SPI_RADIO_ReceiveBlock (BoardI6.o)
  
  Selecting crossfire.o to define crsf_shutdown()
      Definition:     crsf_shutdown()
      Pushing section .text.crsf_shutdown() to worklist [originates from symbol crsf_shutdown()]
  
  Processing section: .text.crsf_shutdown() from crossfire.o
      Load REL relocations for .text.crsf_shutdown() (crossfire.o)
      Reference:      shutdown_crsf_serial_port
  
  Selecting A7105_SPI.o to define A7105_ReadData(unsigned char)
      Definition:     A7105_ReadData(unsigned char)
      Pushing section .text.A7105_ReadData(unsigned char) to worklist [originates from symbol A7105_ReadData(unsigned char)]
  
  Processing section: .text.A7105_ReadData(unsigned char) from A7105_SPI.o
      Load REL relocations for .text.A7105_ReadData(unsigned char) (A7105_SPI.o)
  
  Selecting A7105_SPI.o to define A7105_SetPower()
      Definition:     A7105_SetPower()
      Pushing section .text.A7105_SetPower() to worklist [originates from symbol A7105_SetPower()]
  
  Processing section: .text.A7105_SetPower() from A7105_SPI.o
      Load REL relocations for .text.A7105_SetPower() (A7105_SPI.o)
      Reference:      A7105_WriteReg(unsigned char, unsigned char)
      Reference:      prev_power
  
  Selecting A7105_SPI.o to define A7105_WriteReg(unsigned char, unsigned char)
      Definition:     A7105_WriteReg(unsigned char, unsigned char)
      Pushing section .text.A7105_WriteReg(unsigned char, unsigned char) to worklist [originates from symbol A7105_WriteReg(unsigned char, unsigned char)]
  
  Processing section: .text.A7105_WriteReg(unsigned char, unsigned char) from A7105_SPI.o
      Load REL relocations for .text.A7105_WriteReg(unsigned char, unsigned char) (A7105_SPI.o)
  
  Selecting pulses.o to define setupPulsesPPM(unsigned char)
      Definition:     setupPulsesPPM(unsigned char)
      Pushing section .text.setupPulsesPPM(unsigned char) to worklist [originates from symbol setupPulsesPPM(unsigned char)]
  
  Processing section: .text.setupPulsesPPM(unsigned char) from pulses.o
      Load REL relocations for .text.setupPulsesPPM(unsigned char) (pulses.o)
      Reference:      g_chans512
      Reference:      B3_comp_value
  
  Selecting pulses.o to define B3_comp_value
      Definition:     B3_comp_value
      Pushing section .bss.B3_comp_value to worklist [originates from symbol B3_comp_value]
  
  Processing section: .bss.B3_comp_value from pulses.o
  
  Selecting A7105_SPI.o to define A7105_AntSwitch()
      Definition:     A7105_AntSwitch()
      Pushing section .text.A7105_AntSwitch() to worklist [originates from symbol A7105_AntSwitch()]
  
  Processing section: .text.A7105_AntSwitch() from A7105_SPI.o
      Load REL relocations for .text.A7105_AntSwitch() (A7105_SPI.o)
      Reference:      RF0_ClrVal
      Reference:      RF1_SetVal
      Reference:      RF1_ClrVal
      Reference:      RF0_SetVal
      Local section:  .bss.A7105_AntSwitch()::sw from A7105_SPI.o using relocation R_ARM_ABS32
  
  Processing section: .bss.A7105_AntSwitch()::sw from A7105_SPI.o
  
  Selecting BoardI6.o to define RF0_ClrVal
      Definition:     RF0_ClrVal
      Pushing section .text.RF0_ClrVal to worklist [originates from symbol RF0_ClrVal]
  
  Processing section: .text.RF0_ClrVal from BoardI6.o
  
  Selecting BoardI6.o to define RF0_SetVal
      Definition:     RF0_SetVal
      Pushing section .text.RF0_SetVal to worklist [originates from symbol RF0_SetVal]
  
  Processing section: .text.RF0_SetVal from BoardI6.o
  
  Selecting BoardI6.o to define RF1_ClrVal
      Definition:     RF1_ClrVal
      Pushing section .text.RF1_ClrVal to worklist [originates from symbol RF1_ClrVal]
  
  Processing section: .text.RF1_ClrVal from BoardI6.o
  
  Selecting BoardI6.o to define RF1_SetVal
      Definition:     RF1_SetVal
      Pushing section .text.RF1_SetVal to worklist [originates from symbol RF1_SetVal]
  
  Processing section: .text.RF1_SetVal from BoardI6.o
  
  Selecting A7105_SPI.o to define A7105_WriteData(unsigned char, unsigned char)
      Definition:     A7105_WriteData(unsigned char, unsigned char)
      Pushing section .text.A7105_WriteData(unsigned char, unsigned char) to worklist [originates from symbol A7105_WriteData(unsigned char, unsigned char)]
  
  Processing section: .text.A7105_WriteData(unsigned char, unsigned char) from A7105_SPI.o
      Load REL relocations for .text.A7105_WriteData(unsigned char, unsigned char) (A7105_SPI.o)
      Reference:      __aeabi_memcpy
  
  Selecting pulses.o to define SetStartPulsePol()
      Definition:     SetStartPulsePol()
      Pushing section .text.SetStartPulsePol() to worklist [originates from symbol SetStartPulsePol()]
  
  Processing section: .text.SetStartPulsePol() from pulses.o
      Load REL relocations for .text.SetStartPulsePol() (pulses.o)
      Reference:      GetPPMOutState
      Reference:      cli
      Reference:      GetPPMTimCompareInterruptFlag
      Reference:      ClearPPMTimCompareInterruptFlag
      Reference:      sei
  
  Selecting BoardI6.o to define ClearPPMTimCompareInterruptFlag
      Definition:     ClearPPMTimCompareInterruptFlag
      Pushing section .text.ClearPPMTimCompareInterruptFlag to worklist [originates from symbol ClearPPMTimCompareInterruptFlag]
  
  Processing section: .text.ClearPPMTimCompareInterruptFlag from BoardI6.o
  
  Selecting BoardI6.o to define GetPPMOutState
      Definition:     GetPPMOutState
      Pushing section .text.GetPPMOutState to worklist [originates from symbol GetPPMOutState]
  
  Processing section: .text.GetPPMOutState from BoardI6.o
  
  Selecting BoardI6.o to define GetPPMTimCompareInterruptFlag
      Definition:     GetPPMTimCompareInterruptFlag
      Pushing section .text.GetPPMTimCompareInterruptFlag to worklist [originates from symbol GetPPMTimCompareInterruptFlag]
  
  Processing section: .text.GetPPMTimCompareInterruptFlag from BoardI6.o
  
  Selecting BoardI6.o to define uart_clear_error()
      Definition:     uart_clear_error()
      Pushing section .text.uart_clear_error() to worklist [originates from symbol uart_clear_error()]
  
  Processing section: .text.uart_clear_error() from BoardI6.o
  
  Selecting A7105_SPI.o to define A7105_SetTxRxMode(unsigned char)
      Definition:     A7105_SetTxRxMode(unsigned char)
      Pushing section .text.A7105_SetTxRxMode(unsigned char) to worklist [originates from symbol A7105_SetTxRxMode(unsigned char)]
  
  Processing section: .text.A7105_SetTxRxMode(unsigned char) from A7105_SPI.o
      Load REL relocations for .text.A7105_SetTxRxMode(unsigned char) (A7105_SPI.o)
  
  Selecting AFHDS2A_a7105.o to define AFHDS2A_build_packet(unsigned char)
      Definition:     AFHDS2A_build_packet(unsigned char)
      Pushing section .text.AFHDS2A_build_packet(unsigned char) to worklist [originates from symbol AFHDS2A_build_packet(unsigned char)]
  
  Processing section: .text.AFHDS2A_build_packet(unsigned char) from AFHDS2A_a7105.o
      Load REL relocations for .text.AFHDS2A_build_packet(unsigned char) (AFHDS2A_a7105.o)
      Reference:      convert_failsafe_ppm(unsigned char)
  
  Selecting A7105_SPI.o to define convert_failsafe_ppm(unsigned char)
      Definition:     convert_failsafe_ppm(unsigned char)
      Pushing section .text.convert_failsafe_ppm(unsigned char) to worklist [originates from symbol convert_failsafe_ppm(unsigned char)]
  
  Processing section: .text.convert_failsafe_ppm(unsigned char) from A7105_SPI.o
      Load REL relocations for .text.convert_failsafe_ppm(unsigned char) (A7105_SPI.o)
  
  Selecting crossfire.o to define setupPulsesCrossfire()
      Definition:     setupPulsesCrossfire()
      Pushing section .text.setupPulsesCrossfire() to worklist [originates from symbol setupPulsesCrossfire()]
  
  Processing section: .text.setupPulsesCrossfire() from crossfire.o
      Load REL relocations for .text.setupPulsesCrossfire() (crossfire.o)
      Reference:      __aeabi_memcpy4
      Reference:      createCrossfireChannelsFrame(unsigned char*, short*)
      Reference:      outputTelemetryBufferSize
      Reference:      outputTelemetryBuffer
      Reference:      outputTelemetryBufferTrigger
  
  Selecting A7105_SPI.o to define A7105_AdjustLOBaseFreq()
      Definition:     A7105_AdjustLOBaseFreq()
      Pushing section .text.A7105_AdjustLOBaseFreq() to worklist [originates from symbol A7105_AdjustLOBaseFreq()]
  
  Processing section: .text.A7105_AdjustLOBaseFreq() from A7105_SPI.o
      Load REL relocations for .text.A7105_AdjustLOBaseFreq() (A7105_SPI.o)
      Local section:  .data.A7105_AdjustLOBaseFreq()::old_offset from A7105_SPI.o using relocation R_ARM_ABS32
  
  Processing section: .data.A7105_AdjustLOBaseFreq()::old_offset from A7105_SPI.o
  
  Selecting crossfire.o to define createCrossfireChannelsFrame(unsigned char*, short*)
      Definition:     createCrossfireChannelsFrame(unsigned char*, short*)
      Pushing section .text.createCrossfireChannelsFrame(unsigned char*, short*) to worklist [originates from symbol createCrossfireChannelsFrame(unsigned char*, short*)]
  
  Processing section: .text.createCrossfireChannelsFrame(unsigned char*, short*) from crossfire.o
      Load REL relocations for .text.createCrossfireChannelsFrame(unsigned char*, short*) (crossfire.o)
      Reference:      crc8(unsigned char const*, unsigned int)
  
  Selecting crc_crsf.o to define crc8(unsigned char const*, unsigned int)
      Definition:     crc8(unsigned char const*, unsigned int)
      Pushing section .text.crc8(unsigned char const*, unsigned int) to worklist [originates from symbol crc8(unsigned char const*, unsigned int)]
  
  Processing section: .text.crc8(unsigned char const*, unsigned int) from crc_crsf.o
      Load REL relocations for .text.crc8(unsigned char const*, unsigned int) (crc_crsf.o)
      Local section:  .rodata.crc8tab from crc_crsf.o using relocation R_ARM_ABS32
  
  Processing section: .rodata.crc8tab from crc_crsf.o
  
  Selecting drivers.o to define per10ms()
      Definition:     per10ms()
      Pushing section .text.per10ms() to worklist [originates from symbol per10ms()]
  
  Processing section: .text.per10ms() from drivers.o
      Load REL relocations for .text.per10ms() (drivers.o)
      Reference:      PINB
      Reference:      Key::input(bool, EnumKeys)
      Reference:      PIND
      Reference:      g_tmr10ms
      Reference:      g_blinkTmr10ms
      Local section:  .bss.per10ms()::current from drivers.o using relocation R_ARM_ABS32
      Reference:      keys
      Local section:  .rodata.per10ms()::crossTrim from drivers.o using relocation R_ARM_ABS32
      Reference:      Rotary
      Reference:      StickScrollTimer
  
  Processing section: .bss.per10ms()::current from drivers.o
  
  Processing section: .rodata.per10ms()::crossTrim from drivers.o
  
  Selecting BoardI6.o to define PINB
      Definition:     PINB
      Pushing section .text.PINB to worklist [originates from symbol PINB]
  
  Processing section: .text.PINB from BoardI6.o
  
  Selecting BoardI6.o to define PIND
      Definition:     PIND
      Pushing section .text.PIND to worklist [originates from symbol PIND]
  
  Processing section: .text.PIND from BoardI6.o
  
  Selecting er9x.o to define Rotary
      Definition:     Rotary
      Pushing section .bss.Rotary to worklist [originates from symbol Rotary]
  
  Processing section: .bss.Rotary from er9x.o
  
  Selecting er9x.o to define StickScrollTimer
      Definition:     StickScrollTimer
      Pushing section .bss.StickScrollTimer to worklist [originates from symbol StickScrollTimer]
  
  Processing section: .bss.StickScrollTimer from er9x.o
  
  Selecting crossfire.o to define crsf_init()
      Definition:     crsf_init()
      Pushing section .text.crsf_init() to worklist [originates from symbol crsf_init()]
  
  Processing section: .text.crsf_init() from crossfire.o
      Load REL relocations for .text.crsf_init() (crossfire.o)
      Reference:      setup_crsf_serial_port
      Reference:      SetPRTTimPeriod
      Reference:      processCrossfireTelemetryData(unsigned char)
  
  Selecting BoardI6.o to define SetPRTTimPeriod
      Definition:     SetPRTTimPeriod
      Pushing section .text.SetPRTTimPeriod to worklist [originates from symbol SetPRTTimPeriod]
  
  Processing section: .text.SetPRTTimPeriod from BoardI6.o
  
  Selecting crossfire.o to define processCrossfireTelemetryData(unsigned char)
      Definition:     processCrossfireTelemetryData(unsigned char)
      Pushing section .text.processCrossfireTelemetryData(unsigned char) to worklist [originates from symbol processCrossfireTelemetryData(unsigned char)]
  
  Processing section: .text.processCrossfireTelemetryData(unsigned char) from crossfire.o
      Load REL relocations for .text.processCrossfireTelemetryData(unsigned char) (crossfire.o)
      Reference:      processCrossfireTelemetryFrame()
      Reference:      telemetryRxBufferCount
      Reference:      telemetryErrors
      Reference:      telemetryRxBuffer
  
  Selecting crossfire.o to define processCrossfireTelemetryFrame()
      Definition:     processCrossfireTelemetryFrame()
      Pushing section .text.processCrossfireTelemetryFrame() to worklist [originates from symbol processCrossfireTelemetryFrame()]
  
  Processing section: .text.processCrossfireTelemetryFrame() from crossfire.o
      Load REL relocations for .text.processCrossfireTelemetryFrame() (crossfire.o)
      Reference:      checkCrossfireTelemetryFrameCRC()
      Reference:      getCrossfireTelemetryValue(unsigned char, int&, int)
      Reference:      processCrossfireTelemetryValue(unsigned char, int)
      Reference:      runCrossfireTelemetryCallback(unsigned char, unsigned char*, unsigned char)
      Reference:      g_elrs_update_rate
      Reference:      g_elrs_lag
      Local section:  .rodata.processCrossfireTelemetryFrame()::power_values from crossfire.o using relocation R_ARM_ABS32
  
  Processing section: .rodata.processCrossfireTelemetryFrame()::power_values from crossfire.o
  
  Selecting crossfire.o to define getCrossfireTelemetryValue(unsigned char, int&, int)
      Definition:     getCrossfireTelemetryValue(unsigned char, int&, int)
      Pushing section .text.getCrossfireTelemetryValue(unsigned char, int&, int) to worklist [originates from symbol getCrossfireTelemetryValue(unsigned char, int&, int)]
  
  Processing section: .text.getCrossfireTelemetryValue(unsigned char, int&, int) from crossfire.o
      Load REL relocations for .text.getCrossfireTelemetryValue(unsigned char, int&, int) (crossfire.o)
  
  Selecting elrsV2.o to define runCrossfireTelemetryCallback(unsigned char, unsigned char*, unsigned char)
      Definition:     runCrossfireTelemetryCallback(unsigned char, unsigned char*, unsigned char)
      Pushing section .text.runCrossfireTelemetryCallback(unsigned char, unsigned char*, unsigned char) to worklist [originates from symbol runCrossfireTelemetryCallback(unsigned char, unsigned char*, unsigned char)]
  
  Processing section: .text.runCrossfireTelemetryCallback(unsigned char, unsigned char*, unsigned char) from elrsV2.o
      Load REL relocations for .text.runCrossfireTelemetryCallback(unsigned char, unsigned char*, unsigned char) (elrsV2.o)
      Reference:      parseDeviceInfoMessage(unsigned char*)
      Reference:      parseParameterInfoMessage(unsigned char*, unsigned char)
      Reference:      get_tmr10ms()
      Reference:      crossfireTelemetryPush4(unsigned char, unsigned char, unsigned char)
      Reference:      crossfireTelemetryPing()
      Reference:      otherDevicesId
      Reference:      folderAccess
      Reference:      allParamsLoaded
      Reference:      statusComplete
      Reference:      fieldTimeout
      Local section:  .bss.fieldPopup from elrsV2.o using relocation R_ARM_ABS32
      Reference:      fields_count
      Reference:      devicesRefreshTimeout
      Reference:      edit
      Reference:      fieldChunk
      Reference:      fieldId
  
  Processing section: .bss.fieldPopup from elrsV2.o
  
  Selecting er9x.o to define get_tmr10ms()
      Definition:     get_tmr10ms()
      Pushing section .text.get_tmr10ms() to worklist [originates from symbol get_tmr10ms()]
  
  Processing section: .text.get_tmr10ms() from er9x.o
      Load REL relocations for .text.get_tmr10ms() (er9x.o)
  
  Selecting elrsV2.o to define crossfireTelemetryPing()
      Definition:     crossfireTelemetryPing()
      Pushing section .text.crossfireTelemetryPing() to worklist [originates from symbol crossfireTelemetryPing()]
  
  Processing section: .text.crossfireTelemetryPing() from elrsV2.o
      Load REL relocations for .text.crossfireTelemetryPing() (elrsV2.o)
      Reference:      crossfireTelemetryPush(unsigned char, unsigned char*, unsigned char)
  
  Selecting crossfire.o to define crossfireTelemetryPush(unsigned char, unsigned char*, unsigned char)
      Definition:     crossfireTelemetryPush(unsigned char, unsigned char*, unsigned char)
      Pushing section .text.crossfireTelemetryPush(unsigned char, unsigned char*, unsigned char) to worklist [originates from symbol crossfireTelemetryPush(unsigned char, unsigned char*, unsigned char)]
  
  Processing section: .text.crossfireTelemetryPush(unsigned char, unsigned char*, unsigned char) from crossfire.o
      Load REL relocations for .text.crossfireTelemetryPush(unsigned char, unsigned char*, unsigned char) (crossfire.o)
  
  Selecting elrsV2.o to define parseDeviceInfoMessage(unsigned char*)
      Definition:     parseDeviceInfoMessage(unsigned char*)
      Pushing section .text.parseDeviceInfoMessage(unsigned char*) to worklist [originates from symbol parseDeviceInfoMessage(unsigned char*)]
  
  Processing section: .text.parseDeviceInfoMessage(unsigned char*) from elrsV2.o
      Load REL relocations for .text.parseDeviceInfoMessage(unsigned char*) (elrsV2.o)
      Reference:      strlen
      Reference:      allocateFields()
      Reference:      devicesLen
      Local section:  .bss.deviceIds from elrsV2.o using relocation R_ARM_ABS32
      Reference:      namesBufferOffset
      Local section:  .bss.fields from elrsV2.o using relocation R_ARM_ABS32
      Local section:  .bss.reusableBuffer from elrsV2.o using relocation R_ARM_ABS32
      Reference:      deviceId
      Reference:      deviceIsELRS_TX
      Reference:      fieldDataLen
      Reference:      valuesBufferOffset
  
  Processing section: .bss.deviceIds from elrsV2.o
  
  Processing section: .bss.fields from elrsV2.o
  
  Processing section: .bss.reusableBuffer from elrsV2.o
  
  Selecting elrsV2.o to define allocateFields()
      Definition:     allocateFields()
      Pushing section .text.allocateFields() to worklist [originates from symbol allocateFields()]
  
  Processing section: .text.allocateFields() from elrsV2.o
      Load REL relocations for .text.allocateFields() (elrsV2.o)
      Reference:      fieldsLen
      Reference:      backButtonId
  
  Selecting elrsV2.o to define crossfireTelemetryPush4(unsigned char, unsigned char, unsigned char)
      Definition:     crossfireTelemetryPush4(unsigned char, unsigned char, unsigned char)
      Pushing section .text.crossfireTelemetryPush4(unsigned char, unsigned char, unsigned char) to worklist [originates from symbol crossfireTelemetryPush4(unsigned char, unsigned char, unsigned char)]
  
  Processing section: .text.crossfireTelemetryPush4(unsigned char, unsigned char, unsigned char) from elrsV2.o
      Load REL relocations for .text.crossfireTelemetryPush4(unsigned char, unsigned char, unsigned char) (elrsV2.o)
      Reference:      handsetId
  
  Selecting elrsV2.o to define parseParameterInfoMessage(unsigned char*, unsigned char)
      Definition:     parseParameterInfoMessage(unsigned char*, unsigned char)
      Pushing section .text.parseParameterInfoMessage(unsigned char*, unsigned char) to worklist [originates from symbol parseParameterInfoMessage(unsigned char*, unsigned char)]
  
  Processing section: .text.parseParameterInfoMessage(unsigned char*, unsigned char) from elrsV2.o
      Load REL relocations for .text.parseParameterInfoMessage(unsigned char*, unsigned char) (elrsV2.o)
      Reference:      expectedChunks
      Reference:      reloadFolder
      Local section:  .rodata.functions from elrsV2.o using relocation R_ARM_ABS32
  
  Processing section: .rodata.functions from elrsV2.o
      Load REL relocations for .rodata.functions (elrsV2.o)
      Reference:      fieldTextSelectionLoad(FieldProps*, unsigned char*, unsigned char)
      Reference:      fieldTextSelectionSave(FieldProps*)
      Reference:      fieldTextSelectionDisplay(FieldProps*, unsigned char, unsigned char)
      Reference:      noopOpen(FieldProps*)
      Reference:      fieldStringDisplay(FieldProps*, unsigned char, unsigned char)
      Reference:      fieldFolderOpen(FieldProps*)
      Reference:      fieldUnifiedDisplay(FieldProps*, unsigned char, unsigned char)
      Reference:      fieldCommandLoad(FieldProps*, unsigned char*, unsigned char)
      Reference:      fieldCommandSave(FieldProps*)
      Reference:      UIbackExec(FieldProps*)
  
  Selecting elrsV2.o to define UIbackExec(FieldProps*)
      Definition:     UIbackExec(FieldProps*)
      Pushing section .text.UIbackExec(FieldProps*) to worklist [originates from symbol UIbackExec(FieldProps*)]
  
  Processing section: .text.UIbackExec(FieldProps*) from elrsV2.o
      Load REL relocations for .text.UIbackExec(FieldProps*) (elrsV2.o)
  
  Selecting elrsV2.o to define fieldFolderOpen(FieldProps*)
      Definition:     fieldFolderOpen(FieldProps*)
      Pushing section .text.fieldFolderOpen(FieldProps*) to worklist [originates from symbol fieldFolderOpen(FieldProps*)]
  
  Processing section: .text.fieldFolderOpen(FieldProps*) from elrsV2.o
      Load REL relocations for .text.fieldFolderOpen(FieldProps*) (elrsV2.o)
      Reference:      pageOffset
      Reference:      lineIndex
  
  Selecting elrsV2.o to define fieldCommandLoad(FieldProps*, unsigned char*, unsigned char)
      Definition:     fieldCommandLoad(FieldProps*, unsigned char*, unsigned char)
      Pushing section .text.fieldCommandLoad(FieldProps*, unsigned char*, unsigned char) to worklist [originates from symbol fieldCommandLoad(FieldProps*, unsigned char*, unsigned char)]
  
  Processing section: .text.fieldCommandLoad(FieldProps*, unsigned char*, unsigned char) from elrsV2.o
      Load REL relocations for .text.fieldCommandLoad(FieldProps*, unsigned char*, unsigned char) (elrsV2.o)
      Reference:      strcpy
  
  Selecting elrsV2.o to define fieldCommandSave(FieldProps*)
      Definition:     fieldCommandSave(FieldProps*)
      Pushing section .text.fieldCommandSave(FieldProps*) to worklist [originates from symbol fieldCommandSave(FieldProps*)]
  
  Processing section: .text.fieldCommandSave(FieldProps*) from elrsV2.o
      Load REL relocations for .text.fieldCommandSave(FieldProps*) (elrsV2.o)
  
  Selecting elrsV2.o to define fieldStringDisplay(FieldProps*, unsigned char, unsigned char)
      Definition:     fieldStringDisplay(FieldProps*, unsigned char, unsigned char)
      Pushing section .text.fieldStringDisplay(FieldProps*, unsigned char, unsigned char) to worklist [originates from symbol fieldStringDisplay(FieldProps*, unsigned char, unsigned char)]
  
  Processing section: .text.fieldStringDisplay(FieldProps*, unsigned char, unsigned char) from elrsV2.o
      Load REL relocations for .text.fieldStringDisplay(FieldProps*, unsigned char, unsigned char) (elrsV2.o)
      Reference:      lcd_putsnAtt(unsigned char, unsigned char, char const*, unsigned char, unsigned char)
  
  Selecting lcd.o to define lcd_putsnAtt(unsigned char, unsigned char, char const*, unsigned char, unsigned char)
      Definition:     lcd_putsnAtt(unsigned char, unsigned char, char const*, unsigned char, unsigned char)
      Pushing section .text.lcd_putsnAtt(unsigned char, unsigned char, char const*, unsigned char, unsigned char) to worklist [originates from symbol lcd_putsnAtt(unsigned char, unsigned char, char const*, unsigned char, unsigned char)]
  
  Processing section: .text.lcd_putsnAtt(unsigned char, unsigned char, char const*, unsigned char, unsigned char) from lcd.o
      Load REL relocations for .text.lcd_putsnAtt(unsigned char, unsigned char, char const*, unsigned char, unsigned char) (lcd.o)
      Reference:      lcd_putcAtt(unsigned char, unsigned char, char, unsigned char)
  
  Selecting lcd.o to define lcd_putcAtt(unsigned char, unsigned char, char, unsigned char)
      Definition:     lcd_putcAtt(unsigned char, unsigned char, char, unsigned char)
      Pushing section .text.lcd_putcAtt(unsigned char, unsigned char, char, unsigned char) to worklist [originates from symbol lcd_putcAtt(unsigned char, unsigned char, char, unsigned char)]
  
  Processing section: .text.lcd_putcAtt(unsigned char, unsigned char, char, unsigned char) from lcd.o
      Load REL relocations for .text.lcd_putcAtt(unsigned char, unsigned char, char, unsigned char) (lcd.o)
      Reference:      DisplayBuf
      Local section:  .rodata.font from lcd.o using relocation R_ARM_ABS32
      Local section:  .rodata.font_dblsize from lcd.o using relocation R_ARM_ABS32
  
  Processing section: .rodata.font from lcd.o
  
  Processing section: .rodata.font_dblsize from lcd.o
  
  Selecting lcd.o to define DisplayBuf
      Definition:     DisplayBuf
      Pushing section .bss.DisplayBuf to worklist [originates from symbol DisplayBuf]
  
  Processing section: .bss.DisplayBuf from lcd.o
  
  Selecting elrsV2.o to define fieldUnifiedDisplay(FieldProps*, unsigned char, unsigned char)
      Definition:     fieldUnifiedDisplay(FieldProps*, unsigned char, unsigned char)
      Pushing section .text.fieldUnifiedDisplay(FieldProps*, unsigned char, unsigned char) to worklist [originates from symbol fieldUnifiedDisplay(FieldProps*, unsigned char, unsigned char)]
  
  Processing section: .text.fieldUnifiedDisplay(FieldProps*, unsigned char, unsigned char) from elrsV2.o
      Load REL relocations for .text.fieldUnifiedDisplay(FieldProps*, unsigned char, unsigned char) (elrsV2.o)
      Reference:      tiny_sprintf(char*, char const*, char, char, ...)
      Reference:      lcd_putsAtt(unsigned char, unsigned char, char const*, unsigned char)
      Local section:  .rodata..L.str.5 from elrsV2.o using relocation R_ARM_ABS32
      Local section:  .rodata..Lswitch.table.fieldUnifiedDisplay(FieldProps*, unsigned char, unsigned char) from elrsV2.o using relocation R_ARM_ABS32
  
  Processing section: .rodata..L.str.5 from elrsV2.o
  
  Processing section: .rodata..Lswitch.table.fieldUnifiedDisplay(FieldProps*, unsigned char, unsigned char) from elrsV2.o
      Load REL relocations for .rodata..Lswitch.table.fieldUnifiedDisplay(FieldProps*, unsigned char, unsigned char) (elrsV2.o)
      Local section:  .rodata..L.str.3 from elrsV2.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.2 from elrsV2.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.4 from elrsV2.o using relocation R_ARM_ABS32
  
  Processing section: .rodata..L.str.3 from elrsV2.o
  
  Processing section: .rodata..L.str.2 from elrsV2.o
  
  Processing section: .rodata..L.str.4 from elrsV2.o
  
  Selecting lcd.o to define lcd_putsAtt(unsigned char, unsigned char, char const*, unsigned char)
      Definition:     lcd_putsAtt(unsigned char, unsigned char, char const*, unsigned char)
      Pushing section .text.lcd_putsAtt(unsigned char, unsigned char, char const*, unsigned char) to worklist [originates from symbol lcd_putsAtt(unsigned char, unsigned char, char const*, unsigned char)]
  
  Processing section: .text.lcd_putsAtt(unsigned char, unsigned char, char const*, unsigned char) from lcd.o
      Load REL relocations for .text.lcd_putsAtt(unsigned char, unsigned char, char const*, unsigned char) (lcd.o)
  
  Selecting elrsV2.o to define tiny_sprintf(char*, char const*, char, char, ...)
      Definition:     tiny_sprintf(char*, char const*, char, char, ...)
      Pushing section .text.tiny_sprintf(char*, char const*, char, char, ...) to worklist [originates from symbol tiny_sprintf(char*, char const*, char, char, ...)]
  
  Processing section: .text.tiny_sprintf(char*, char const*, char, char, ...) from elrsV2.o
      Load REL relocations for .text.tiny_sprintf(char*, char const*, char, char, ...) (elrsV2.o)
  
  Selecting elrsV2.o to define fieldTextSelectionLoad(FieldProps*, unsigned char*, unsigned char)
      Definition:     fieldTextSelectionLoad(FieldProps*, unsigned char*, unsigned char)
      Pushing section .text.fieldTextSelectionLoad(FieldProps*, unsigned char*, unsigned char) to worklist [originates from symbol fieldTextSelectionLoad(FieldProps*, unsigned char*, unsigned char)]
  
  Processing section: .text.fieldTextSelectionLoad(FieldProps*, unsigned char*, unsigned char) from elrsV2.o
      Load REL relocations for .text.fieldTextSelectionLoad(FieldProps*, unsigned char*, unsigned char) (elrsV2.o)
      Reference:      strstr
      Local section:  .rodata..L.str from elrsV2.o using relocation R_ARM_ABS32
  
  Processing section: .rodata..L.str from elrsV2.o
  
  Selecting elrsV2.o to define fieldTextSelectionSave(FieldProps*)
      Definition:     fieldTextSelectionSave(FieldProps*)
      Pushing section .text.fieldTextSelectionSave(FieldProps*) to worklist [originates from symbol fieldTextSelectionSave(FieldProps*)]
  
  Processing section: .text.fieldTextSelectionSave(FieldProps*) from elrsV2.o
      Load REL relocations for .text.fieldTextSelectionSave(FieldProps*) (elrsV2.o)
  
  Selecting elrsV2.o to define fieldTextSelectionDisplay(FieldProps*, unsigned char, unsigned char)
      Definition:     fieldTextSelectionDisplay(FieldProps*, unsigned char, unsigned char)
      Pushing section .text.fieldTextSelectionDisplay(FieldProps*, unsigned char, unsigned char) to worklist [originates from symbol fieldTextSelectionDisplay(FieldProps*, unsigned char, unsigned char)]
  
  Processing section: .text.fieldTextSelectionDisplay(FieldProps*, unsigned char, unsigned char) from elrsV2.o
      Load REL relocations for .text.fieldTextSelectionDisplay(FieldProps*, unsigned char, unsigned char) (elrsV2.o)
      Local section:  .text.semicolonPos(char const*, unsigned char) from elrsV2.o using relocation R_ARM_THM_CALL
      Local section:  .rodata..L.str.1 from elrsV2.o using relocation R_ARM_ABS32
  
  Processing section: .text.semicolonPos(char const*, unsigned char) from elrsV2.o
  
  Processing section: .rodata..L.str.1 from elrsV2.o
  
  Selecting crossfire.o to define processCrossfireTelemetryValue(unsigned char, int)
      Definition:     processCrossfireTelemetryValue(unsigned char, int)
      Pushing section .text.processCrossfireTelemetryValue(unsigned char, int) to worklist [originates from symbol processCrossfireTelemetryValue(unsigned char, int)]
  
  Processing section: .text.processCrossfireTelemetryValue(unsigned char, int) from crossfire.o
      Load REL relocations for .text.processCrossfireTelemetryValue(unsigned char, int) (crossfire.o)
      Local section:  .rodata.idx_to_afhds2a from crossfire.o using relocation R_ARM_ABS32
  
  Processing section: .rodata.idx_to_afhds2a from crossfire.o
  
  Selecting crossfire.o to define checkCrossfireTelemetryFrameCRC()
      Definition:     checkCrossfireTelemetryFrameCRC()
      Pushing section .text.checkCrossfireTelemetryFrameCRC() to worklist [originates from symbol checkCrossfireTelemetryFrameCRC()]
  
  Processing section: .text.checkCrossfireTelemetryFrameCRC() from crossfire.o
      Load REL relocations for .text.checkCrossfireTelemetryFrameCRC() (crossfire.o)
  
  Selecting elrsV2.o to define noopOpen(FieldProps*)
      Definition:     noopOpen(FieldProps*)
      Pushing section .text.noopOpen(FieldProps*) to worklist [originates from symbol noopOpen(FieldProps*)]
  
  Processing section: .text.noopOpen(FieldProps*) from elrsV2.o
  
  Selecting audio.o to define audioQueue::busy()
      Definition:     audioQueue::busy()
      Pushing section .text.audioQueue::busy() to worklist [originates from symbol audioQueue::busy()]
  
  Processing section: .text.audioQueue::busy() from audio.o
  
  Selecting er9x.o to define audioQueue::driver()
      Definition:     audioQueue::driver()
      Pushing section .text.audioQueue::driver() to worklist [originates from symbol audioQueue::driver()]
  
  Processing section: .text.audioQueue::driver() from er9x.o
      Load REL relocations for .text.audioQueue::driver() (er9x.o)
      Reference:      Buzzer_ClrVal
      Reference:      Buzzer_SetVal
      Weak reference: audioQueue::driver()::toneCounter
      Reference:      g_eeGeneral
  
  Selecting BoardI6.o to define Buzzer_ClrVal
      Definition:     Buzzer_ClrVal
      Pushing section .text.Buzzer_ClrVal to worklist [originates from symbol Buzzer_ClrVal]
  
  Processing section: .text.Buzzer_ClrVal from BoardI6.o
  
  Selecting BoardI6.o to define Buzzer_SetVal
      Definition:     Buzzer_SetVal
      Pushing section .text.Buzzer_SetVal to worklist [originates from symbol Buzzer_SetVal]
  
  Processing section: .text.Buzzer_SetVal from BoardI6.o
  
  Selecting audio.o to define audioQueue::heartbeat()
      Definition:     audioQueue::heartbeat()
      Pushing section .text.audioQueue::heartbeat() to worklist [originates from symbol audioQueue::heartbeat()]
  
  Processing section: .text.audioQueue::heartbeat() from audio.o
      Load REL relocations for .text.audioQueue::heartbeat() (audio.o)
  
  Selecting audio.o to define audioQueue::audioQueue()
      Definition:     audioQueue::audioQueue()
      Pushing section .text.audioQueue::audioQueue() to worklist [originates from symbol audioQueue::audioQueue()]
  
  Processing section: .text.audioQueue::audioQueue() from audio.o
  
  Selecting drivers.o to define Key::input(bool, EnumKeys)
      Definition:     Key::input(bool, EnumKeys)
      Pushing section .text.Key::input(bool, EnumKeys) to worklist [originates from symbol Key::input(bool, EnumKeys)]
  
  Processing section: .text.Key::input(bool, EnumKeys) from drivers.o
      Load REL relocations for .text.Key::input(bool, EnumKeys) (drivers.o)
      Reference:      s_evt
      Reference:      Inactivity
  
  Selecting er9x.o to define Inactivity
      Definition:     Inactivity
      Pushing section .bss.Inactivity to worklist [originates from symbol Inactivity]
  
  Processing section: .bss.Inactivity from er9x.o
  
  Selecting er9x.o to define audioQueue::driver()::toneCounter
      Definition:     audioQueue::driver()::toneCounter
      Pushing section .bss.audioQueue::driver()::toneCounter to worklist [originates from symbol audioQueue::driver()::toneCounter]
  
  Processing section: .bss.audioQueue::driver()::toneCounter from er9x.o
  
  Selecting intasmops_arm.o (libc_v6m_t_le_eabi_small.a) to define __aeabi_idiv
      Definition:     __aeabi_idiv
      Pushing section .text.libc.__aeabi_idiv to worklist [originates from symbol __aeabi_idiv]
  
  Processing section: .text.libc.__aeabi_idiv from intasmops_arm.o (libc_v6m_t_le_eabi_small.a)
      Load REL relocations for .text.libc.__aeabi_idiv (intasmops_arm.o (libc_v6m_t_le_eabi_small.a))
      Weak reference: __aeabi_idiv0
  
  Selecting intasmops_arm.o (libc_v6m_t_le_eabi_small.a) to define __aeabi_idiv0
      Definition:     __aeabi_idiv0
      Pushing section .text.libc.__aeabi_idiv0 to worklist [originates from symbol __aeabi_idiv0]
  
  Processing section: .text.libc.__aeabi_idiv0 from intasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  
  Selecting intasmops_arm.o (libc_v6m_t_le_eabi_small.a) to define __aeabi_llsl
      Definition:     __aeabi_llsl
      Pushing section .text.libc.__aeabi_llsl to worklist [originates from symbol __aeabi_llsl]
  
  Processing section: .text.libc.__aeabi_llsl from intasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  
  Selecting strasmops_arm.o (libc_v6m_t_le_eabi_small.a) to define __aeabi_memcpy
      Definition:     __aeabi_memcpy
      Pushing section .text.libc.memcpy to worklist [originates from symbol __aeabi_memcpy]
  
  Processing section: .text.libc.memcpy from strasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  
  Selecting strasmops_arm.o (libc_v6m_t_le_eabi_small.a) to define __aeabi_memcpy4
      Definition:     __aeabi_memcpy4
  
  Selecting strasmops_arm.o (libc_v6m_t_le_eabi_small.a) to define __aeabi_memset
      Definition:     __aeabi_memset
      Pushing section .text.libc.__aeabi_memclr to worklist [originates from symbol __aeabi_memset]
  
  Processing section: .text.libc.__aeabi_memclr from strasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  
  Selecting intasmops_arm.o (libc_v6m_t_le_eabi_small.a) to define __aeabi_uidiv
      Definition:     __aeabi_uidiv
      Pushing section .text.libc.__aeabi_uidiv to worklist [originates from symbol __aeabi_uidiv]
  
  Processing section: .text.libc.__aeabi_uidiv from intasmops_arm.o (libc_v6m_t_le_eabi_small.a)
      Load REL relocations for .text.libc.__aeabi_uidiv (intasmops_arm.o (libc_v6m_t_le_eabi_small.a))
  
  Selecting intasmops_arm.o (libc_v6m_t_le_eabi_small.a) to define __aeabi_uidivmod
      Definition:     __aeabi_uidivmod
      Pushing section .text.libc.__aeabi_uidivmod to worklist [originates from symbol __aeabi_uidivmod]
  
  Processing section: .text.libc.__aeabi_uidivmod from intasmops_arm.o (libc_v6m_t_le_eabi_small.a)
      Load REL relocations for .text.libc.__aeabi_uidivmod (intasmops_arm.o (libc_v6m_t_le_eabi_small.a))
  
  Selecting BoardI6.o to define a7105_csn_off
      Definition:     a7105_csn_off
      Pushing section .text.a7105_csn_off to worklist [originates from symbol a7105_csn_off]
  
  Processing section: .text.a7105_csn_off from BoardI6.o
  
  Selecting BoardI6.o to define a7105_csn_on
      Definition:     a7105_csn_on
      Pushing section .text.a7105_csn_on to worklist [originates from symbol a7105_csn_on]
  
  Processing section: .text.a7105_csn_on from BoardI6.o
  
  Selecting elrsV2.o to define allParamsLoaded
      Definition:     allParamsLoaded
      Pushing section .bss.allParamsLoaded to worklist [originates from symbol allParamsLoaded]
  
  Processing section: .bss.allParamsLoaded from elrsV2.o
  
  Selecting er9x.o to define audio
      Definition:     audio
      Pushing section .bss.audio to worklist [originates from symbol audio]
  
  Processing section: .bss.audio from er9x.o
  
  Selecting elrsV2.o to define backButtonId
      Definition:     backButtonId
      Pushing section .data.backButtonId to worklist [originates from symbol backButtonId]
  
  Processing section: .data.backButtonId from elrsV2.o
  
  Selecting A7105_SPI.o to define bind_phase
      Definition:     bind_phase
      Pushing section .bss.bind_phase to worklist [originates from symbol bind_phase]
  
  Processing section: .bss.bind_phase from A7105_SPI.o
  
  Selecting BoardI6.o to define cli
      Definition:     cli
      Pushing section .text.cli to worklist [originates from symbol cli]
  
  Processing section: .text.cli from BoardI6.o
  
  Selecting BoardI6.o to define crsf_send_data
      Definition:     crsf_send_data
      Pushing section .text.crsf_send_data to worklist [originates from symbol crsf_send_data]
  
  Processing section: .text.crsf_send_data from BoardI6.o
  
  Selecting elrsV2.o to define deviceId
      Definition:     deviceId
      Pushing section .data.deviceId to worklist [originates from symbol deviceId]
  
  Processing section: .data.deviceId from elrsV2.o
  
  Selecting elrsV2.o to define deviceIsELRS_TX
      Definition:     deviceIsELRS_TX
      Pushing section .bss.deviceIsELRS_TX to worklist [originates from symbol deviceIsELRS_TX]
  
  Processing section: .bss.deviceIsELRS_TX from elrsV2.o
  
  Selecting elrsV2.o to define devicesLen
      Definition:     devicesLen
      Pushing section .bss.devicesLen to worklist [originates from symbol devicesLen]
  
  Processing section: .bss.devicesLen from elrsV2.o
  
  Selecting elrsV2.o to define devicesRefreshTimeout
      Definition:     devicesRefreshTimeout
      Pushing section .data.devicesRefreshTimeout to worklist [originates from symbol devicesRefreshTimeout]
  
  Processing section: .data.devicesRefreshTimeout from elrsV2.o
  
  Selecting elrsV2.o to define edit
      Definition:     edit
      Pushing section .bss.edit to worklist [originates from symbol edit]
  
  Processing section: .bss.edit from elrsV2.o
  
  Selecting elrsV2.o to define expectedChunks
      Definition:     expectedChunks
      Pushing section .data.expectedChunks to worklist [originates from symbol expectedChunks]
  
  Processing section: .data.expectedChunks from elrsV2.o
  
  Selecting elrsV2.o to define fieldChunk
      Definition:     fieldChunk
      Pushing section .bss.fieldChunk to worklist [originates from symbol fieldChunk]
  
  Processing section: .bss.fieldChunk from elrsV2.o
  
  Selecting elrsV2.o to define fieldDataLen
      Definition:     fieldDataLen
      Pushing section .bss.fieldDataLen to worklist [originates from symbol fieldDataLen]
  
  Processing section: .bss.fieldDataLen from elrsV2.o
  
  Selecting elrsV2.o to define fieldId
      Definition:     fieldId
      Pushing section .data.fieldId to worklist [originates from symbol fieldId]
  
  Processing section: .data.fieldId from elrsV2.o
  
  Selecting elrsV2.o to define fieldTimeout
      Definition:     fieldTimeout
      Pushing section .bss.fieldTimeout to worklist [originates from symbol fieldTimeout]
  
  Processing section: .bss.fieldTimeout from elrsV2.o
  
  Selecting elrsV2.o to define fieldsLen
      Definition:     fieldsLen
      Pushing section .bss.fieldsLen to worklist [originates from symbol fieldsLen]
  
  Processing section: .bss.fieldsLen from elrsV2.o
  
  Selecting elrsV2.o to define fields_count
      Definition:     fields_count
      Pushing section .bss.fields_count to worklist [originates from symbol fields_count]
  
  Processing section: .bss.fields_count from elrsV2.o
  
  Selecting elrsV2.o to define folderAccess
      Definition:     folderAccess
      Pushing section .bss.folderAccess to worklist [originates from symbol folderAccess]
  
  Processing section: .bss.folderAccess from elrsV2.o
  
  Selecting drivers.o to define g_blinkTmr10ms
      Definition:     g_blinkTmr10ms
      Pushing section .bss.g_blinkTmr10ms to worklist [originates from symbol g_blinkTmr10ms]
  
  Processing section: .bss.g_blinkTmr10ms from drivers.o
  
  Selecting menus.o to define g_chans512
      Definition:     g_chans512
      Pushing section .bss.g_chans512 to worklist [originates from symbol g_chans512]
  
  Processing section: .bss.g_chans512 from menus.o
  
  Selecting crossfire.o to define g_crossfire
      Definition:     g_crossfire
      Pushing section .bss.g_crossfire to worklist [originates from symbol g_crossfire]
  
  Processing section: .bss.g_crossfire from crossfire.o
  
  Selecting er9x.o to define g_eeGeneral
      Definition:     g_eeGeneral
      Pushing section .bss.g_eeGeneral to worklist [originates from symbol g_eeGeneral]
  
  Processing section: .bss.g_eeGeneral from er9x.o
  
  Selecting crossfire.o to define g_elrs_lag
      Definition:     g_elrs_lag
      Pushing section .bss.g_elrs_lag to worklist [originates from symbol g_elrs_lag]
  
  Processing section: .bss.g_elrs_lag from crossfire.o
  
  Selecting crossfire.o to define g_elrs_update_rate
      Definition:     g_elrs_update_rate
      Pushing section .bss.g_elrs_update_rate to worklist [originates from symbol g_elrs_update_rate]
  
  Processing section: .bss.g_elrs_update_rate from crossfire.o
  
  Selecting er9x.o to define g_model
      Definition:     g_model
      Pushing section .bss.g_model to worklist [originates from symbol g_model]
  
  Processing section: .bss.g_model from er9x.o
  
  Selecting drivers.o to define g_tmr10ms
      Definition:     g_tmr10ms
      Pushing section .bss.g_tmr10ms to worklist [originates from symbol g_tmr10ms]
  
  Processing section: .bss.g_tmr10ms from drivers.o
  
  Selecting er9x.o to define g_tmr16KHz
      Definition:     g_tmr16KHz
      Pushing section .bss.g_tmr16KHz to worklist [originates from symbol g_tmr16KHz]
  
  Processing section: .bss.g_tmr16KHz from er9x.o
  
  Selecting BoardI6.o to define g_voice_cb
      Definition:     g_voice_cb
      Pushing section .bss.g_voice_cb to worklist [originates from symbol g_voice_cb]
  
  Processing section: .bss.g_voice_cb from BoardI6.o
  
  Selecting elrsV2.o to define handsetId
      Definition:     handsetId
      Pushing section .data.handsetId to worklist [originates from symbol handsetId]
  
  Processing section: .data.handsetId from elrsV2.o
  
  Selecting pulses.o to define heartbeat
      Definition:     heartbeat
      Pushing section .bss.heartbeat to worklist [originates from symbol heartbeat]
  
  Processing section: .bss.heartbeat from pulses.o
  
  Selecting A7105_SPI.o to define hopping_frequency
      Definition:     hopping_frequency
      Pushing section .bss.hopping_frequency to worklist [originates from symbol hopping_frequency]
  
  Processing section: .bss.hopping_frequency from A7105_SPI.o
  
  Selecting A7105_SPI.o to define hopping_frequency_no
      Definition:     hopping_frequency_no
      Pushing section .bss.hopping_frequency_no to worklist [originates from symbol hopping_frequency_no]
  
  Processing section: .bss.hopping_frequency_no from A7105_SPI.o
  
  Selecting AFHDS2A_a7105.o to define initAFHDS2A
      Definition:     initAFHDS2A
      Pushing section .text.initAFHDS2A to worklist [originates from symbol initAFHDS2A]
  
  Processing section: .text.initAFHDS2A from AFHDS2A_a7105.o
      Load REL relocations for .text.initAFHDS2A (AFHDS2A_a7105.o)
      Reference:      GetChipID
      Reference:      A7105_Init()
  
  Selecting BoardI6.o to define GetChipID
      Definition:     GetChipID
      Pushing section .text.GetChipID to worklist [originates from symbol GetChipID]
  
  Processing section: .text.GetChipID from BoardI6.o
  
  Selecting A7105_SPI.o to define A7105_Init()
      Definition:     A7105_Init()
      Pushing section .text.A7105_Init() to worklist [originates from symbol A7105_Init()]
  
  Processing section: .text.A7105_Init() from A7105_SPI.o
      Load REL relocations for .text.A7105_Init() (A7105_SPI.o)
      Reference:      A7105_Reset()
      Reference:      mDelay
      Reference:      A7105_WriteID(unsigned int)
      Reference:      AFHDS2A_A7105_regs
  
  Selecting BoardI6.o to define AFHDS2A_A7105_regs
      Definition:     AFHDS2A_A7105_regs
      Pushing section .rodata.AFHDS2A_A7105_regs to worklist [originates from symbol AFHDS2A_A7105_regs]
  
  Processing section: .rodata.AFHDS2A_A7105_regs from BoardI6.o
  
  Selecting A7105_SPI.o to define A7105_Reset()
      Definition:     A7105_Reset()
      Pushing section .text.A7105_Reset() to worklist [originates from symbol A7105_Reset()]
  
  Processing section: .text.A7105_Reset() from A7105_SPI.o
      Load REL relocations for .text.A7105_Reset() (A7105_SPI.o)
  
  Selecting A7105_SPI.o to define A7105_WriteID(unsigned int)
      Definition:     A7105_WriteID(unsigned int)
      Pushing section .text.A7105_WriteID(unsigned int) to worklist [originates from symbol A7105_WriteID(unsigned int)]
  
  Processing section: .text.A7105_WriteID(unsigned int) from A7105_SPI.o
      Load REL relocations for .text.A7105_WriteID(unsigned int) (A7105_SPI.o)
  
  Selecting drivers.o to define keys
      Definition:     keys
      Pushing section .bss.keys to worklist [originates from symbol keys]
  
  Processing section: .bss.keys from drivers.o
  
  Selecting elrsV2.o to define lineIndex
      Definition:     lineIndex
      Pushing section .data.lineIndex to worklist [originates from symbol lineIndex]
  
  Processing section: .data.lineIndex from elrsV2.o
  
  Selecting BoardI6.o to define mDelay
      Definition:     mDelay
      Pushing section .text.mDelay to worklist [originates from symbol mDelay]
  
  Processing section: .text.mDelay from BoardI6.o
  
  Selecting main.o to define main
      Definition:     main
      Pushing section .text.main to worklist [originates from symbol main]
  
  Processing section: .text.main from main.o
      Load REL relocations for .text.main (main.o)
      Reference:      HW_Init
      Reference:      mainER()
  
  Selecting BoardI6.o to define HW_Init
      Definition:     HW_Init
      Pushing section .text.HW_Init to worklist [originates from symbol HW_Init]
  
  Processing section: .text.HW_Init from BoardI6.o
  
  Selecting er9x.o to define mainER()
      Definition:     mainER()
      Pushing section .text.mainER() to worklist [originates from symbol mainER()]
  
  Processing section: .text.mainER() from er9x.o
      Load REL relocations for .text.mainER() (er9x.o)
      Reference:      serialVoiceInit(void (*)(unsigned char*, unsigned char))
      Reference:      eeReadGeneral()
      Reference:      lcd_init()
      Reference:      eeGeneralDefault()
      Reference:      eeWriteGeneral()
      Reference:      lcd_puts_Pleft(unsigned char, char const*)
      Reference:      refreshDiplay()
      Reference:      eeLoadModel(unsigned char)
      Weak reference: keyDown()
      Reference:      doBackLightVoice(unsigned char)
      Reference:      setVolume(unsigned char)
      Reference:      audioVoiceDefevent(unsigned char, unsigned char)
      Reference:      check_backlight_voice()
      Reference:      lcd_clear()
      Local section:  .text.clearKeyEvents() from er9x.o using relocation R_ARM_THM_CALL
      Reference:      getADC_osmp
      Reference:      stickMoveValue()
      Weak reference: keyDown()
      Reference:      EeFsGetFree()
      Reference:      alert(char const*)
      Reference:      checkTHR()
      Reference:      checkSwitches()
      Reference:      putVoiceQueueUpper(unsigned char)
      Reference:      perOutPhase(short*, unsigned char)
      Reference:      startPulses()
      Reference:      mainSequence()
      Reference:      serialDat0
      Reference:      on_voice_cb(unsigned char*, unsigned char)
      Reference:      g_menuStack
      Reference:      menuProc0(unsigned char)
      Local section:  .rodata..L.str.8 from er9x.o using relocation R_ARM_ABS32
      Reference:      SystemOptions
      Reference:      stickMoved
      Local section:  .rodata..L.str.9 from er9x.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.10 from er9x.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.11 from er9x.o using relocation R_ARM_ABS32
      Reference:      s_anaFilt
      Reference:      g_vbat100mV
      Local section:  .rodata..L.str.12 from er9x.o using relocation R_ARM_ABS32
      Reference:      sysFlags
      Local section:  .rodata..L.str.13 from er9x.o using relocation R_ARM_ABS32
      Reference:      CurrentPhase
      Reference:      Main_running
      Reference:      menuProcModelSelect(unsigned char)
  
  Processing section: .text.clearKeyEvents() from er9x.o
      Load REL relocations for .text.clearKeyEvents() (er9x.o)
      Weak reference: keyDown()
  
  Processing section: .rodata..L.str.8 from er9x.o
  
  Processing section: .rodata..L.str.9 from er9x.o
  
  Processing section: .rodata..L.str.10 from er9x.o
  
  Processing section: .rodata..L.str.11 from er9x.o
  
  Processing section: .rodata..L.str.12 from er9x.o
  
  Processing section: .rodata..L.str.13 from er9x.o
  
  Selecting menus.o to define CurrentPhase
      Definition:     CurrentPhase
      Pushing section .bss.CurrentPhase to worklist [originates from symbol CurrentPhase]
  
  Processing section: .bss.CurrentPhase from menus.o
  
  Selecting er9x.o to define Main_running
      Definition:     Main_running
      Pushing section .bss.Main_running to worklist [originates from symbol Main_running]
  
  Processing section: .bss.Main_running from er9x.o
  
  Selecting er9x.o to define SystemOptions
      Definition:     SystemOptions
      Pushing section .bss.SystemOptions to worklist [originates from symbol SystemOptions]
  
  Processing section: .bss.SystemOptions from er9x.o
  
  Selecting file.o to define EeFsGetFree()
      Definition:     EeFsGetFree()
      Pushing section .text.EeFsGetFree() to worklist [originates from symbol EeFsGetFree()]
  
  Processing section: .text.EeFsGetFree() from file.o
      Load REL relocations for .text.EeFsGetFree() (file.o)
      Local section:  .text.EeFsGetLink(unsigned char) from file.o using relocation R_ARM_THM_CALL
      Reference:      eeFs
  
  Processing section: .text.EeFsGetLink(unsigned char) from file.o
      Load REL relocations for .text.EeFsGetLink(unsigned char) (file.o)
      Local section:  .text.EeFsRead(unsigned char, unsigned char) from file.o using relocation R_ARM_THM_CALL
  
  Processing section: .text.EeFsRead(unsigned char, unsigned char) from file.o
      Load REL relocations for .text.EeFsRead(unsigned char, unsigned char) (file.o)
      Reference:      eeprom_read_block(void*, void const*, unsigned int)
  
  Selecting pers.o to define eeLoadModel(unsigned char)
      Definition:     eeLoadModel(unsigned char)
      Pushing section .text.eeLoadModel(unsigned char) to worklist [originates from symbol eeLoadModel(unsigned char)]
  
  Processing section: .text.eeLoadModel(unsigned char) from pers.o
      Load REL relocations for .text.eeLoadModel(unsigned char) (pers.o)
      Reference:      eeLoadModelForBackup(unsigned char)
      Reference:      modelDefaultWrite(unsigned char)
      Local section:  .text.validateName(char*, unsigned char) from pers.o using relocation R_ARM_THM_CALL
      Reference:      mixaddress(unsigned char)
      Reference:      modeFixValue(unsigned char)
      Reference:      CS_STATE(unsigned char)
      Reference:      eeDirty(unsigned char)
      Reference:      eeWaitComplete()
      Reference:      resetTimer1()
      Reference:      resetTimer2()
      Reference:      Xmem
      Local section:  .rodata..L.str.2 from pers.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.3 from pers.o using relocation R_ARM_ABS32
      Reference:      TimerConfig
  
  Processing section: .text.validateName(char*, unsigned char) from pers.o
      Load REL relocations for .text.validateName(char*, unsigned char) (pers.o)
      Reference:      char2idx(char)
      Reference:      idx2char(unsigned char)
  
  Processing section: .rodata..L.str.2 from pers.o
  
  Processing section: .rodata..L.str.3 from pers.o
  
  Selecting er9x.o to define TimerConfig
      Definition:     TimerConfig
      Pushing section .bss.TimerConfig to worklist [originates from symbol TimerConfig]
  
  Processing section: .bss.TimerConfig from er9x.o
  
  Selecting menus.o to define Xmem
      Definition:     Xmem
      Pushing section .bss.Xmem to worklist [originates from symbol Xmem]
  
  Processing section: .bss.Xmem from menus.o
  
  Selecting er9x.o to define mixaddress(unsigned char)
      Definition:     mixaddress(unsigned char)
      Pushing section .text.mixaddress(unsigned char) to worklist [originates from symbol mixaddress(unsigned char)]
  
  Processing section: .text.mixaddress(unsigned char) from er9x.o
      Load REL relocations for .text.mixaddress(unsigned char) (er9x.o)
  
  Selecting audio.o to define on_voice_cb(unsigned char*, unsigned char)
      Definition:     on_voice_cb(unsigned char*, unsigned char)
      Pushing section .text.on_voice_cb(unsigned char*, unsigned char) to worklist [originates from symbol on_voice_cb(unsigned char*, unsigned char)]
  
  Processing section: .text.on_voice_cb(unsigned char*, unsigned char) from audio.o
      Load REL relocations for .text.on_voice_cb(unsigned char*, unsigned char) (audio.o)
      Local section:  .bss.wait_fin_count from audio.o using relocation R_ARM_ABS32
      Reference:      Voice
  
  Processing section: .bss.wait_fin_count from audio.o
  
  Selecting audio.o to define Voice
      Definition:     Voice
      Pushing section .bss.Voice to worklist [originates from symbol Voice]
  
  Processing section: .bss.Voice from audio.o
  
  Selecting menus.o to define perOutPhase(short*, unsigned char)
      Definition:     perOutPhase(short*, unsigned char)
      Pushing section .text.perOutPhase(short*, unsigned char) to worklist [originates from symbol perOutPhase(short*, unsigned char)]
  
  Processing section: .text.perOutPhase(short*, unsigned char) from menus.o
      Load REL relocations for .text.perOutPhase(short*, unsigned char) (menus.o)
      Reference:      getFlightPhase()
      Reference:      perOut(short*, unsigned char)
      Local section:  .bss.perOutPhase(short*, unsigned char)::lastPhase from menus.o using relocation R_ARM_ABS32
      Reference:      Fade
      Reference:      tick10ms
  
  Processing section: .bss.perOutPhase(short*, unsigned char)::lastPhase from menus.o
  
  Selecting menus.o to define Fade
      Definition:     Fade
      Pushing section .bss.Fade to worklist [originates from symbol Fade]
  
  Processing section: .bss.Fade from menus.o
  
  Selecting menus.o to define resetTimer1()
      Definition:     resetTimer1()
      Pushing section .text.resetTimer1() to worklist [originates from symbol resetTimer1()]
  
  Processing section: .text.resetTimer1() from menus.o
      Load REL relocations for .text.resetTimer1() (menus.o)
      Reference:      resetTimern(unsigned char)
      Reference:      TimeGlobals
  
  Selecting menus.o to define TimeGlobals
      Definition:     TimeGlobals
      Pushing section .bss.TimeGlobals to worklist [originates from symbol TimeGlobals]
  
  Processing section: .bss.TimeGlobals from menus.o
  
  Selecting menus.o to define resetTimer2()
      Definition:     resetTimer2()
      Pushing section .text.resetTimer2() to worklist [originates from symbol resetTimer2()]
  
  Processing section: .text.resetTimer2() from menus.o
      Load REL relocations for .text.resetTimer2() (menus.o)
  
  Selecting menus.o to define resetTimern(unsigned char)
      Definition:     resetTimern(unsigned char)
      Pushing section .text.resetTimern(unsigned char) to worklist [originates from symbol resetTimern(unsigned char)]
  
  Processing section: .text.resetTimern(unsigned char) from menus.o
      Load REL relocations for .text.resetTimern(unsigned char) (menus.o)
      Reference:      s_timer
  
  Selecting pulses.o to define startPulses()
      Definition:     startPulses()
      Pushing section .text.startPulses() to worklist [originates from symbol startPulses()]
  
  Processing section: .text.startPulses() from pulses.o
      Load REL relocations for .text.startPulses() (pulses.o)
  
  Selecting er9x.o to define mainSequence()
      Definition:     mainSequence()
      Pushing section .text.mainSequence() to worklist [originates from symbol mainSequence()]
  
  Processing section: .text.mainSequence() from er9x.o
      Load REL relocations for .text.mainSequence() (er9x.o)
      Reference:      timer()
      Reference:      trace()
      Reference:      eeCheck(bool)
      Reference:      menuPressed()
      Reference:      getTrimFlightPhase(unsigned char, unsigned char)
      Reference:      getTrimValue(unsigned char, unsigned char)
      Reference:      setTrimValue(unsigned char, unsigned char, short)
      Reference:      killEvents(unsigned char)
      Reference:      audioDefevent(unsigned char)
      Reference:      audioEvent(unsigned char, unsigned short)
      Reference:      calcStickScroll(unsigned char)
      Reference:      CalcScaleNest
      Local section:  .bss.perMain()::lastTMR from er9x.o using relocation R_ARM_ABS32
      Reference:      s_noHi
      Reference:      ppmInAvailable
      Local section:  .bss.LongMenuTimer from er9x.o using relocation R_ARM_ABS32
      Reference:      calibratedStick
      Reference:      P1values
      Reference:      scroll_disabled
      Reference:      g_menuStackPtr
      Reference:      PopupData
      Reference:      stickScramble
      Reference:      CurrentVolume
      Local section:  .bss.perMain()::repeater from er9x.o using relocation R_ARM_ABS32
      Reference:      getGvarSourceValue(unsigned char)
      Reference:      almess(char const*, unsigned char)
      Weak reference: keyDown()
      Reference:      voice_numeric(short, unsigned char, unsigned char)
      Reference:      getSwitch00(signed char)
      Reference:      processVoiceAlarms()
      Reference:      StickScrollAllowed
      Reference:      AlertMessage
      Local section:  .bss.perMain()::alertKey from er9x.o using relocation R_ARM_ABS32
      Reference:      EnterMenu
      Reference:      Tevent
      Reference:      StepSize
      Local section:  .bss.perMain()::s_batCheck from er9x.o using relocation R_ARM_ABS32
      Reference:      g_LightOffCounter
      Reference:      g_latency
      Local section:  .bss.mainSequence()::timer from er9x.o using relocation R_ARM_ABS32
      Local section:  .rodata.csTypeTable from er9x.o using relocation R_ARM_ABS32
      Reference:      CsTimer
      Reference:      Last_switch
  
  Processing section: .bss.perMain()::lastTMR from er9x.o
  
  Processing section: .bss.LongMenuTimer from er9x.o
  
  Processing section: .bss.perMain()::repeater from er9x.o
  
  Processing section: .bss.perMain()::alertKey from er9x.o
  
  Processing section: .bss.perMain()::s_batCheck from er9x.o
  
  Processing section: .bss.mainSequence()::timer from er9x.o
  
  Processing section: .rodata.csTypeTable from er9x.o
  
  Selecting er9x.o to define AlertMessage
      Definition:     AlertMessage
      Pushing section .bss.AlertMessage to worklist [originates from symbol AlertMessage]
  
  Processing section: .bss.AlertMessage from er9x.o
  
  Selecting menus.o to define CalcScaleNest
      Definition:     CalcScaleNest
      Pushing section .bss.CalcScaleNest to worklist [originates from symbol CalcScaleNest]
  
  Processing section: .bss.CalcScaleNest from menus.o
  
  Selecting er9x.o to define CsTimer
      Definition:     CsTimer
      Pushing section .bss.CsTimer to worklist [originates from symbol CsTimer]
  
  Processing section: .bss.CsTimer from er9x.o
  
  Selecting er9x.o to define CurrentVolume
      Definition:     CurrentVolume
      Pushing section .bss.CurrentVolume to worklist [originates from symbol CurrentVolume]
  
  Processing section: .bss.CurrentVolume from er9x.o
  
  Selecting er9x.o to define EnterMenu
      Definition:     EnterMenu
      Pushing section .bss.EnterMenu to worklist [originates from symbol EnterMenu]
  
  Processing section: .bss.EnterMenu from er9x.o
  
  Selecting er9x.o to define Last_switch
      Definition:     Last_switch
      Pushing section .bss.Last_switch to worklist [originates from symbol Last_switch]
  
  Processing section: .bss.Last_switch from er9x.o
  
  Selecting er9x.o to define P1values
      Definition:     P1values
      Pushing section .bss.P1values to worklist [originates from symbol P1values]
  
  Processing section: .bss.P1values from er9x.o
  
  Selecting menus.o to define PopupData
      Definition:     PopupData
      Pushing section .bss.PopupData to worklist [originates from symbol PopupData]
  
  Processing section: .bss.PopupData from menus.o
  
  Selecting er9x.o to define StepSize
      Definition:     StepSize
      Pushing section .bss.StepSize to worklist [originates from symbol StepSize]
  
  Processing section: .bss.StepSize from er9x.o
  
  Selecting er9x.o to define StickScrollAllowed
      Definition:     StickScrollAllowed
      Pushing section .bss.StickScrollAllowed to worklist [originates from symbol StickScrollAllowed]
  
  Processing section: .bss.StickScrollAllowed from er9x.o
  
  Selecting er9x.o to define Tevent
      Definition:     Tevent
      Pushing section .bss.Tevent to worklist [originates from symbol Tevent]
  
  Processing section: .bss.Tevent from er9x.o
  
  Selecting audio.o to define audioEvent(unsigned char, unsigned short)
      Definition:     audioEvent(unsigned char, unsigned short)
      Pushing section .text.audioEvent(unsigned char, unsigned short) to worklist [originates from symbol audioEvent(unsigned char, unsigned short)]
  
  Processing section: .text.audioEvent(unsigned char, unsigned short) from audio.o
      Load REL relocations for .text.audioEvent(unsigned char, unsigned short) (audio.o)
      Reference:      audioQueue::event(unsigned char, unsigned char)
  
  Selecting drivers.o to define killEvents(unsigned char)
      Definition:     killEvents(unsigned char)
      Pushing section .text.killEvents(unsigned char) to worklist [originates from symbol killEvents(unsigned char)]
  
  Processing section: .text.killEvents(unsigned char) from drivers.o
      Load REL relocations for .text.killEvents(unsigned char) (drivers.o)
  
  Selecting er9x.o to define getSwitch00(signed char)
      Definition:     getSwitch00(signed char)
      Pushing section .text.getSwitch00(signed char) to worklist [originates from symbol getSwitch00(signed char)]
  
  Processing section: .text.getSwitch00(signed char) from er9x.o
      Load REL relocations for .text.getSwitch00(signed char) (er9x.o)
      Reference:      getSwitch(signed char, bool, unsigned char)
  
  Selecting drivers.o to define menuPressed()
      Definition:     menuPressed()
      Pushing section .text.menuPressed() to worklist [originates from symbol menuPressed()]
  
  Processing section: .text.menuPressed() from drivers.o
      Load REL relocations for .text.menuPressed() (drivers.o)
  
  Selecting er9x.o to define getTrimValue(unsigned char, unsigned char)
      Definition:     getTrimValue(unsigned char, unsigned char)
      Pushing section .text.getTrimValue(unsigned char, unsigned char) to worklist [originates from symbol getTrimValue(unsigned char, unsigned char)]
  
  Processing section: .text.getTrimValue(unsigned char, unsigned char) from er9x.o
      Load REL relocations for .text.getTrimValue(unsigned char, unsigned char) (er9x.o)
      Reference:      getRawTrimValue(unsigned char, unsigned char)
  
  Selecting er9x.o to define modeFixValue(unsigned char)
      Definition:     modeFixValue(unsigned char)
      Pushing section .text.modeFixValue(unsigned char) to worklist [originates from symbol modeFixValue(unsigned char)]
  
  Processing section: .text.modeFixValue(unsigned char) from er9x.o
      Load REL relocations for .text.modeFixValue(unsigned char) (er9x.o)
  
  Selecting er9x.o to define setTrimValue(unsigned char, unsigned char, short)
      Definition:     setTrimValue(unsigned char, unsigned char, short)
      Pushing section .text.setTrimValue(unsigned char, unsigned char, short) to worklist [originates from symbol setTrimValue(unsigned char, unsigned char, short)]
  
  Processing section: .text.setTrimValue(unsigned char, unsigned char, short) from er9x.o
      Load REL relocations for .text.setTrimValue(unsigned char, unsigned char, short) (er9x.o)
  
  Selecting audio.o to define audioDefevent(unsigned char)
      Definition:     audioDefevent(unsigned char)
      Pushing section .text.audioDefevent(unsigned char) to worklist [originates from symbol audioDefevent(unsigned char)]
  
  Processing section: .text.audioDefevent(unsigned char) from audio.o
      Load REL relocations for .text.audioDefevent(unsigned char) (audio.o)
  
  Selecting er9x.o to define checkSwitches()
      Definition:     checkSwitches()
      Pushing section .text.checkSwitches() to worklist [originates from symbol checkSwitches()]
  
  Processing section: .text.checkSwitches() from er9x.o
      Load REL relocations for .text.checkSwitches() (er9x.o)
      Reference:      getCurrentSwitchStates()
      Reference:      putWarnSwitch(unsigned char, unsigned char)
      Weak reference: keyDown()
      Local section:  .rodata..L.str.6 from er9x.o using relocation R_ARM_ABS32
  
  Processing section: .rodata..L.str.6 from er9x.o
  
  Selecting pers.o to define eeReadGeneral()
      Definition:     eeReadGeneral()
      Pushing section .text.eeReadGeneral() to worklist [originates from symbol eeReadGeneral()]
  
  Processing section: .text.eeReadGeneral() from pers.o
      Load REL relocations for .text.eeReadGeneral() (pers.o)
      Reference:      EeFsOpen()
      Reference:      EeFsck()
      Reference:      EFile::openRd(unsigned char)
      Reference:      __aeabi_memclr
      Reference:      EFile::readRlc(unsigned char*, unsigned short)
      Reference:      evalChkSum()
      Reference:      theFile
  
  Selecting pers.o to define evalChkSum()
      Definition:     evalChkSum()
      Pushing section .text.evalChkSum() to worklist [originates from symbol evalChkSum()]
  
  Processing section: .text.evalChkSum() from pers.o
      Load REL relocations for .text.evalChkSum() (pers.o)
  
  Selecting er9x.o to define putWarnSwitch(unsigned char, unsigned char)
      Definition:     putWarnSwitch(unsigned char, unsigned char)
      Pushing section .text.putWarnSwitch(unsigned char, unsigned char) to worklist [originates from symbol putWarnSwitch(unsigned char, unsigned char)]
  
  Processing section: .text.putWarnSwitch(unsigned char, unsigned char) from er9x.o
      Load REL relocations for .text.putWarnSwitch(unsigned char, unsigned char) (er9x.o)
      Reference:      lcd_putsAttIdx(unsigned char, unsigned char, char const*, unsigned char, unsigned char)
      Reference:      Str_Switches
  
  Selecting er9x.o to define Str_Switches
      Definition:     Str_Switches
      Pushing section .rodata.Str_Switches to worklist [originates from symbol Str_Switches]
  
  Processing section: .rodata.Str_Switches from er9x.o
  
  Selecting lcd.o to define refreshDiplay()
      Definition:     refreshDiplay()
      Pushing section .text.refreshDiplay() to worklist [originates from symbol refreshDiplay()]
  
  Processing section: .text.refreshDiplay() from lcd.o
      Load REL relocations for .text.refreshDiplay() (lcd.o)
      Reference:      lcd_hline(unsigned char, unsigned char, signed char)
      Reference:      rs_1
      Reference:      LCD_DATA
      Reference:      rd_1
      Reference:      rd_0
      Reference:      EepromActive
      Reference:      LcdLock
      Local section:  .text.lcdSendCtl(unsigned char) from lcd.o using relocation R_ARM_ABS32
  
  Processing section: .text.lcdSendCtl(unsigned char) from lcd.o
      Load REL relocations for .text.lcdSendCtl(unsigned char) (lcd.o)
      Reference:      rs_0
  
  Selecting lcd.o to define EepromActive
      Definition:     EepromActive
      Pushing section .bss.EepromActive to worklist [originates from symbol EepromActive]
  
  Processing section: .bss.EepromActive from lcd.o
  
  Selecting BoardI6.o to define LCD_DATA
      Definition:     LCD_DATA
      Pushing section .text.LCD_DATA to worklist [originates from symbol LCD_DATA]
  
  Processing section: .text.LCD_DATA from BoardI6.o
  
  Selecting lcd.o to define LcdLock
      Definition:     LcdLock
      Pushing section .bss.LcdLock to worklist [originates from symbol LcdLock]
  
  Processing section: .bss.LcdLock from lcd.o
  
  Selecting audio.o to define voice_numeric(short, unsigned char, unsigned char)
      Definition:     voice_numeric(short, unsigned char, unsigned char)
      Pushing section .text.voice_numeric(short, unsigned char, unsigned char) to worklist [originates from symbol voice_numeric(short, unsigned char, unsigned char)]
  
  Processing section: .text.voice_numeric(short, unsigned char, unsigned char) from audio.o
      Load REL relocations for .text.voice_numeric(short, unsigned char, unsigned char) (audio.o)
      Reference:      putVoiceQueue(unsigned char)
      Reference:      putVoiceQueueLong(unsigned short)
      Reference:      div
      Reference:      __aeabi_idivmod
  
  Selecting audio.o to define putVoiceQueue(unsigned char)
      Definition:     putVoiceQueue(unsigned char)
      Pushing section .text.putVoiceQueue(unsigned char) to worklist [originates from symbol putVoiceQueue(unsigned char)]
  
  Processing section: .text.putVoiceQueue(unsigned char) from audio.o
      Load REL relocations for .text.putVoiceQueue(unsigned char) (audio.o)
  
  Selecting pers.o to define eeWaitComplete()
      Definition:     eeWaitComplete()
      Pushing section .text.eeWaitComplete() to worklist [originates from symbol eeWaitComplete()]
  
  Processing section: .text.eeWaitComplete() from pers.o
      Load REL relocations for .text.eeWaitComplete() (pers.o)
      Local section:  .bss.s_eeDirtyMsk from pers.o using relocation R_ARM_ABS32
  
  Processing section: .bss.s_eeDirtyMsk from pers.o
  
  Selecting pers.o to define eeWriteGeneral()
      Definition:     eeWriteGeneral()
      Pushing section .text.eeWriteGeneral() to worklist [originates from symbol eeWriteGeneral()]
  
  Processing section: .text.eeWriteGeneral() from pers.o
      Load REL relocations for .text.eeWriteGeneral() (pers.o)
      Reference:      alertx(char const*, bool)
      Reference:      message(char const*)
      Reference:      EeFsFormat()
      Reference:      EFile::writeRlc(unsigned char, unsigned char, unsigned char*, unsigned short, unsigned char)
      Local section:  .rodata..L.str.4 from pers.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.5 from pers.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.6 from pers.o using relocation R_ARM_ABS32
  
  Processing section: .rodata..L.str.4 from pers.o
  
  Processing section: .rodata..L.str.5 from pers.o
  
  Processing section: .rodata..L.str.6 from pers.o
  
  Selecting file.o to define EeFsFormat()
      Definition:     EeFsFormat()
      Pushing section .text.EeFsFormat() to worklist [originates from symbol EeFsFormat()]
  
  Processing section: .text.EeFsFormat() from file.o
      Load REL relocations for .text.EeFsFormat() (file.o)
      Reference:      __aeabi_memclr4
      Local section:  .text.EeFsSetLink(unsigned char, unsigned char) from file.o using relocation R_ARM_THM_CALL
      Local section:  .text.EeFsFlush() from file.o using relocation R_ARM_THM_CALL
  
  Processing section: .text.EeFsSetLink(unsigned char, unsigned char) from file.o
      Load REL relocations for .text.EeFsSetLink(unsigned char, unsigned char) (file.o)
      Reference:      eeWriteBlockCmp(void const*, unsigned short, unsigned int)
  
  Processing section: .text.EeFsFlush() from file.o
      Load REL relocations for .text.EeFsFlush() (file.o)
  
  Selecting er9x.o to define getFlightPhase()
      Definition:     getFlightPhase()
      Pushing section .text.getFlightPhase() to worklist [originates from symbol getFlightPhase()]
  
  Processing section: .text.getFlightPhase() from er9x.o
      Load REL relocations for .text.getFlightPhase() (er9x.o)
  
  Selecting lcd.o to define lcd_putsAttIdx(unsigned char, unsigned char, char const*, unsigned char, unsigned char)
      Definition:     lcd_putsAttIdx(unsigned char, unsigned char, char const*, unsigned char, unsigned char)
      Pushing section .text.lcd_putsAttIdx(unsigned char, unsigned char, char const*, unsigned char, unsigned char) to worklist [originates from symbol lcd_putsAttIdx(unsigned char, unsigned char, char const*, unsigned char, unsigned char)]
  
  Processing section: .text.lcd_putsAttIdx(unsigned char, unsigned char, char const*, unsigned char, unsigned char) from lcd.o
      Load REL relocations for .text.lcd_putsAttIdx(unsigned char, unsigned char, char const*, unsigned char, unsigned char) (lcd.o)
  
  Selecting lcd.o to define lcd_puts_Pleft(unsigned char, char const*)
      Definition:     lcd_puts_Pleft(unsigned char, char const*)
      Pushing section .text.lcd_puts_Pleft(unsigned char, char const*) to worklist [originates from symbol lcd_puts_Pleft(unsigned char, char const*)]
  
  Processing section: .text.lcd_puts_Pleft(unsigned char, char const*) from lcd.o
      Load REL relocations for .text.lcd_puts_Pleft(unsigned char, char const*) (lcd.o)
  
  Selecting er9x.o to define stickMoveValue()
      Definition:     stickMoveValue()
      Pushing section .text.stickMoveValue() to worklist [originates from symbol stickMoveValue()]
  
  Processing section: .text.stickMoveValue() from er9x.o
      Load REL relocations for .text.stickMoveValue() (er9x.o)
      Reference:      anaIn(unsigned char)
  
  Selecting er9x.o to define calcStickScroll(unsigned char)
      Definition:     calcStickScroll(unsigned char)
      Pushing section .text.calcStickScroll(unsigned char) to worklist [originates from symbol calcStickScroll(unsigned char)]
  
  Processing section: .text.calcStickScroll(unsigned char) from er9x.o
      Load REL relocations for .text.calcStickScroll(unsigned char) (er9x.o)
      Reference:      phyStick
      Local section:  .rodata.rate from er9x.o using relocation R_ARM_ABS32
  
  Processing section: .rodata.rate from er9x.o
  
  Selecting drivers.o to define eeWriteBlockCmp(void const*, unsigned short, unsigned int)
      Definition:     eeWriteBlockCmp(void const*, unsigned short, unsigned int)
      Pushing section .text.eeWriteBlockCmp(void const*, unsigned short, unsigned int) to worklist [originates from symbol eeWriteBlockCmp(void const*, unsigned short, unsigned int)]
  
  Processing section: .text.eeWriteBlockCmp(void const*, unsigned short, unsigned int) from drivers.o
      Load REL relocations for .text.eeWriteBlockCmp(void const*, unsigned short, unsigned int) (drivers.o)
      Reference:      eeprom_write_page_cmp(char const*, unsigned short, unsigned int)
      Reference:      ee_waite()
      Reference:      i2c_master
      Reference:      i2c_buffer
  
  Selecting er9x.o to define getRawTrimValue(unsigned char, unsigned char)
      Definition:     getRawTrimValue(unsigned char, unsigned char)
      Pushing section .text.getRawTrimValue(unsigned char, unsigned char) to worklist [originates from symbol getRawTrimValue(unsigned char, unsigned char)]
  
  Processing section: .text.getRawTrimValue(unsigned char, unsigned char) from er9x.o
      Load REL relocations for .text.getRawTrimValue(unsigned char, unsigned char) (er9x.o)
  
  Selecting BoardI6.o to define serialVoiceInit(void (*)(unsigned char*, unsigned char))
      Definition:     serialVoiceInit(void (*)(unsigned char*, unsigned char))
      Pushing section .text.serialVoiceInit(void (*)(unsigned char*, unsigned char)) to worklist [originates from symbol serialVoiceInit(void (*)(unsigned char*, unsigned char))]
  
  Processing section: .text.serialVoiceInit(void (*)(unsigned char*, unsigned char)) from BoardI6.o
      Load REL relocations for .text.serialVoiceInit(void (*)(unsigned char*, unsigned char)) (BoardI6.o)
  
  Selecting er9x.o to define doBackLightVoice(unsigned char)
      Definition:     doBackLightVoice(unsigned char)
      Pushing section .text.doBackLightVoice(unsigned char) to worklist [originates from symbol doBackLightVoice(unsigned char)]
  
  Processing section: .text.doBackLightVoice(unsigned char) from er9x.o
      Load REL relocations for .text.doBackLightVoice(unsigned char) (er9x.o)
  
  Selecting pers.o to define eeGeneralDefault()
      Definition:     eeGeneralDefault()
      Pushing section .text.eeGeneralDefault() to worklist [originates from symbol eeGeneralDefault()]
  
  Processing section: .text.eeGeneralDefault() from pers.o
      Load REL relocations for .text.eeGeneralDefault() (pers.o)
      Reference:      setNameP(char*, char const*)
      Local section:  .rodata..L.str from pers.o using relocation R_ARM_ABS32
  
  Processing section: .rodata..L.str from pers.o
  
  Selecting drivers.o to define eeprom_read_block(void*, void const*, unsigned int)
      Definition:     eeprom_read_block(void*, void const*, unsigned int)
      Pushing section .text.eeprom_read_block(void*, void const*, unsigned int) to worklist [originates from symbol eeprom_read_block(void*, void const*, unsigned int)]
  
  Processing section: .text.eeprom_read_block(void*, void const*, unsigned int) from drivers.o
      Load REL relocations for .text.eeprom_read_block(void*, void const*, unsigned int) (drivers.o)
  
  Selecting pers.o to define modelDefaultWrite(unsigned char)
      Definition:     modelDefaultWrite(unsigned char)
      Pushing section .text.modelDefaultWrite(unsigned char) to worklist [originates from symbol modelDefaultWrite(unsigned char)]
  
  Processing section: .text.modelDefaultWrite(unsigned char) from pers.o
      Load REL relocations for .text.modelDefaultWrite(unsigned char) (pers.o)
      Reference:      applyTemplate()
      Reference:      modelSave(unsigned char)
      Local section:  .rodata..L.str.1 from pers.o using relocation R_ARM_ABS32
  
  Processing section: .rodata..L.str.1 from pers.o
  
  Selecting templates.o to define applyTemplate()
      Definition:     applyTemplate()
      Pushing section .text.applyTemplate() to worklist [originates from symbol applyTemplate()]
  
  Processing section: .text.applyTemplate() from templates.o
      Load REL relocations for .text.applyTemplate() (templates.o)
      Reference:      bchout_ar
      Reference:      setMix(unsigned char, unsigned char)
  
  Selecting audio.o to define putVoiceQueueLong(unsigned short)
      Definition:     putVoiceQueueLong(unsigned short)
      Pushing section .text.putVoiceQueueLong(unsigned short) to worklist [originates from symbol putVoiceQueueLong(unsigned short)]
  
  Processing section: .text.putVoiceQueueLong(unsigned short) from audio.o
      Load REL relocations for .text.putVoiceQueueLong(unsigned short) (audio.o)
  
  Selecting audio.o to define audioVoiceDefevent(unsigned char, unsigned char)
      Definition:     audioVoiceDefevent(unsigned char, unsigned char)
      Pushing section .text.audioVoiceDefevent(unsigned char, unsigned char) to worklist [originates from symbol audioVoiceDefevent(unsigned char, unsigned char)]
  
  Processing section: .text.audioVoiceDefevent(unsigned char, unsigned char) from audio.o
      Load REL relocations for .text.audioVoiceDefevent(unsigned char, unsigned char) (audio.o)
  
  Selecting er9x.o to define getGvarSourceValue(unsigned char)
      Definition:     getGvarSourceValue(unsigned char)
      Pushing section .text.getGvarSourceValue(unsigned char) to worklist [originates from symbol getGvarSourceValue(unsigned char)]
  
  Processing section: .text.getGvarSourceValue(unsigned char) from er9x.o
      Load REL relocations for .text.getGvarSourceValue(unsigned char) (er9x.o)
      Reference:      Ex_chans
  
  Selecting menus.o to define Ex_chans
      Definition:     Ex_chans
      Pushing section .bss.Ex_chans to worklist [originates from symbol Ex_chans]
  
  Processing section: .bss.Ex_chans from menus.o
  
  Selecting er9x.o to define getTrimFlightPhase(unsigned char, unsigned char)
      Definition:     getTrimFlightPhase(unsigned char, unsigned char)
      Pushing section .text.getTrimFlightPhase(unsigned char, unsigned char) to worklist [originates from symbol getTrimFlightPhase(unsigned char, unsigned char)]
  
  Processing section: .text.getTrimFlightPhase(unsigned char, unsigned char) from er9x.o
      Load REL relocations for .text.getTrimFlightPhase(unsigned char, unsigned char) (er9x.o)
  
  Selecting er9x.o to define processVoiceAlarms()
      Definition:     processVoiceAlarms()
      Pushing section .text.processVoiceAlarms() to worklist [originates from symbol processVoiceAlarms()]
  
  Processing section: .text.processVoiceAlarms() from er9x.o
      Load REL relocations for .text.processVoiceAlarms() (er9x.o)
      Reference:      procOneVoiceAlarm(t_voiceAlarm*, unsigned char)
  
  Selecting er9x.o to define procOneVoiceAlarm(t_voiceAlarm*, unsigned char)
      Definition:     procOneVoiceAlarm(t_voiceAlarm*, unsigned char)
      Pushing section .text.procOneVoiceAlarm(t_voiceAlarm*, unsigned char) to worklist [originates from symbol procOneVoiceAlarm(t_voiceAlarm*, unsigned char)]
  
  Processing section: .text.procOneVoiceAlarm(t_voiceAlarm*, unsigned char) from er9x.o
      Load REL relocations for .text.procOneVoiceAlarm(t_voiceAlarm*, unsigned char) (er9x.o)
      Reference:      getValue(unsigned char)
      Reference:      switchPosition(unsigned char)
      Reference:      telemItemValid(unsigned char)
      Reference:      doVoiceAlarmSource(t_voiceAlarm*)
      Reference:      calc_scaler(unsigned char, unsigned char*, unsigned char*)
      Reference:      Nvs_timer
      Reference:      Nvs_state
  
  Selecting er9x.o to define Nvs_state
      Definition:     Nvs_state
      Pushing section .bss.Nvs_state to worklist [originates from symbol Nvs_state]
  
  Processing section: .bss.Nvs_state from er9x.o
  
  Selecting er9x.o to define Nvs_timer
      Definition:     Nvs_timer
      Pushing section .bss.Nvs_timer to worklist [originates from symbol Nvs_timer]
  
  Processing section: .bss.Nvs_timer from er9x.o
  
  Selecting menus.o to define calc_scaler(unsigned char, unsigned char*, unsigned char*)
      Definition:     calc_scaler(unsigned char, unsigned char*, unsigned char*)
      Pushing section .text.calc_scaler(unsigned char, unsigned char*, unsigned char*) to worklist [originates from symbol calc_scaler(unsigned char, unsigned char*, unsigned char*)]
  
  Processing section: .text.calc_scaler(unsigned char, unsigned char*, unsigned char*) from menus.o
      Load REL relocations for .text.calc_scaler(unsigned char, unsigned char*, unsigned char*) (menus.o)
  
  Selecting drivers.o to define switchPosition(unsigned char)
      Definition:     switchPosition(unsigned char)
      Pushing section .text.switchPosition(unsigned char) to worklist [originates from symbol switchPosition(unsigned char)]
  
  Processing section: .text.switchPosition(unsigned char) from drivers.o
      Load REL relocations for .text.switchPosition(unsigned char) (drivers.o)
      Reference:      keyState(EnumKeys)
  
  Selecting menus.o to define telemItemValid(unsigned char)
      Definition:     telemItemValid(unsigned char)
      Pushing section .text.telemItemValid(unsigned char) to worklist [originates from symbol telemItemValid(unsigned char)]
  
  Processing section: .text.telemItemValid(unsigned char) from menus.o
  
  Selecting er9x.o to define doVoiceAlarmSource(t_voiceAlarm*)
      Definition:     doVoiceAlarmSource(t_voiceAlarm*)
      Pushing section .text.doVoiceAlarmSource(t_voiceAlarm*) to worklist [originates from symbol doVoiceAlarmSource(t_voiceAlarm*)]
  
  Processing section: .text.doVoiceAlarmSource(t_voiceAlarm*) from er9x.o
      Load REL relocations for .text.doVoiceAlarmSource(t_voiceAlarm*) (er9x.o)
      Reference:      voice_telem_item(unsigned char)
  
  Selecting menus.o to define voice_telem_item(unsigned char)
      Definition:     voice_telem_item(unsigned char)
      Pushing section .text.voice_telem_item(unsigned char) to worklist [originates from symbol voice_telem_item(unsigned char)]
  
  Processing section: .text.voice_telem_item(unsigned char) from menus.o
      Load REL relocations for .text.voice_telem_item(unsigned char) (menus.o)
      Reference:      get_telemetry_value(unsigned char)
      Reference:      voiceMinutes(short)
      Reference:      TelemIndex
      Local section:  .rodata.UnitsVoice from menus.o using relocation R_ARM_ABS32
  
  Processing section: .rodata.UnitsVoice from menus.o
  
  Selecting menus.o to define TelemIndex
      Definition:     TelemIndex
      Pushing section .rodata.TelemIndex to worklist [originates from symbol TelemIndex]
  
  Processing section: .rodata.TelemIndex from menus.o
  
  Selecting menus.o to define voiceMinutes(short)
      Definition:     voiceMinutes(short)
      Pushing section .text.voiceMinutes(short) to worklist [originates from symbol voiceMinutes(short)]
  
  Processing section: .text.voiceMinutes(short) from menus.o
      Load REL relocations for .text.voiceMinutes(short) (menus.o)
  
  Selecting audio.o to define putVoiceQueueUpper(unsigned char)
      Definition:     putVoiceQueueUpper(unsigned char)
      Pushing section .text.putVoiceQueueUpper(unsigned char) to worklist [originates from symbol putVoiceQueueUpper(unsigned char)]
  
  Processing section: .text.putVoiceQueueUpper(unsigned char) from audio.o
      Load REL relocations for .text.putVoiceQueueUpper(unsigned char) (audio.o)
  
  Selecting menus.o to define get_telemetry_value(unsigned char)
      Definition:     get_telemetry_value(unsigned char)
      Pushing section .text.get_telemetry_value(unsigned char) to worklist [originates from symbol get_telemetry_value(unsigned char)]
  
  Processing section: .text.get_telemetry_value(unsigned char) from menus.o
      Load REL relocations for .text.get_telemetry_value(unsigned char) (menus.o)
  
  Selecting menus.o to define menuProcModelSelect(unsigned char)
      Definition:     menuProcModelSelect(unsigned char)
      Pushing section .text.menuProcModelSelect(unsigned char) to worklist [originates from symbol menuProcModelSelect(unsigned char)]
  
  Processing section: .text.menuProcModelSelect(unsigned char) from menus.o
      Load REL relocations for .text.menuProcModelSelect(unsigned char) (menus.o)
      Reference:      TITLEP(char const*)
      Reference:      MState2::check_columns(unsigned char, unsigned char)
      Reference:      lcd_outdez(unsigned char, unsigned char, short)
      Reference:      lcd_2_digits(unsigned char, unsigned char, unsigned char, unsigned char)
      Reference:      lcd_putc(unsigned char, unsigned char, char)
      Reference:      eeLoadModelName(unsigned char, char*, unsigned char)
      Reference:      eeModelExists(unsigned char)
      Reference:      doPopup(char const*, unsigned char, unsigned char)
      Reference:      chainMenu(void (*)(unsigned char))
      Reference:      pushMenu(void (*)(unsigned char))
      Reference:      popMenu(bool)
      Reference:      EFile::swap(unsigned char, unsigned char)
      Local section:  .rodata..L.str.30 from menus.o using relocation R_ARM_ABS32
      Local section:  .bss.menuProcModelSelect(unsigned char)::mstate2 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.31 from menus.o using relocation R_ARM_ABS32
      Reference:      DupIfNonzero
      Local section:  .bss.menuProcModelSelect(unsigned char)::sel_editMode from menus.o using relocation R_ARM_ABS32
      Reference:      s_pgOfs
      Local section:  .rodata.ModelPopList from menus.o using relocation R_ARM_ABS32
      Reference:      DupSub
      Reference:      menuDeleteDupModel(unsigned char)
      Reference:      menuProcModelIndex(unsigned char)
      Reference:      s_editMode
  
  Processing section: .rodata..L.str.30 from menus.o
  
  Processing section: .bss.menuProcModelSelect(unsigned char)::mstate2 from menus.o
  
  Processing section: .rodata..L.str.31 from menus.o
  
  Processing section: .bss.menuProcModelSelect(unsigned char)::sel_editMode from menus.o
  
  Processing section: .rodata.ModelPopList from menus.o
  
  Selecting menus.o to define DupIfNonzero
      Definition:     DupIfNonzero
      Pushing section .bss.DupIfNonzero to worklist [originates from symbol DupIfNonzero]
  
  Processing section: .bss.DupIfNonzero from menus.o
  
  Selecting menus.o to define DupSub
      Definition:     DupSub
      Pushing section .bss.DupSub to worklist [originates from symbol DupSub]
  
  Processing section: .bss.DupSub from menus.o
  
  Selecting lcd.o to define lcd_outdez(unsigned char, unsigned char, short)
      Definition:     lcd_outdez(unsigned char, unsigned char, short)
      Pushing section .text.lcd_outdez(unsigned char, unsigned char, short) to worklist [originates from symbol lcd_outdez(unsigned char, unsigned char, short)]
  
  Processing section: .text.lcd_outdez(unsigned char, unsigned char, short) from lcd.o
      Load REL relocations for .text.lcd_outdez(unsigned char, unsigned char, short) (lcd.o)
      Reference:      lcd_outdezAtt(unsigned char, unsigned char, short, unsigned char)
  
  Selecting lcd.o to define lcd_2_digits(unsigned char, unsigned char, unsigned char, unsigned char)
      Definition:     lcd_2_digits(unsigned char, unsigned char, unsigned char, unsigned char)
      Pushing section .text.lcd_2_digits(unsigned char, unsigned char, unsigned char, unsigned char) to worklist [originates from symbol lcd_2_digits(unsigned char, unsigned char, unsigned char, unsigned char)]
  
  Processing section: .text.lcd_2_digits(unsigned char, unsigned char, unsigned char, unsigned char) from lcd.o
      Load REL relocations for .text.lcd_2_digits(unsigned char, unsigned char, unsigned char, unsigned char) (lcd.o)
      Reference:      lcd_outdezNAtt(unsigned char, unsigned char, int, unsigned char, signed char, unsigned char)
  
  Selecting pers.o to define eeModelExists(unsigned char)
      Definition:     eeModelExists(unsigned char)
      Pushing section .text.eeModelExists(unsigned char) to worklist [originates from symbol eeModelExists(unsigned char)]
  
  Processing section: .text.eeModelExists(unsigned char) from pers.o
      Load REL relocations for .text.eeModelExists(unsigned char) (pers.o)
      Reference:      EFile::exists(unsigned char)
  
  Selecting lcd.o to define lcd_outdezAtt(unsigned char, unsigned char, short, unsigned char)
      Definition:     lcd_outdezAtt(unsigned char, unsigned char, short, unsigned char)
      Pushing section .text.lcd_outdezAtt(unsigned char, unsigned char, short, unsigned char) to worklist [originates from symbol lcd_outdezAtt(unsigned char, unsigned char, short, unsigned char)]
  
  Processing section: .text.lcd_outdezAtt(unsigned char, unsigned char, short, unsigned char) from lcd.o
      Load REL relocations for .text.lcd_outdezAtt(unsigned char, unsigned char, short, unsigned char) (lcd.o)
  
  Selecting lcd.o to define lcd_outdezNAtt(unsigned char, unsigned char, int, unsigned char, signed char, unsigned char)
      Definition:     lcd_outdezNAtt(unsigned char, unsigned char, int, unsigned char, signed char, unsigned char)
      Pushing section .text.lcd_outdezNAtt(unsigned char, unsigned char, int, unsigned char, signed char, unsigned char) to worklist [originates from symbol lcd_outdezNAtt(unsigned char, unsigned char, int, unsigned char, signed char, unsigned char)]
  
  Processing section: .text.lcd_outdezNAtt(unsigned char, unsigned char, int, unsigned char, signed char, unsigned char) from lcd.o
      Load REL relocations for .text.lcd_outdezNAtt(unsigned char, unsigned char, int, unsigned char, signed char, unsigned char) (lcd.o)
      Reference:      lcd_plot(unsigned char, unsigned char)
      Reference:      lcd_vline(unsigned char, unsigned char, signed char)
      Reference:      Lcd_lastPos
  
  Selecting lcd.o to define Lcd_lastPos
      Definition:     Lcd_lastPos
      Pushing section .bss.Lcd_lastPos to worklist [originates from symbol Lcd_lastPos]
  
  Processing section: .bss.Lcd_lastPos from lcd.o
  
  Selecting pers.o to define eeLoadModelName(unsigned char, char*, unsigned char)
      Definition:     eeLoadModelName(unsigned char, char*, unsigned char)
      Pushing section .text.eeLoadModelName(unsigned char, char*, unsigned char) to worklist [originates from symbol eeLoadModelName(unsigned char, char*, unsigned char)]
  
  Processing section: .text.eeLoadModelName(unsigned char, char*, unsigned char) from pers.o
      Load REL relocations for .text.eeLoadModelName(unsigned char, char*, unsigned char) (pers.o)
      Reference:      EFile::size()
  
  Selecting menus.o to define menuDeleteDupModel(unsigned char)
      Definition:     menuDeleteDupModel(unsigned char)
      Pushing section .text.menuDeleteDupModel(unsigned char) to worklist [originates from symbol menuDeleteDupModel(unsigned char)]
  
  Processing section: .text.menuDeleteDupModel(unsigned char) from menus.o
      Load REL relocations for .text.menuDeleteDupModel(unsigned char) (menus.o)
      Reference:      yesNoMenuExit(unsigned char, char const*)
      Reference:      eeDuplicateModel(unsigned char)
      Reference:      EFile::rm(unsigned char)
      Local section:  .rodata..L.str.22 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.21 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.23 from menus.o using relocation R_ARM_ABS32
  
  Processing section: .rodata..L.str.22 from menus.o
  
  Processing section: .rodata..L.str.21 from menus.o
  
  Processing section: .rodata..L.str.23 from menus.o
  
  Selecting menus.o to define yesNoMenuExit(unsigned char, char const*)
      Definition:     yesNoMenuExit(unsigned char, char const*)
      Pushing section .text.yesNoMenuExit(unsigned char, char const*) to worklist [originates from symbol yesNoMenuExit(unsigned char, char const*)]
  
  Processing section: .text.yesNoMenuExit(unsigned char, char const*) from menus.o
      Load REL relocations for .text.yesNoMenuExit(unsigned char, char const*) (menus.o)
      Local section:  .rodata..L.str.17 from menus.o using relocation R_ARM_ABS32
  
  Processing section: .rodata..L.str.17 from menus.o
  
  Selecting pers.o to define eeDuplicateModel(unsigned char)
      Definition:     eeDuplicateModel(unsigned char)
      Pushing section .text.eeDuplicateModel(unsigned char) to worklist [originates from symbol eeDuplicateModel(unsigned char)]
  
  Processing section: .text.eeDuplicateModel(unsigned char) from pers.o
      Load REL relocations for .text.eeDuplicateModel(unsigned char) (pers.o)
      Reference:      EFile::create(unsigned char, unsigned char, unsigned short)
      Reference:      EFile::read(unsigned char*, unsigned short)
      Reference:      EFile::write(unsigned char*, unsigned char)
      Reference:      EFile::closeTrunc()
  
  Selecting menus.o to define menuProcModelIndex(unsigned char)
      Definition:     menuProcModelIndex(unsigned char)
      Pushing section .text.menuProcModelIndex(unsigned char) to worklist [originates from symbol menuProcModelIndex(unsigned char)]
  
  Processing section: .text.menuProcModelIndex(unsigned char) from menus.o
      Load REL relocations for .text.menuProcModelIndex(unsigned char) (menus.o)
      Local section:  .text.indexProcess(unsigned char, MState2*, unsigned char) from menus.o using relocation R_ARM_THM_CALL
      Local section:  .text.displayIndex(char const* const*, unsigned char, unsigned char, unsigned char) from menus.o using relocation R_ARM_THM_CALL
      Reference:      EditType
      Local section:  .bss.menuProcModelIndex(unsigned char)::mstate from menus.o using relocation R_ARM_ABS32
      Local section:  .bss.IlinesCount from menus.o using relocation R_ARM_ABS32
      Reference:      MenuControl
      Local section:  .rodata..Lswitch.table.menuProcModelIndex(unsigned char) from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_Main_Popup from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.menuProcModelIndex(unsigned char)::n_Strings from menus.o using relocation R_ARM_ABS32
      Reference:      checkIndexed(unsigned char, char const*, unsigned char, unsigned char)
      Reference:      checkIncDec_0(signed char, signed char)
      Reference:      evalOffset(signed char)
      Reference:      putsChn(unsigned char, unsigned char, unsigned char, unsigned char)
      Reference:      putsDrSwitches(unsigned char, unsigned char, signed char, unsigned char)
      Reference:      checkIncDec_i8(signed char, signed char, signed char)
      Reference:      displayNext()
      Reference:      putsChnRaw(unsigned char, unsigned char, unsigned char, unsigned char)
      Reference:      lcd_xlabel_decimal(unsigned char, unsigned char, unsigned short, unsigned char, char const*)
      Local section:  .rodata.Str_heli_setup from menus.o using relocation R_ARM_ABS32
      Reference:      InverseBlink
      Local section:  .rodata..L.str.110 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.111 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.120 from menus.o using relocation R_ARM_ABS32
      Reference:      g_posHorz
      Local section:  .bss.Columns from menus.o using relocation R_ARM_ABS32
      Reference:      putsTelemetryChannel(unsigned char, unsigned char, signed char, int, unsigned char, unsigned char)
      Local section:  .rodata..L.str.121 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_Timer from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_limits from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_Expo from menus.o using relocation R_ARM_ABS32
      Local section:  .bss.s_expoChan from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.117 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_Cswitch from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.118 from menus.o using relocation R_ARM_ABS32
      Reference:      s_editing
      Reference:      editName(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char)
      Reference:      putsTime(unsigned char, unsigned char, short, unsigned char, unsigned char)
      Reference:      putsOffDecimal(unsigned char, unsigned char, unsigned short, unsigned char)
      Reference:      putsTmrMode(unsigned char, unsigned char, unsigned char, unsigned char)
      Reference:      edit_dr_switch(unsigned char, unsigned char, signed char, unsigned char, unsigned char)
      Reference:      setStickCenter()
      Local section:  .rodata.Str_General from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.115 from menus.o using relocation R_ARM_ABS32
      Reference:      hyphinvMenuItem(unsigned char, unsigned char, unsigned char)
      Local section:  .rodata..L.str.116 from menus.o using relocation R_ARM_ABS32
      Reference:      checkIncDec16(short, short, short, unsigned char)
      Reference:      lcd_rect(unsigned char, unsigned char, unsigned char, unsigned char)
      Local section:  .text.onoffItem(unsigned char, unsigned char, unsigned char) from menus.o using relocation R_ARM_THM_CALL
      Reference:      checkIncDec(signed char, signed char, signed char, unsigned char)
      Reference:      get_dr_state(unsigned char)
      Reference:      IS_EXPO_THROTTLE(unsigned char)
      Reference:      drawFunction(unsigned char, unsigned char)
      Reference:      calcExpo(unsigned char, short)
      Local section:  .rodata..L.str.119 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.107 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.108 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.109 from menus.o using relocation R_ARM_ABS32
      Reference:      throttleReversed()
      Local section:  .rodata..L.str.112 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.113 from menus.o using relocation R_ARM_ABS32
      Reference:      editExpoVals(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
      Reference:      plotType
      Local section:  .rodata..L.str.105 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.106 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.102 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.103 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_TRE012AG from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.104 from menus.o using relocation R_ARM_ABS32
  
  Processing section: .text.indexProcess(unsigned char, MState2*, unsigned char) from menus.o
      Load REL relocations for .text.indexProcess(unsigned char, MState2*, unsigned char) (menus.o)
  
  Processing section: .text.displayIndex(char const* const*, unsigned char, unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.displayIndex(char const* const*, unsigned char, unsigned char, unsigned char) (menus.o)
      Reference:      lcd_puts_P(unsigned char, unsigned char, char const*)
      Reference:      lcd_char_inverse(unsigned char, unsigned char, unsigned char, unsigned char)
  
  Processing section: .bss.menuProcModelIndex(unsigned char)::mstate from menus.o
  
  Processing section: .bss.IlinesCount from menus.o
  
  Processing section: .rodata..Lswitch.table.menuProcModelIndex(unsigned char) from menus.o
      Load REL relocations for .rodata..Lswitch.table.menuProcModelIndex(unsigned char) (menus.o)
      Reference:      menuProcMix(unsigned char)
      Reference:      menuModelPhases(unsigned char)
      Reference:      menuProcCurve(unsigned char)
      Reference:      menuProcGlobals(unsigned char)
      Reference:      menuProcTelemetry(unsigned char)
      Reference:      menuProcVoiceAlarm(unsigned char)
      Reference:      menuProcProtocol(unsigned char)
  
  Processing section: .rodata.Str_Main_Popup from menus.o
  
  Processing section: .rodata.menuProcModelIndex(unsigned char)::n_Strings from menus.o
      Load REL relocations for .rodata.menuProcModelIndex(unsigned char)::n_Strings (menus.o)
      Local section:  .rodata.Str_Mixer from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_Modes from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_Curves from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_Cswitches from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_Safety from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_Globals from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_Telemetry from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.82 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_Protocol from menus.o using relocation R_ARM_ABS32
  
  Processing section: .rodata.Str_heli_setup from menus.o
  
  Processing section: .rodata..L.str.110 from menus.o
  
  Processing section: .rodata..L.str.111 from menus.o
  
  Processing section: .rodata..L.str.120 from menus.o
  
  Processing section: .bss.Columns from menus.o
  
  Processing section: .rodata..L.str.121 from menus.o
  
  Processing section: .rodata.Str_Timer from menus.o
  
  Processing section: .rodata.Str_limits from menus.o
  
  Processing section: .rodata.Str_Expo from menus.o
  
  Processing section: .bss.s_expoChan from menus.o
  
  Processing section: .rodata..L.str.117 from menus.o
  
  Processing section: .rodata.Str_Cswitch from menus.o
  
  Processing section: .rodata..L.str.118 from menus.o
  
  Processing section: .rodata.Str_General from menus.o
  
  Processing section: .rodata..L.str.115 from menus.o
  
  Processing section: .rodata..L.str.116 from menus.o
  
  Processing section: .text.onoffItem(unsigned char, unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.onoffItem(unsigned char, unsigned char, unsigned char) (menus.o)
  
  Processing section: .rodata..L.str.119 from menus.o
  
  Processing section: .rodata..L.str.107 from menus.o
  
  Processing section: .rodata..L.str.108 from menus.o
  
  Processing section: .rodata..L.str.109 from menus.o
  
  Processing section: .rodata..L.str.112 from menus.o
  
  Processing section: .rodata..L.str.113 from menus.o
  
  Processing section: .rodata..L.str.105 from menus.o
  
  Processing section: .rodata..L.str.106 from menus.o
  
  Processing section: .rodata..L.str.102 from menus.o
  
  Processing section: .rodata..L.str.103 from menus.o
  
  Processing section: .rodata.Str_TRE012AG from menus.o
  
  Processing section: .rodata..L.str.104 from menus.o
  
  Processing section: .rodata.Str_Mixer from menus.o
  
  Processing section: .rodata.Str_Modes from menus.o
  
  Processing section: .rodata.Str_Curves from menus.o
  
  Processing section: .rodata.Str_Cswitches from menus.o
  
  Processing section: .rodata.Str_Safety from menus.o
  
  Processing section: .rodata.Str_Globals from menus.o
  
  Processing section: .rodata.Str_Telemetry from menus.o
  
  Processing section: .rodata..L.str.82 from menus.o
  
  Processing section: .rodata.Str_Protocol from menus.o
  
  Selecting menus.o to define EditType
      Definition:     EditType
      Pushing section .bss.EditType to worklist [originates from symbol EditType]
  
  Processing section: .bss.EditType from menus.o
  
  Selecting menus.o to define InverseBlink
      Definition:     InverseBlink
      Pushing section .bss.InverseBlink to worklist [originates from symbol InverseBlink]
  
  Processing section: .bss.InverseBlink from menus.o
  
  Selecting menus.o to define MenuControl
      Definition:     MenuControl
      Pushing section .bss.MenuControl to worklist [originates from symbol MenuControl]
  
  Processing section: .bss.MenuControl from menus.o
  
  Selecting menus.o to define evalOffset(signed char)
      Definition:     evalOffset(signed char)
      Pushing section .text.evalOffset(signed char) to worklist [originates from symbol evalOffset(signed char)]
  
  Processing section: .text.evalOffset(signed char) from menus.o
      Load REL relocations for .text.evalOffset(signed char) (menus.o)
  
  Selecting lcd.o to define lcd_puts_P(unsigned char, unsigned char, char const*)
      Definition:     lcd_puts_P(unsigned char, unsigned char, char const*)
      Pushing section .text.lcd_puts_P(unsigned char, unsigned char, char const*) to worklist [originates from symbol lcd_puts_P(unsigned char, unsigned char, char const*)]
  
  Processing section: .text.lcd_puts_P(unsigned char, unsigned char, char const*) from lcd.o
      Load REL relocations for .text.lcd_puts_P(unsigned char, unsigned char, char const*) (lcd.o)
  
  Selecting er9x.o to define putsChnRaw(unsigned char, unsigned char, unsigned char, unsigned char)
      Definition:     putsChnRaw(unsigned char, unsigned char, unsigned char, unsigned char)
      Pushing section .text.putsChnRaw(unsigned char, unsigned char, unsigned char, unsigned char) to worklist [originates from symbol putsChnRaw(unsigned char, unsigned char, unsigned char, unsigned char)]
  
  Processing section: .text.putsChnRaw(unsigned char, unsigned char, unsigned char, unsigned char) from er9x.o
      Load REL relocations for .text.putsChnRaw(unsigned char, unsigned char, unsigned char, unsigned char) (er9x.o)
      Reference:      Str_Chans_Gv
      Reference:      Str_telemItems
      Reference:      modi12x3
      Local section:  .rodata.Str_Hyphens from er9x.o using relocation R_ARM_ABS32
  
  Processing section: .rodata.Str_Hyphens from er9x.o
  
  Selecting menus.o to define Str_Chans_Gv
      Definition:     Str_Chans_Gv
      Pushing section .rodata.Str_Chans_Gv to worklist [originates from symbol Str_Chans_Gv]
  
  Processing section: .rodata.Str_Chans_Gv from menus.o
  
  Selecting menus.o to define Str_telemItems
      Definition:     Str_telemItems
      Pushing section .rodata.Str_telemItems to worklist [originates from symbol Str_telemItems]
  
  Processing section: .rodata.Str_telemItems from menus.o
  
  Selecting er9x.o to define checkIncDec(signed char, signed char, signed char, unsigned char)
      Definition:     checkIncDec(signed char, signed char, signed char, unsigned char)
      Pushing section .text.checkIncDec(signed char, signed char, signed char, unsigned char) to worklist [originates from symbol checkIncDec(signed char, signed char, signed char, unsigned char)]
  
  Processing section: .text.checkIncDec(signed char, signed char, signed char, unsigned char) from er9x.o
      Load REL relocations for .text.checkIncDec(signed char, signed char, signed char, unsigned char) (er9x.o)
  
  Selecting menus.o to define displayNext()
      Definition:     displayNext()
      Pushing section .text.displayNext() to worklist [originates from symbol displayNext()]
  
  Processing section: .text.displayNext() from menus.o
      Load REL relocations for .text.displayNext() (menus.o)
      Local section:  .rodata..L.str.3 from menus.o using relocation R_ARM_ABS32
  
  Processing section: .rodata..L.str.3 from menus.o
  
  Selecting menus.o to define menuProcMix(unsigned char)
      Definition:     menuProcMix(unsigned char)
      Pushing section .text.menuProcMix(unsigned char) to worklist [originates from symbol menuProcMix(unsigned char)]
  
  Processing section: .text.menuProcMix(unsigned char) from menus.o
      Load REL relocations for .text.menuProcMix(unsigned char) (menus.o)
      Reference:      putsChnOpRaw(unsigned char, unsigned char, t_MixData*, unsigned char)
      Reference:      gvarMenuItem125(unsigned char, unsigned char, signed char, unsigned char)
      Reference:      put_curve(unsigned char, unsigned char, signed char, unsigned char)
      Reference:      reachMixerCountLimit()
      Local section:  .text.insertMix(unsigned char, unsigned char) from menus.o using relocation R_ARM_THM_CALL
      Reference:      s_moveMode
      Local section:  .bss.menuProcMix(unsigned char)::mstate2 from menus.o using relocation R_ARM_ABS32
      Reference:      s_mixMaxSel
      Reference:      RotaryState
      Local section:  .bss.s_currMixIdx from menus.o using relocation R_ARM_ABS32
      Local section:  .bss.s_moveMixIdx from menus.o using relocation R_ARM_ABS32
      Local section:  .bss.s_currDestCh from menus.o using relocation R_ARM_ABS32
      Reference:      menuProcMixOne(unsigned char)
      Local section:  .rodata.MixPopList from menus.o using relocation R_ARM_ABS32
      Reference:      mixToDelete
      Reference:      menuDeleteMix(unsigned char)
      Local section:  .rodata..L.str.20 from menus.o using relocation R_ARM_ABS32
  
  Processing section: .text.insertMix(unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.insertMix(unsigned char, unsigned char) (menus.o)
      Reference:      __aeabi_memmove
  
  Processing section: .bss.menuProcMix(unsigned char)::mstate2 from menus.o
  
  Processing section: .bss.s_currMixIdx from menus.o
  
  Processing section: .bss.s_moveMixIdx from menus.o
  
  Processing section: .bss.s_currDestCh from menus.o
  
  Processing section: .rodata.MixPopList from menus.o
  
  Processing section: .rodata..L.str.20 from menus.o
  
  Selecting menus.o to define RotaryState
      Definition:     RotaryState
      Pushing section .bss.RotaryState to worklist [originates from symbol RotaryState]
  
  Processing section: .bss.RotaryState from menus.o
  
  Selecting er9x.o to define putsTmrMode(unsigned char, unsigned char, unsigned char, unsigned char)
      Definition:     putsTmrMode(unsigned char, unsigned char, unsigned char, unsigned char)
      Pushing section .text.putsTmrMode(unsigned char, unsigned char, unsigned char, unsigned char) to worklist [originates from symbol putsTmrMode(unsigned char, unsigned char, unsigned char, unsigned char)]
  
  Processing section: .text.putsTmrMode(unsigned char, unsigned char, unsigned char, unsigned char) from er9x.o
      Load REL relocations for .text.putsTmrMode(unsigned char, unsigned char, unsigned char, unsigned char) (er9x.o)
      Reference:      putsMomentDrSwitches(unsigned char, unsigned char, signed char, unsigned char)
      Reference:      Curve_Str
      Local section:  .rodata..L.str from er9x.o using relocation R_ARM_ABS32
  
  Processing section: .rodata..L.str from er9x.o
  
  Selecting menus.o to define Curve_Str
      Definition:     Curve_Str
      Pushing section .rodata.Curve_Str to worklist [originates from symbol Curve_Str]
  
  Processing section: .rodata.Curve_Str from menus.o
  
  Selecting menus.o to define checkIndexed(unsigned char, char const*, unsigned char, unsigned char)
      Definition:     checkIndexed(unsigned char, char const*, unsigned char, unsigned char)
      Pushing section .text.checkIndexed(unsigned char, char const*, unsigned char, unsigned char) to worklist [originates from symbol checkIndexed(unsigned char, char const*, unsigned char, unsigned char)]
  
  Processing section: .text.checkIndexed(unsigned char, char const*, unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.checkIndexed(unsigned char, char const*, unsigned char, unsigned char) (menus.o)
      Reference:      lcd_hbar(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
      Reference:      EditColumns
  
  Selecting menus.o to define EditColumns
      Definition:     EditColumns
      Pushing section .bss.EditColumns to worklist [originates from symbol EditColumns]
  
  Processing section: .bss.EditColumns from menus.o
  
  Selecting menus.o to define drawFunction(unsigned char, unsigned char)
      Definition:     drawFunction(unsigned char, unsigned char)
      Pushing section .text.drawFunction(unsigned char, unsigned char) to worklist [originates from symbol drawFunction(unsigned char, unsigned char)]
  
  Processing section: .text.drawFunction(unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.drawFunction(unsigned char, unsigned char) (menus.o)
      Reference:      intpol(short, unsigned char)
      Local section:  .bss.s_curveChan from menus.o using relocation R_ARM_ABS32
  
  Processing section: .bss.s_curveChan from menus.o
  
  Selecting menus.o to define editExpoVals(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
      Definition:     editExpoVals(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
      Pushing section .text.editExpoVals(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) to worklist [originates from symbol editExpoVals(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)]
  
  Processing section: .text.editExpoVals(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.editExpoVals(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) (menus.o)
      Reference:      gvarMenuItem(unsigned char, unsigned char, signed char, signed char, signed char, unsigned char)
  
  Selecting menus.o to define get_dr_state(unsigned char)
      Definition:     get_dr_state(unsigned char)
      Pushing section .text.get_dr_state(unsigned char) to worklist [originates from symbol get_dr_state(unsigned char)]
  
  Processing section: .text.get_dr_state(unsigned char) from menus.o
      Load REL relocations for .text.get_dr_state(unsigned char) (menus.o)
  
  Selecting menus.o to define gvarMenuItem(unsigned char, unsigned char, signed char, signed char, signed char, unsigned char)
      Definition:     gvarMenuItem(unsigned char, unsigned char, signed char, signed char, signed char, unsigned char)
      Pushing section .text.gvarMenuItem(unsigned char, unsigned char, signed char, signed char, signed char, unsigned char) to worklist [originates from symbol gvarMenuItem(unsigned char, unsigned char, signed char, signed char, signed char, unsigned char)]
  
  Processing section: .text.gvarMenuItem(unsigned char, unsigned char, signed char, signed char, signed char, unsigned char) from menus.o
      Load REL relocations for .text.gvarMenuItem(unsigned char, unsigned char, signed char, signed char, signed char, unsigned char) (menus.o)
      Reference:      dispGvar(unsigned char, unsigned char, unsigned char, unsigned char)
  
  Selecting menus.o to define putsChnOpRaw(unsigned char, unsigned char, t_MixData*, unsigned char)
      Definition:     putsChnOpRaw(unsigned char, unsigned char, t_MixData*, unsigned char)
      Pushing section .text.putsChnOpRaw(unsigned char, unsigned char, t_MixData*, unsigned char) to worklist [originates from symbol putsChnOpRaw(unsigned char, unsigned char, t_MixData*, unsigned char)]
  
  Processing section: .text.putsChnOpRaw(unsigned char, unsigned char, t_MixData*, unsigned char) from menus.o
      Load REL relocations for .text.putsChnOpRaw(unsigned char, unsigned char, t_MixData*, unsigned char) (menus.o)
      Local section:  .rodata..L.str.9 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.SW_3_IDX from menus.o using relocation R_ARM_ABS32
  
  Processing section: .rodata..L.str.9 from menus.o
  
  Processing section: .rodata.SW_3_IDX from menus.o
  
  Selecting er9x.o to define checkIncDec16(short, short, short, unsigned char)
      Definition:     checkIncDec16(short, short, short, unsigned char)
      Pushing section .text.checkIncDec16(short, short, short, unsigned char) to worklist [originates from symbol checkIncDec16(short, short, short, unsigned char)]
  
  Processing section: .text.checkIncDec16(short, short, short, unsigned char) from er9x.o
      Load REL relocations for .text.checkIncDec16(short, short, short, unsigned char) (er9x.o)
      Reference:      pauseEvents(unsigned char)
  
  Selecting drivers.o to define pauseEvents(unsigned char)
      Definition:     pauseEvents(unsigned char)
      Pushing section .text.pauseEvents(unsigned char) to worklist [originates from symbol pauseEvents(unsigned char)]
  
  Processing section: .text.pauseEvents(unsigned char) from drivers.o
      Load REL relocations for .text.pauseEvents(unsigned char) (drivers.o)
  
  Selecting er9x.o to define checkIncDec_0(signed char, signed char)
      Definition:     checkIncDec_0(signed char, signed char)
      Pushing section .text.checkIncDec_0(signed char, signed char) to worklist [originates from symbol checkIncDec_0(signed char, signed char)]
  
  Processing section: .text.checkIncDec_0(signed char, signed char) from er9x.o
      Load REL relocations for .text.checkIncDec_0(signed char, signed char) (er9x.o)
  
  Selecting menus.o to define menuDeleteMix(unsigned char)
      Definition:     menuDeleteMix(unsigned char)
      Pushing section .text.menuDeleteMix(unsigned char) to worklist [originates from symbol menuDeleteMix(unsigned char)]
  
  Processing section: .text.menuDeleteMix(unsigned char) from menus.o
      Load REL relocations for .text.menuDeleteMix(unsigned char) (menus.o)
      Reference:      clearMixes()
      Local section:  .rodata..L.str.18 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.19 from menus.o using relocation R_ARM_ABS32
  
  Processing section: .rodata..L.str.18 from menus.o
  
  Processing section: .rodata..L.str.19 from menus.o
  
  Selecting templates.o to define clearMixes()
      Definition:     clearMixes()
      Pushing section .text.clearMixes() to worklist [originates from symbol clearMixes()]
  
  Processing section: .text.clearMixes() from templates.o
      Load REL relocations for .text.clearMixes() (templates.o)
  
  Selecting menus.o to define menuProcCurve(unsigned char)
      Definition:     menuProcCurve(unsigned char)
      Pushing section .text.menuProcCurve(unsigned char) to worklist [originates from symbol menuProcCurve(unsigned char)]
  
  Processing section: .text.menuProcCurve(unsigned char) from menus.o
      Load REL relocations for .text.menuProcCurve(unsigned char) (menus.o)
      Reference:      drawCurve(unsigned char)
      Local section:  .bss.menuProcCurve(unsigned char)::mstate2 from menus.o using relocation R_ARM_ABS32
      Reference:      menuProcCurveOne(unsigned char)
      Local section:  .rodata..L.str.2 from menus.o using relocation R_ARM_ABS32
  
  Processing section: .bss.menuProcCurve(unsigned char)::mstate2 from menus.o
  
  Processing section: .rodata..L.str.2 from menus.o
  
  Selecting er9x.o to define checkIncDec_i8(signed char, signed char, signed char)
      Definition:     checkIncDec_i8(signed char, signed char, signed char)
      Pushing section .text.checkIncDec_i8(signed char, signed char, signed char) to worklist [originates from symbol checkIncDec_i8(signed char, signed char, signed char)]
  
  Processing section: .text.checkIncDec_i8(signed char, signed char, signed char) from er9x.o
      Load REL relocations for .text.checkIncDec_i8(signed char, signed char, signed char) (er9x.o)
  
  Selecting menus.o to define edit_dr_switch(unsigned char, unsigned char, signed char, unsigned char, unsigned char)
      Definition:     edit_dr_switch(unsigned char, unsigned char, signed char, unsigned char, unsigned char)
      Pushing section .text.edit_dr_switch(unsigned char, unsigned char, signed char, unsigned char, unsigned char) to worklist [originates from symbol edit_dr_switch(unsigned char, unsigned char, signed char, unsigned char, unsigned char)]
  
  Processing section: .text.edit_dr_switch(unsigned char, unsigned char, signed char, unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.edit_dr_switch(unsigned char, unsigned char, signed char, unsigned char, unsigned char) (menus.o)
  
  Selecting menus.o to define menuProcMixOne(unsigned char)
      Definition:     menuProcMixOne(unsigned char)
      Pushing section .text.menuProcMixOne(unsigned char) to worklist [originates from symbol menuProcMixOne(unsigned char)]
  
  Processing section: .text.menuProcMixOne(unsigned char) from menus.o
      Load REL relocations for .text.menuProcMixOne(unsigned char) (menus.o)
      Reference:      lcd_puts_Pskip(unsigned char, char const*, unsigned char)
      Local section:  .bss.menuProcMixOne(unsigned char)::mstate2 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.10 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.11 from menus.o using relocation R_ARM_ABS32
      Local section:  .text.offonItem(unsigned char, unsigned char, unsigned char) from menus.o using relocation R_ARM_THM_CALL
      Local section:  .text.editSlowDelay(unsigned char, unsigned char, unsigned char) from menus.o using relocation R_ARM_THM_CALL
      Local section:  .text.onoffMenuItem(unsigned char, unsigned char, char const*, unsigned char) from menus.o using relocation R_ARM_THM_CALL
      Local section:  .rodata..L.str.15 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.14 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_Curve from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.13 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.12 from menus.o using relocation R_ARM_ABS32
  
  Processing section: .bss.menuProcMixOne(unsigned char)::mstate2 from menus.o
  
  Processing section: .rodata..L.str.10 from menus.o
  
  Processing section: .rodata..L.str.11 from menus.o
  
  Processing section: .text.offonItem(unsigned char, unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.offonItem(unsigned char, unsigned char, unsigned char) (menus.o)
  
  Processing section: .text.editSlowDelay(unsigned char, unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.editSlowDelay(unsigned char, unsigned char, unsigned char) (menus.o)
  
  Processing section: .text.onoffMenuItem(unsigned char, unsigned char, char const*, unsigned char) from menus.o
      Load REL relocations for .text.onoffMenuItem(unsigned char, unsigned char, char const*, unsigned char) (menus.o)
  
  Processing section: .rodata..L.str.15 from menus.o
  
  Processing section: .rodata..L.str.14 from menus.o
  
  Processing section: .rodata.Str_Curve from menus.o
  
  Processing section: .rodata..L.str.13 from menus.o
  
  Processing section: .rodata..L.str.12 from menus.o
  
  Selecting lcd.o to define lcd_puts_Pskip(unsigned char, char const*, unsigned char)
      Definition:     lcd_puts_Pskip(unsigned char, char const*, unsigned char)
      Pushing section .text.lcd_puts_Pskip(unsigned char, char const*, unsigned char) to worklist [originates from symbol lcd_puts_Pskip(unsigned char, char const*, unsigned char)]
  
  Processing section: .text.lcd_puts_Pskip(unsigned char, char const*, unsigned char) from lcd.o
      Load REL relocations for .text.lcd_puts_Pskip(unsigned char, char const*, unsigned char) (lcd.o)
  
  Selecting er9x.o to define putsDrSwitches(unsigned char, unsigned char, signed char, unsigned char)
      Definition:     putsDrSwitches(unsigned char, unsigned char, signed char, unsigned char)
      Pushing section .text.putsDrSwitches(unsigned char, unsigned char, signed char, unsigned char) to worklist [originates from symbol putsDrSwitches(unsigned char, unsigned char, signed char, unsigned char)]
  
  Processing section: .text.putsDrSwitches(unsigned char, unsigned char, signed char, unsigned char) from er9x.o
      Load REL relocations for .text.putsDrSwitches(unsigned char, unsigned char, signed char, unsigned char) (er9x.o)
      Reference:      Str_OFF
      Reference:      Str_ON
  
  Selecting er9x.o to define Str_OFF
      Definition:     Str_OFF
      Pushing section .rodata.Str_OFF to worklist [originates from symbol Str_OFF]
  
  Processing section: .rodata.Str_OFF from er9x.o
  
  Selecting er9x.o to define Str_ON
      Definition:     Str_ON
      Pushing section .rodata.Str_ON to worklist [originates from symbol Str_ON]
  
  Processing section: .rodata.Str_ON from er9x.o
  
  Selecting menus.o to define putsOffDecimal(unsigned char, unsigned char, unsigned short, unsigned char)
      Definition:     putsOffDecimal(unsigned char, unsigned char, unsigned short, unsigned char)
      Pushing section .text.putsOffDecimal(unsigned char, unsigned char, unsigned short, unsigned char) to worklist [originates from symbol putsOffDecimal(unsigned char, unsigned char, unsigned short, unsigned char)]
  
  Processing section: .text.putsOffDecimal(unsigned char, unsigned char, unsigned short, unsigned char) from menus.o
      Load REL relocations for .text.putsOffDecimal(unsigned char, unsigned char, unsigned short, unsigned char) (menus.o)
  
  Selecting menus.o to define setStickCenter()
      Definition:     setStickCenter()
      Pushing section .text.setStickCenter() to worklist [originates from symbol setStickCenter()]
  
  Processing section: .text.setStickCenter() from menus.o
      Load REL relocations for .text.setStickCenter() (menus.o)
  
  Selecting menus.o to define gvarMenuItem125(unsigned char, unsigned char, signed char, unsigned char)
      Definition:     gvarMenuItem125(unsigned char, unsigned char, signed char, unsigned char)
      Pushing section .text.gvarMenuItem125(unsigned char, unsigned char, signed char, unsigned char) to worklist [originates from symbol gvarMenuItem125(unsigned char, unsigned char, signed char, unsigned char)]
  
  Processing section: .text.gvarMenuItem125(unsigned char, unsigned char, signed char, unsigned char) from menus.o
      Load REL relocations for .text.gvarMenuItem125(unsigned char, unsigned char, signed char, unsigned char) (menus.o)
  
  Selecting menus.o to define hyphinvMenuItem(unsigned char, unsigned char, unsigned char)
      Definition:     hyphinvMenuItem(unsigned char, unsigned char, unsigned char)
      Pushing section .text.hyphinvMenuItem(unsigned char, unsigned char, unsigned char) to worklist [originates from symbol hyphinvMenuItem(unsigned char, unsigned char, unsigned char)]
  
  Processing section: .text.hyphinvMenuItem(unsigned char, unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.hyphinvMenuItem(unsigned char, unsigned char, unsigned char) (menus.o)
      Local section:  .rodata..L.str from menus.o using relocation R_ARM_ABS32
  
  Processing section: .rodata..L.str from menus.o
  
  Selecting menus.o to define menuModelPhases(unsigned char)
      Definition:     menuModelPhases(unsigned char)
      Pushing section .text.menuModelPhases(unsigned char) to worklist [originates from symbol menuModelPhases(unsigned char)]
  
  Processing section: .text.menuModelPhases(unsigned char) from menus.o
      Load REL relocations for .text.menuModelPhases(unsigned char) (menus.o)
      Reference:      dispFlightModename(unsigned char, unsigned char, unsigned char)
      Reference:      putsTrimMode(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
      Local section:  .bss.menuModelPhases(unsigned char)::mstate2 from menus.o using relocation R_ARM_ABS32
      Local section:  .bss.s_currIdx from menus.o using relocation R_ARM_ABS32
      Reference:      menuPhaseOne(unsigned char)
      Local section:  .rodata..L.str.29 from menus.o using relocation R_ARM_ABS32
  
  Processing section: .bss.menuModelPhases(unsigned char)::mstate2 from menus.o
  
  Processing section: .bss.s_currIdx from menus.o
  
  Processing section: .rodata..L.str.29 from menus.o
  
  Selecting menus.o to define menuPhaseOne(unsigned char)
      Definition:     menuPhaseOne(unsigned char)
      Pushing section .text.menuPhaseOne(unsigned char) to worklist [originates from symbol menuPhaseOne(unsigned char)]
  
  Processing section: .text.menuPhaseOne(unsigned char) from menus.o
      Load REL relocations for .text.menuPhaseOne(unsigned char) (menus.o)
      Local section:  .rodata..L.str.26 from menus.o using relocation R_ARM_ABS32
      Local section:  .bss.menuPhaseOne(unsigned char)::mstate2 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.27 from menus.o using relocation R_ARM_ABS32
  
  Processing section: .rodata..L.str.26 from menus.o
  
  Processing section: .bss.menuPhaseOne(unsigned char)::mstate2 from menus.o
  
  Processing section: .rodata..L.str.27 from menus.o
  
  Selecting menus.o to define putsTrimMode(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
      Definition:     putsTrimMode(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
      Pushing section .text.putsTrimMode(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) to worklist [originates from symbol putsTrimMode(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)]
  
  Processing section: .text.putsTrimMode(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.putsTrimMode(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) (menus.o)
      Local section:  .rodata.Str_1_RETA from menus.o using relocation R_ARM_ABS32
  
  Processing section: .rodata.Str_1_RETA from menus.o
  
  Selecting menus.o to define menuProcGlobals(unsigned char)
      Definition:     menuProcGlobals(unsigned char)
      Pushing section .text.menuProcGlobals(unsigned char) to worklist [originates from symbol menuProcGlobals(unsigned char)]
  
  Processing section: .text.menuProcGlobals(unsigned char) from menus.o
      Load REL relocations for .text.menuProcGlobals(unsigned char) (menus.o)
      Local section:  .bss.menuProcGlobals(unsigned char)::mstate2 from menus.o using relocation R_ARM_ABS32
      Reference:      menuScaleOne(unsigned char)
      Local section:  .rodata..L.str.8 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_GV from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_Gv_Source from menus.o using relocation R_ARM_ABS32
  
  Processing section: .bss.menuProcGlobals(unsigned char)::mstate2 from menus.o
  
  Processing section: .rodata..L.str.8 from menus.o
  
  Processing section: .rodata.Str_GV from menus.o
  
  Processing section: .rodata.Str_Gv_Source from menus.o
  
  Selecting menus.o to define menuScaleOne(unsigned char)
      Definition:     menuScaleOne(unsigned char)
      Pushing section .text.menuScaleOne(unsigned char) to worklist [originates from symbol menuScaleOne(unsigned char)]
  
  Processing section: .text.menuScaleOne(unsigned char) from menus.o
      Load REL relocations for .text.menuScaleOne(unsigned char) (menus.o)
      Reference:      scalerDecimal(unsigned char, unsigned char, unsigned char)
      Local section:  .bss.menuScaleOne(unsigned char)::mstate2 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_SC from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.6 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.7 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.UnitsString from menus.o using relocation R_ARM_ABS32
  
  Processing section: .bss.menuScaleOne(unsigned char)::mstate2 from menus.o
  
  Processing section: .rodata.Str_SC from menus.o
  
  Processing section: .rodata..L.str.6 from menus.o
  
  Processing section: .rodata..L.str.7 from menus.o
  
  Processing section: .rodata.UnitsString from menus.o
  
  Selecting menus.o to define scalerDecimal(unsigned char, unsigned char, unsigned char)
      Definition:     scalerDecimal(unsigned char, unsigned char, unsigned char)
      Pushing section .text.scalerDecimal(unsigned char, unsigned char, unsigned char) to worklist [originates from symbol scalerDecimal(unsigned char, unsigned char, unsigned char)]
  
  Processing section: .text.scalerDecimal(unsigned char, unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.scalerDecimal(unsigned char, unsigned char, unsigned char) (menus.o)
      Reference:      checkIncDec_u0(short, unsigned char)
  
  Selecting er9x.o to define checkIncDec_u0(short, unsigned char)
      Definition:     checkIncDec_u0(short, unsigned char)
      Pushing section .text.checkIncDec_u0(short, unsigned char) to worklist [originates from symbol checkIncDec_u0(short, unsigned char)]
  
  Processing section: .text.checkIncDec_u0(short, unsigned char) from er9x.o
      Load REL relocations for .text.checkIncDec_u0(short, unsigned char) (er9x.o)
  
  Selecting er9x.o to define IS_EXPO_THROTTLE(unsigned char)
      Definition:     IS_EXPO_THROTTLE(unsigned char)
      Pushing section .text.IS_EXPO_THROTTLE(unsigned char) to worklist [originates from symbol IS_EXPO_THROTTLE(unsigned char)]
  
  Processing section: .text.IS_EXPO_THROTTLE(unsigned char) from er9x.o
      Load REL relocations for .text.IS_EXPO_THROTTLE(unsigned char) (er9x.o)
  
  Selecting lcd.o to define lcd_char_inverse(unsigned char, unsigned char, unsigned char, unsigned char)
      Definition:     lcd_char_inverse(unsigned char, unsigned char, unsigned char, unsigned char)
      Pushing section .text.lcd_char_inverse(unsigned char, unsigned char, unsigned char, unsigned char) to worklist [originates from symbol lcd_char_inverse(unsigned char, unsigned char, unsigned char, unsigned char)]
  
  Processing section: .text.lcd_char_inverse(unsigned char, unsigned char, unsigned char, unsigned char) from lcd.o
      Load REL relocations for .text.lcd_char_inverse(unsigned char, unsigned char, unsigned char, unsigned char) (lcd.o)
  
  Selecting menus.o to define menuProcCurveOne(unsigned char)
      Definition:     menuProcCurveOne(unsigned char)
      Pushing section .text.menuProcCurveOne(unsigned char) to worklist [originates from symbol menuProcCurveOne(unsigned char)]
  
  Processing section: .text.menuProcCurveOne(unsigned char) from menus.o
      Load REL relocations for .text.menuProcCurveOne(unsigned char) (menus.o)
      Local section:  .text.curveAddress(unsigned char) from menus.o using relocation R_ARM_THM_CALL
      Local section:  .bss.menuProcCurveOne(unsigned char)::mstate2 from menus.o using relocation R_ARM_ABS32
      Local section:  .bss.menuProcCurveOne(unsigned char)::dfltCrv from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.1 from menus.o using relocation R_ARM_ABS32
  
  Processing section: .text.curveAddress(unsigned char) from menus.o
      Load REL relocations for .text.curveAddress(unsigned char) (menus.o)
  
  Processing section: .bss.menuProcCurveOne(unsigned char)::mstate2 from menus.o
  
  Processing section: .bss.menuProcCurveOne(unsigned char)::dfltCrv from menus.o
  
  Processing section: .rodata..L.str.1 from menus.o
  
  Selecting menus.o to define menuProcProtocol(unsigned char)
      Definition:     menuProcProtocol(unsigned char)
      Pushing section .text.menuProcProtocol(unsigned char) to worklist [originates from symbol menuProcProtocol(unsigned char)]
  
  Processing section: .text.menuProcProtocol(unsigned char) from menus.o
      Load REL relocations for .text.menuProcProtocol(unsigned char) (menus.o)
      Reference:      crossfileMenu(MState2&, unsigned char, unsigned char, unsigned char, unsigned char)
      Reference:      rangeBindAction(unsigned char, unsigned char)
      Local section:  .bss.menuProcProtocol(unsigned char)::mstate2 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.92 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.99 from menus.o using relocation R_ARM_ABS32
      Reference:      menuRXSetup(unsigned char)
      Local section:  .rodata..L.str.100 from menus.o using relocation R_ARM_ABS32
      Reference:      menuSetFailsafe(unsigned char)
      Local section:  .rodata..L.str.93 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.94 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.95 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.96 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.97 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.98 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.101 from menus.o using relocation R_ARM_ABS32
  
  Processing section: .bss.menuProcProtocol(unsigned char)::mstate2 from menus.o
  
  Processing section: .rodata..L.str.92 from menus.o
  
  Processing section: .rodata..L.str.99 from menus.o
  
  Processing section: .rodata..L.str.100 from menus.o
  
  Processing section: .rodata..L.str.93 from menus.o
  
  Processing section: .rodata..L.str.94 from menus.o
  
  Processing section: .rodata..L.str.95 from menus.o
  
  Processing section: .rodata..L.str.96 from menus.o
  
  Processing section: .rodata..L.str.97 from menus.o
  
  Processing section: .rodata..L.str.98 from menus.o
  
  Processing section: .rodata..L.str.101 from menus.o
  
  Selecting menus.o to define menuRXSetup(unsigned char)
      Definition:     menuRXSetup(unsigned char)
      Pushing section .text.menuRXSetup(unsigned char) to worklist [originates from symbol menuRXSetup(unsigned char)]
  
  Processing section: .text.menuRXSetup(unsigned char) from menus.o
      Load REL relocations for .text.menuRXSetup(unsigned char) (menus.o)
      Local section:  .bss.menuRXSetup(unsigned char)::mstate2 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.84 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.85 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.86 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.87 from menus.o using relocation R_ARM_ABS32
  
  Processing section: .bss.menuRXSetup(unsigned char)::mstate2 from menus.o
  
  Processing section: .rodata..L.str.84 from menus.o
  
  Processing section: .rodata..L.str.85 from menus.o
  
  Processing section: .rodata..L.str.86 from menus.o
  
  Processing section: .rodata..L.str.87 from menus.o
  
  Selecting elrsV2.o to define crossfileMenu(MState2&, unsigned char, unsigned char, unsigned char, unsigned char)
      Definition:     crossfileMenu(MState2&, unsigned char, unsigned char, unsigned char, unsigned char)
      Pushing section .text.crossfileMenu(MState2&, unsigned char, unsigned char, unsigned char, unsigned char) to worklist [originates from symbol crossfileMenu(MState2&, unsigned char, unsigned char, unsigned char, unsigned char)]
  
  Processing section: .text.crossfileMenu(MState2&, unsigned char, unsigned char, unsigned char, unsigned char) from elrsV2.o
      Load REL relocations for .text.crossfileMenu(MState2&, unsigned char, unsigned char, unsigned char, unsigned char) (elrsV2.o)
      Local section:  .rodata..L.str.8 from elrsV2.o using relocation R_ARM_ABS32
      Reference:      ELRSV2_run(unsigned char)
  
  Processing section: .rodata..L.str.8 from elrsV2.o
  
  Selecting elrsV2.o to define ELRSV2_run(unsigned char)
      Definition:     ELRSV2_run(unsigned char)
      Pushing section .text.ELRSV2_run(unsigned char) to worklist [originates from symbol ELRSV2_run(unsigned char)]
  
  Processing section: .text.ELRSV2_run(unsigned char) from elrsV2.o
      Load REL relocations for .text.ELRSV2_run(unsigned char) (elrsV2.o)
      Reference:      ELRSV2_stop()
      Reference:      runPopupPage(unsigned char)
      Reference:      runDevicePage(unsigned char)
      Local section:  .rodata..L.str.7 from elrsV2.o using relocation R_ARM_ABS32
  
  Processing section: .rodata..L.str.7 from elrsV2.o
  
  Selecting elrsV2.o to define ELRSV2_stop()
      Definition:     ELRSV2_stop()
      Pushing section .text.ELRSV2_stop() to worklist [originates from symbol ELRSV2_stop()]
  
  Processing section: .text.ELRSV2_stop() from elrsV2.o
      Load REL relocations for .text.ELRSV2_stop() (elrsV2.o)
  
  Selecting elrsV2.o to define runPopupPage(unsigned char)
      Definition:     runPopupPage(unsigned char)
      Pushing section .text.runPopupPage(unsigned char) to worklist [originates from symbol runPopupPage(unsigned char)]
  
  Processing section: .text.runPopupPage(unsigned char) from elrsV2.o
      Load REL relocations for .text.runPopupPage(unsigned char) (elrsV2.o)
      Local section:  .text.popupCompat(unsigned char) from elrsV2.o using relocation R_ARM_THM_CALL
  
  Processing section: .text.popupCompat(unsigned char) from elrsV2.o
      Load REL relocations for .text.popupCompat(unsigned char) (elrsV2.o)
  
  Selecting elrsV2.o to define runDevicePage(unsigned char)
      Definition:     runDevicePage(unsigned char)
      Pushing section .text.runDevicePage(unsigned char) to worklist [originates from symbol runDevicePage(unsigned char)]
  
  Processing section: .text.runDevicePage(unsigned char) from elrsV2.o
      Load REL relocations for .text.runDevicePage(unsigned char) (elrsV2.o)
      Reference:      handleDevicePageEvent(unsigned char)
      Local section:  .text.getField(unsigned char) from elrsV2.o using relocation R_ARM_THM_CALL
  
  Processing section: .text.getField(unsigned char) from elrsV2.o
      Load REL relocations for .text.getField(unsigned char) (elrsV2.o)
  
  Selecting menus.o to define menuSetFailsafe(unsigned char)
      Definition:     menuSetFailsafe(unsigned char)
      Pushing section .text.menuSetFailsafe(unsigned char) to worklist [originates from symbol menuSetFailsafe(unsigned char)]
  
  Processing section: .text.menuSetFailsafe(unsigned char) from menus.o
      Load REL relocations for .text.menuSetFailsafe(unsigned char) (menus.o)
      Local section:  .bss.menuSetFailsafe(unsigned char)::mstate2 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.88 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.91 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.90 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.89 from menus.o using relocation R_ARM_ABS32
  
  Processing section: .bss.menuSetFailsafe(unsigned char)::mstate2 from menus.o
  
  Processing section: .rodata..L.str.88 from menus.o
  
  Processing section: .rodata..L.str.91 from menus.o
  
  Processing section: .rodata..L.str.90 from menus.o
  
  Processing section: .rodata..L.str.89 from menus.o
  
  Selecting menus.o to define rangeBindAction(unsigned char, unsigned char)
      Definition:     rangeBindAction(unsigned char, unsigned char)
      Pushing section .text.rangeBindAction(unsigned char, unsigned char) to worklist [originates from symbol rangeBindAction(unsigned char, unsigned char)]
  
  Processing section: .text.rangeBindAction(unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.rangeBindAction(unsigned char, unsigned char) (menus.o)
      Reference:      pxxFlag
      Reference:      menuRangeBind(unsigned char)
  
  Selecting menus.o to define menuRangeBind(unsigned char)
      Definition:     menuRangeBind(unsigned char)
      Pushing section .text.menuRangeBind(unsigned char) to worklist [originates from symbol menuRangeBind(unsigned char)]
  
  Processing section: .text.menuRangeBind(unsigned char) from menus.o
      Load REL relocations for .text.menuRangeBind(unsigned char) (menus.o)
      Local section:  .rodata..L.str.25 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.24 from menus.o using relocation R_ARM_ABS32
      Local section:  .bss.menuRangeBind(unsigned char)::timer from menus.o using relocation R_ARM_ABS32
  
  Processing section: .rodata..L.str.25 from menus.o
  
  Processing section: .rodata..L.str.24 from menus.o
  
  Processing section: .bss.menuRangeBind(unsigned char)::timer from menus.o
  
  Selecting er9x.o to define throttleReversed()
      Definition:     throttleReversed()
      Pushing section .text.throttleReversed() to worklist [originates from symbol throttleReversed()]
  
  Processing section: .text.throttleReversed() from er9x.o
      Load REL relocations for .text.throttleReversed() (er9x.o)
  
  Selecting menus.o to define menuProcTelemetry(unsigned char)
      Definition:     menuProcTelemetry(unsigned char)
      Pushing section .text.menuProcTelemetry(unsigned char) to worklist [originates from symbol menuProcTelemetry(unsigned char)]
  
  Processing section: .text.menuProcTelemetry(unsigned char) from menus.o
      Load REL relocations for .text.menuProcTelemetry(unsigned char) (menus.o)
      Reference:      putsAttIdxTelemItems(unsigned char, unsigned char, unsigned char, unsigned char)
      Local section:  .bss.menuProcTelemetry(unsigned char)::mstate2 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.5 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.4 from menus.o using relocation R_ARM_ABS32
  
  Processing section: .bss.menuProcTelemetry(unsigned char)::mstate2 from menus.o
  
  Processing section: .rodata..L.str.5 from menus.o
  
  Processing section: .rodata..L.str.4 from menus.o
  
  Selecting menus.o to define dispFlightModename(unsigned char, unsigned char, unsigned char)
      Definition:     dispFlightModename(unsigned char, unsigned char, unsigned char)
      Pushing section .text.dispFlightModename(unsigned char, unsigned char, unsigned char) to worklist [originates from symbol dispFlightModename(unsigned char, unsigned char, unsigned char)]
  
  Processing section: .text.dispFlightModename(unsigned char, unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.dispFlightModename(unsigned char, unsigned char, unsigned char) (menus.o)
      Local section:  .rodata..L.str.28 from menus.o using relocation R_ARM_ABS32
  
  Processing section: .rodata..L.str.28 from menus.o
  
  Selecting menus.o to define lcd_xlabel_decimal(unsigned char, unsigned char, unsigned short, unsigned char, char const*)
      Definition:     lcd_xlabel_decimal(unsigned char, unsigned char, unsigned short, unsigned char, char const*)
      Pushing section .text.lcd_xlabel_decimal(unsigned char, unsigned char, unsigned short, unsigned char, char const*) to worklist [originates from symbol lcd_xlabel_decimal(unsigned char, unsigned char, unsigned short, unsigned char, char const*)]
  
  Processing section: .text.lcd_xlabel_decimal(unsigned char, unsigned char, unsigned short, unsigned char, char const*) from menus.o
      Load REL relocations for .text.lcd_xlabel_decimal(unsigned char, unsigned char, unsigned short, unsigned char, char const*) (menus.o)
  
  Selecting menus.o to define menuProcVoiceAlarm(unsigned char)
      Definition:     menuProcVoiceAlarm(unsigned char)
      Pushing section .text.menuProcVoiceAlarm(unsigned char) to worklist [originates from symbol menuProcVoiceAlarm(unsigned char)]
  
  Processing section: .text.menuProcVoiceAlarm(unsigned char) from menus.o
      Load REL relocations for .text.menuProcVoiceAlarm(unsigned char) (menus.o)
      Reference:      displayVoiceRate(unsigned char, unsigned char, unsigned char, unsigned char)
      Local section:  .bss.menuProcVoiceAlarm(unsigned char)::mstate2 from menus.o using relocation R_ARM_ABS32
      Reference:      menuProcVoiceOne(unsigned char)
      Local section:  .rodata..L.str.83 from menus.o using relocation R_ARM_ABS32
  
  Processing section: .bss.menuProcVoiceAlarm(unsigned char)::mstate2 from menus.o
  
  Processing section: .rodata..L.str.83 from menus.o
  
  Selecting menus.o to define displayVoiceRate(unsigned char, unsigned char, unsigned char, unsigned char)
      Definition:     displayVoiceRate(unsigned char, unsigned char, unsigned char, unsigned char)
      Pushing section .text.displayVoiceRate(unsigned char, unsigned char, unsigned char, unsigned char) to worklist [originates from symbol displayVoiceRate(unsigned char, unsigned char, unsigned char, unsigned char)]
  
  Processing section: .text.displayVoiceRate(unsigned char, unsigned char, unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.displayVoiceRate(unsigned char, unsigned char, unsigned char, unsigned char) (menus.o)
      Local section:  .rodata.Str_On_Off_Both from menus.o using relocation R_ARM_ABS32
  
  Processing section: .rodata.Str_On_Off_Both from menus.o
  
  Selecting menus.o to define menuProcVoiceOne(unsigned char)
      Definition:     menuProcVoiceOne(unsigned char)
      Pushing section .text.menuProcVoiceOne(unsigned char) to worklist [originates from symbol menuProcVoiceOne(unsigned char)]
  
  Processing section: .text.menuProcVoiceOne(unsigned char) from menus.o
      Load REL relocations for .text.menuProcVoiceOne(unsigned char) (menus.o)
      Local section:  .rodata..L.str.70 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.71 from menus.o using relocation R_ARM_ABS32
      Local section:  .bss.menuProcVoiceOne(unsigned char)::mstate2 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.72 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.76 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.77 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.78 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.79 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_Sounds from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.80 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.81 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.73 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.74 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.75 from menus.o using relocation R_ARM_ABS32
  
  Processing section: .rodata..L.str.70 from menus.o
  
  Processing section: .rodata..L.str.71 from menus.o
  
  Processing section: .bss.menuProcVoiceOne(unsigned char)::mstate2 from menus.o
  
  Processing section: .rodata..L.str.72 from menus.o
  
  Processing section: .rodata..L.str.76 from menus.o
  
  Processing section: .rodata..L.str.77 from menus.o
  
  Processing section: .rodata..L.str.78 from menus.o
  
  Processing section: .rodata..L.str.79 from menus.o
  
  Processing section: .rodata.Str_Sounds from menus.o
  
  Processing section: .rodata..L.str.80 from menus.o
  
  Processing section: .rodata..L.str.81 from menus.o
  
  Processing section: .rodata..L.str.73 from menus.o
  
  Processing section: .rodata..L.str.74 from menus.o
  
  Processing section: .rodata..L.str.75 from menus.o
  
  Selecting pers.o to define eeLoadModelForBackup(unsigned char)
      Definition:     eeLoadModelForBackup(unsigned char)
      Pushing section .text.eeLoadModelForBackup(unsigned char) to worklist [originates from symbol eeLoadModelForBackup(unsigned char)]
  
  Processing section: .text.eeLoadModelForBackup(unsigned char) from pers.o
      Load REL relocations for .text.eeLoadModelForBackup(unsigned char) (pers.o)
  
  Selecting menus.o to define putsAttIdxTelemItems(unsigned char, unsigned char, unsigned char, unsigned char)
      Definition:     putsAttIdxTelemItems(unsigned char, unsigned char, unsigned char, unsigned char)
      Pushing section .text.putsAttIdxTelemItems(unsigned char, unsigned char, unsigned char, unsigned char) to worklist [originates from symbol putsAttIdxTelemItems(unsigned char, unsigned char, unsigned char, unsigned char)]
  
  Processing section: .text.putsAttIdxTelemItems(unsigned char, unsigned char, unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.putsAttIdxTelemItems(unsigned char, unsigned char, unsigned char, unsigned char) (menus.o)
  
  Selecting er9x.o to define putsMomentDrSwitches(unsigned char, unsigned char, signed char, unsigned char)
      Definition:     putsMomentDrSwitches(unsigned char, unsigned char, signed char, unsigned char)
      Pushing section .text.putsMomentDrSwitches(unsigned char, unsigned char, signed char, unsigned char) to worklist [originates from symbol putsMomentDrSwitches(unsigned char, unsigned char, signed char, unsigned char)]
  
  Processing section: .text.putsMomentDrSwitches(unsigned char, unsigned char, signed char, unsigned char) from er9x.o
      Load REL relocations for .text.putsMomentDrSwitches(unsigned char, unsigned char, signed char, unsigned char) (er9x.o)
  
  Selecting menus.o to define putsTelemetryChannel(unsigned char, unsigned char, signed char, int, unsigned char, unsigned char)
      Definition:     putsTelemetryChannel(unsigned char, unsigned char, signed char, int, unsigned char, unsigned char)
      Pushing section .text.putsTelemetryChannel(unsigned char, unsigned char, signed char, int, unsigned char, unsigned char) to worklist [originates from symbol putsTelemetryChannel(unsigned char, unsigned char, signed char, int, unsigned char, unsigned char)]
  
  Processing section: .text.putsTelemetryChannel(unsigned char, unsigned char, signed char, int, unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.putsTelemetryChannel(unsigned char, unsigned char, signed char, int, unsigned char, unsigned char) (menus.o)
      Reference:      putsTelemValue(unsigned char, unsigned char, int, unsigned char, unsigned char)
      Local section:  .rodata.UnitsText from menus.o using relocation R_ARM_ABS32
  
  Processing section: .rodata.UnitsText from menus.o
  
  Selecting er9x.o to define putsTelemValue(unsigned char, unsigned char, int, unsigned char, unsigned char)
      Definition:     putsTelemValue(unsigned char, unsigned char, int, unsigned char, unsigned char)
      Pushing section .text.putsTelemValue(unsigned char, unsigned char, int, unsigned char, unsigned char) to worklist [originates from symbol putsTelemValue(unsigned char, unsigned char, int, unsigned char, unsigned char)]
  
  Processing section: .text.putsTelemValue(unsigned char, unsigned char, int, unsigned char, unsigned char) from er9x.o
      Load REL relocations for .text.putsTelemValue(unsigned char, unsigned char, int, unsigned char, unsigned char) (er9x.o)
      Reference:      __aeabi_llsr
      Local section:  .rodata..L.str.1 from er9x.o using relocation R_ARM_ABS32
  
  Processing section: .rodata..L.str.1 from er9x.o
  
  Selecting menus.o to define reachMixerCountLimit()
      Definition:     reachMixerCountLimit()
      Pushing section .text.reachMixerCountLimit() to worklist [originates from symbol reachMixerCountLimit()]
  
  Processing section: .text.reachMixerCountLimit() from menus.o
      Load REL relocations for .text.reachMixerCountLimit() (menus.o)
      Reference:      menuMixersLimit(unsigned char)
  
  Selecting menus.o to define menuMixersLimit(unsigned char)
      Definition:     menuMixersLimit(unsigned char)
      Pushing section .text.menuMixersLimit(unsigned char) to worklist [originates from symbol menuMixersLimit(unsigned char)]
  
  Processing section: .text.menuMixersLimit(unsigned char) from menus.o
      Load REL relocations for .text.menuMixersLimit(unsigned char) (menus.o)
      Local section:  .rodata..L.str.16 from menus.o using relocation R_ARM_ABS32
  
  Processing section: .rodata..L.str.16 from menus.o
  
  Selecting er9x.o to define check_backlight_voice()
      Definition:     check_backlight_voice()
      Pushing section .text.check_backlight_voice() to worklist [originates from symbol check_backlight_voice()]
  
  Processing section: .text.check_backlight_voice() from er9x.o
      Load REL relocations for .text.check_backlight_voice() (er9x.o)
      Reference:      backlight_on
      Reference:      backlight_off
      Reference:      t_voice::voice_process()
      Local section:  .bss.check_backlight_voice()::tmr10ms from er9x.o using relocation R_ARM_ABS32
  
  Processing section: .bss.check_backlight_voice()::tmr10ms from er9x.o
  
  Selecting drivers.o to define eeprom_write_page_cmp(char const*, unsigned short, unsigned int)
      Definition:     eeprom_write_page_cmp(char const*, unsigned short, unsigned int)
      Pushing section .text.eeprom_write_page_cmp(char const*, unsigned short, unsigned int) to worklist [originates from symbol eeprom_write_page_cmp(char const*, unsigned short, unsigned int)]
  
  Processing section: .text.eeprom_write_page_cmp(char const*, unsigned short, unsigned int) from drivers.o
      Load REL relocations for .text.eeprom_write_page_cmp(char const*, unsigned short, unsigned int) (drivers.o)
  
  Selecting elrsV2.o to define handleDevicePageEvent(unsigned char)
      Definition:     handleDevicePageEvent(unsigned char)
      Pushing section .text.handleDevicePageEvent(unsigned char) to worklist [originates from symbol handleDevicePageEvent(unsigned char)]
  
  Processing section: .text.handleDevicePageEvent(unsigned char) from elrsV2.o
      Load REL relocations for .text.handleDevicePageEvent(unsigned char) (elrsV2.o)
      Local section:  .text.incrField(signed char) from elrsV2.o using relocation R_ARM_THM_CALL
      Reference:      selectField(signed char)
  
  Processing section: .text.incrField(signed char) from elrsV2.o
      Load REL relocations for .text.incrField(signed char) (elrsV2.o)
  
  Selecting elrsV2.o to define selectField(signed char)
      Definition:     selectField(signed char)
      Pushing section .text.selectField(signed char) to worklist [originates from symbol selectField(signed char)]
  
  Processing section: .text.selectField(signed char) from elrsV2.o
      Load REL relocations for .text.selectField(signed char) (elrsV2.o)
  
  Selecting er9x.o to define getCurrentSwitchStates()
      Definition:     getCurrentSwitchStates()
      Pushing section .text.getCurrentSwitchStates() to worklist [originates from symbol getCurrentSwitchStates()]
  
  Processing section: .text.getCurrentSwitchStates() from er9x.o
      Load REL relocations for .text.getCurrentSwitchStates() (er9x.o)
  
  Selecting er9x.o to define alert(char const*)
      Definition:     alert(char const*)
      Pushing section .text.alert(char const*) to worklist [originates from symbol alert(char const*)]
  
  Processing section: .text.alert(char const*) from er9x.o
      Load REL relocations for .text.alert(char const*) (er9x.o)
  
  Selecting er9x.o to define anaIn(unsigned char)
      Definition:     anaIn(unsigned char)
      Pushing section .text.anaIn(unsigned char) to worklist [originates from symbol anaIn(unsigned char)]
  
  Processing section: .text.anaIn(unsigned char) from er9x.o
      Load REL relocations for .text.anaIn(unsigned char) (er9x.o)
  
  Selecting menus.o to define timer()
      Definition:     timer()
      Pushing section .text.timer() to worklist [originates from symbol timer()]
  
  Processing section: .text.timer() from menus.o
      Load REL relocations for .text.timer() (menus.o)
      Reference:      ThrottleStickyOn
  
  Selecting menus.o to define ThrottleStickyOn
      Definition:     ThrottleStickyOn
      Pushing section .bss.ThrottleStickyOn to worklist [originates from symbol ThrottleStickyOn]
  
  Processing section: .bss.ThrottleStickyOn from menus.o
  
  Selecting menus.o to define trace()
      Definition:     trace()
      Pushing section .text.trace() to worklist [originates from symbol trace()]
  
  Processing section: .text.trace() from menus.o
      Load REL relocations for .text.trace() (menus.o)
      Local section:  .bss.trace()::s_time from menus.o using relocation R_ARM_ABS32
  
  Processing section: .bss.trace()::s_time from menus.o
  
  Selecting file.o to define EeFsck()
      Definition:     EeFsck()
      Pushing section .text.EeFsck() to worklist [originates from symbol EeFsck()]
  
  Processing section: .text.EeFsck() from file.o
      Load REL relocations for .text.EeFsck() (file.o)
      Local section:  .text.EeFsFlushFreelist() from file.o using relocation R_ARM_THM_CALL
  
  Processing section: .text.EeFsFlushFreelist() from file.o
      Load REL relocations for .text.EeFsFlushFreelist() (file.o)
  
  Selecting menus.o to define TITLEP(char const*)
      Definition:     TITLEP(char const*)
      Pushing section .text.TITLEP(char const*) to worklist [originates from symbol TITLEP(char const*)]
  
  Processing section: .text.TITLEP(char const*) from menus.o
      Load REL relocations for .text.TITLEP(char const*) (menus.o)
  
  Selecting er9x.o to define alertx(char const*, bool)
      Definition:     alertx(char const*, bool)
      Pushing section .text.alertx(char const*, bool) to worklist [originates from symbol alertx(char const*, bool)]
  
  Processing section: .text.alertx(char const*, bool) from er9x.o
      Load REL relocations for .text.alertx(char const*, bool) (er9x.o)
      Reference:      lcdSetRefVolt(unsigned char)
      Weak reference: keyDown()
  
  Selecting lcd.o to define lcdSetRefVolt(unsigned char)
      Definition:     lcdSetRefVolt(unsigned char)
      Pushing section .text.lcdSetRefVolt(unsigned char) to worklist [originates from symbol lcdSetRefVolt(unsigned char)]
  
  Processing section: .text.lcdSetRefVolt(unsigned char) from lcd.o
      Load REL relocations for .text.lcdSetRefVolt(unsigned char) (lcd.o)
  
  Selecting er9x.o to define almess(char const*, unsigned char)
      Definition:     almess(char const*, unsigned char)
      Pushing section .text.almess(char const*, unsigned char) to worklist [originates from symbol almess(char const*, unsigned char)]
  
  Processing section: .text.almess(char const*, unsigned char) from er9x.o
      Load REL relocations for .text.almess(char const*, unsigned char) (er9x.o)
      Local section:  .rodata..L.str.4 from er9x.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.2 from er9x.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_Alert from er9x.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.3 from er9x.o using relocation R_ARM_ABS32
  
  Processing section: .rodata..L.str.4 from er9x.o
  
  Processing section: .rodata..L.str.2 from er9x.o
  
  Processing section: .rodata.Str_Alert from er9x.o
  
  Processing section: .rodata..L.str.3 from er9x.o
  
  Selecting menus.o to define intpol(short, unsigned char)
      Definition:     intpol(short, unsigned char)
      Pushing section .text.intpol(short, unsigned char) to worklist [originates from symbol intpol(short, unsigned char)]
  
  Processing section: .text.intpol(short, unsigned char) from menus.o
      Load REL relocations for .text.intpol(short, unsigned char) (menus.o)
  
  Selecting menus.o to define perOut(short*, unsigned char)
      Definition:     perOut(short*, unsigned char)
      Pushing section .text.perOut(short*, unsigned char) to worklist [originates from symbol perOut(short*, unsigned char)]
  
  Processing section: .text.perOut(short*, unsigned char) from menus.o
      Load REL relocations for .text.perOut(short*, unsigned char) (menus.o)
      Reference:      scaleAnalog(short, unsigned char)
      Reference:      calc100toRESX(signed char)
      Reference:      bpanaCenter
      Reference:      Output
      Reference:      g_ppmIns
      Reference:      REG100_100(signed char)
      Reference:      REG(signed char, signed char, signed char)
      Reference:      expo(short, short)
      Reference:      calc1000toRESX(short)
      Local section:  .bss.perOut(short*, unsigned char)::sticky from menus.o using relocation R_ARM_ABS32
  
  Processing section: .bss.perOut(short*, unsigned char)::sticky from menus.o
  
  Selecting menus.o to define Output
      Definition:     Output
      Pushing section .bss.Output to worklist [originates from symbol Output]
  
  Processing section: .bss.Output from menus.o
  
  Selecting er9x.o to define REG100_100(signed char)
      Definition:     REG100_100(signed char)
      Pushing section .text.REG100_100(signed char) to worklist [originates from symbol REG100_100(signed char)]
  
  Processing section: .text.REG100_100(signed char) from er9x.o
      Load REL relocations for .text.REG100_100(signed char) (er9x.o)
  
  Selecting menus.o to define scaleAnalog(short, unsigned char)
      Definition:     scaleAnalog(short, unsigned char)
      Pushing section .text.scaleAnalog(short, unsigned char) to worklist [originates from symbol scaleAnalog(short, unsigned char)]
  
  Processing section: .text.scaleAnalog(short, unsigned char) from menus.o
      Load REL relocations for .text.scaleAnalog(short, unsigned char) (menus.o)
  
  Selecting er9x.o to define calc100toRESX(signed char)
      Definition:     calc100toRESX(signed char)
      Pushing section .text.calc100toRESX(signed char) to worklist [originates from symbol calc100toRESX(signed char)]
  
  Processing section: .text.calc100toRESX(signed char) from er9x.o
  
  Selecting er9x.o to define calc1000toRESX(short)
      Definition:     calc1000toRESX(short)
      Pushing section .text.calc1000toRESX(short) to worklist [originates from symbol calc1000toRESX(short)]
  
  Processing section: .text.calc1000toRESX(short) from er9x.o
  
  Selecting er9x.o to define REG(signed char, signed char, signed char)
      Definition:     REG(signed char, signed char, signed char)
      Pushing section .text.REG(signed char, signed char, signed char) to worklist [originates from symbol REG(signed char, signed char, signed char)]
  
  Processing section: .text.REG(signed char, signed char, signed char) from er9x.o
      Load REL relocations for .text.REG(signed char, signed char, signed char) (er9x.o)
  
  Selecting menus.o to define expo(short, short)
      Definition:     expo(short, short)
      Pushing section .text.expo(short, short) to worklist [originates from symbol expo(short, short)]
  
  Processing section: .text.expo(short, short) from menus.o
      Load REL relocations for .text.expo(short, short) (menus.o)
      Reference:      expou(unsigned short, unsigned short)
  
  Selecting menus.o to define expou(unsigned short, unsigned short)
      Definition:     expou(unsigned short, unsigned short)
      Pushing section .text.expou(unsigned short, unsigned short) to worklist [originates from symbol expou(unsigned short, unsigned short)]
  
  Processing section: .text.expou(unsigned short, unsigned short) from menus.o
      Load REL relocations for .text.expou(unsigned short, unsigned short) (menus.o)
  
  Selecting templates.o to define setMix(unsigned char, unsigned char)
      Definition:     setMix(unsigned char, unsigned char)
      Pushing section .text.setMix(unsigned char, unsigned char) to worklist [originates from symbol setMix(unsigned char, unsigned char)]
  
  Processing section: .text.setMix(unsigned char, unsigned char) from templates.o
      Load REL relocations for .text.setMix(unsigned char, unsigned char) (templates.o)
  
  Selecting menus.o to define doPopup(char const*, unsigned char, unsigned char)
      Definition:     doPopup(char const*, unsigned char, unsigned char)
      Pushing section .text.doPopup(char const*, unsigned char, unsigned char) to worklist [originates from symbol doPopup(char const*, unsigned char, unsigned char)]
  
  Processing section: .text.doPopup(char const*, unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.doPopup(char const*, unsigned char, unsigned char) (menus.o)
      Reference:      lcd_putsn_P(unsigned char, unsigned char, char const*, unsigned char)
      Local section:  .rodata..L.str.114 from menus.o using relocation R_ARM_ABS32
  
  Processing section: .rodata..L.str.114 from menus.o
  
  Selecting lcd.o to define lcd_putsn_P(unsigned char, unsigned char, char const*, unsigned char)
      Definition:     lcd_putsn_P(unsigned char, unsigned char, char const*, unsigned char)
      Pushing section .text.lcd_putsn_P(unsigned char, unsigned char, char const*, unsigned char) to worklist [originates from symbol lcd_putsn_P(unsigned char, unsigned char, char const*, unsigned char)]
  
  Processing section: .text.lcd_putsn_P(unsigned char, unsigned char, char const*, unsigned char) from lcd.o
      Load REL relocations for .text.lcd_putsn_P(unsigned char, unsigned char, char const*, unsigned char) (lcd.o)
  
  Selecting pers.o to define eeCheck(bool)
      Definition:     eeCheck(bool)
      Pushing section .text.eeCheck(bool) to worklist [originates from symbol eeCheck(bool)]
  
  Processing section: .text.eeCheck(bool) from pers.o
      Load REL relocations for .text.eeCheck(bool) (pers.o)
      Local section:  .bss.s_eeLongTimer from pers.o using relocation R_ARM_ABS32
      Local section:  .bss.s_eeDirtyTime10ms from pers.o using relocation R_ARM_ABS32
      Reference:      Ee_lock
      Reference:      theWriteFile
      Local section:  .rodata.Str_EEPROM_Overflow from pers.o using relocation R_ARM_ABS32
  
  Processing section: .bss.s_eeLongTimer from pers.o
  
  Processing section: .bss.s_eeDirtyTime10ms from pers.o
  
  Processing section: .rodata.Str_EEPROM_Overflow from pers.o
  
  Selecting pers.o to define Ee_lock
      Definition:     Ee_lock
      Pushing section .bss.Ee_lock to worklist [originates from symbol Ee_lock]
  
  Processing section: .bss.Ee_lock from pers.o
  
  Selecting pers.o to define eeDirty(unsigned char)
      Definition:     eeDirty(unsigned char)
      Pushing section .text.eeDirty(unsigned char) to worklist [originates from symbol eeDirty(unsigned char)]
  
  Processing section: .text.eeDirty(unsigned char) from pers.o
      Load REL relocations for .text.eeDirty(unsigned char) (pers.o)
  
  Selecting er9x.o to define keyDown()
      Definition:     keyDown()
      Pushing section .text.keyDown() to worklist [originates from symbol keyDown()]
  
  Processing section: .text.keyDown() from er9x.o
      Load REL relocations for .text.keyDown() (er9x.o)
  
  Selecting er9x.o to define message(char const*)
      Definition:     message(char const*)
      Pushing section .text.message(char const*) to worklist [originates from symbol message(char const*)]
  
  Processing section: .text.message(char const*) from er9x.o
      Load REL relocations for .text.message(char const*) (er9x.o)
  
  Selecting er9x.o to define popMenu(bool)
      Definition:     popMenu(bool)
      Pushing section .text.popMenu(bool) to worklist [originates from symbol popMenu(bool)]
  
  Processing section: .text.popMenu(bool) from er9x.o
      Load REL relocations for .text.popMenu(bool) (er9x.o)
  
  Selecting er9x.o to define putsChn(unsigned char, unsigned char, unsigned char, unsigned char)
      Definition:     putsChn(unsigned char, unsigned char, unsigned char, unsigned char)
      Pushing section .text.putsChn(unsigned char, unsigned char, unsigned char, unsigned char) to worklist [originates from symbol putsChn(unsigned char, unsigned char, unsigned char, unsigned char)]
  
  Processing section: .text.putsChn(unsigned char, unsigned char, unsigned char, unsigned char) from er9x.o
      Load REL relocations for .text.putsChn(unsigned char, unsigned char, unsigned char, unsigned char) (er9x.o)
  
  Selecting er9x.o to define CS_STATE(unsigned char)
      Definition:     CS_STATE(unsigned char)
      Pushing section .text.CS_STATE(unsigned char) to worklist [originates from symbol CS_STATE(unsigned char)]
  
  Processing section: .text.CS_STATE(unsigned char) from er9x.o
      Load REL relocations for .text.CS_STATE(unsigned char) (er9x.o)
  
  Selecting file.o to define EeFsOpen()
      Definition:     EeFsOpen()
      Pushing section .text.EeFsOpen() to worklist [originates from symbol EeFsOpen()]
  
  Processing section: .text.EeFsOpen() from file.o
      Load REL relocations for .text.EeFsOpen() (file.o)
  
  Selecting menus.o to define calcExpo(unsigned char, short)
      Definition:     calcExpo(unsigned char, short)
      Pushing section .text.calcExpo(unsigned char, short) to worklist [originates from symbol calcExpo(unsigned char, short)]
  
  Processing section: .text.calcExpo(unsigned char, short) from menus.o
      Load REL relocations for .text.calcExpo(unsigned char, short) (menus.o)
  
  Selecting menus.o to define char2idx(char)
      Definition:     char2idx(char)
      Pushing section .text.char2idx(char) to worklist [originates from symbol char2idx(char)]
  
  Processing section: .text.char2idx(char) from menus.o
      Load REL relocations for .text.char2idx(char) (menus.o)
      Local section:  .rodata.s_charTab from menus.o using relocation R_ARM_ABS32
  
  Processing section: .rodata.s_charTab from menus.o
  
  Selecting er9x.o to define checkTHR()
      Definition:     checkTHR()
      Pushing section .text.checkTHR() to worklist [originates from symbol checkTHR()]
  
  Processing section: .text.checkTHR() from er9x.o
      Load REL relocations for .text.checkTHR() (er9x.o)
      Reference:      checkThrottlePosition()
      Local section:  .rodata..L.str.5 from er9x.o using relocation R_ARM_ABS32
  
  Processing section: .rodata..L.str.5 from er9x.o
  
  Selecting er9x.o to define checkThrottlePosition()
      Definition:     checkThrottlePosition()
      Pushing section .text.checkThrottlePosition() to worklist [originates from symbol checkThrottlePosition()]
  
  Processing section: .text.checkThrottlePosition() from er9x.o
      Load REL relocations for .text.checkThrottlePosition() (er9x.o)
  
  Selecting menus.o to define dispGvar(unsigned char, unsigned char, unsigned char, unsigned char)
      Definition:     dispGvar(unsigned char, unsigned char, unsigned char, unsigned char)
      Pushing section .text.dispGvar(unsigned char, unsigned char, unsigned char, unsigned char) to worklist [originates from symbol dispGvar(unsigned char, unsigned char, unsigned char, unsigned char)]
  
  Processing section: .text.dispGvar(unsigned char, unsigned char, unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.dispGvar(unsigned char, unsigned char, unsigned char, unsigned char) (menus.o)
  
  Selecting menus.o to define editName(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char)
      Definition:     editName(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char)
      Pushing section .text.editName(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char) to worklist [originates from symbol editName(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char)]
  
  Processing section: .text.editName(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.editName(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char) (menus.o)
      Local section:  .rodata.Str_Name from menus.o using relocation R_ARM_ABS32
  
  Processing section: .rodata.Str_Name from menus.o
  
  Selecting drivers.o to define ee_waite()
      Definition:     ee_waite()
      Pushing section .text.ee_waite() to worklist [originates from symbol ee_waite()]
  
  Processing section: .text.ee_waite() from drivers.o
      Load REL relocations for .text.ee_waite() (drivers.o)
  
  Selecting er9x.o to define getValue(unsigned char)
      Definition:     getValue(unsigned char)
      Pushing section .text.getValue(unsigned char) to worklist [originates from symbol getValue(unsigned char)]
  
  Processing section: .text.getValue(unsigned char) from er9x.o
      Load REL relocations for .text.getValue(unsigned char) (er9x.o)
  
  Selecting menus.o to define idx2char(unsigned char)
      Definition:     idx2char(unsigned char)
      Pushing section .text.idx2char(unsigned char) to worklist [originates from symbol idx2char(unsigned char)]
  
  Processing section: .text.idx2char(unsigned char) from menus.o
      Load REL relocations for .text.idx2char(unsigned char) (menus.o)
  
  Selecting drivers.o to define keyState(EnumKeys)
      Definition:     keyState(EnumKeys)
      Pushing section .text.keyState(EnumKeys) to worklist [originates from symbol keyState(EnumKeys)]
  
  Processing section: .text.keyState(EnumKeys) from drivers.o
      Load REL relocations for .text.keyState(EnumKeys) (drivers.o)
      Reference:      PING
      Reference:      PINE
  
  Selecting BoardI6.o to define PINE
      Definition:     PINE
      Pushing section .text.PINE to worklist [originates from symbol PINE]
  
  Processing section: .text.PINE from BoardI6.o
      Load REL relocations for .text.PINE (BoardI6.o)
  
  Selecting BoardI6.o to define PING
      Definition:     PING
      Pushing section .text.PING to worklist [originates from symbol PING]
  
  Processing section: .text.PING from BoardI6.o
      Load REL relocations for .text.PING (BoardI6.o)
  
  Selecting lcd.o to define lcd_hbar(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
      Definition:     lcd_hbar(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
      Pushing section .text.lcd_hbar(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) to worklist [originates from symbol lcd_hbar(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)]
  
  Processing section: .text.lcd_hbar(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) from lcd.o
      Load REL relocations for .text.lcd_hbar(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) (lcd.o)
  
  Selecting lcd.o to define lcd_init()
      Definition:     lcd_init()
      Pushing section .text.lcd_init() to worklist [originates from symbol lcd_init()]
  
  Processing section: .text.lcd_init() from lcd.o
      Load REL relocations for .text.lcd_init() (lcd.o)
      Reference:      rst_0
      Reference:      rst_1
      Reference:      rw_0
      Reference:      cs_0
      Reference:      lcdSetContrast()
      Local section:  .rodata.Lcdinit from lcd.o using relocation R_ARM_ABS32
  
  Processing section: .rodata.Lcdinit from lcd.o
  
  Selecting lcd.o to define lcdSetContrast()
      Definition:     lcdSetContrast()
      Pushing section .text.lcdSetContrast() to worklist [originates from symbol lcdSetContrast()]
  
  Processing section: .text.lcdSetContrast() from lcd.o
      Load REL relocations for .text.lcdSetContrast() (lcd.o)
  
  Selecting lcd.o to define lcd_plot(unsigned char, unsigned char)
      Definition:     lcd_plot(unsigned char, unsigned char)
      Pushing section .text.lcd_plot(unsigned char, unsigned char) to worklist [originates from symbol lcd_plot(unsigned char, unsigned char)]
  
  Processing section: .text.lcd_plot(unsigned char, unsigned char) from lcd.o
      Load REL relocations for .text.lcd_plot(unsigned char, unsigned char) (lcd.o)
      Reference:      lcd_write_bits(unsigned char*, unsigned char)
      Local section:  .rodata._bitmask from lcd.o using relocation R_ARM_ABS32
  
  Processing section: .rodata._bitmask from lcd.o
  
  Selecting lcd.o to define lcd_write_bits(unsigned char*, unsigned char)
      Definition:     lcd_write_bits(unsigned char*, unsigned char)
      Pushing section .text.lcd_write_bits(unsigned char*, unsigned char) to worklist [originates from symbol lcd_write_bits(unsigned char*, unsigned char)]
  
  Processing section: .text.lcd_write_bits(unsigned char*, unsigned char) from lcd.o
      Load REL relocations for .text.lcd_write_bits(unsigned char*, unsigned char) (lcd.o)
  
  Selecting lcd.o to define lcd_putc(unsigned char, unsigned char, char)
      Definition:     lcd_putc(unsigned char, unsigned char, char)
      Pushing section .text.lcd_putc(unsigned char, unsigned char, char) to worklist [originates from symbol lcd_putc(unsigned char, unsigned char, char)]
  
  Processing section: .text.lcd_putc(unsigned char, unsigned char, char) from lcd.o
      Load REL relocations for .text.lcd_putc(unsigned char, unsigned char, char) (lcd.o)
  
  Selecting lcd.o to define lcd_rect(unsigned char, unsigned char, unsigned char, unsigned char)
      Definition:     lcd_rect(unsigned char, unsigned char, unsigned char, unsigned char)
      Pushing section .text.lcd_rect(unsigned char, unsigned char, unsigned char, unsigned char) to worklist [originates from symbol lcd_rect(unsigned char, unsigned char, unsigned char, unsigned char)]
  
  Processing section: .text.lcd_rect(unsigned char, unsigned char, unsigned char, unsigned char) from lcd.o
      Load REL relocations for .text.lcd_rect(unsigned char, unsigned char, unsigned char, unsigned char) (lcd.o)
      Reference:      lcd_rect_xor(unsigned char, unsigned char, unsigned char, unsigned char)
  
  Selecting lcd.o to define lcd_rect_xor(unsigned char, unsigned char, unsigned char, unsigned char)
      Definition:     lcd_rect_xor(unsigned char, unsigned char, unsigned char, unsigned char)
      Pushing section .text.lcd_rect_xor(unsigned char, unsigned char, unsigned char, unsigned char) to worklist [originates from symbol lcd_rect_xor(unsigned char, unsigned char, unsigned char, unsigned char)]
  
  Processing section: .text.lcd_rect_xor(unsigned char, unsigned char, unsigned char, unsigned char) from lcd.o
      Load REL relocations for .text.lcd_rect_xor(unsigned char, unsigned char, unsigned char, unsigned char) (lcd.o)
  
  Selecting er9x.o to define pushMenu(void (*)(unsigned char))
      Definition:     pushMenu(void (*)(unsigned char))
      Pushing section .text.pushMenu(void (*)(unsigned char)) to worklist [originates from symbol pushMenu(void (*)(unsigned char))]
  
  Processing section: .text.pushMenu(void (*)(unsigned char)) from er9x.o
      Load REL relocations for .text.pushMenu(void (*)(unsigned char)) (er9x.o)
      Local section:  .rodata..L.str.7 from er9x.o using relocation R_ARM_ABS32
  
  Processing section: .rodata..L.str.7 from er9x.o
  
  Selecting lcd.o to define putsTime(unsigned char, unsigned char, short, unsigned char, unsigned char)
      Definition:     putsTime(unsigned char, unsigned char, short, unsigned char, unsigned char)
      Pushing section .text.putsTime(unsigned char, unsigned char, short, unsigned char, unsigned char) to worklist [originates from symbol putsTime(unsigned char, unsigned char, short, unsigned char, unsigned char)]
  
  Processing section: .text.putsTime(unsigned char, unsigned char, short, unsigned char, unsigned char) from lcd.o
      Load REL relocations for .text.putsTime(unsigned char, unsigned char, short, unsigned char, unsigned char) (lcd.o)
  
  Selecting pers.o to define setNameP(char*, char const*)
      Definition:     setNameP(char*, char const*)
      Pushing section .text.setNameP(char*, char const*) to worklist [originates from symbol setNameP(char*, char const*)]
  
  Processing section: .text.setNameP(char*, char const*) from pers.o
  
  Selecting er9x.o to define chainMenu(void (*)(unsigned char))
      Definition:     chainMenu(void (*)(unsigned char))
      Pushing section .text.chainMenu(void (*)(unsigned char)) to worklist [originates from symbol chainMenu(void (*)(unsigned char))]
  
  Processing section: .text.chainMenu(void (*)(unsigned char)) from er9x.o
      Load REL relocations for .text.chainMenu(void (*)(unsigned char)) (er9x.o)
  
  Selecting menus.o to define drawCurve(unsigned char)
      Definition:     drawCurve(unsigned char)
      Pushing section .text.drawCurve(unsigned char) to worklist [originates from symbol drawCurve(unsigned char)]
  
  Processing section: .text.drawCurve(unsigned char) from menus.o
      Load REL relocations for .text.drawCurve(unsigned char) (menus.o)
  
  Selecting er9x.o to define getSwitch(signed char, bool, unsigned char)
      Definition:     getSwitch(signed char, bool, unsigned char)
      Pushing section .text.getSwitch(signed char, bool, unsigned char) to worklist [originates from symbol getSwitch(signed char, bool, unsigned char)]
  
  Processing section: .text.getSwitch(signed char, bool, unsigned char) from er9x.o
      Load REL relocations for .text.getSwitch(signed char, bool, unsigned char) (er9x.o)
  
  Selecting lcd.o to define lcd_clear()
      Definition:     lcd_clear()
      Pushing section .text.lcd_clear() to worklist [originates from symbol lcd_clear()]
  
  Processing section: .text.lcd_clear() from lcd.o
      Load REL relocations for .text.lcd_clear() (lcd.o)
  
  Selecting lcd.o to define lcd_hline(unsigned char, unsigned char, signed char)
      Definition:     lcd_hline(unsigned char, unsigned char, signed char)
      Pushing section .text.lcd_hline(unsigned char, unsigned char, signed char) to worklist [originates from symbol lcd_hline(unsigned char, unsigned char, signed char)]
  
  Processing section: .text.lcd_hline(unsigned char, unsigned char, signed char) from lcd.o
      Load REL relocations for .text.lcd_hline(unsigned char, unsigned char, signed char) (lcd.o)
      Reference:      lcd_hlineStip(unsigned char, unsigned char, signed char, unsigned char)
  
  Selecting lcd.o to define lcd_hlineStip(unsigned char, unsigned char, signed char, unsigned char)
      Definition:     lcd_hlineStip(unsigned char, unsigned char, signed char, unsigned char)
      Pushing section .text.lcd_hlineStip(unsigned char, unsigned char, signed char, unsigned char) to worklist [originates from symbol lcd_hlineStip(unsigned char, unsigned char, signed char, unsigned char)]
  
  Processing section: .text.lcd_hlineStip(unsigned char, unsigned char, signed char, unsigned char) from lcd.o
      Load REL relocations for .text.lcd_hlineStip(unsigned char, unsigned char, signed char, unsigned char) (lcd.o)
  
  Selecting lcd.o to define lcd_vline(unsigned char, unsigned char, signed char)
      Definition:     lcd_vline(unsigned char, unsigned char, signed char)
      Pushing section .text.lcd_vline(unsigned char, unsigned char, signed char) to worklist [originates from symbol lcd_vline(unsigned char, unsigned char, signed char)]
  
  Processing section: .text.lcd_vline(unsigned char, unsigned char, signed char) from lcd.o
      Load REL relocations for .text.lcd_vline(unsigned char, unsigned char, signed char) (lcd.o)
  
  Selecting menus.o to define menuProc0(unsigned char)
      Definition:     menuProc0(unsigned char)
      Pushing section .text.menuProc0(unsigned char) to worklist [originates from symbol menuProc0(unsigned char)]
  
  Processing section: .text.menuProc0(unsigned char) from menus.o
      Load REL relocations for .text.menuProc0(unsigned char) (menus.o)
      Reference:      putsVBat(unsigned char, unsigned char, unsigned char)
      Reference:      displayTimer(unsigned char, unsigned char, unsigned char, unsigned char)
      Reference:      doMainScreenGrphics()
      Reference:      dispSignalQality(unsigned char)
      Reference:      switchDisplay(unsigned char, unsigned char)
      Reference:      displayOneSwitch3Pos(unsigned char, unsigned char, unsigned char)
      Local section:  .bss.menuProc0(unsigned char)::trimSwLock from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.41 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.menuProc0(unsigned char)::xt from menus.o using relocation R_ARM_ABS32
      Local section:  .bss.inputs_subview from menus.o using relocation R_ARM_ABS32
      Reference:      menuProcStatistic(unsigned char)
      Reference:      menuProcIndex(unsigned char)
      Local section:  .rodata..L.str.42 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.43 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.44 from menus.o using relocation R_ARM_ABS32
  
  Processing section: .bss.menuProc0(unsigned char)::trimSwLock from menus.o
  
  Processing section: .rodata..L.str.41 from menus.o
  
  Processing section: .rodata.menuProc0(unsigned char)::xt from menus.o
  
  Processing section: .bss.inputs_subview from menus.o
  
  Processing section: .rodata..L.str.42 from menus.o
  
  Processing section: .rodata..L.str.43 from menus.o
  
  Processing section: .rodata..L.str.44 from menus.o
  
  Selecting menus.o to define displayTimer(unsigned char, unsigned char, unsigned char, unsigned char)
      Definition:     displayTimer(unsigned char, unsigned char, unsigned char, unsigned char)
      Pushing section .text.displayTimer(unsigned char, unsigned char, unsigned char, unsigned char) to worklist [originates from symbol displayTimer(unsigned char, unsigned char, unsigned char, unsigned char)]
  
  Processing section: .text.displayTimer(unsigned char, unsigned char, unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.displayTimer(unsigned char, unsigned char, unsigned char, unsigned char) (menus.o)
  
  Selecting menus.o to define menuProcIndex(unsigned char)
      Definition:     menuProcIndex(unsigned char)
      Pushing section .text.menuProcIndex(unsigned char) to worklist [originates from symbol menuProcIndex(unsigned char)]
  
  Processing section: .text.menuProcIndex(unsigned char) from menus.o
      Load REL relocations for .text.menuProcIndex(unsigned char) (menus.o)
      Local section:  .bss.menuProcIndex(unsigned char)::mstate from menus.o using relocation R_ARM_ABS32
      Local section:  .text.offonMenuItem(unsigned char, unsigned char, char const*, unsigned char) from menus.o using relocation R_ARM_THM_CALL
      Local section:  .rodata.menuProcIndex(unsigned char)::n_Strings from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_Display from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.45 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.46 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_AudioHaptic from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.47 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.48 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.49 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_Alarms from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.52 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_Beep_Countdown from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.54 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.55 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.56 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_Controls from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.51 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_Calibration from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_Trainer from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.62 from menus.o using relocation R_ARM_ABS32
      Reference:      putc_0_1(unsigned char, unsigned char, unsigned char)
      Reference:      lcd_outhex4(unsigned char, unsigned char, unsigned short)
      Reference:      lcd_img(unsigned char, unsigned char, unsigned char const*, unsigned char)
      Local section:  .rodata..L.str.63 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_Version from menus.o using relocation R_ARM_ABS32
      Reference:      Stamps
      Local section:  .rodata..L.str.57 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.60 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_Hardware from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.66 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.58 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.59 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.sticks from menus.o using relocation R_ARM_ABS32
      Reference:      putsVolts(unsigned char, unsigned char, short, unsigned char)
      Local section:  .rodata..L.str.69 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.menuWhenDone from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.68 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.67 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.61 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.64 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.65 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.53 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.50 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_minute_Beep from menus.o using relocation R_ARM_ABS32
  
  Processing section: .bss.menuProcIndex(unsigned char)::mstate from menus.o
  
  Processing section: .text.offonMenuItem(unsigned char, unsigned char, char const*, unsigned char) from menus.o
      Load REL relocations for .text.offonMenuItem(unsigned char, unsigned char, char const*, unsigned char) (menus.o)
  
  Processing section: .rodata.menuProcIndex(unsigned char)::n_Strings from menus.o
      Load REL relocations for .rodata.menuProcIndex(unsigned char)::n_Strings (menus.o)
      Local section:  .rodata.Str_DiagSwtch from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_DiagAna from menus.o using relocation R_ARM_ABS32
  
  Processing section: .rodata.Str_Display from menus.o
  
  Processing section: .rodata..L.str.45 from menus.o
  
  Processing section: .rodata..L.str.46 from menus.o
  
  Processing section: .rodata.Str_AudioHaptic from menus.o
  
  Processing section: .rodata..L.str.47 from menus.o
  
  Processing section: .rodata..L.str.48 from menus.o
  
  Processing section: .rodata..L.str.49 from menus.o
  
  Processing section: .rodata.Str_Alarms from menus.o
  
  Processing section: .rodata..L.str.52 from menus.o
  
  Processing section: .rodata.Str_Beep_Countdown from menus.o
  
  Processing section: .rodata..L.str.54 from menus.o
  
  Processing section: .rodata..L.str.55 from menus.o
  
  Processing section: .rodata..L.str.56 from menus.o
  
  Processing section: .rodata.Str_Controls from menus.o
  
  Processing section: .rodata..L.str.51 from menus.o
  
  Processing section: .rodata.Str_Calibration from menus.o
  
  Processing section: .rodata.Str_Trainer from menus.o
  
  Processing section: .rodata..L.str.62 from menus.o
  
  Processing section: .rodata..L.str.63 from menus.o
  
  Processing section: .rodata.Str_Version from menus.o
  
  Processing section: .rodata..L.str.57 from menus.o
  
  Processing section: .rodata..L.str.60 from menus.o
  
  Processing section: .rodata.Str_Hardware from menus.o
  
  Processing section: .rodata..L.str.66 from menus.o
  
  Processing section: .rodata..L.str.58 from menus.o
  
  Processing section: .rodata..L.str.59 from menus.o
  
  Processing section: .rodata.sticks from menus.o
  
  Processing section: .rodata..L.str.69 from menus.o
  
  Processing section: .rodata.menuWhenDone from menus.o
  
  Processing section: .rodata..L.str.68 from menus.o
  
  Processing section: .rodata..L.str.67 from menus.o
  
  Processing section: .rodata..L.str.61 from menus.o
  
  Processing section: .rodata..L.str.64 from menus.o
  
  Processing section: .rodata..L.str.65 from menus.o
  
  Processing section: .rodata..L.str.53 from menus.o
  
  Processing section: .rodata..L.str.50 from menus.o
  
  Processing section: .rodata.Str_minute_Beep from menus.o
  
  Processing section: .rodata.Str_DiagSwtch from menus.o
  
  Processing section: .rodata.Str_DiagAna from menus.o
  
  Selecting stamp.o to define Stamps
      Definition:     Stamps
      Pushing section .rodata.Stamps to worklist [originates from symbol Stamps]
  
  Processing section: .rodata.Stamps from stamp.o
  
  Selecting lcd.o to define lcd_outhex4(unsigned char, unsigned char, unsigned short)
      Definition:     lcd_outhex4(unsigned char, unsigned char, unsigned short)
      Pushing section .text.lcd_outhex4(unsigned char, unsigned char, unsigned short) to worklist [originates from symbol lcd_outhex4(unsigned char, unsigned char, unsigned short)]
  
  Processing section: .text.lcd_outhex4(unsigned char, unsigned char, unsigned short) from lcd.o
      Load REL relocations for .text.lcd_outhex4(unsigned char, unsigned char, unsigned short) (lcd.o)
  
  Selecting menus.o to define switchDisplay(unsigned char, unsigned char)
      Definition:     switchDisplay(unsigned char, unsigned char)
      Pushing section .text.switchDisplay(unsigned char, unsigned char) to worklist [originates from symbol switchDisplay(unsigned char, unsigned char)]
  
  Processing section: .text.switchDisplay(unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.switchDisplay(unsigned char, unsigned char) (menus.o)
      Reference:      displayOneSwitch(unsigned char, unsigned char, unsigned char)
  
  Selecting menus.o to define dispSignalQality(unsigned char)
      Definition:     dispSignalQality(unsigned char)
      Pushing section .text.dispSignalQality(unsigned char) to worklist [originates from symbol dispSignalQality(unsigned char)]
  
  Processing section: .text.dispSignalQality(unsigned char) from menus.o
      Load REL relocations for .text.dispSignalQality(unsigned char) (menus.o)
      Local section:  .rodata..L.str.38 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.40 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.39 from menus.o using relocation R_ARM_ABS32
  
  Processing section: .rodata..L.str.38 from menus.o
  
  Processing section: .rodata..L.str.40 from menus.o
  
  Processing section: .rodata..L.str.39 from menus.o
  
  Selecting menus.o to define displayOneSwitch(unsigned char, unsigned char, unsigned char)
      Definition:     displayOneSwitch(unsigned char, unsigned char, unsigned char)
      Pushing section .text.displayOneSwitch(unsigned char, unsigned char, unsigned char) to worklist [originates from symbol displayOneSwitch(unsigned char, unsigned char, unsigned char)]
  
  Processing section: .text.displayOneSwitch(unsigned char, unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.displayOneSwitch(unsigned char, unsigned char, unsigned char) (menus.o)
  
  Selecting menus.o to define menuProcStatistic(unsigned char)
      Definition:     menuProcStatistic(unsigned char)
      Pushing section .text.menuProcStatistic(unsigned char) to worklist [originates from symbol menuProcStatistic(unsigned char)]
  
  Processing section: .text.menuProcStatistic(unsigned char) from menus.o
      Load REL relocations for .text.menuProcStatistic(unsigned char) (menus.o)
      Local section:  .rodata..L.str.32 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.33 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.34 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.35 from menus.o using relocation R_ARM_ABS32
      Reference:      putsTimeNoAtt(unsigned char, unsigned char, short)
  
  Processing section: .rodata..L.str.32 from menus.o
  
  Processing section: .rodata..L.str.33 from menus.o
  
  Processing section: .rodata..L.str.34 from menus.o
  
  Processing section: .rodata..L.str.35 from menus.o
  
  Selecting menus.o to define putsTimeNoAtt(unsigned char, unsigned char, short)
      Definition:     putsTimeNoAtt(unsigned char, unsigned char, short)
      Pushing section .text.putsTimeNoAtt(unsigned char, unsigned char, short) to worklist [originates from symbol putsTimeNoAtt(unsigned char, unsigned char, short)]
  
  Processing section: .text.putsTimeNoAtt(unsigned char, unsigned char, short) from menus.o
      Load REL relocations for .text.putsTimeNoAtt(unsigned char, unsigned char, short) (menus.o)
  
  Selecting menus.o to define doMainScreenGrphics()
      Definition:     doMainScreenGrphics()
      Pushing section .text.doMainScreenGrphics() to worklist [originates from symbol doMainScreenGrphics()]
  
  Processing section: .text.doMainScreenGrphics() from menus.o
      Load REL relocations for .text.doMainScreenGrphics() (menus.o)
      Reference:      telltale(unsigned char, signed char, signed char)
  
  Selecting menus.o to define displayOneSwitch3Pos(unsigned char, unsigned char, unsigned char)
      Definition:     displayOneSwitch3Pos(unsigned char, unsigned char, unsigned char)
      Pushing section .text.displayOneSwitch3Pos(unsigned char, unsigned char, unsigned char) to worklist [originates from symbol displayOneSwitch3Pos(unsigned char, unsigned char, unsigned char)]
  
  Processing section: .text.displayOneSwitch3Pos(unsigned char, unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.displayOneSwitch3Pos(unsigned char, unsigned char, unsigned char) (menus.o)
  
  Selecting lcd.o to define lcd_img(unsigned char, unsigned char, unsigned char const*, unsigned char)
      Definition:     lcd_img(unsigned char, unsigned char, unsigned char const*, unsigned char)
      Pushing section .text.lcd_img(unsigned char, unsigned char, unsigned char const*, unsigned char) to worklist [originates from symbol lcd_img(unsigned char, unsigned char, unsigned char const*, unsigned char)]
  
  Processing section: .text.lcd_img(unsigned char, unsigned char, unsigned char const*, unsigned char) from lcd.o
      Load REL relocations for .text.lcd_img(unsigned char, unsigned char, unsigned char const*, unsigned char) (lcd.o)
  
  Selecting menus.o to define putc_0_1(unsigned char, unsigned char, unsigned char)
      Definition:     putc_0_1(unsigned char, unsigned char, unsigned char)
      Pushing section .text.putc_0_1(unsigned char, unsigned char, unsigned char) to worklist [originates from symbol putc_0_1(unsigned char, unsigned char, unsigned char)]
  
  Processing section: .text.putc_0_1(unsigned char, unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.putc_0_1(unsigned char, unsigned char, unsigned char) (menus.o)
  
  Selecting lcd.o to define putsVBat(unsigned char, unsigned char, unsigned char)
      Definition:     putsVBat(unsigned char, unsigned char, unsigned char)
      Pushing section .text.putsVBat(unsigned char, unsigned char, unsigned char) to worklist [originates from symbol putsVBat(unsigned char, unsigned char, unsigned char)]
  
  Processing section: .text.putsVBat(unsigned char, unsigned char, unsigned char) from lcd.o
      Load REL relocations for .text.putsVBat(unsigned char, unsigned char, unsigned char) (lcd.o)
  
  Selecting menus.o to define telltale(unsigned char, signed char, signed char)
      Definition:     telltale(unsigned char, signed char, signed char)
      Pushing section .text.telltale(unsigned char, signed char, signed char) to worklist [originates from symbol telltale(unsigned char, signed char, signed char)]
  
  Processing section: .text.telltale(unsigned char, signed char, signed char) from menus.o
      Load REL relocations for .text.telltale(unsigned char, signed char, signed char) (menus.o)
  
  Selecting pers.o to define modelSave(unsigned char)
      Definition:     modelSave(unsigned char)
      Pushing section .text.modelSave(unsigned char) to worklist [originates from symbol modelSave(unsigned char)]
  
  Processing section: .text.modelSave(unsigned char) from pers.o
      Load REL relocations for .text.modelSave(unsigned char) (pers.o)
  
  Selecting menus.o to define put_curve(unsigned char, unsigned char, signed char, unsigned char)
      Definition:     put_curve(unsigned char, unsigned char, signed char, unsigned char)
      Pushing section .text.put_curve(unsigned char, unsigned char, signed char, unsigned char) to worklist [originates from symbol put_curve(unsigned char, unsigned char, signed char, unsigned char)]
  
  Processing section: .text.put_curve(unsigned char, unsigned char, signed char, unsigned char) from menus.o
      Load REL relocations for .text.put_curve(unsigned char, unsigned char, signed char, unsigned char) (menus.o)
  
  Selecting lcd.o to define putsVolts(unsigned char, unsigned char, short, unsigned char)
      Definition:     putsVolts(unsigned char, unsigned char, short, unsigned char)
      Pushing section .text.putsVolts(unsigned char, unsigned char, short, unsigned char) to worklist [originates from symbol putsVolts(unsigned char, unsigned char, short, unsigned char)]
  
  Processing section: .text.putsVolts(unsigned char, unsigned char, short, unsigned char) from lcd.o
      Load REL relocations for .text.putsVolts(unsigned char, unsigned char, short, unsigned char) (lcd.o)
  
  Selecting audio.o to define setVolume(unsigned char)
      Definition:     setVolume(unsigned char)
      Pushing section .text.setVolume(unsigned char) to worklist [originates from symbol setVolume(unsigned char)]
  
  Processing section: .text.setVolume(unsigned char) from audio.o
      Load REL relocations for .text.setVolume(unsigned char) (audio.o)
      Reference:      Uart_SendCMD(unsigned char, unsigned char, unsigned short)
  
  Selecting audio.o to define Uart_SendCMD(unsigned char, unsigned char, unsigned short)
      Definition:     Uart_SendCMD(unsigned char, unsigned char, unsigned short)
      Pushing section .text.Uart_SendCMD(unsigned char, unsigned char, unsigned short) to worklist [originates from symbol Uart_SendCMD(unsigned char, unsigned char, unsigned short)]
  
  Processing section: .text.Uart_SendCMD(unsigned char, unsigned char, unsigned short) from audio.o
      Load REL relocations for .text.Uart_SendCMD(unsigned char, unsigned char, unsigned short) (audio.o)
      Reference:      DoSum(unsigned char*, unsigned char)
      Reference:      sendSerialVoiceData(unsigned char*, unsigned int)
      Reference:      play_cmd_buf
  
  Selecting BoardI6.o to define sendSerialVoiceData(unsigned char*, unsigned int)
      Definition:     sendSerialVoiceData(unsigned char*, unsigned int)
      Pushing section .text.sendSerialVoiceData(unsigned char*, unsigned int) to worklist [originates from symbol sendSerialVoiceData(unsigned char*, unsigned int)]
  
  Processing section: .text.sendSerialVoiceData(unsigned char*, unsigned int) from BoardI6.o
      Load REL relocations for .text.sendSerialVoiceData(unsigned char*, unsigned int) (BoardI6.o)
  
  Selecting audio.o to define DoSum(unsigned char*, unsigned char)
      Definition:     DoSum(unsigned char*, unsigned char)
      Pushing section .text.DoSum(unsigned char*, unsigned char) to worklist [originates from symbol DoSum(unsigned char*, unsigned char)]
  
  Processing section: .text.DoSum(unsigned char*, unsigned char) from audio.o
  
  Selecting audio.o to define audioQueue::event(unsigned char, unsigned char)
      Definition:     audioQueue::event(unsigned char, unsigned char)
      Pushing section .text.audioQueue::event(unsigned char, unsigned char) to worklist [originates from symbol audioQueue::event(unsigned char, unsigned char)]
  
  Processing section: .text.audioQueue::event(unsigned char, unsigned char) from audio.o
      Load REL relocations for .text.audioQueue::event(unsigned char, unsigned char) (audio.o)
      Reference:      audioQueue::play(unsigned char, unsigned char, unsigned char, unsigned char)
  
  Selecting audio.o to define audioQueue::play(unsigned char, unsigned char, unsigned char, unsigned char)
      Definition:     audioQueue::play(unsigned char, unsigned char, unsigned char, unsigned char)
      Pushing section .text.audioQueue::play(unsigned char, unsigned char, unsigned char, unsigned char) to worklist [originates from symbol audioQueue::play(unsigned char, unsigned char, unsigned char, unsigned char)]
  
  Processing section: .text.audioQueue::play(unsigned char, unsigned char, unsigned char, unsigned char) from audio.o
      Load REL relocations for .text.audioQueue::play(unsigned char, unsigned char, unsigned char, unsigned char) (audio.o)
      Weak reference: audioQueue::getToneLength(unsigned char)
  
  Selecting audio.o to define audioQueue::getToneLength(unsigned char)
      Definition:     audioQueue::getToneLength(unsigned char)
      Pushing section .text.audioQueue::getToneLength(unsigned char) to worklist [originates from symbol audioQueue::getToneLength(unsigned char)]
  
  Processing section: .text.audioQueue::getToneLength(unsigned char) from audio.o
      Load REL relocations for .text.audioQueue::getToneLength(unsigned char) (audio.o)
  
  Selecting file.o to define EFile::closeTrunc()
      Definition:     EFile::closeTrunc()
      Pushing section .text.EFile::closeTrunc() to worklist [originates from symbol EFile::closeTrunc()]
  
  Processing section: .text.EFile::closeTrunc() from file.o
      Load REL relocations for .text.EFile::closeTrunc() (file.o)
      Local section:  .text.EeFsFree(unsigned char) from file.o using relocation R_ARM_THM_CALL
  
  Processing section: .text.EeFsFree(unsigned char) from file.o
      Load REL relocations for .text.EeFsFree(unsigned char) (file.o)
  
  Selecting file.o to define EFile::rm(unsigned char)
      Definition:     EFile::rm(unsigned char)
      Pushing section .text.EFile::rm(unsigned char) to worklist [originates from symbol EFile::rm(unsigned char)]
  
  Processing section: .text.EFile::rm(unsigned char) from file.o
      Load REL relocations for .text.EFile::rm(unsigned char) (file.o)
  
  Selecting file.o to define EFile::read(unsigned char*, unsigned short)
      Definition:     EFile::read(unsigned char*, unsigned short)
      Pushing section .text.EFile::read(unsigned char*, unsigned short) to worklist [originates from symbol EFile::read(unsigned char*, unsigned short)]
  
  Processing section: .text.EFile::read(unsigned char*, unsigned short) from file.o
      Load REL relocations for .text.EFile::read(unsigned char*, unsigned short) (file.o)
  
  Selecting file.o to define EFile::size()
      Definition:     EFile::size()
      Pushing section .text.EFile::size() to worklist [originates from symbol EFile::size()]
  
  Processing section: .text.EFile::size() from file.o
      Load REL relocations for .text.EFile::size() (file.o)
  
  Selecting file.o to define EFile::swap(unsigned char, unsigned char)
      Definition:     EFile::swap(unsigned char, unsigned char)
      Pushing section .text.EFile::swap(unsigned char, unsigned char) to worklist [originates from symbol EFile::swap(unsigned char, unsigned char)]
  
  Processing section: .text.EFile::swap(unsigned char, unsigned char) from file.o
      Load REL relocations for .text.EFile::swap(unsigned char, unsigned char) (file.o)
  
  Selecting file.o to define EFile::write(unsigned char*, unsigned char)
      Definition:     EFile::write(unsigned char*, unsigned char)
      Pushing section .text.EFile::write(unsigned char*, unsigned char) to worklist [originates from symbol EFile::write(unsigned char*, unsigned char)]
  
  Processing section: .text.EFile::write(unsigned char*, unsigned char) from file.o
      Load REL relocations for .text.EFile::write(unsigned char*, unsigned char) (file.o)
      Local section:  .text.EeFsAlloc() from file.o using relocation R_ARM_THM_CALL
  
  Processing section: .text.EeFsAlloc() from file.o
      Load REL relocations for .text.EeFsAlloc() (file.o)
  
  Selecting file.o to define EFile::create(unsigned char, unsigned char, unsigned short)
      Definition:     EFile::create(unsigned char, unsigned char, unsigned short)
      Pushing section .text.EFile::create(unsigned char, unsigned char, unsigned short) to worklist [originates from symbol EFile::create(unsigned char, unsigned char, unsigned short)]
  
  Processing section: .text.EFile::create(unsigned char, unsigned char, unsigned short) from file.o
      Load REL relocations for .text.EFile::create(unsigned char, unsigned char, unsigned short) (file.o)
  
  Selecting file.o to define EFile::exists(unsigned char)
      Definition:     EFile::exists(unsigned char)
      Pushing section .text.EFile::exists(unsigned char) to worklist [originates from symbol EFile::exists(unsigned char)]
  
  Processing section: .text.EFile::exists(unsigned char) from file.o
      Load REL relocations for .text.EFile::exists(unsigned char) (file.o)
  
  Selecting file.o to define EFile::openRd(unsigned char)
      Definition:     EFile::openRd(unsigned char)
      Pushing section .text.EFile::openRd(unsigned char) to worklist [originates from symbol EFile::openRd(unsigned char)]
  
  Processing section: .text.EFile::openRd(unsigned char) from file.o
      Load REL relocations for .text.EFile::openRd(unsigned char) (file.o)
  
  Selecting file.o to define EFile::readRlc(unsigned char*, unsigned short)
      Definition:     EFile::readRlc(unsigned char*, unsigned short)
      Pushing section .text.EFile::readRlc(unsigned char*, unsigned short) to worklist [originates from symbol EFile::readRlc(unsigned char*, unsigned short)]
  
  Processing section: .text.EFile::readRlc(unsigned char*, unsigned short) from file.o
      Load REL relocations for .text.EFile::readRlc(unsigned char*, unsigned short) (file.o)
  
  Selecting file.o to define EFile::writeRlc(unsigned char, unsigned char, unsigned char*, unsigned short, unsigned char)
      Definition:     EFile::writeRlc(unsigned char, unsigned char, unsigned char*, unsigned short, unsigned char)
      Pushing section .text.EFile::writeRlc(unsigned char, unsigned char, unsigned char*, unsigned short, unsigned char) to worklist [originates from symbol EFile::writeRlc(unsigned char, unsigned char, unsigned char*, unsigned short, unsigned char)]
  
  Processing section: .text.EFile::writeRlc(unsigned char, unsigned char, unsigned char*, unsigned short, unsigned char) from file.o
      Load REL relocations for .text.EFile::writeRlc(unsigned char, unsigned char, unsigned char*, unsigned short, unsigned char) (file.o)
  
  Selecting menus.o to define MState2::check_columns(unsigned char, unsigned char)
      Definition:     MState2::check_columns(unsigned char, unsigned char)
      Pushing section .text.MState2::check_columns(unsigned char, unsigned char) to worklist [originates from symbol MState2::check_columns(unsigned char, unsigned char)]
  
  Processing section: .text.MState2::check_columns(unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.MState2::check_columns(unsigned char, unsigned char) (menus.o)
      Reference:      backlightKey()
      Reference:      scrollLR
      Reference:      scrollUD
      Local section:  .bss.MState2::check_columns(unsigned char, unsigned char)::lateUp from menus.o using relocation R_ARM_ABS32
      Reference:      M_longMenuTimer
  
  Processing section: .bss.MState2::check_columns(unsigned char, unsigned char)::lateUp from menus.o
  
  Selecting menus.o to define M_longMenuTimer
      Definition:     M_longMenuTimer
      Pushing section .bss.M_longMenuTimer to worklist [originates from symbol M_longMenuTimer]
  
  Processing section: .bss.M_longMenuTimer from menus.o
  
  Selecting er9x.o to define backlightKey()
      Definition:     backlightKey()
      Pushing section .text.backlightKey() to worklist [originates from symbol backlightKey()]
  
  Processing section: .text.backlightKey() from er9x.o
      Load REL relocations for .text.backlightKey() (er9x.o)
  
  Selecting audio.o to define t_voice::voice_process()
      Definition:     t_voice::voice_process()
      Pushing section .text.t_voice::voice_process() to worklist [originates from symbol t_voice::voice_process()]
  
  Processing section: .text.t_voice::voice_process() from audio.o
      Load REL relocations for .text.t_voice::voice_process() (audio.o)
  
  Selecting intasmops_arm.o (libc_v6m_t_le_eabi_small.a) to define __aeabi_idivmod
      Definition:     __aeabi_idivmod
      Pushing section .text.libc.__aeabi_idivmod to worklist [originates from symbol __aeabi_idivmod]
  
  Processing section: .text.libc.__aeabi_idivmod from intasmops_arm.o (libc_v6m_t_le_eabi_small.a)
      Load REL relocations for .text.libc.__aeabi_idivmod (intasmops_arm.o (libc_v6m_t_le_eabi_small.a))
  
  Selecting intasmops_arm.o (libc_v6m_t_le_eabi_small.a) to define __aeabi_llsr
      Definition:     __aeabi_llsr
      Pushing section .text.libc.__aeabi_llsr to worklist [originates from symbol __aeabi_llsr]
  
  Processing section: .text.libc.__aeabi_llsr from intasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  
  Selecting strasmops_arm.o (libc_v6m_t_le_eabi_small.a) to define __aeabi_memclr
      Definition:     __aeabi_memclr
  
  Selecting strasmops_arm.o (libc_v6m_t_le_eabi_small.a) to define __aeabi_memclr4
      Definition:     __aeabi_memclr4
  
  Selecting strasmops_arm.o (libc_v6m_t_le_eabi_small.a) to define __aeabi_memmove
      Definition:     __aeabi_memmove
      Pushing section .text.libc.__aeabi_memmove to worklist [originates from symbol __aeabi_memmove]
  
  Processing section: .text.libc.__aeabi_memmove from strasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  
  Selecting BoardI6.o to define backlight_off
      Definition:     backlight_off
      Pushing section .text.backlight_off to worklist [originates from symbol backlight_off]
  
  Processing section: .text.backlight_off from BoardI6.o
  
  Selecting BoardI6.o to define backlight_on
      Definition:     backlight_on
      Pushing section .text.backlight_on to worklist [originates from symbol backlight_on]
  
  Processing section: .text.backlight_on from BoardI6.o
  
  Selecting er9x.o to define bchout_ar
      Definition:     bchout_ar
      Pushing section .rodata.bchout_ar to worklist [originates from symbol bchout_ar]
  
  Processing section: .rodata.bchout_ar from er9x.o
  
  Selecting menus.o to define bpanaCenter
      Definition:     bpanaCenter
      Pushing section .bss.bpanaCenter to worklist [originates from symbol bpanaCenter]
  
  Processing section: .bss.bpanaCenter from menus.o
  
  Selecting menus.o to define calibratedStick
      Definition:     calibratedStick
      Pushing section .bss.calibratedStick to worklist [originates from symbol calibratedStick]
  
  Processing section: .bss.calibratedStick from menus.o
  
  Selecting BoardI6.o to define cs_0
      Definition:     cs_0
      Pushing section .text.cs_0 to worklist [originates from symbol cs_0]
  
  Processing section: .text.cs_0 from BoardI6.o
  
  Selecting intops.o (libc_v6m_t_le_eabi_small.a) to define div
      Definition:     div
      Pushing section .text.libc.div to worklist [originates from symbol div]
  
  Processing section: .text.libc.div from intops.o (libc_v6m_t_le_eabi_small.a)
      Load REL relocations for .text.libc.div (intops.o (libc_v6m_t_le_eabi_small.a))
  
  Selecting file.o to define eeFs
      Definition:     eeFs
      Pushing section .bss.eeFs to worklist [originates from symbol eeFs]
  
  Processing section: .bss.eeFs from file.o
  
  Selecting er9x.o to define g_LightOffCounter
      Definition:     g_LightOffCounter
      Pushing section .bss.g_LightOffCounter to worklist [originates from symbol g_LightOffCounter]
  
  Processing section: .bss.g_LightOffCounter from er9x.o
  
  Selecting menus.o to define g_latency
      Definition:     g_latency
      Pushing section .bss.g_latency to worklist [originates from symbol g_latency]
  
  Processing section: .bss.g_latency from menus.o
  
  Selecting er9x.o to define g_menuStack
      Definition:     g_menuStack
      Pushing section .bss.g_menuStack to worklist [originates from symbol g_menuStack]
  
  Processing section: .bss.g_menuStack from er9x.o
  
  Selecting er9x.o to define g_menuStackPtr
      Definition:     g_menuStackPtr
      Pushing section .bss.g_menuStackPtr to worklist [originates from symbol g_menuStackPtr]
  
  Processing section: .bss.g_menuStackPtr from er9x.o
  
  Selecting menus.o to define g_posHorz
      Definition:     g_posHorz
      Pushing section .bss.g_posHorz to worklist [originates from symbol g_posHorz]
  
  Processing section: .bss.g_posHorz from menus.o
  
  Selecting er9x.o to define g_ppmIns
      Definition:     g_ppmIns
      Pushing section .bss.g_ppmIns to worklist [originates from symbol g_ppmIns]
  
  Processing section: .bss.g_ppmIns from er9x.o
  
  Selecting er9x.o to define g_vbat100mV
      Definition:     g_vbat100mV
      Pushing section .bss.g_vbat100mV to worklist [originates from symbol g_vbat100mV]
  
  Processing section: .bss.g_vbat100mV from er9x.o
  
  Selecting BoardI6.o to define getADC_osmp
      Definition:     getADC_osmp
      Pushing section .text.getADC_osmp to worklist [originates from symbol getADC_osmp]
  
  Processing section: .text.getADC_osmp from BoardI6.o
      Load REL relocations for .text.getADC_osmp (BoardI6.o)
      Local section:  .rodata.ChannelToPin from BoardI6.o using relocation R_ARM_ABS32
  
  Processing section: .rodata.ChannelToPin from BoardI6.o
  
  Selecting drivers.o to define i2c_buffer
      Definition:     i2c_buffer
      Pushing section .bss.i2c_buffer to worklist [originates from symbol i2c_buffer]
  
  Processing section: .bss.i2c_buffer from drivers.o
  
  Selecting BoardI6.o to define i2c_master
      Definition:     i2c_master
      Pushing section .text.i2c_master to worklist [originates from symbol i2c_master]
  
  Processing section: .text.i2c_master from BoardI6.o
      Load REL relocations for .text.i2c_master (BoardI6.o)
  
  Selecting strops.o (libc_v6m_t_le_eabi_small.a) to define memcmp
      Definition:     memcmp
      Pushing section .text.libc.memcmp to worklist [originates from symbol memcmp]
  
  Processing section: .text.libc.memcmp from strops.o (libc_v6m_t_le_eabi_small.a)
  
  Selecting menus.o to define mixToDelete
      Definition:     mixToDelete
      Pushing section .bss.mixToDelete to worklist [originates from symbol mixToDelete]
  
  Processing section: .bss.mixToDelete from menus.o
  
  Selecting er9x.o to define modi12x3
      Definition:     modi12x3
      Pushing section .rodata.modi12x3 to worklist [originates from symbol modi12x3]
  
  Processing section: .rodata.modi12x3 from er9x.o
  
  Selecting elrsV2.o to define namesBufferOffset
      Definition:     namesBufferOffset
      Pushing section .bss.namesBufferOffset to worklist [originates from symbol namesBufferOffset]
  
  Processing section: .bss.namesBufferOffset from elrsV2.o
  
  Selecting elrsV2.o to define otherDevicesId
      Definition:     otherDevicesId
      Pushing section .data.otherDevicesId to worklist [originates from symbol otherDevicesId]
  
  Processing section: .data.otherDevicesId from elrsV2.o
  
  Selecting crossfire.o to define outputTelemetryBuffer
      Definition:     outputTelemetryBuffer
      Pushing section .bss.outputTelemetryBuffer to worklist [originates from symbol outputTelemetryBuffer]
  
  Processing section: .bss.outputTelemetryBuffer from crossfire.o
  
  Selecting crossfire.o to define outputTelemetryBufferSize
      Definition:     outputTelemetryBufferSize
      Pushing section .bss.outputTelemetryBufferSize to worklist [originates from symbol outputTelemetryBufferSize]
  
  Processing section: .bss.outputTelemetryBufferSize from crossfire.o
  
  Selecting crossfire.o to define outputTelemetryBufferTrigger
      Definition:     outputTelemetryBufferTrigger
      Pushing section .bss.outputTelemetryBufferTrigger to worklist [originates from symbol outputTelemetryBufferTrigger]
  
  Processing section: .bss.outputTelemetryBufferTrigger from crossfire.o
  
  Selecting A7105_SPI.o to define packet
      Definition:     packet
      Pushing section .bss.packet to worklist [originates from symbol packet]
  
  Processing section: .bss.packet from A7105_SPI.o
  
  Selecting A7105_SPI.o to define packet_count
      Definition:     packet_count
      Pushing section .bss.packet_count to worklist [originates from symbol packet_count]
  
  Processing section: .bss.packet_count from A7105_SPI.o
  
  Selecting elrsV2.o to define pageOffset
      Definition:     pageOffset
      Pushing section .bss.pageOffset to worklist [originates from symbol pageOffset]
  
  Processing section: .bss.pageOffset from elrsV2.o
  
  Selecting menus.o to define phyStick
      Definition:     phyStick
      Pushing section .bss.phyStick to worklist [originates from symbol phyStick]
  
  Processing section: .bss.phyStick from menus.o
  
  Selecting audio.o to define play_cmd_buf
      Definition:     play_cmd_buf
      Pushing section .data.play_cmd_buf to worklist [originates from symbol play_cmd_buf]
  
  Processing section: .data.play_cmd_buf from audio.o
  
  Selecting lcd.o to define plotType
      Definition:     plotType
      Pushing section .bss.plotType to worklist [originates from symbol plotType]
  
  Processing section: .bss.plotType from lcd.o
  
  Selecting er9x.o to define ppmInAvailable
      Definition:     ppmInAvailable
      Pushing section .bss.ppmInAvailable to worklist [originates from symbol ppmInAvailable]
  
  Processing section: .bss.ppmInAvailable from er9x.o
  
  Selecting A7105_SPI.o to define prev_power
      Definition:     prev_power
      Pushing section .data.prev_power to worklist [originates from symbol prev_power]
  
  Processing section: .data.prev_power from A7105_SPI.o
  
  Selecting A7105_SPI.o to define protocol_flags
      Definition:     protocol_flags
      Pushing section .bss.protocol_flags to worklist [originates from symbol protocol_flags]
  
  Processing section: .bss.protocol_flags from A7105_SPI.o
  
  Selecting pulses.o to define pulses2MHz
      Definition:     pulses2MHz
      Pushing section .bss.pulses2MHz to worklist [originates from symbol pulses2MHz]
  
  Processing section: .bss.pulses2MHz from pulses.o
  
  Selecting pulses.o to define pxxFlag
      Definition:     pxxFlag
      Pushing section .bss.pxxFlag to worklist [originates from symbol pxxFlag]
  
  Processing section: .bss.pxxFlag from pulses.o
  
  Selecting BoardI6.o to define rd_0
      Definition:     rd_0
      Pushing section .text.rd_0 to worklist [originates from symbol rd_0]
  
  Processing section: .text.rd_0 from BoardI6.o
  
  Selecting BoardI6.o to define rd_1
      Definition:     rd_1
      Pushing section .text.rd_1 to worklist [originates from symbol rd_1]
  
  Processing section: .text.rd_1 from BoardI6.o
  
  Selecting elrsV2.o to define reloadFolder
      Definition:     reloadFolder
      Pushing section .bss.reloadFolder to worklist [originates from symbol reloadFolder]
  
  Processing section: .bss.reloadFolder from elrsV2.o
  
  Selecting BoardI6.o to define rs_0
      Definition:     rs_0
      Pushing section .text.rs_0 to worklist [originates from symbol rs_0]
  
  Processing section: .text.rs_0 from BoardI6.o
  
  Selecting BoardI6.o to define rs_1
      Definition:     rs_1
      Pushing section .text.rs_1 to worklist [originates from symbol rs_1]
  
  Processing section: .text.rs_1 from BoardI6.o
  
  Selecting BoardI6.o to define rst_0
      Definition:     rst_0
      Pushing section .text.rst_0 to worklist [originates from symbol rst_0]
  
  Processing section: .text.rst_0 from BoardI6.o
  
  Selecting BoardI6.o to define rst_1
      Definition:     rst_1
      Pushing section .text.rst_1 to worklist [originates from symbol rst_1]
  
  Processing section: .text.rst_1 from BoardI6.o
  
  Selecting BoardI6.o to define rw_0
      Definition:     rw_0
      Pushing section .text.rw_0 to worklist [originates from symbol rw_0]
  
  Processing section: .text.rw_0 from BoardI6.o
  
  Selecting er9x.o to define s_anaFilt
      Definition:     s_anaFilt
      Pushing section .bss.s_anaFilt to worklist [originates from symbol s_anaFilt]
  
  Processing section: .bss.s_anaFilt from er9x.o
  
  Selecting menus.o to define s_editMode
      Definition:     s_editMode
      Pushing section .bss.s_editMode to worklist [originates from symbol s_editMode]
  
  Processing section: .bss.s_editMode from menus.o
  
  Selecting menus.o to define s_editing
      Definition:     s_editing
      Pushing section .bss.s_editing to worklist [originates from symbol s_editing]
  
  Processing section: .bss.s_editing from menus.o
  
  Selecting drivers.o to define s_evt
      Definition:     s_evt
      Pushing section .bss.s_evt to worklist [originates from symbol s_evt]
  
  Processing section: .bss.s_evt from drivers.o
  
  Selecting menus.o to define s_mixMaxSel
      Definition:     s_mixMaxSel
      Pushing section .bss.s_mixMaxSel to worklist [originates from symbol s_mixMaxSel]
  
  Processing section: .bss.s_mixMaxSel from menus.o
  
  Selecting menus.o to define s_moveMode
      Definition:     s_moveMode
      Pushing section .bss.s_moveMode to worklist [originates from symbol s_moveMode]
  
  Processing section: .bss.s_moveMode from menus.o
  
  Selecting menus.o to define s_noHi
      Definition:     s_noHi
      Pushing section .bss.s_noHi to worklist [originates from symbol s_noHi]
  
  Processing section: .bss.s_noHi from menus.o
  
  Selecting menus.o to define s_pgOfs
      Definition:     s_pgOfs
      Pushing section .bss.s_pgOfs to worklist [originates from symbol s_pgOfs]
  
  Processing section: .bss.s_pgOfs from menus.o
  
  Selecting menus.o to define s_timer
      Definition:     s_timer
      Pushing section .bss.s_timer to worklist [originates from symbol s_timer]
  
  Processing section: .bss.s_timer from menus.o
  
  Selecting menus.o to define scrollLR
      Definition:     scrollLR
      Pushing section .bss.scrollLR to worklist [originates from symbol scrollLR]
  
  Processing section: .bss.scrollLR from menus.o
  
  Selecting menus.o to define scrollUD
      Definition:     scrollUD
      Pushing section .bss.scrollUD to worklist [originates from symbol scrollUD]
  
  Processing section: .bss.scrollUD from menus.o
  
  Selecting menus.o to define scroll_disabled
      Definition:     scroll_disabled
      Pushing section .bss.scroll_disabled to worklist [originates from symbol scroll_disabled]
  
  Processing section: .bss.scroll_disabled from menus.o
  
  Selecting BoardI6.o to define sei
      Definition:     sei
      Pushing section .text.sei to worklist [originates from symbol sei]
  
  Processing section: .text.sei from BoardI6.o
  
  Selecting pulses.o to define serialDat0
      Definition:     serialDat0
      Pushing section .bss.serialDat0 to worklist [originates from symbol serialDat0]
  
  Processing section: .bss.serialDat0 from pulses.o
  
  Selecting BoardI6.o to define setup_crsf_serial_port
      Definition:     setup_crsf_serial_port
      Pushing section .text.setup_crsf_serial_port to worklist [originates from symbol setup_crsf_serial_port]
  
  Processing section: .text.setup_crsf_serial_port from BoardI6.o
      Load REL relocations for .text.setup_crsf_serial_port (BoardI6.o)
  
  Selecting BoardI6.o to define shutdown_crsf_serial_port
      Definition:     shutdown_crsf_serial_port
      Pushing section .text.shutdown_crsf_serial_port to worklist [originates from symbol shutdown_crsf_serial_port]
  
  Processing section: .text.shutdown_crsf_serial_port from BoardI6.o
      Load REL relocations for .text.shutdown_crsf_serial_port (BoardI6.o)
  
  Selecting elrsV2.o to define statusComplete
      Definition:     statusComplete
      Pushing section .bss.statusComplete to worklist [originates from symbol statusComplete]
  
  Processing section: .bss.statusComplete from elrsV2.o
  
  Selecting er9x.o to define stickMoved
      Definition:     stickMoved
      Pushing section .bss.stickMoved to worklist [originates from symbol stickMoved]
  
  Processing section: .bss.stickMoved from er9x.o
  
  Selecting er9x.o to define stickScramble
      Definition:     stickScramble
      Pushing section .rodata.stickScramble to worklist [originates from symbol stickScramble]
  
  Processing section: .rodata.stickScramble from er9x.o
  
  Selecting strasmops_arm.o (libc_v6m_t_le_eabi_small.a) to define strcpy
      Definition:     strcpy
      Pushing section .text.libc.strcpy to worklist [originates from symbol strcpy]
  
  Processing section: .text.libc.strcpy from strasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  
  Selecting strasmops_arm.o (libc_v6m_t_le_eabi_small.a) to define strlen
      Definition:     strlen
      Pushing section .text.libc.strlen to worklist [originates from symbol strlen]
  
  Processing section: .text.libc.strlen from strasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  
  Selecting strops.o (libc_v6m_t_le_eabi_small.a) to define strstr
      Definition:     strstr
      Pushing section .text.libc.strstr to worklist [originates from symbol strstr]
  
  Processing section: .text.libc.strstr from strops.o (libc_v6m_t_le_eabi_small.a)
  
  Selecting er9x.o to define sysFlags
      Definition:     sysFlags
      Pushing section .bss.sysFlags to worklist [originates from symbol sysFlags]
  
  Processing section: .bss.sysFlags from er9x.o
  
  Selecting crossfire.o to define telemetryErrors
      Definition:     telemetryErrors
      Pushing section .bss.telemetryErrors to worklist [originates from symbol telemetryErrors]
  
  Processing section: .bss.telemetryErrors from crossfire.o
  
  Selecting crossfire.o to define telemetryRxBuffer
      Definition:     telemetryRxBuffer
      Pushing section .bss.telemetryRxBuffer to worklist [originates from symbol telemetryRxBuffer]
  
  Processing section: .bss.telemetryRxBuffer from crossfire.o
  
  Selecting crossfire.o to define telemetryRxBufferCount
      Definition:     telemetryRxBufferCount
      Pushing section .bss.telemetryRxBufferCount to worklist [originates from symbol telemetryRxBufferCount]
  
  Processing section: .bss.telemetryRxBufferCount from crossfire.o
  
  Selecting pers.o to define theFile
      Definition:     theFile
      Pushing section .bss.theFile to worklist [originates from symbol theFile]
  
  Processing section: .bss.theFile from pers.o
  
  Selecting pers.o to define theWriteFile
      Definition:     theWriteFile
      Pushing section .bss.theWriteFile to worklist [originates from symbol theWriteFile]
  
  Processing section: .bss.theWriteFile from pers.o
  
  Selecting er9x.o to define tick10ms
      Definition:     tick10ms
      Pushing section .bss.tick10ms to worklist [originates from symbol tick10ms]
  
  Processing section: .bss.tick10ms from er9x.o
  
  Selecting er9x.o to define tmrEEPROM
      Definition:     tmrEEPROM
      Pushing section .bss.tmrEEPROM to worklist [originates from symbol tmrEEPROM]
  
  Processing section: .bss.tmrEEPROM from er9x.o
  
  Selecting elrsV2.o to define valuesBufferOffset
      Definition:     valuesBufferOffset
      Pushing section .bss.valuesBufferOffset to worklist [originates from symbol valuesBufferOffset]
  
  Processing section: .bss.valuesBufferOffset from elrsV2.o
  
  Selecting BoardI6.o to define voice_rx_idx
      Definition:     voice_rx_idx
      Pushing section .bss.voice_rx_idx to worklist [originates from symbol voice_rx_idx]
  
  Processing section: .bss.voice_rx_idx from BoardI6.o
  
  Selecting BoardI6.o to define voice_tx_idx
      Definition:     voice_tx_idx
      Pushing section .bss.voice_tx_idx to worklist [originates from symbol voice_tx_idx]
  
  Processing section: .bss.voice_tx_idx from BoardI6.o
  
  Selecting BoardI6.o to define voice_uart_recv_buf
      Definition:     voice_uart_recv_buf
      Pushing section .bss.voice_uart_recv_buf to worklist [originates from symbol voice_uart_recv_buf]
  
  Processing section: .bss.voice_uart_recv_buf from BoardI6.o
  
  Selecting BoardI6.o to define voice_uart_send_buf
      Definition:     voice_uart_send_buf
      Pushing section .bss.voice_uart_send_buf to worklist [originates from symbol voice_uart_send_buf]
  
  Processing section: .bss.voice_uart_send_buf from BoardI6.o
  Testing input sections to see if nonzero selected size
      All inputs (if any) have zero size
  Initialize by calling __SEGGER_init_ctors has zero selector size, not included yet


***************************************************************************************
***                                                                                 ***
***                                   Keep inputs                                   ***
***                                                                                 ***
***************************************************************************************

  Applying keep
      Keeping section .cfm
  Sections that are explicitly kept by the script:
      .cfm
  Keeping symbols set on the command line:
      Reset_Handler
      __SEGGER_init_heap
      _vectors
  Keeping init arrays sections for object files
      Pushing section .init_array to worklist as %init_array is required for this file
      Pushing section .init_array to worklist as %init_array is required for this file


***************************************************************************************
***                                                                                 ***
***                                  Define access                                  ***
***                                                                                 ***
***************************************************************************************



***************************************************************************************
***                                                                                 ***
***                                 Define symbols                                  ***
***                                                                                 ***
***************************************************************************************



***************************************************************************************
***                                                                                 ***
***                                  Find sections                                  ***
***                                                                                 ***
***************************************************************************************

  Defining any required ES block symbols
      Selecting block heap to define __heap_start__
      Selecting block stack to define __stack_end__
  Testing input sections to see if nonzero selected size
      All inputs (if any) have zero size
  Initialize by calling __SEGGER_init_ctors has zero selector size, not included yet
  
  Processing section: .cfm from MKL16Z4_Vectors.o
  
  Processing section: .init_array from SX127x.o
      Load REL relocations for .init_array (SX127x.o)
      Local section:  .text._GLOBAL__sub_I_SX127x.cpp from SX127x.o using relocation R_ARM_TARGET1
  
  Processing section: .init_array from ELRS.o
      Load REL relocations for .init_array (ELRS.o)
      Local section:  .text._GLOBAL__sub_I_ELRS.cpp from ELRS.o using relocation R_ARM_TARGET1
  
  Processing section: .text._GLOBAL__sub_I_SX127x.cpp from SX127x.o
      Load REL relocations for .text._GLOBAL__sub_I_SX127x.cpp (SX127x.o)
      Reference:      SX127xHal::SX127xHal()
      Reference:      hal
  
  Processing section: .text._GLOBAL__sub_I_ELRS.cpp from ELRS.o
      Load REL relocations for .text._GLOBAL__sub_I_ELRS.cpp (ELRS.o)
      Reference:      SX127xDriver::SX127xDriver()
      Reference:      GENERIC_CRC14::GENERIC_CRC14(unsigned short)
      Reference:      StubbornReceiver::StubbornReceiver(unsigned char)
      Reference:      StubbornSender::StubbornSender(unsigned char)
      Reference:      Radio
      Reference:      ota_crc
      Reference:      LQCalc
      Reference:      TelemetryReceiver
      Reference:      MspSender
  
  Selecting ELRS.o to define LQCalc
      Definition:     LQCalc
      Pushing section .bss.LQCalc to worklist [originates from symbol LQCalc]
  
  Processing section: .bss.LQCalc from ELRS.o
  
  Selecting ELRS.o to define MspSender
      Definition:     MspSender
      Pushing section .bss.MspSender to worklist [originates from symbol MspSender]
  
  Processing section: .bss.MspSender from ELRS.o
  
  Selecting ELRS.o to define Radio
      Definition:     Radio
      Pushing section .bss.Radio to worklist [originates from symbol Radio]
  
  Processing section: .bss.Radio from ELRS.o
  
  Selecting ELRS.o to define TelemetryReceiver
      Definition:     TelemetryReceiver
      Pushing section .bss.TelemetryReceiver to worklist [originates from symbol TelemetryReceiver]
  
  Processing section: .bss.TelemetryReceiver from ELRS.o
  
  Selecting SX127x.o to define SX127xDriver::SX127xDriver()
      Definition:     SX127xDriver::SX127xDriver()
      Pushing section .text.SX127xDriver::SX127xDriver() to worklist [originates from symbol SX127xDriver::SX127xDriver()]
  
  Processing section: .text.SX127xDriver::SX127xDriver() from SX127x.o
      Load REL relocations for .text.SX127xDriver::SX127xDriver() (SX127x.o)
      Reference:      SX127xDriver::instance
  
  Selecting SX127x.o to define SX127xDriver::instance
      Definition:     SX127xDriver::instance
      Pushing section .bss.SX127xDriver::instance to worklist [originates from symbol SX127xDriver::instance]
  
  Processing section: .bss.SX127xDriver::instance from SX127x.o
  
  Selecting crc.o to define GENERIC_CRC14::GENERIC_CRC14(unsigned short)
      Definition:     GENERIC_CRC14::GENERIC_CRC14(unsigned short)
      Pushing section .text.GENERIC_CRC14::GENERIC_CRC14(unsigned short) to worklist [originates from symbol GENERIC_CRC14::GENERIC_CRC14(unsigned short)]
  
  Processing section: .text.GENERIC_CRC14::GENERIC_CRC14(unsigned short) from crc.o
  
  Selecting stubborn_sender.o to define StubbornSender::StubbornSender(unsigned char)
      Definition:     StubbornSender::StubbornSender(unsigned char)
      Pushing section .text.StubbornSender::StubbornSender(unsigned char) to worklist [originates from symbol StubbornSender::StubbornSender(unsigned char)]
  
  Processing section: .text.StubbornSender::StubbornSender(unsigned char) from stubborn_sender.o
      Load REL relocations for .text.StubbornSender::StubbornSender(unsigned char) (stubborn_sender.o)
      Reference:      StubbornSender::ResetState()
  
  Selecting stubborn_sender.o to define StubbornSender::ResetState()
      Definition:     StubbornSender::ResetState()
      Pushing section .text.StubbornSender::ResetState() to worklist [originates from symbol StubbornSender::ResetState()]
  
  Processing section: .text.StubbornSender::ResetState() from stubborn_sender.o
  
  Selecting stubborn_receiver.o to define StubbornReceiver::StubbornReceiver(unsigned char)
      Definition:     StubbornReceiver::StubbornReceiver(unsigned char)
      Pushing section .text.StubbornReceiver::StubbornReceiver(unsigned char) to worklist [originates from symbol StubbornReceiver::StubbornReceiver(unsigned char)]
  
  Processing section: .text.StubbornReceiver::StubbornReceiver(unsigned char) from stubborn_receiver.o
  
  Selecting SX127xHal.o to define SX127xHal::SX127xHal()
      Definition:     SX127xHal::SX127xHal()
      Pushing section .text.SX127xHal::SX127xHal() to worklist [originates from symbol SX127xHal::SX127xHal()]
  
  Processing section: .text.SX127xHal::SX127xHal() from SX127xHal.o
      Load REL relocations for .text.SX127xHal::SX127xHal() (SX127xHal.o)
      Reference:      SX127xHal::instance
  
  Selecting SX127xHal.o to define SX127xHal::instance
      Definition:     SX127xHal::instance
      Pushing section .bss.SX127xHal::instance to worklist [originates from symbol SX127xHal::instance]
  
  Processing section: .bss.SX127xHal::instance from SX127xHal.o
  
  Selecting SX127x.o to define hal
      Definition:     hal
      Pushing section .bss.hal to worklist [originates from symbol hal]
  
  Processing section: .bss.hal from SX127x.o
  
  Selecting ELRS.o to define ota_crc
      Definition:     ota_crc
      Pushing section .bss.ota_crc to worklist [originates from symbol ota_crc]
  
  Processing section: .bss.ota_crc from ELRS.o
  Testing input sections to see if nonzero selected size
      All inputs (if any) have zero size
  Initialize by calling __SEGGER_init_ctors has zero selector size, not included yet


***************************************************************************************
***                                                                                 ***
***                                 Rewrite headers                                 ***
***                                                                                 ***
***************************************************************************************



***************************************************************************************
***                                                                                 ***
***                                  Define access                                  ***
***                                                                                 ***
***************************************************************************************



***************************************************************************************
***                                                                                 ***
***                                Check allocatable                                ***
***                                                                                 ***
***************************************************************************************



***************************************************************************************
***                                                                                 ***
***                                 Merge sections                                  ***
***                                                                                 ***
***************************************************************************************

  Shared references:
      U32 sizes: 0 unshared bytes, 0 shared bytes, saves 0 bytes
      U64 sizes: 0 unshared bytes, 0 shared bytes, saves 0 bytes


***************************************************************************************
***                                                                                 ***
***                                  Merge strings                                  ***
***                                                                                 ***
***************************************************************************************



***************************************************************************************
***                                                                                 ***
***                               Analyze attributes                                ***
***                                                                                 ***
***************************************************************************************



***************************************************************************************
***                                                                                 ***
***                                Function inlining                                ***
***                                                                                 ***
***************************************************************************************

  Pass #1
      11 changes made
  Pass #2
      0 changes made
  Redundant sections:
      section .text.sei from BoardI6.o, size=4
      section .text.cli from BoardI6.o, size=4
      section .text.audioQueue::audioQueue() from audio.o, size=2
      section .text.telemItemValid(unsigned char) from menus.o, size=4
      section .text.libc.__aeabi_idiv0 from intasmops_arm.o (libc_v6m_t_le_eabi_small.a), size=6
  Statistics:
      Estimated savings of 20 bytes by inlining


***************************************************************************************
***                                                                                 ***
***                                Function inlining                                ***
***                                                                                 ***
***************************************************************************************

  Pass #1
      0 changes made
  Redundant sections:
  Statistics:
      Estimated savings of 0 bytes by inlining


***************************************************************************************
***                                                                                 ***
***                                Auto-at sections                                 ***
***                                                                                 ***
***************************************************************************************



***************************************************************************************
***                                                                                 ***
***                                  Select inputs                                  ***
***                                                                                 ***
***************************************************************************************

  Select inputs for block vectors
      Select section .vectors (_vectors) [size 192] from MKL16Z4_Vectors.o using name
  Select inputs for block vectors_ram
  Select inputs for inline block <#1> at line 61, col 85
      Select section .init_array ([.init_array]) [size 4] from er9x.o using attribute or mask
      Select section .init_array ([.init_array]) [size 4] from SX127x.o using attribute or mask
      Select section .init_array ([.init_array]) [size 4] from ELRS.o using attribute or mask
  Select inputs for block ctors
      Select inline block <#1> at line 61, col 85 ([<#1> at line 61, col 85]) [size 0] from [ Linker created ] using name
  Select inputs for inline block <#2> at line 62, col 85
  Select inputs for block dtors
      Select inline block <#2> at line 62, col 85 ([<#2> at line 62, col 85]) [size 0] from [ Linker created ] using name
  Select inputs for block exidx
  Select inputs for block tbss
  Select inputs for block tdata
  Select inputs for block tls
      Select block tbss ([tbss]) [size 0] from [ Linker created ] using name
      Select block tdata ([tdata]) [size 0] from [ Linker created ] using name
  Select inputs for block tdata_load
      Select copy of block tdata ([tdata]) [size 0] from [ Linker created ] using name
  Select inputs for block heap
  Select inputs for block stack
  Select inputs for block cfm
      Select section .cfm (BackDoorKey) [size 16] from MKL16Z4_Vectors.o using name
  Select inputs for 'place at start' block <#5> at line 97, col 45
      Select block vectors ([vectors]) [size 0] from [ Linker created ] using name
  Select inputs for 'place at start' block <#6> at line 98, col 45
      Select block cfm ([cfm]) [size 0] from [ Linker created ] using name
  Select inputs for 'place at start' block <#10> at line 119, col 45
      Select block vectors_ram ([vectors_ram]) [size 0] from [ Linker created ] using name
  Select inputs for 'place at end' block <#14> at line 129, col 45
      Select block stack ([stack]) [size 256] from [ Linker created ] using name
  Select inputs for 'place in' block <#3> at line 90, col 44
  Select inputs for 'place in' block <#4> at line 91, col 44
  Select inputs for 'place in' block <#7> at line 99, col 45
      Select block exidx ([exidx]) [size 0] from [ Linker created ] using name
      Select block ctors ([ctors]) [size 0] from [ Linker created ] using name
      Select block dtors ([dtors]) [size 0] from [ Linker created ] using name
      Select section .init.SystemInit (SystemInit) [size 148] from system_MKL16Z4.o using wildcard
      Select section .init._start (_start) [size 20] from SEGGER_THUMB_Startup.o using wildcard
      Select section .text.lcdSetRefVolt(unsigned char) (lcdSetRefVolt(unsigned char)) [size 32] from lcd.o using wildcard
      Select section .text.lcdSendCtl(unsigned char) (lcdSendCtl(unsigned char)) [size 32] from lcd.o using wildcard
      Select section .text.lcdSetContrast() (lcdSetContrast()) [size 16] from lcd.o using wildcard
      Select section .text.lcd_clear() (lcd_clear()) [size 20] from lcd.o using wildcard
      Select section .text.lcd_init() (lcd_init()) [size 88] from lcd.o using wildcard
      Select section .text.lcd_putcAtt(unsigned char, unsigned char, char, unsigned char) (lcd_putcAtt(unsigned char, unsigned char, char, unsigned char)) [size 300] from lcd.o using wildcard
      Select section .text.lcd_putsAtt(unsigned char, unsigned char, char const*, unsigned char) (lcd_putsAtt(unsigned char, unsigned char, char const*, unsigned char)) [size 50] from lcd.o using wildcard
      Select section .text.lcd_putsnAtt(unsigned char, unsigned char, char const*, unsigned char, unsigned char) (lcd_putsnAtt(unsigned char, unsigned char, char const*, unsigned char, unsigned char)) [size 42] from lcd.o using wildcard
      Select section .text.lcd_putsAttIdx(unsigned char, unsigned char, char const*, unsigned char, unsigned char) (lcd_putsAttIdx(unsigned char, unsigned char, char const*, unsigned char, unsigned char)) [size 26] from lcd.o using wildcard
      Select section .text.lcd_putc(unsigned char, unsigned char, char) (lcd_putc(unsigned char, unsigned char, char)) [size 10] from lcd.o using wildcard
      Select section .text.lcd_puts_Pleft(unsigned char, char const*) (lcd_puts_Pleft(unsigned char, char const*)) [size 16] from lcd.o using wildcard
      Select section .text.lcd_puts_Pskip(unsigned char, char const*, unsigned char) (lcd_puts_Pskip(unsigned char, char const*, unsigned char)) [size 38] from lcd.o using wildcard
      Select section .text.lcd_puts_P(unsigned char, unsigned char, char const*) (lcd_puts_P(unsigned char, unsigned char, char const*)) [size 10] from lcd.o using wildcard
      Select section .text.lcd_putsn_P(unsigned char, unsigned char, char const*, unsigned char) (lcd_putsn_P(unsigned char, unsigned char, char const*, unsigned char)) [size 16] from lcd.o using wildcard
      Select section .text.lcd_outhex4(unsigned char, unsigned char, unsigned short) (lcd_outhex4(unsigned char, unsigned char, unsigned short)) [size 66] from lcd.o using wildcard
      Select section .text.lcd_write_bits(unsigned char*, unsigned char) (lcd_write_bits(unsigned char*, unsigned char)) [size 52] from lcd.o using wildcard
      Select section .text.lcd_plot(unsigned char, unsigned char) (lcd_plot(unsigned char, unsigned char)) [size 40] from lcd.o using wildcard
      Select section .text.lcd_vline(unsigned char, unsigned char, signed char) (lcd_vline(unsigned char, unsigned char, signed char)) [size 120] from lcd.o using wildcard
      Select section .text.lcd_hlineStip(unsigned char, unsigned char, signed char, unsigned char) (lcd_hlineStip(unsigned char, unsigned char, signed char, unsigned char)) [size 100] from lcd.o using wildcard
      Select section .text.lcd_hline(unsigned char, unsigned char, signed char) (lcd_hline(unsigned char, unsigned char, signed char)) [size 10] from lcd.o using wildcard
      Select section .text.lcd_2_digits(unsigned char, unsigned char, unsigned char, unsigned char) (lcd_2_digits(unsigned char, unsigned char, unsigned char, unsigned char)) [size 34] from lcd.o using wildcard
      Select section .text.lcd_outdezNAtt(unsigned char, unsigned char, int, unsigned char, signed char, unsigned char) (lcd_outdezNAtt(unsigned char, unsigned char, int, unsigned char, signed char, unsigned char)) [size 488] from lcd.o using wildcard
      Select section .text.lcd_outdezAtt(unsigned char, unsigned char, short, unsigned char) (lcd_outdezAtt(unsigned char, unsigned char, short, unsigned char)) [size 34] from lcd.o using wildcard
      Select section .text.lcd_outdez(unsigned char, unsigned char, short) (lcd_outdez(unsigned char, unsigned char, short)) [size 10] from lcd.o using wildcard
      Select section .text.lcd_char_inverse(unsigned char, unsigned char, unsigned char, unsigned char) (lcd_char_inverse(unsigned char, unsigned char, unsigned char, unsigned char)) [size 56] from lcd.o using wildcard
      Select section .text.lcd_rect_xor(unsigned char, unsigned char, unsigned char, unsigned char) (lcd_rect_xor(unsigned char, unsigned char, unsigned char, unsigned char)) [size 70] from lcd.o using wildcard
      Select section .text.lcd_rect(unsigned char, unsigned char, unsigned char, unsigned char) (lcd_rect(unsigned char, unsigned char, unsigned char, unsigned char)) [size 24] from lcd.o using wildcard
      Select section .text.lcd_hbar(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) (lcd_hbar(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)) [size 74] from lcd.o using wildcard
      Select section .text.refreshDiplay() (refreshDiplay()) [size 140] from lcd.o using wildcard
      Select section .text.lcd_img(unsigned char, unsigned char, unsigned char const*, unsigned char) (lcd_img(unsigned char, unsigned char, unsigned char const*, unsigned char)) [size 76] from lcd.o using wildcard
      Select section .text.putsTime(unsigned char, unsigned char, short, unsigned char, unsigned char) (putsTime(unsigned char, unsigned char, short, unsigned char, unsigned char)) [size 132] from lcd.o using wildcard
      Select section .text.putsVolts(unsigned char, unsigned char, short, unsigned char) (putsVolts(unsigned char, unsigned char, short, unsigned char)) [size 40] from lcd.o using wildcard
      Select section .text.putsVBat(unsigned char, unsigned char, unsigned char) (putsVBat(unsigned char, unsigned char, unsigned char)) [size 40] from lcd.o using wildcard
      Select section .text.HW_Init (HW_Init) [size 944] from BoardI6.o using wildcard
      Select section .text.mDelay (mDelay) [size 40] from BoardI6.o using wildcard
      Select section .text.getADC_osmp (getADC_osmp) [size 88] from BoardI6.o using wildcard
      Select section .text.backlight_on (backlight_on) [size 12] from BoardI6.o using wildcard
      Select section .text.backlight_off (backlight_off) [size 12] from BoardI6.o using wildcard
      Select section .text.rd_1 (rd_1) [size 16] from BoardI6.o using wildcard
      Select section .text.rd_0 (rd_0) [size 16] from BoardI6.o using wildcard
      Select section .text.cs_0 (cs_0) [size 12] from BoardI6.o using wildcard
      Select section .text.rw_0 (rw_0) [size 16] from BoardI6.o using wildcard
      Select section .text.rs_1 (rs_1) [size 16] from BoardI6.o using wildcard
      Select section .text.rs_0 (rs_0) [size 16] from BoardI6.o using wildcard
      Select section .text.rst_1 (rst_1) [size 12] from BoardI6.o using wildcard
      Select section .text.rst_0 (rst_0) [size 12] from BoardI6.o using wildcard
      Select section .text.PINB (PINB) [size 96] from BoardI6.o using wildcard
      Select section .text.PIND (PIND) [size 100] from BoardI6.o using wildcard
      Select section .text.PINE (PINE) [size 84] from BoardI6.o using wildcard
      Select section .text.PING (PING) [size 44] from BoardI6.o using wildcard
      Select section .text.LCD_DATA (LCD_DATA) [size 36] from BoardI6.o using wildcard
      Select section .text.Buzzer_SetVal (Buzzer_SetVal) [size 16] from BoardI6.o using wildcard
      Select section .text.Buzzer_ClrVal (Buzzer_ClrVal) [size 16] from BoardI6.o using wildcard
      Select section .text.SPI_RADIO_SendBlock (SPI_RADIO_SendBlock) [size 52] from BoardI6.o using wildcard
      Select section .text.SPI_RADIO_ReceiveBlock (SPI_RADIO_ReceiveBlock) [size 76] from BoardI6.o using wildcard
      Select section .text.a7105_csn_on (a7105_csn_on) [size 12] from BoardI6.o using wildcard
      Select section .text.a7105_csn_off (a7105_csn_off) [size 12] from BoardI6.o using wildcard
      Select section .text.RF0_SetVal (RF0_SetVal) [size 12] from BoardI6.o using wildcard
      Select section .text.RF0_ClrVal (RF0_ClrVal) [size 12] from BoardI6.o using wildcard
      Select section .text.RF1_SetVal (RF1_SetVal) [size 12] from BoardI6.o using wildcard
      Select section .text.RF1_ClrVal (RF1_ClrVal) [size 12] from BoardI6.o using wildcard
      Select section .text.TX_RX_PutVal (TX_RX_PutVal) [size 16] from BoardI6.o using wildcard
      Select section .text.EnableGIO (EnableGIO) [size 28] from BoardI6.o using wildcard
      Select section .text.DisableGIO (DisableGIO) [size 20] from BoardI6.o using wildcard
      Select section .text.i2c_master (i2c_master) [size 352] from BoardI6.o using wildcard
      Select section .text.GetPPMOutState (GetPPMOutState) [size 16] from BoardI6.o using wildcard
      Select section .text.SetPPMTimCompare (SetPPMTimCompare) [size 12] from BoardI6.o using wildcard
      Select section .text.GetPPMTimCompare (GetPPMTimCompare) [size 12] from BoardI6.o using wildcard
      Select section .text.GetPPMTimCompareInterruptFlag (GetPPMTimCompareInterruptFlag) [size 16] from BoardI6.o using wildcard
      Select section .text.ClearPPMTimCompareInterruptFlag (ClearPPMTimCompareInterruptFlag) [size 16] from BoardI6.o using wildcard
      Select section .text.EnablePPMTim (EnablePPMTim) [size 12] from BoardI6.o using wildcard
      Select section .text.EnablePPMOut (EnablePPMOut) [size 12] from BoardI6.o using wildcard
      Select section .text.DisablePPMOut (DisablePPMOut) [size 12] from BoardI6.o using wildcard
      Select section .text.EnablePRTTim (EnablePRTTim) [size 12] from BoardI6.o using wildcard
      Select section .text.DisablePRTTim (DisablePRTTim) [size 12] from BoardI6.o using wildcard
      Select section .text.SetPRTTimPeriod (SetPRTTimPeriod) [size 32] from BoardI6.o using wildcard
      Select section .text.GetChipID (GetChipID) [size 24] from BoardI6.o using wildcard
      Select section .text.PIT_IRQHandler (PIT_IRQHandler) [size 72] from BoardI6.o using wildcard
      Select section .text.TPM1_IRQHandler (TPM1_IRQHandler) [size 28] from BoardI6.o using wildcard
      Select section .text.SPI0_IRQHandler (SPI0_IRQHandler) [size 108] from BoardI6.o using wildcard
      Select section .text.PORTC_PORTD_IRQHandler (PORTC_PORTD_IRQHandler) [size 56] from BoardI6.o using wildcard
      Select section .text.TPM0_IRQHandler (TPM0_IRQHandler) [size 84] from BoardI6.o using wildcard
      Select section .text.TPM2_IRQHandler (TPM2_IRQHandler) [size 28] from BoardI6.o using wildcard
      Select section .text.setup_crsf_serial_port (setup_crsf_serial_port) [size 132] from BoardI6.o using wildcard
      Select section .text.uart_clear_error() (uart_clear_error()) [size 76] from BoardI6.o using wildcard
      Select section .text.crsf_send_data (crsf_send_data) [size 92] from BoardI6.o using wildcard
      Select section .text.UART0_IRQHandler (UART0_IRQHandler) [size 48] from BoardI6.o using wildcard
      Select section .text.shutdown_crsf_serial_port (shutdown_crsf_serial_port) [size 68] from BoardI6.o using wildcard
      Select section .text.serialVoiceInit(void (*)(unsigned char*, unsigned char)) (serialVoiceInit(void (*)(unsigned char*, unsigned char))) [size 88] from BoardI6.o using wildcard
      Select section .text.sendSerialVoiceData(unsigned char*, unsigned int) (sendSerialVoiceData(unsigned char*, unsigned int)) [size 44] from BoardI6.o using wildcard
      Select section .text.UART2_IRQHandler (UART2_IRQHandler) [size 112] from BoardI6.o using wildcard
      Select section .text.modeFixValue(unsigned char) (modeFixValue(unsigned char)) [size 28] from er9x.o using wildcard
      Select section .text.get_tmr10ms() (get_tmr10ms()) [size 12] from er9x.o using wildcard
      Select section .text.CS_STATE(unsigned char) (CS_STATE(unsigned char)) [size 16] from er9x.o using wildcard
      Select section .text.mixaddress(unsigned char) (mixaddress(unsigned char)) [size 16] from er9x.o using wildcard
      Select section .text.throttleReversed() (throttleReversed()) [size 28] from er9x.o using wildcard
      Select section .text.putsChnRaw(unsigned char, unsigned char, unsigned char, unsigned char) (putsChnRaw(unsigned char, unsigned char, unsigned char, unsigned char)) [size 136] from er9x.o using wildcard
      Select section .text.putsChn(unsigned char, unsigned char, unsigned char, unsigned char) (putsChn(unsigned char, unsigned char, unsigned char, unsigned char)) [size 16] from er9x.o using wildcard
      Select section .text.putsMomentDrSwitches(unsigned char, unsigned char, signed char, unsigned char) (putsMomentDrSwitches(unsigned char, unsigned char, signed char, unsigned char)) [size 46] from er9x.o using wildcard
      Select section .text.putsDrSwitches(unsigned char, unsigned char, signed char, unsigned char) (putsDrSwitches(unsigned char, unsigned char, signed char, unsigned char)) [size 116] from er9x.o using wildcard
      Select section .text.putsTmrMode(unsigned char, unsigned char, unsigned char, unsigned char) (putsTmrMode(unsigned char, unsigned char, unsigned char, unsigned char)) [size 164] from er9x.o using wildcard
      Select section .text.putsTelemValue(unsigned char, unsigned char, int, unsigned char, unsigned char) (putsTelemValue(unsigned char, unsigned char, int, unsigned char, unsigned char)) [size 108] from er9x.o using wildcard
      Select section .text.getValue(unsigned char) (getValue(unsigned char)) [size 112] from er9x.o using wildcard
      Select section .text.getSwitch00(signed char) (getSwitch00(signed char)) [size 12] from er9x.o using wildcard
      Select section .text.getSwitch(signed char, bool, unsigned char) (getSwitch(signed char, bool, unsigned char)) [size 488] from er9x.o using wildcard
      Select section .text.calc100toRESX(signed char) (calc100toRESX(signed char)) [size 22] from er9x.o using wildcard
      Select section .text.check_backlight_voice() (check_backlight_voice()) [size 76] from er9x.o using wildcard
      Select section .text.stickMoveValue() (stickMoveValue()) [size 32] from er9x.o using wildcard
      Select section .text.anaIn(unsigned char) (anaIn(unsigned char)) [size 60] from er9x.o using wildcard
      Select section .text.almess(char const*, unsigned char) (almess(char const*, unsigned char)) [size 92] from er9x.o using wildcard
      Select section .text.message(char const*) (message(char const*)) [size 14] from er9x.o using wildcard
      Select section .text.alert(char const*) (alert(char const*)) [size 10] from er9x.o using wildcard
      Select section .text.alertx(char const*, bool) (alertx(char const*, bool)) [size 112] from er9x.o using wildcard
      Select section .text.clearKeyEvents() (clearKeyEvents()) [size 24] from er9x.o using wildcard
      Select section .text.keyDown() (keyDown()) [size 14] from er9x.o using wildcard
      Select section .text.checkThrottlePosition() (checkThrottlePosition()) [size 76] from er9x.o using wildcard
      Select section .text.checkTHR() (checkTHR()) [size 76] from er9x.o using wildcard
      Select section .text.putWarnSwitch(unsigned char, unsigned char) (putWarnSwitch(unsigned char, unsigned char)) [size 28] from er9x.o using wildcard
      Select section .text.getCurrentSwitchStates() (getCurrentSwitchStates()) [size 34] from er9x.o using wildcard
      Select section .text.checkSwitches() (checkSwitches()) [size 228] from er9x.o using wildcard
      Select section .text.getFlightPhase() (getFlightPhase()) [size 52] from er9x.o using wildcard
      Select section .text.getRawTrimValue(unsigned char, unsigned char) (getRawTrimValue(unsigned char, unsigned char)) [size 60] from er9x.o using wildcard
      Select section .text.getTrimFlightPhase(unsigned char, unsigned char) (getTrimFlightPhase(unsigned char, unsigned char)) [size 66] from er9x.o using wildcard
      Select section .text.getTrimValue(unsigned char, unsigned char) (getTrimValue(unsigned char, unsigned char)) [size 16] from er9x.o using wildcard
      Select section .text.setTrimValue(unsigned char, unsigned char, short) (setTrimValue(unsigned char, unsigned char, short)) [size 96] from er9x.o using wildcard
      Select section .text.checkIncDec16(short, short, short, unsigned char) (checkIncDec16(short, short, short, unsigned char)) [size 392] from er9x.o using wildcard
      Select section .text.checkIncDec(signed char, signed char, signed char, unsigned char) (checkIncDec(signed char, signed char, signed char, unsigned char)) [size 10] from er9x.o using wildcard
      Select section .text.checkIncDec_i8(signed char, signed char, signed char) (checkIncDec_i8(signed char, signed char, signed char)) [size 16] from er9x.o using wildcard
      Select section .text.checkIncDec_0(signed char, signed char) (checkIncDec_0(signed char, signed char)) [size 20] from er9x.o using wildcard
      Select section .text.checkIncDec_u0(short, unsigned char) (checkIncDec_u0(short, unsigned char)) [size 20] from er9x.o using wildcard
      Select section .text.popMenu(bool) (popMenu(bool)) [size 44] from er9x.o using wildcard
      Select section .text.chainMenu(void (*)(unsigned char)) (chainMenu(void (*)(unsigned char))) [size 32] from er9x.o using wildcard
      Select section .text.pushMenu(void (*)(unsigned char)) (pushMenu(void (*)(unsigned char))) [size 52] from er9x.o using wildcard
      Select section .text.backlightKey() (backlightKey()) [size 32] from er9x.o using wildcard
      Select section .text.doBackLightVoice(unsigned char) (doBackLightVoice(unsigned char)) [size 92] from er9x.o using wildcard
      Select section .text.calcStickScroll(unsigned char) (calcStickScroll(unsigned char)) [size 92] from er9x.o using wildcard
      Select section .text.getGvarSourceValue(unsigned char) (getGvarSourceValue(unsigned char)) [size 116] from er9x.o using wildcard
      Select section .text.ISR_TIMER2_OVF_vect (ISR_TIMER2_OVF_vect) [size 24] from er9x.o using wildcard
      Select section .text.audioQueue::driver() (audioQueue::driver()) [size 56] from er9x.o using wildcard
      Select section .text.ISR_TIMER0_COMP_vect (ISR_TIMER0_COMP_vect) [size 80] from er9x.o using wildcard
      Select section .text.mainER() (mainER()) [size 544] from er9x.o using wildcard
      Select section .text.mainSequence() (mainSequence()) [size 1940] from er9x.o using wildcard
      Select section .text.doVoiceAlarmSource(t_voiceAlarm*) (doVoiceAlarmSource(t_voiceAlarm*)) [size 40] from er9x.o using wildcard
      Select section .text.procOneVoiceAlarm(t_voiceAlarm*, unsigned char) (procOneVoiceAlarm(t_voiceAlarm*, unsigned char)) [size 736] from er9x.o using wildcard
      Select section .text.processVoiceAlarms() (processVoiceAlarms()) [size 32] from er9x.o using wildcard
      Select section .text.calc1000toRESX(short) (calc1000toRESX(short)) [size 16] from er9x.o using wildcard
      Select section .text.REG100_100(signed char) (REG100_100(signed char)) [size 14] from er9x.o using wildcard
      Select section .text.REG(signed char, signed char, signed char) (REG(signed char, signed char, signed char)) [size 56] from er9x.o using wildcard
      Select section .text.IS_EXPO_THROTTLE(unsigned char) (IS_EXPO_THROTTLE(unsigned char)) [size 24] from er9x.o using wildcard
      Select section .text._GLOBAL__sub_I_er9x.cpp (_GLOBAL__sub_I_er9x.cpp) [size 16] from er9x.o using wildcard
      Select section .text.A7105_AntSwitch() (A7105_AntSwitch()) [size 40] from A7105_SPI.o using wildcard
      Select section .text.A7105_SetTxRxMode(unsigned char) (A7105_SetTxRxMode(unsigned char)) [size 8] from A7105_SPI.o using wildcard
      Select section .text.A7105_Strobe(unsigned char) (A7105_Strobe(unsigned char)) [size 28] from A7105_SPI.o using wildcard
      Select section .text.A7105_WriteReg(unsigned char, unsigned char) (A7105_WriteReg(unsigned char, unsigned char)) [size 30] from A7105_SPI.o using wildcard
      Select section .text.A7105_WriteData(unsigned char, unsigned char) (A7105_WriteData(unsigned char, unsigned char)) [size 80] from A7105_SPI.o using wildcard
      Select section .text.A7105_ReadData(unsigned char) (A7105_ReadData(unsigned char)) [size 48] from A7105_SPI.o using wildcard
      Select section .text.A7105_ReadReg(unsigned char) (A7105_ReadReg(unsigned char)) [size 44] from A7105_SPI.o using wildcard
      Select section .text.A7105_Reset() (A7105_Reset()) [size 38] from A7105_SPI.o using wildcard
      Select section .text.A7105_WriteID(unsigned int) (A7105_WriteID(unsigned int)) [size 44] from A7105_SPI.o using wildcard
      Select section .text.A7105_SetPower() (A7105_SetPower()) [size 52] from A7105_SPI.o using wildcard
      Select section .text.A7105_AdjustLOBaseFreq() (A7105_AdjustLOBaseFreq()) [size 100] from A7105_SPI.o using wildcard
      Select section .text.A7105_Sleep() (A7105_Sleep()) [size 16] from A7105_SPI.o using wildcard
      Select section .text.A7105_Init() (A7105_Init()) [size 192] from A7105_SPI.o using wildcard
      Select section .text.convert_failsafe_ppm(unsigned char) (convert_failsafe_ppm(unsigned char)) [size 56] from A7105_SPI.o using wildcard
      Select section .text.AFHDS2A_build_packet(unsigned char) (AFHDS2A_build_packet(unsigned char)) [size 356] from AFHDS2A_a7105.o using wildcard
      Select section .text.ActionAFHDS2A (ActionAFHDS2A) [size 976] from AFHDS2A_a7105.o using wildcard
      Select section .text.initAFHDS2A (initAFHDS2A) [size 184] from AFHDS2A_a7105.o using wildcard
      Select section .text.processFlySkySensor(unsigned char const*, unsigned char) (processFlySkySensor(unsigned char const*, unsigned char)) [size 344] from AFHDS2A_a7105.o using wildcard
      Select section .text.DoSum(unsigned char*, unsigned char) (DoSum(unsigned char*, unsigned char)) [size 36] from audio.o using wildcard
      Select section .text.Uart_SendCMD(unsigned char, unsigned char, unsigned short) (Uart_SendCMD(unsigned char, unsigned char, unsigned short)) [size 40] from audio.o using wildcard
      Select section .text.audioQueue::busy() (audioQueue::busy()) [size 8] from audio.o using wildcard
      Select section .text.audioQueue::heartbeat() (audioQueue::heartbeat()) [size 128] from audio.o using wildcard
      Select section .text.audioQueue::play(unsigned char, unsigned char, unsigned char, unsigned char) (audioQueue::play(unsigned char, unsigned char, unsigned char, unsigned char)) [size 192] from audio.o using wildcard
      Select section .text.audioQueue::getToneLength(unsigned char) (audioQueue::getToneLength(unsigned char)) [size 64] from audio.o using wildcard
      Select section .text.audioQueue::event(unsigned char, unsigned char) (audioQueue::event(unsigned char, unsigned char)) [size 760] from audio.o using wildcard
      Select section .text.audioDefevent(unsigned char) (audioDefevent(unsigned char)) [size 20] from audio.o using wildcard
      Select section .text.audioEvent(unsigned char, unsigned short) (audioEvent(unsigned char, unsigned short)) [size 20] from audio.o using wildcard
      Select section .text.audioVoiceDefevent(unsigned char, unsigned char) (audioVoiceDefevent(unsigned char, unsigned char)) [size 28] from audio.o using wildcard
      Select section .text.putVoiceQueue(unsigned char) (putVoiceQueue(unsigned char)) [size 8] from audio.o using wildcard
      Select section .text.voice_numeric(short, unsigned char, unsigned char) (voice_numeric(short, unsigned char, unsigned char)) [size 246] from audio.o using wildcard
      Select section .text.putVoiceQueueUpper(unsigned char) (putVoiceQueueUpper(unsigned char)) [size 14] from audio.o using wildcard
      Select section .text.putVoiceQueueLong(unsigned short) (putVoiceQueueLong(unsigned short)) [size 44] from audio.o using wildcard
      Select section .text.setVolume(unsigned char) (setVolume(unsigned char)) [size 32] from audio.o using wildcard
      Select section .text.on_voice_cb(unsigned char*, unsigned char) (on_voice_cb(unsigned char*, unsigned char)) [size 28] from audio.o using wildcard
      Select section .text.t_voice::voice_process() (t_voice::voice_process()) [size 132] from audio.o using wildcard
      Select section .text.ee_waite() (ee_waite()) [size 36] from drivers.o using wildcard
      Select section .text.eeprom_read_block(void*, void const*, unsigned int) (eeprom_read_block(void*, void const*, unsigned int)) [size 68] from drivers.o using wildcard
      Select section .text.eeprom_write_page_cmp(char const*, unsigned short, unsigned int) (eeprom_write_page_cmp(char const*, unsigned short, unsigned int)) [size 348] from drivers.o using wildcard
      Select section .text.eeWriteBlockCmp(void const*, unsigned short, unsigned int) (eeWriteBlockCmp(void const*, unsigned short, unsigned int)) [size 68] from drivers.o using wildcard
      Select section .text.Key::input(bool, EnumKeys) (Key::input(bool, EnumKeys)) [size 196] from drivers.o using wildcard
      Select section .text.menuPressed() (menuPressed()) [size 32] from drivers.o using wildcard
      Select section .text.switchPosition(unsigned char) (switchPosition(unsigned char)) [size 12] from drivers.o using wildcard
      Select section .text.keyState(EnumKeys) (keyState(EnumKeys)) [size 136] from drivers.o using wildcard
      Select section .text.pauseEvents(unsigned char) (pauseEvents(unsigned char)) [size 32] from drivers.o using wildcard
      Select section .text.killEvents(unsigned char) (killEvents(unsigned char)) [size 28] from drivers.o using wildcard
      Select section .text.per10ms() (per10ms()) [size 216] from drivers.o using wildcard
      Select section .text.EeFsGetFree() (EeFsGetFree()) [size 32] from file.o using wildcard
      Select section .text.EeFsGetLink(unsigned char) (EeFsGetLink(unsigned char)) [size 10] from file.o using wildcard
      Select section .text.EeFsck() (EeFsck()) [size 164] from file.o using wildcard
      Select section .text.EeFsSetLink(unsigned char, unsigned char) (EeFsSetLink(unsigned char, unsigned char)) [size 22] from file.o using wildcard
      Select section .text.EeFsFlush() (EeFsFlush()) [size 20] from file.o using wildcard
      Select section .text.EeFsFlushFreelist() (EeFsFlushFreelist()) [size 20] from file.o using wildcard
      Select section .text.EeFsFormat() (EeFsFormat()) [size 60] from file.o using wildcard
      Select section .text.EeFsOpen() (EeFsOpen()) [size 48] from file.o using wildcard
      Select section .text.EFile::exists(unsigned char) (EFile::exists(unsigned char)) [size 20] from file.o using wildcard
      Select section .text.EFile::swap(unsigned char, unsigned char) (EFile::swap(unsigned char, unsigned char)) [size 64] from file.o using wildcard
      Select section .text.EFile::rm(unsigned char) (EFile::rm(unsigned char)) [size 40] from file.o using wildcard
      Select section .text.EeFsFree(unsigned char) (EeFsFree(unsigned char)) [size 48] from file.o using wildcard
      Select section .text.EFile::size() (EFile::size()) [size 32] from file.o using wildcard
      Select section .text.EFile::openRd(unsigned char) (EFile::openRd(unsigned char)) [size 36] from file.o using wildcard
      Select section .text.EFile::read(unsigned char*, unsigned short) (EFile::read(unsigned char*, unsigned short)) [size 120] from file.o using wildcard
      Select section .text.EFile::readRlc(unsigned char*, unsigned short) (EFile::readRlc(unsigned char*, unsigned short)) [size 114] from file.o using wildcard
      Select section .text.EFile::write(unsigned char*, unsigned char) (EFile::write(unsigned char*, unsigned char)) [size 196] from file.o using wildcard
      Select section .text.EeFsAlloc() (EeFsAlloc()) [size 40] from file.o using wildcard
      Select section .text.EFile::create(unsigned char, unsigned char, unsigned short) (EFile::create(unsigned char, unsigned char, unsigned short)) [size 48] from file.o using wildcard
      Select section .text.EFile::closeTrunc() (EFile::closeTrunc()) [size 88] from file.o using wildcard
      Select section .text.EFile::writeRlc(unsigned char, unsigned char, unsigned char*, unsigned short, unsigned char) (EFile::writeRlc(unsigned char, unsigned char, unsigned char*, unsigned short, unsigned char)) [size 224] from file.o using wildcard
      Select section .text.EeFsRead(unsigned char, unsigned char) (EeFsRead(unsigned char, unsigned char)) [size 24] from file.o using wildcard
      Select section .text.putsAttIdxTelemItems(unsigned char, unsigned char, unsigned char, unsigned char) (putsAttIdxTelemItems(unsigned char, unsigned char, unsigned char, unsigned char)) [size 24] from menus.o using wildcard
      Select section .text.calc_scaler(unsigned char, unsigned char*, unsigned char*) (calc_scaler(unsigned char, unsigned char*, unsigned char*)) [size 204] from menus.o using wildcard
      Select section .text.voiceMinutes(short) (voiceMinutes(short)) [size 28] from menus.o using wildcard
      Select section .text.voice_telem_item(unsigned char) (voice_telem_item(unsigned char)) [size 204] from menus.o using wildcard
      Select section .text.get_telemetry_value(unsigned char) (get_telemetry_value(unsigned char)) [size 116] from menus.o using wildcard
      Select section .text.displayTimer(unsigned char, unsigned char, unsigned char, unsigned char) (displayTimer(unsigned char, unsigned char, unsigned char, unsigned char)) [size 28] from menus.o using wildcard
      Select section .text.putsTelemetryChannel(unsigned char, unsigned char, signed char, int, unsigned char, unsigned char) (putsTelemetryChannel(unsigned char, unsigned char, signed char, int, unsigned char, unsigned char)) [size 444] from menus.o using wildcard
      Select section .text.dispGvar(unsigned char, unsigned char, unsigned char, unsigned char) (dispGvar(unsigned char, unsigned char, unsigned char, unsigned char)) [size 44] from menus.o using wildcard
      Select section .text.gvarMenuItem(unsigned char, unsigned char, signed char, signed char, signed char, unsigned char) (gvarMenuItem(unsigned char, unsigned char, signed char, signed char, signed char, unsigned char)) [size 140] from menus.o using wildcard
      Select section .text.gvarMenuItem125(unsigned char, unsigned char, signed char, unsigned char) (gvarMenuItem125(unsigned char, unsigned char, signed char, unsigned char)) [size 22] from menus.o using wildcard
      Select section .text.get_dr_state(unsigned char) (get_dr_state(unsigned char)) [size 56] from menus.o using wildcard
      Select section .text.editName(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char) (editName(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char)) [size 176] from menus.o using wildcard
      Select section .text.char2idx(char) (char2idx(char)) [size 48] from menus.o using wildcard
      Select section .text.idx2char(unsigned char) (idx2char(unsigned char)) [size 20] from menus.o using wildcard
      Select section .text.TITLEP(char const*) (TITLEP(char const*)) [size 16] from menus.o using wildcard
      Select section .text.lcd_xlabel_decimal(unsigned char, unsigned char, unsigned short, unsigned char, char const*) (lcd_xlabel_decimal(unsigned char, unsigned char, unsigned short, unsigned char, char const*)) [size 20] from menus.o using wildcard
      Select section .text.checkIndexed(unsigned char, char const*, unsigned char, unsigned char) (checkIndexed(unsigned char, char const*, unsigned char, unsigned char)) [size 144] from menus.o using wildcard
      Select section .text.hyphinvMenuItem(unsigned char, unsigned char, unsigned char) (hyphinvMenuItem(unsigned char, unsigned char, unsigned char)) [size 24] from menus.o using wildcard
      Select section .text.putsOffDecimal(unsigned char, unsigned char, unsigned short, unsigned char) (putsOffDecimal(unsigned char, unsigned char, unsigned short, unsigned char)) [size 32] from menus.o using wildcard
      Select section .text.MState2::check_columns(unsigned char, unsigned char) (MState2::check_columns(unsigned char, unsigned char)) [size 828] from menus.o using wildcard
      Select section .text.telltale(unsigned char, signed char, signed char) (telltale(unsigned char, signed char, signed char)) [size 90] from menus.o using wildcard
      Select section .text.doMainScreenGrphics() (doMainScreenGrphics()) [size 140] from menus.o using wildcard
      Select section .text.drawFunction(unsigned char, unsigned char) (drawFunction(unsigned char, unsigned char)) [size 160] from menus.o using wildcard
      Select section .text.intpol(short, unsigned char) (intpol(short, unsigned char)) [size 116] from menus.o using wildcard
      Select section .text.calcExpo(unsigned char, short) (calcExpo(unsigned char, short)) [size 188] from menus.o using wildcard
      Select section .text.drawCurve(unsigned char) (drawCurve(unsigned char)) [size 136] from menus.o using wildcard
      Select section .text.curveAddress(unsigned char) (curveAddress(unsigned char)) [size 36] from menus.o using wildcard
      Select section .text.menuProcCurveOne(unsigned char) (menuProcCurveOne(unsigned char)) [size 352] from menus.o using wildcard
      Select section .text.menuProcCurve(unsigned char) (menuProcCurve(unsigned char)) [size 184] from menus.o using wildcard
      Select section .text.evalOffset(signed char) (evalOffset(signed char)) [size 40] from menus.o using wildcard
      Select section .text.setStickCenter() (setStickCenter()) [size 216] from menus.o using wildcard
      Select section .text.perOut(short*, unsigned char) (perOut(short*, unsigned char)) [size 3016] from menus.o using wildcard
      Select section .text.displayNext() (displayNext()) [size 20] from menus.o using wildcard
      Select section .text.menuProcTelemetry(unsigned char) (menuProcTelemetry(unsigned char)) [size 488] from menus.o using wildcard
      Select section .text.put_curve(unsigned char, unsigned char, signed char, unsigned char) (put_curve(unsigned char, unsigned char, signed char, unsigned char)) [size 52] from menus.o using wildcard
      Select section .text.scalerDecimal(unsigned char, unsigned char, unsigned char) (scalerDecimal(unsigned char, unsigned char, unsigned char)) [size 36] from menus.o using wildcard
      Select section .text.menuScaleOne(unsigned char) (menuScaleOne(unsigned char)) [size 660] from menus.o using wildcard
      Select section .text.menuProcGlobals(unsigned char) (menuProcGlobals(unsigned char)) [size 488] from menus.o using wildcard
      Select section .text.edit_dr_switch(unsigned char, unsigned char, signed char, unsigned char, unsigned char) (edit_dr_switch(unsigned char, unsigned char, signed char, unsigned char, unsigned char)) [size 56] from menus.o using wildcard
      Select section .text.putsChnOpRaw(unsigned char, unsigned char, t_MixData*, unsigned char) (putsChnOpRaw(unsigned char, unsigned char, t_MixData*, unsigned char)) [size 84] from menus.o using wildcard
      Select section .text.menuProcMixOne(unsigned char) (menuProcMixOne(unsigned char)) [size 1216] from menus.o using wildcard
      Select section .text.onoffItem(unsigned char, unsigned char, unsigned char) (onoffItem(unsigned char, unsigned char, unsigned char)) [size 18] from menus.o using wildcard
      Select section .text.offonItem(unsigned char, unsigned char, unsigned char) (offonItem(unsigned char, unsigned char, unsigned char)) [size 18] from menus.o using wildcard
      Select section .text.onoffMenuItem(unsigned char, unsigned char, char const*, unsigned char) (onoffMenuItem(unsigned char, unsigned char, char const*, unsigned char)) [size 28] from menus.o using wildcard
      Select section .text.editSlowDelay(unsigned char, unsigned char, unsigned char) (editSlowDelay(unsigned char, unsigned char, unsigned char)) [size 60] from menus.o using wildcard
      Select section .text.menuMixersLimit(unsigned char) (menuMixersLimit(unsigned char)) [size 44] from menus.o using wildcard
      Select section .text.menuProcMix(unsigned char) (menuProcMix(unsigned char)) [size 1196] from menus.o using wildcard
      Select section .text.reachMixerCountLimit() (reachMixerCountLimit()) [size 36] from menus.o using wildcard
      Select section .text.yesNoMenuExit(unsigned char, char const*) (yesNoMenuExit(unsigned char, char const*)) [size 72] from menus.o using wildcard
      Select section .text.menuDeleteMix(unsigned char) (menuDeleteMix(unsigned char)) [size 112] from menus.o using wildcard
      Select section .text.doPopup(char const*, unsigned char, unsigned char) (doPopup(char const*, unsigned char, unsigned char)) [size 324] from menus.o using wildcard
      Select section .text.insertMix(unsigned char, unsigned char) (insertMix(unsigned char, unsigned char)) [size 112] from menus.o using wildcard
      Select section .text.expou(unsigned short, unsigned short) (expou(unsigned short, unsigned short)) [size 34] from menus.o using wildcard
      Select section .text.expo(short, short) (expo(short, short)) [size 60] from menus.o using wildcard
      Select section .text.editExpoVals(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) (editExpoVals(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)) [size 176] from menus.o using wildcard
      Select section .text.menuDeleteDupModel(unsigned char) (menuDeleteDupModel(unsigned char)) [size 164] from menus.o using wildcard
      Select section .text.menuProcModelSelect(unsigned char) (menuProcModelSelect(unsigned char)) [size 796] from menus.o using wildcard
      Select section .text.menuRangeBind(unsigned char) (menuRangeBind(unsigned char)) [size 164] from menus.o using wildcard
      Select section .text.putsTrimMode(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) (putsTrimMode(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)) [size 80] from menus.o using wildcard
      Select section .text.menuPhaseOne(unsigned char) (menuPhaseOne(unsigned char)) [size 476] from menus.o using wildcard
      Select section .text.dispFlightModename(unsigned char, unsigned char, unsigned char) (dispFlightModename(unsigned char, unsigned char, unsigned char)) [size 36] from menus.o using wildcard
      Select section .text.menuModelPhases(unsigned char) (menuModelPhases(unsigned char)) [size 236] from menus.o using wildcard
      Select section .text.menuProcModelIndex(unsigned char) (menuProcModelIndex(unsigned char)) [size 4324] from menus.o using wildcard
      Select section .text.putc_0_1(unsigned char, unsigned char, unsigned char) (putc_0_1(unsigned char, unsigned char, unsigned char)) [size 18] from menus.o using wildcard
      Select section .text.timer() (timer()) [size 792] from menus.o using wildcard
      Select section .text.resetTimer1() (resetTimer1()) [size 20] from menus.o using wildcard
      Select section .text.resetTimer2() (resetTimer2()) [size 10] from menus.o using wildcard
      Select section .text.trace() (trace()) [size 32] from menus.o using wildcard
      Select section .text.putsTimeNoAtt(unsigned char, unsigned char, short) (putsTimeNoAtt(unsigned char, unsigned char, short)) [size 16] from menus.o using wildcard
      Select section .text.menuProcStatistic(unsigned char) (menuProcStatistic(unsigned char)) [size 192] from menus.o using wildcard
      Select section .text.resetTimern(unsigned char) (resetTimern(unsigned char)) [size 56] from menus.o using wildcard
      Select section .text.displayOneSwitch3Pos(unsigned char, unsigned char, unsigned char) (displayOneSwitch3Pos(unsigned char, unsigned char, unsigned char)) [size 62] from menus.o using wildcard
      Select section .text.displayOneSwitch(unsigned char, unsigned char, unsigned char) (displayOneSwitch(unsigned char, unsigned char, unsigned char)) [size 60] from menus.o using wildcard
      Select section .text.switchDisplay(unsigned char, unsigned char) (switchDisplay(unsigned char, unsigned char)) [size 40] from menus.o using wildcard
      Select section .text.dispSignalQality(unsigned char) (dispSignalQality(unsigned char)) [size 108] from menus.o using wildcard
      Select section .text.menuProc0(unsigned char) (menuProc0(unsigned char)) [size 1420] from menus.o using wildcard
      Select section .text.menuProcIndex(unsigned char) (menuProcIndex(unsigned char)) [size 3216] from menus.o using wildcard
      Select section .text.perOutPhase(short*, unsigned char) (perOutPhase(short*, unsigned char)) [size 388] from menus.o using wildcard
      Select section .text.scaleAnalog(short, unsigned char) (scaleAnalog(short, unsigned char)) [size 124] from menus.o using wildcard
      Select section .text.indexProcess(unsigned char, MState2*, unsigned char) (indexProcess(unsigned char, MState2*, unsigned char)) [size 180] from menus.o using wildcard
      Select section .text.displayIndex(char const* const*, unsigned char, unsigned char, unsigned char) (displayIndex(char const* const*, unsigned char, unsigned char, unsigned char)) [size 108] from menus.o using wildcard
      Select section .text.offonMenuItem(unsigned char, unsigned char, char const*, unsigned char) (offonMenuItem(unsigned char, unsigned char, char const*, unsigned char)) [size 18] from menus.o using wildcard
      Select section .text.displayVoiceRate(unsigned char, unsigned char, unsigned char, unsigned char) (displayVoiceRate(unsigned char, unsigned char, unsigned char, unsigned char)) [size 48] from menus.o using wildcard
      Select section .text.menuProcVoiceOne(unsigned char) (menuProcVoiceOne(unsigned char)) [size 1140] from menus.o using wildcard
      Select section .text.menuProcVoiceAlarm(unsigned char) (menuProcVoiceAlarm(unsigned char)) [size 280] from menus.o using wildcard
      Select section .text.rangeBindAction(unsigned char, unsigned char) (rangeBindAction(unsigned char, unsigned char)) [size 60] from menus.o using wildcard
      Select section .text.menuRXSetup(unsigned char) (menuRXSetup(unsigned char)) [size 192] from menus.o using wildcard
      Select section .text.menuSetFailsafe(unsigned char) (menuSetFailsafe(unsigned char)) [size 456] from menus.o using wildcard
      Select section .text.menuProcProtocol(unsigned char) (menuProcProtocol(unsigned char)) [size 676] from menus.o using wildcard
      Select section .text.SetStartPulsePol() (SetStartPulsePol()) [size 72] from pulses.o using wildcard
      Select section .text.ISR_TIMER1_COMPA_vect (ISR_TIMER1_COMPA_vect) [size 68] from pulses.o using wildcard
      Select section .text.setupPulses() (setupPulses()) [size 180] from pulses.o using wildcard
      Select section .text.startPulses() (startPulses()) [size 40] from pulses.o using wildcard
      Select section .text.setupPulsesPPM(unsigned char) (setupPulsesPPM(unsigned char)) [size 236] from pulses.o using wildcard
      Select section .text.clearMixes() (clearMixes()) [size 20] from templates.o using wildcard
      Select section .text.setMix(unsigned char, unsigned char) (setMix(unsigned char, unsigned char)) [size 88] from templates.o using wildcard
      Select section .text.applyTemplate() (applyTemplate()) [size 92] from templates.o using wildcard
      Select section .text.main (main) [size 14] from main.o using wildcard
      Select section .text.tiny_sprintf(char*, char const*, char, char, ...) (tiny_sprintf(char*, char const*, char, char, ...)) [size 88] from elrsV2.o using wildcard
      Select section .text.crossfireTelemetryPush4(unsigned char, unsigned char, unsigned char) (crossfireTelemetryPush4(unsigned char, unsigned char, unsigned char)) [size 44] from elrsV2.o using wildcard
      Select section .text.crossfireTelemetryPing() (crossfireTelemetryPing()) [size 24] from elrsV2.o using wildcard
      Select section .text.allocateFields() (allocateFields()) [size 92] from elrsV2.o using wildcard
      Select section .text.selectField(signed char) (selectField(signed char)) [size 124] from elrsV2.o using wildcard
      Select section .text.getField(unsigned char) (getField(unsigned char)) [size 60] from elrsV2.o using wildcard
      Select section .text.fieldTextSelectionLoad(FieldProps*, unsigned char*, unsigned char) (fieldTextSelectionLoad(FieldProps*, unsigned char*, unsigned char)) [size 124] from elrsV2.o using wildcard
      Select section .text.fieldTextSelectionSave(FieldProps*) (fieldTextSelectionSave(FieldProps*)) [size 14] from elrsV2.o using wildcard
      Select section .text.fieldTextSelectionDisplay(FieldProps*, unsigned char, unsigned char) (fieldTextSelectionDisplay(FieldProps*, unsigned char, unsigned char)) [size 120] from elrsV2.o using wildcard
      Select section .text.semicolonPos(char const*, unsigned char) (semicolonPos(char const*, unsigned char)) [size 22] from elrsV2.o using wildcard
      Select section .text.fieldStringDisplay(FieldProps*, unsigned char, unsigned char) (fieldStringDisplay(FieldProps*, unsigned char, unsigned char)) [size 32] from elrsV2.o using wildcard
      Select section .text.fieldFolderOpen(FieldProps*) (fieldFolderOpen(FieldProps*)) [size 116] from elrsV2.o using wildcard
      Select section .text.noopOpen(FieldProps*) (noopOpen(FieldProps*)) [size 2] from elrsV2.o using wildcard
      Select section .text.fieldCommandLoad(FieldProps*, unsigned char*, unsigned char) (fieldCommandLoad(FieldProps*, unsigned char*, unsigned char)) [size 44] from elrsV2.o using wildcard
      Select section .text.fieldCommandSave(FieldProps*) (fieldCommandSave(FieldProps*)) [size 52] from elrsV2.o using wildcard
      Select section .text.fieldUnifiedDisplay(FieldProps*, unsigned char, unsigned char) (fieldUnifiedDisplay(FieldProps*, unsigned char, unsigned char)) [size 80] from elrsV2.o using wildcard
      Select section .text.UIbackExec(FieldProps*) (UIbackExec(FieldProps*)) [size 116] from elrsV2.o using wildcard
      Select section .text.parseDeviceInfoMessage(unsigned char*) (parseDeviceInfoMessage(unsigned char*)) [size 380] from elrsV2.o using wildcard
      Select section .text.parseParameterInfoMessage(unsigned char*, unsigned char) (parseParameterInfoMessage(unsigned char*, unsigned char)) [size 508] from elrsV2.o using wildcard
      Select section .text.runCrossfireTelemetryCallback(unsigned char, unsigned char*, unsigned char) (runCrossfireTelemetryCallback(unsigned char, unsigned char*, unsigned char)) [size 236] from elrsV2.o using wildcard
      Select section .text.handleDevicePageEvent(unsigned char) (handleDevicePageEvent(unsigned char)) [size 356] from elrsV2.o using wildcard
      Select section .text.incrField(signed char) (incrField(signed char)) [size 76] from elrsV2.o using wildcard
      Select section .text.runDevicePage(unsigned char) (runDevicePage(unsigned char)) [size 200] from elrsV2.o using wildcard
      Select section .text.runPopupPage(unsigned char) (runPopupPage(unsigned char)) [size 228] from elrsV2.o using wildcard
      Select section .text.popupCompat(unsigned char) (popupCompat(unsigned char)) [size 40] from elrsV2.o using wildcard
      Select section .text.ELRSV2_stop() (ELRSV2_stop()) [size 60] from elrsV2.o using wildcard
      Select section .text.ELRSV2_run(unsigned char) (ELRSV2_run(unsigned char)) [size 64] from elrsV2.o using wildcard
      Select section .text.crossfileMenu(MState2&, unsigned char, unsigned char, unsigned char, unsigned char) (crossfileMenu(MState2&, unsigned char, unsigned char, unsigned char, unsigned char)) [size 64] from elrsV2.o using wildcard
      Select section .text.crc8(unsigned char const*, unsigned int) (crc8(unsigned char const*, unsigned int)) [size 32] from crc_crsf.o using wildcard
      Select section .text.createCrossfireChannelsFrame(unsigned char*, short*) (createCrossfireChannelsFrame(unsigned char*, short*)) [size 136] from crossfire.o using wildcard
      Select section .text.setupPulsesCrossfire() (setupPulsesCrossfire()) [size 76] from crossfire.o using wildcard
      Select section .text.processCrossfireTelemetryValue(unsigned char, int) (processCrossfireTelemetryValue(unsigned char, int)) [size 64] from crossfire.o using wildcard
      Select section .text.checkCrossfireTelemetryFrameCRC() (checkCrossfireTelemetryFrameCRC()) [size 32] from crossfire.o using wildcard
      Select section .text.getCrossfireTelemetryValue(unsigned char, int&, int) (getCrossfireTelemetryValue(unsigned char, int&, int)) [size 56] from crossfire.o using wildcard
      Select section .text.processCrossfireTelemetryFrame() (processCrossfireTelemetryFrame()) [size 824] from crossfire.o using wildcard
      Select section .text.processCrossfireTelemetryData(unsigned char) (processCrossfireTelemetryData(unsigned char)) [size 108] from crossfire.o using wildcard
      Select section .text.crossfireTelemetryPush(unsigned char, unsigned char*, unsigned char) (crossfireTelemetryPush(unsigned char, unsigned char*, unsigned char)) [size 100] from crossfire.o using wildcard
      Select section .text.crsf_init() (crsf_init()) [size 36] from crossfire.o using wildcard
      Select section .text.crsf_shutdown() (crsf_shutdown()) [size 8] from crossfire.o using wildcard
      Select section .text.crsf_action() (crsf_action()) [size 28] from crossfire.o using wildcard
      Select section .text.evalChkSum() (evalChkSum()) [size 36] from pers.o using wildcard
      Select section .text.setNameP(char*, char const*) (setNameP(char*, char const*)) [size 20] from pers.o using wildcard
      Select section .text.eeGeneralDefault() (eeGeneralDefault()) [size 136] from pers.o using wildcard
      Select section .text.modelSave(unsigned char) (modelSave(unsigned char)) [size 48] from pers.o using wildcard
      Select section .text.modelDefaultWrite(unsigned char) (modelDefaultWrite(unsigned char)) [size 112] from pers.o using wildcard
      Select section .text.eeLoadModelName(unsigned char, char*, unsigned char) (eeLoadModelName(unsigned char, char*, unsigned char)) [size 96] from pers.o using wildcard
      Select section .text.eeModelExists(unsigned char) (eeModelExists(unsigned char)) [size 12] from pers.o using wildcard
      Select section .text.eeLoadModelForBackup(unsigned char) (eeLoadModelForBackup(unsigned char)) [size 52] from pers.o using wildcard
      Select section .text.eeLoadModel(unsigned char) (eeLoadModel(unsigned char)) [size 524] from pers.o using wildcard
      Select section .text.validateName(char*, unsigned char) (validateName(char*, unsigned char)) [size 28] from pers.o using wildcard
      Select section .text.eeDirty(unsigned char) (eeDirty(unsigned char)) [size 48] from pers.o using wildcard
      Select section .text.eeWaitComplete() (eeWaitComplete()) [size 40] from pers.o using wildcard
      Select section .text.eeDuplicateModel(unsigned char) (eeDuplicateModel(unsigned char)) [size 104] from pers.o using wildcard
      Select section .text.eeReadGeneral() (eeReadGeneral()) [size 120] from pers.o using wildcard
      Select section .text.eeWriteGeneral() (eeWriteGeneral()) [size 84] from pers.o using wildcard
      Select section .text.eeCheck(bool) (eeCheck(bool)) [size 352] from pers.o using wildcard
      Select section .text.SX127xDriver::SX127xDriver() (SX127xDriver::SX127xDriver()) [size 44] from SX127x.o using wildcard
      Select section .text._GLOBAL__sub_I_SX127x.cpp (_GLOBAL__sub_I_SX127x.cpp) [size 16] from SX127x.o using wildcard
      Select section .text.SX127xHal::SX127xHal() (SX127xHal::SX127xHal()) [size 12] from SX127xHal.o using wildcard
      Select section .text._GLOBAL__sub_I_ELRS.cpp (_GLOBAL__sub_I_ELRS.cpp) [size 72] from ELRS.o using wildcard
      Select section .text.StubbornReceiver::StubbornReceiver(unsigned char) (StubbornReceiver::StubbornReceiver(unsigned char)) [size 20] from stubborn_receiver.o using wildcard
      Select section .text.StubbornSender::StubbornSender(unsigned char) (StubbornSender::StubbornSender(unsigned char)) [size 14] from stubborn_sender.o using wildcard
      Select section .text.StubbornSender::ResetState() (StubbornSender::ResetState()) [size 24] from stubborn_sender.o using wildcard
      Select section .text.GENERIC_CRC14::GENERIC_CRC14(unsigned short) (GENERIC_CRC14::GENERIC_CRC14(unsigned short)) [size 46] from crc.o using wildcard
      Select section .text.libc.__aeabi_llsl (__aeabi_llsl) [size 30] from intasmops_arm.o (libc_v6m_t_le_eabi_small.a) using wildcard
      Select section .text.libc.__aeabi_llsr (__aeabi_llsr) [size 30] from intasmops_arm.o (libc_v6m_t_le_eabi_small.a) using wildcard
      Select section .text.libc.__aeabi_idiv (__aeabi_idiv) [size 64] from intasmops_arm.o (libc_v6m_t_le_eabi_small.a) using wildcard
      Select section .text.libc.__aeabi_idivmod (__aeabi_idivmod) [size 14] from intasmops_arm.o (libc_v6m_t_le_eabi_small.a) using wildcard
      Select section .text.libc.__aeabi_uidiv (__aeabi_uidiv) [size 56] from intasmops_arm.o (libc_v6m_t_le_eabi_small.a) using wildcard
      Select section .text.libc.__aeabi_uidivmod (__aeabi_uidivmod) [size 16] from intasmops_arm.o (libc_v6m_t_le_eabi_small.a) using wildcard
      Select section .text.libc.div (div) [size 42] from intops.o (libc_v6m_t_le_eabi_small.a) using wildcard
      Select section .text.libc.strcpy (strcpy) [size 14] from strasmops_arm.o (libc_v6m_t_le_eabi_small.a) using wildcard
      Select section .text.libc.strlen (strlen) [size 14] from strasmops_arm.o (libc_v6m_t_le_eabi_small.a) using wildcard
      Select section .text.libc.memcpy (memcpy) [size 14] from strasmops_arm.o (libc_v6m_t_le_eabi_small.a) using wildcard
      Select section .text.libc.__aeabi_memclr (__aeabi_memclr) [size 20] from strasmops_arm.o (libc_v6m_t_le_eabi_small.a) using wildcard
      Select section .text.libc.__aeabi_memmove (__aeabi_memmove) [size 34] from strasmops_arm.o (libc_v6m_t_le_eabi_small.a) using wildcard
      Select section .text.libc.memcmp (memcmp) [size 46] from strops.o (libc_v6m_t_le_eabi_small.a) using wildcard
      Select section .text.libc.strstr (strstr) [size 52] from strops.o (libc_v6m_t_le_eabi_small.a) using wildcard
      Select section .text.__SEGGER_RTL_init_heap (__SEGGER_RTL_init_heap) [size 20] from heapops_basic.o (heapops_basic_v6m_little.a) using wildcard
      Select section .rodata.Lcdinit (Lcdinit) [size 12] from lcd.o using wildcard
      Select section .rodata.font (font) [size 495] from lcd.o using wildcard
      Select section .rodata.font_dblsize (font_dblsize) [size 1380] from lcd.o using wildcard
      Select section .rodata._bitmask (_bitmask) [size 8] from lcd.o using wildcard
      Select section .rodata.ChannelToPin (ChannelToPin) [size 7] from BoardI6.o using wildcard
      Select section .rodata.AFHDS2A_A7105_regs (AFHDS2A_A7105_regs) [size 50] from BoardI6.o using wildcard
      Select section .rodata.bchout_ar (bchout_ar) [size 24] from er9x.o using wildcard
      Select section .rodata.Str_Switches (Str_Switches) [size 65] from er9x.o using wildcard
      Select section .rodata.Str_OFF (Str_OFF) [size 4] from er9x.o using wildcard
      Select section .rodata.Str_ON (Str_ON) [size 4] from er9x.o using wildcard
      Select section .rodata.modi12x3 (modi12x3) [size 18] from er9x.o using wildcard
      Select section .rodata.stickScramble (stickScramble) [size 16] from er9x.o using wildcard
      Select section .rodata.csTypeTable (csTypeTable) [size 15] from er9x.o using wildcard
      Select section .rodata.Str_Hyphens (Str_Hyphens) [size 5] from er9x.o using wildcard
      Select section .rodata..L.str ([.rodata..L.str]) [size 13] from er9x.o using wildcard
      Select section .rodata..L.str.1 ([.rodata..L.str.1]) [size 4] from er9x.o using wildcard
      Select section .rodata..L.str.2 ([.rodata..L.str.2]) [size 22] from er9x.o using wildcard
      Select section .rodata..L.str.3 ([.rodata..L.str.3]) [size 14] from er9x.o using wildcard
      Select section .rodata.Str_Alert (Str_Alert) [size 7] from er9x.o using wildcard
      Select section .rodata..L.str.4 ([.rodata..L.str.4]) [size 8] from er9x.o using wildcard
      Select section .rodata..L.str.5 ([.rodata..L.str.5]) [size 33] from er9x.o using wildcard
      Select section .rodata..L.str.6 ([.rodata..L.str.6]) [size 37] from er9x.o using wildcard
      Select section .rodata..L.str.7 ([.rodata..L.str.7]) [size 13] from er9x.o using wildcard
      Select section .rodata.rate (rate) [size 8] from er9x.o using wildcard
      Select section .rodata..L.str.8 ([.rodata..L.str.8]) [size 9] from er9x.o using wildcard
      Select section .rodata..L.str.9 ([.rodata..L.str.9]) [size 11] from er9x.o using wildcard
      Select section .rodata..L.str.10 ([.rodata..L.str.10]) [size 7] from er9x.o using wildcard
      Select section .rodata..L.str.11 ([.rodata..L.str.11]) [size 15] from er9x.o using wildcard
      Select section .rodata..L.str.12 ([.rodata..L.str.12]) [size 16] from er9x.o using wildcard
      Select section .rodata..L.str.13 ([.rodata..L.str.13]) [size 43] from er9x.o using wildcard
      Select section .rodata.AFHDS2A_tel (AFHDS2A_tel) [size 88] from AFHDS2A_a7105.o using wildcard
      Select section .rodata.per10ms()::crossTrim (per10ms()::crossTrim) [size 8] from drivers.o using wildcard
      Select section .rodata.Str_Chans_Gv (Str_Chans_Gv) [size 166] from menus.o using wildcard
      Select section .rodata.Curve_Str (Curve_Str) [size 74] from menus.o using wildcard
      Select section .rodata.Str_telemItems (Str_telemItems) [size 296] from menus.o using wildcard
      Select section .rodata.TelemIndex (TelemIndex) [size 58] from menus.o using wildcard
      Select section .rodata.UnitsVoice (UnitsVoice) [size 8] from menus.o using wildcard
      Select section .rodata.UnitsText (UnitsText) [size 8] from menus.o using wildcard
      Select section .rodata.Str_GV (Str_GV) [size 3] from menus.o using wildcard
      Select section .rodata.Str_Name (Str_Name) [size 5] from menus.o using wildcard
      Select section .rodata..L.str ([.rodata..L.str]) [size 10] from menus.o using wildcard
      Select section .rodata.Str_Curve (Str_Curve) [size 6] from menus.o using wildcard
      Select section .rodata..L.str.1 ([.rodata..L.str.1]) [size 7] from menus.o using wildcard
      Select section .rodata.Str_Curves (Str_Curves) [size 7] from menus.o using wildcard
      Select section .rodata..L.str.2 ([.rodata..L.str.2]) [size 3] from menus.o using wildcard
      Select section .rodata..L.str.3 ([.rodata..L.str.3]) [size 5] from menus.o using wildcard
      Select section .rodata.Str_Telemetry (Str_Telemetry) [size 10] from menus.o using wildcard
      Select section .rodata..L.str.4 ([.rodata..L.str.4]) [size 65] from menus.o using wildcard
      Select section .rodata..L.str.5 ([.rodata..L.str.5]) [size 15] from menus.o using wildcard
      Select section .rodata.Str_SC (Str_SC) [size 3] from menus.o using wildcard
      Select section .rodata..L.str.6 ([.rodata..L.str.6]) [size 63] from menus.o using wildcard
      Select section .rodata.UnitsString (UnitsString) [size 42] from menus.o using wildcard
      Select section .rodata..L.str.7 ([.rodata..L.str.7]) [size 14] from menus.o using wildcard
      Select section .rodata.Str_Globals (Str_Globals) [size 11] from menus.o using wildcard
      Select section .rodata.Str_Gv_Source (Str_Gv_Source) [size 41] from menus.o using wildcard
      Select section .rodata..L.str.8 ([.rodata..L.str.8]) [size 9] from menus.o using wildcard
      Select section .rodata.SW_3_IDX (SW_3_IDX) [size 30] from menus.o using wildcard
      Select section .rodata..L.str.9 ([.rodata..L.str.9]) [size 3] from menus.o using wildcard
      Select section .rodata..L.str.10 ([.rodata..L.str.10]) [size 10] from menus.o using wildcard
      Select section .rodata..L.str.11 ([.rodata..L.str.11]) [size 125] from menus.o using wildcard
      Select section .rodata..L.str.12 ([.rodata..L.str.12]) [size 15] from menus.o using wildcard
      Select section .rodata..L.str.13 ([.rodata..L.str.13]) [size 6] from menus.o using wildcard
      Select section .rodata..L.str.14 ([.rodata..L.str.14]) [size 6] from menus.o using wildcard
      Select section .rodata..L.str.15 ([.rodata..L.str.15]) [size 28] from menus.o using wildcard
      Select section .rodata..L.str.16 ([.rodata..L.str.16]) [size 46] from menus.o using wildcard
      Select section .rodata..L.str.17 ([.rodata..L.str.17]) [size 25] from menus.o using wildcard
      Select section .rodata..L.str.18 ([.rodata..L.str.18]) [size 17] from menus.o using wildcard
      Select section .rodata..L.str.19 ([.rodata..L.str.19]) [size 12] from menus.o using wildcard
      Select section .rodata.Str_Mixer (Str_Mixer) [size 6] from menus.o using wildcard
      Select section .rodata..L.str.20 ([.rodata..L.str.20]) [size 5] from menus.o using wildcard
      Select section .rodata.s_charTab (s_charTab) [size 67] from menus.o using wildcard
      Select section .rodata..L.str.21 ([.rodata..L.str.21]) [size 16] from menus.o using wildcard
      Select section .rodata..L.str.22 ([.rodata..L.str.22]) [size 13] from menus.o using wildcard
      Select section .rodata..L.str.23 ([.rodata..L.str.23]) [size 18] from menus.o using wildcard
      Select section .rodata..L.str.24 ([.rodata..L.str.24]) [size 9] from menus.o using wildcard
      Select section .rodata..L.str.25 ([.rodata..L.str.25]) [size 18] from menus.o using wildcard
      Select section .rodata.Str_1_RETA (Str_1_RETA) [size 6] from menus.o using wildcard
      Select section .rodata..L.str.26 ([.rodata..L.str.26]) [size 8] from menus.o using wildcard
      Select section .rodata..L.str.27 ([.rodata..L.str.27]) [size 30] from menus.o using wildcard
      Select section .rodata..L.str.28 ([.rodata..L.str.28]) [size 4] from menus.o using wildcard
      Select section .rodata.Str_Modes (Str_Modes) [size 6] from menus.o using wildcard
      Select section .rodata..L.str.29 ([.rodata..L.str.29]) [size 10] from menus.o using wildcard
      Select section .rodata..L.str.30 ([.rodata..L.str.30]) [size 9] from menus.o using wildcard
      Select section .rodata..L.str.31 ([.rodata..L.str.31]) [size 6] from menus.o using wildcard
      Select section .rodata.ModelPopList (ModelPopList) [size 38] from menus.o using wildcard
      Select section .rodata..L.str.32 ([.rodata..L.str.32]) [size 5] from menus.o using wildcard
      Select section .rodata..L.str.33 ([.rodata..L.str.33]) [size 9] from menus.o using wildcard
      Select section .rodata..L.str.34 ([.rodata..L.str.34]) [size 19] from menus.o using wildcard
      Select section .rodata..L.str.35 ([.rodata..L.str.35]) [size 23] from menus.o using wildcard
      Select section .rodata..L.str.38 ([.rodata..L.str.38]) [size 5] from menus.o using wildcard
      Select section .rodata..L.str.39 ([.rodata..L.str.39]) [size 3] from menus.o using wildcard
      Select section .rodata..L.str.40 ([.rodata..L.str.40]) [size 4] from menus.o using wildcard
      Select section .rodata..L.str.41 ([.rodata..L.str.41]) [size 17] from menus.o using wildcard
      Select section .rodata.menuProc0(unsigned char)::xt (menuProc0(unsigned char)::xt) [size 4] from menus.o using wildcard
      Select section .rodata..L.str.42 ([.rodata..L.str.42]) [size 3] from menus.o using wildcard
      Select section .rodata..L.str.43 ([.rodata..L.str.43]) [size 3] from menus.o using wildcard
      Select section .rodata..L.str.44 ([.rodata..L.str.44]) [size 20] from menus.o using wildcard
      Select section .rodata.Str_Main_Popup (Str_Main_Popup) [size 58] from menus.o using wildcard
      Select section .rodata.menuProcIndex(unsigned char)::n_Strings (menuProcIndex(unsigned char)::n_Strings) [size 44] from menus.o using wildcard
      Select section .rodata.Str_Display (Str_Display) [size 8] from menus.o using wildcard
      Select section .rodata.Str_AudioHaptic (Str_AudioHaptic) [size 12] from menus.o using wildcard
      Select section .rodata.Str_Alarms (Str_Alarms) [size 7] from menus.o using wildcard
      Select section .rodata.Str_General (Str_General) [size 8] from menus.o using wildcard
      Select section .rodata.Str_Controls (Str_Controls) [size 9] from menus.o using wildcard
      Select section .rodata.Str_Calibration (Str_Calibration) [size 12] from menus.o using wildcard
      Select section .rodata.Str_Trainer (Str_Trainer) [size 8] from menus.o using wildcard
      Select section .rodata.Str_Version (Str_Version) [size 8] from menus.o using wildcard
      Select section .rodata.Str_DiagSwtch (Str_DiagSwtch) [size 10] from menus.o using wildcard
      Select section .rodata.Str_DiagAna (Str_DiagAna) [size 8] from menus.o using wildcard
      Select section .rodata.Str_Hardware (Str_Hardware) [size 9] from menus.o using wildcard
      Select section .rodata..L.str.45 ([.rodata..L.str.45]) [size 9] from menus.o using wildcard
      Select section .rodata..L.str.46 ([.rodata..L.str.46]) [size 76] from menus.o using wildcard
      Select section .rodata..L.str.47 ([.rodata..L.str.47]) [size 40] from menus.o using wildcard
      Select section .rodata..L.str.48 ([.rodata..L.str.48]) [size 46] from menus.o using wildcard
      Select section .rodata..L.str.49 ([.rodata..L.str.49]) [size 54] from menus.o using wildcard
      Select section .rodata..L.str.50 ([.rodata..L.str.50]) [size 17] from menus.o using wildcard
      Select section .rodata.Str_minute_Beep (Str_minute_Beep) [size 12] from menus.o using wildcard
      Select section .rodata..L.str.51 ([.rodata..L.str.51]) [size 46] from menus.o using wildcard
      Select section .rodata.sticks (sticks) [size 75] from menus.o using wildcard
      Select section .rodata..L.str.52 ([.rodata..L.str.52]) [size 82] from menus.o using wildcard
      Select section .rodata..L.str.53 ([.rodata..L.str.53]) [size 14] from menus.o using wildcard
      Select section .rodata.Str_Beep_Countdown (Str_Beep_Countdown) [size 15] from menus.o using wildcard
      Select section .rodata..L.str.54 ([.rodata..L.str.54]) [size 26] from menus.o using wildcard
      Select section .rodata..L.str.55 ([.rodata..L.str.55]) [size 10] from menus.o using wildcard
      Select section .rodata..L.str.56 ([.rodata..L.str.56]) [size 12] from menus.o using wildcard
      Select section .rodata..L.str.57 ([.rodata..L.str.57]) [size 5] from menus.o using wildcard
      Select section .rodata..L.str.58 ([.rodata..L.str.58]) [size 32] from menus.o using wildcard
      Select section .rodata..L.str.59 ([.rodata..L.str.59]) [size 8] from menus.o using wildcard
      Select section .rodata..L.str.60 ([.rodata..L.str.60]) [size 4] from menus.o using wildcard
      Select section .rodata..L.str.61 ([.rodata..L.str.61]) [size 7] from menus.o using wildcard
      Select section .rodata..L.str.62 ([.rodata..L.str.62]) [size 16] from menus.o using wildcard
      Select section .rodata..L.str.63 ([.rodata..L.str.63]) [size 13] from menus.o using wildcard
      Select section .rodata..L.str.64 ([.rodata..L.str.64]) [size 11] from menus.o using wildcard
      Select section .rodata..L.str.65 ([.rodata..L.str.65]) [size 4] from menus.o using wildcard
      Select section .rodata..L.str.66 ([.rodata..L.str.66]) [size 8] from menus.o using wildcard
      Select section .rodata..L.str.67 ([.rodata..L.str.67]) [size 17] from menus.o using wildcard
      Select section .rodata..L.str.68 ([.rodata..L.str.68]) [size 14] from menus.o using wildcard
      Select section .rodata.menuWhenDone (menuWhenDone) [size 17] from menus.o using wildcard
      Select section .rodata..L.str.69 ([.rodata..L.str.69]) [size 18] from menus.o using wildcard
      Select section .rodata.Str_On_Off_Both (Str_On_Off_Both) [size 22] from menus.o using wildcard
      Select section .rodata..L.str.70 ([.rodata..L.str.70]) [size 12] from menus.o using wildcard
      Select section .rodata..L.str.71 ([.rodata..L.str.71]) [size 41] from menus.o using wildcard
      Select section .rodata..L.str.72 ([.rodata..L.str.72]) [size 37] from menus.o using wildcard
      Select section .rodata..L.str.73 ([.rodata..L.str.73]) [size 5] from menus.o using wildcard
      Select section .rodata.Str_Cswitch (Str_Cswitch) [size 114] from menus.o using wildcard
      Select section .rodata..L.str.74 ([.rodata..L.str.74]) [size 16] from menus.o using wildcard
      Select section .rodata..L.str.75 ([.rodata..L.str.75]) [size 32] from menus.o using wildcard
      Select section .rodata..L.str.76 ([.rodata..L.str.76]) [size 22] from menus.o using wildcard
      Select section .rodata..L.str.77 ([.rodata..L.str.77]) [size 12] from menus.o using wildcard
      Select section .rodata..L.str.78 ([.rodata..L.str.78]) [size 22] from menus.o using wildcard
      Select section .rodata..L.str.79 ([.rodata..L.str.79]) [size 11] from menus.o using wildcard
      Select section .rodata.Str_Sounds (Str_Sounds) [size 98] from menus.o using wildcard
      Select section .rodata..L.str.80 ([.rodata..L.str.80]) [size 7] from menus.o using wildcard
      Select section .rodata..L.str.81 ([.rodata..L.str.81]) [size 10] from menus.o using wildcard
      Select section .rodata..L.str.82 ([.rodata..L.str.82]) [size 6] from menus.o using wildcard
      Select section .rodata..L.str.83 ([.rodata..L.str.83]) [size 3] from menus.o using wildcard
      Select section .rodata..L.str.84 ([.rodata..L.str.84]) [size 9] from menus.o using wildcard
      Select section .rodata..L.str.85 ([.rodata..L.str.85]) [size 8] from menus.o using wildcard
      Select section .rodata..L.str.86 ([.rodata..L.str.86]) [size 27] from menus.o using wildcard
      Select section .rodata..L.str.87 ([.rodata..L.str.87]) [size 14] from menus.o using wildcard
      Select section .rodata..L.str.88 ([.rodata..L.str.88]) [size 9] from menus.o using wildcard
      Select section .rodata..L.str.89 ([.rodata..L.str.89]) [size 9] from menus.o using wildcard
      Select section .rodata..L.str.90 ([.rodata..L.str.90]) [size 15] from menus.o using wildcard
      Select section .rodata..L.str.91 ([.rodata..L.str.91]) [size 11] from menus.o using wildcard
      Select section .rodata..L.str.92 ([.rodata..L.str.92]) [size 6] from menus.o using wildcard
      Select section .rodata..L.str.93 ([.rodata..L.str.93]) [size 43] from menus.o using wildcard
      Select section .rodata..L.str.94 ([.rodata..L.str.94]) [size 30] from menus.o using wildcard
      Select section .rodata..L.str.95 ([.rodata..L.str.95]) [size 4] from menus.o using wildcard
      Select section .rodata..L.str.96 ([.rodata..L.str.96]) [size 15] from menus.o using wildcard
      Select section .rodata..L.str.97 ([.rodata..L.str.97]) [size 10] from menus.o using wildcard
      Select section .rodata..L.str.98 ([.rodata..L.str.98]) [size 9] from menus.o using wildcard
      Select section .rodata..L.str.99 ([.rodata..L.str.99]) [size 38] from menus.o using wildcard
      Select section .rodata..L.str.100 ([.rodata..L.str.100]) [size 14] from menus.o using wildcard
      Select section .rodata..L.str.101 ([.rodata..L.str.101]) [size 29] from menus.o using wildcard
      Select section .rodata.menuProcModelIndex(unsigned char)::n_Strings (menuProcModelIndex(unsigned char)::n_Strings) [size 56] from menus.o using wildcard
      Select section .rodata.Str_heli_setup (Str_heli_setup) [size 11] from menus.o using wildcard
      Select section .rodata.Str_limits (Str_limits) [size 7] from menus.o using wildcard
      Select section .rodata.Str_Expo (Str_Expo) [size 8] from menus.o using wildcard
      Select section .rodata.Str_Cswitches (Str_Cswitches) [size 11] from menus.o using wildcard
      Select section .rodata.Str_Safety (Str_Safety) [size 11] from menus.o using wildcard
      Select section .rodata.Str_Timer (Str_Timer) [size 6] from menus.o using wildcard
      Select section .rodata.Str_Protocol (Str_Protocol) [size 9] from menus.o using wildcard
      Select section .rodata..L.str.102 ([.rodata..L.str.102]) [size 17] from menus.o using wildcard
      Select section .rodata..L.str.103 ([.rodata..L.str.103]) [size 53] from menus.o using wildcard
      Select section .rodata.Str_TRE012AG (Str_TRE012AG) [size 10] from menus.o using wildcard
      Select section .rodata..L.str.104 ([.rodata..L.str.104]) [size 28] from menus.o using wildcard
      Select section .rodata..L.str.105 ([.rodata..L.str.105]) [size 71] from menus.o using wildcard
      Select section .rodata..L.str.106 ([.rodata..L.str.106]) [size 16] from menus.o using wildcard
      Select section .rodata..L.str.107 ([.rodata..L.str.107]) [size 52] from menus.o using wildcard
      Select section .rodata..L.str.108 ([.rodata..L.str.108]) [size 34] from menus.o using wildcard
      Select section .rodata..L.str.109 ([.rodata..L.str.109]) [size 8] from menus.o using wildcard
      Select section .rodata..L.str.110 ([.rodata..L.str.110]) [size 75] from menus.o using wildcard
      Select section .rodata..L.str.111 ([.rodata..L.str.111]) [size 24] from menus.o using wildcard
      Select section .rodata..L.str.112 ([.rodata..L.str.112]) [size 12] from menus.o using wildcard
      Select section .rodata..L.str.113 ([.rodata..L.str.113]) [size 32] from menus.o using wildcard
      Select section .rodata..L.str.114 ([.rodata..L.str.114]) [size 15] from menus.o using wildcard
      Select section .rodata.MixPopList (MixPopList) [size 39] from menus.o using wildcard
      Select section .rodata..L.str.115 ([.rodata..L.str.115]) [size 43] from menus.o using wildcard
      Select section .rodata..L.str.116 ([.rodata..L.str.116]) [size 24] from menus.o using wildcard
      Select section .rodata..L.str.117 ([.rodata..L.str.117]) [size 17] from menus.o using wildcard
      Select section .rodata..L.str.118 ([.rodata..L.str.118]) [size 4] from menus.o using wildcard
      Select section .rodata..L.str.119 ([.rodata..L.str.119]) [size 17] from menus.o using wildcard
      Select section .rodata..L.str.120 ([.rodata..L.str.120]) [size 16] from menus.o using wildcard
      Select section .rodata..L.str.121 ([.rodata..L.str.121]) [size 16] from menus.o using wildcard
      Select section .rodata..Lswitch.table.menuProcModelIndex(unsigned char) ([.rodata..Lswitch.table.menuProcModelIndex(unsigned char)]) [size 56] from menus.o using wildcard
      Select section .rodata.Stamps (Stamps) [size 49] from stamp.o using wildcard
      Select section .rodata..L.str ([.rodata..L.str]) [size 3] from elrsV2.o using wildcard
      Select section .rodata..L.str.1 ([.rodata..L.str.1]) [size 4] from elrsV2.o using wildcard
      Select section .rodata..L.str.2 ([.rodata..L.str.2]) [size 7] from elrsV2.o using wildcard
      Select section .rodata..L.str.3 ([.rodata..L.str.3]) [size 4] from elrsV2.o using wildcard
      Select section .rodata..L.str.4 ([.rodata..L.str.4]) [size 15] from elrsV2.o using wildcard
      Select section .rodata..L.str.5 ([.rodata..L.str.5]) [size 5] from elrsV2.o using wildcard
      Select section .rodata.functions (functions) [size 72] from elrsV2.o using wildcard
      Select section .rodata..L.str.7 ([.rodata..L.str.7]) [size 9] from elrsV2.o using wildcard
      Select section .rodata..L.str.8 ([.rodata..L.str.8]) [size 12] from elrsV2.o using wildcard
      Select section .rodata..Lswitch.table.fieldUnifiedDisplay(FieldProps*, unsigned char, unsigned char) ([.rodata..Lswitch.table.fieldUnifiedDisplay(FieldProps*, unsigned char, unsigned char)]) [size 24] from elrsV2.o using wildcard
      Select section .rodata.crc8tab (crc8tab) [size 256] from crc_crsf.o using wildcard
      Select section .rodata.idx_to_afhds2a (idx_to_afhds2a) [size 30] from crossfire.o using wildcard
      Select section .rodata.processCrossfireTelemetryFrame()::power_values (processCrossfireTelemetryFrame()::power_values) [size 36] from crossfire.o using wildcard
      Select section .rodata..L.str ([.rodata..L.str]) [size 11] from pers.o using wildcard
      Select section .rodata..L.str.1 ([.rodata..L.str.1]) [size 11] from pers.o using wildcard
      Select section .rodata..L.str.2 ([.rodata..L.str.2]) [size 21] from pers.o using wildcard
      Select section .rodata..L.str.3 ([.rodata..L.str.3]) [size 19] from pers.o using wildcard
      Select section .rodata..L.str.4 ([.rodata..L.str.4]) [size 16] from pers.o using wildcard
      Select section .rodata..L.str.5 ([.rodata..L.str.5]) [size 18] from pers.o using wildcard
      Select section .rodata..L.str.6 ([.rodata..L.str.6]) [size 15] from pers.o using wildcard
      Select section .rodata.Str_EEPROM_Overflow (Str_EEPROM_Overflow) [size 16] from pers.o using wildcard
      Select section .segger.init.__SEGGER_init_heap (__SEGGER_init_heap) [size 24] from SEGGER_crtinit_v6m_little.o using wildcard
      Select section .init (Reset_Handler) [size 40] from Kinetis_KL_Startup.o using name
      Select section .init (NMI_Handler) [size 68] from MKL16Z4_Vectors.o using name
  Select inputs for 'place in' block <#8> at line 108, col 45
      Select block tdata_load ([tdata_load]) [size 0] from [ Linker created ] using name
  Select inputs for 'place in' block <#9> at line 115, col 44
  Select inputs for 'place in' block <#11> at line 120, col 45
      Select block tls ([tls]) [size 0] from [ Linker created ] using name
  Select inputs for 'place in' block <#12> at line 124, col 45
      Select section .data.AlarmControl (AlarmControl) [size 4] from er9x.o using wildcard
      Select section .data.prev_power (prev_power) [size 1] from A7105_SPI.o using wildcard
      Select section .data.A7105_AdjustLOBaseFreq()::old_offset (A7105_AdjustLOBaseFreq()::old_offset) [size 2] from A7105_SPI.o using wildcard
      Select section .data.AFHDS2A_update_telemetry()::Dacc (AFHDS2A_update_telemetry()::Dacc) [size 4] from AFHDS2A_a7105.o using wildcard
      Select section .data.play_cmd_buf (play_cmd_buf) [size 10] from audio.o using wildcard
      Select section .data.ISR_TIMER1_COMPA_vect::pulsePtr (ISR_TIMER1_COMPA_vect::pulsePtr) [size 4] from pulses.o using wildcard
      Select section .data.otherDevicesId (otherDevicesId) [size 1] from elrsV2.o using wildcard
      Select section .data.deviceId (deviceId) [size 1] from elrsV2.o using wildcard
      Select section .data.handsetId (handsetId) [size 1] from elrsV2.o using wildcard
      Select section .data.lineIndex (lineIndex) [size 1] from elrsV2.o using wildcard
      Select section .data.fieldId (fieldId) [size 1] from elrsV2.o using wildcard
      Select section .data.backButtonId (backButtonId) [size 1] from elrsV2.o using wildcard
      Select section .data.devicesRefreshTimeout (devicesRefreshTimeout) [size 4] from elrsV2.o using wildcard
      Select section .data.expectedChunks (expectedChunks) [size 1] from elrsV2.o using wildcard
      Select section .bss.LcdLock (LcdLock) [size 1] from lcd.o using wildcard
      Select section .bss.Lcd_lastPos (Lcd_lastPos) [size 1] from lcd.o using wildcard
      Select section .bss.DisplayBuf (DisplayBuf) [size 1024] from lcd.o using wildcard
      Select section .bss.EepromActive (EepromActive) [size 1] from lcd.o using wildcard
      Select section .bss.plotType (plotType) [size 1] from lcd.o using wildcard
      Select section .bss.SPI_BufferPtr (SPI_BufferPtr) [size 4] from BoardI6.o using wildcard
      Select section .bss.SPI_Size (SPI_Size) [size 2] from BoardI6.o using wildcard
      Select section .bss.g_crsf_read_callback (g_crsf_read_callback) [size 4] from BoardI6.o using wildcard
      Select section .bss.g_voice_cb (g_voice_cb) [size 4] from BoardI6.o using wildcard
      Select section .bss.voice_uart_recv_buf (voice_uart_recv_buf) [size 10] from BoardI6.o using wildcard
      Select section .bss.voice_rx_idx (voice_rx_idx) [size 1] from BoardI6.o using wildcard
      Select section .bss.voice_uart_send_buf (voice_uart_send_buf) [size 10] from BoardI6.o using wildcard
      Select section .bss.voice_tx_idx (voice_tx_idx) [size 1] from BoardI6.o using wildcard
      Select section .bss.Last_switch (Last_switch) [size 12] from er9x.o using wildcard
      Select section .bss.g_eeGeneral (g_eeGeneral) [size 118] from er9x.o using wildcard
      Select section .bss.g_model (g_model) [size 1002] from er9x.o using wildcard
      Select section .bss.AlertMessage (AlertMessage) [size 4] from er9x.o using wildcard
      Select section .bss.Main_running (Main_running) [size 1] from er9x.o using wildcard
      Select section .bss.Nvs_state (Nvs_state) [size 8] from er9x.o using wildcard
      Select section .bss.Nvs_timer (Nvs_timer) [size 16] from er9x.o using wildcard
      Select section .bss.CurrentVolume (CurrentVolume) [size 1] from er9x.o using wildcard
      Select section .bss.ppmInAvailable (ppmInAvailable) [size 1] from er9x.o using wildcard
      Select section .bss.Rotary (Rotary) [size 9] from er9x.o using wildcard
      Select section .bss.Tevent (Tevent) [size 1] from er9x.o using wildcard
      Select section .bss.TimerConfig (TimerConfig) [size 10] from er9x.o using wildcard
      Select section .bss.audio (audio) [size 56] from er9x.o using wildcard
      Select section .bss.sysFlags (sysFlags) [size 1] from er9x.o using wildcard
      Select section .bss.SystemOptions (SystemOptions) [size 1] from er9x.o using wildcard
      Select section .bss.CsTimer (CsTimer) [size 24] from er9x.o using wildcard
      Select section .bss.g_ppmIns (g_ppmIns) [size 16] from er9x.o using wildcard
      Select section .bss.check_backlight_voice()::tmr10ms (check_backlight_voice()::tmr10ms) [size 1] from er9x.o using wildcard
      Select section .bss.g_LightOffCounter (g_LightOffCounter) [size 2] from er9x.o using wildcard
      Select section .bss.StickScrollAllowed (StickScrollAllowed) [size 1] from er9x.o using wildcard
      Select section .bss.StickScrollTimer (StickScrollTimer) [size 1] from er9x.o using wildcard
      Select section .bss.g_menuStack (g_menuStack) [size 20] from er9x.o using wildcard
      Select section .bss.g_menuStackPtr (g_menuStackPtr) [size 1] from er9x.o using wildcard
      Select section .bss.EnterMenu (EnterMenu) [size 1] from er9x.o using wildcard
      Select section .bss.P1values (P1values) [size 10] from er9x.o using wildcard
      Select section .bss.StepSize (StepSize) [size 1] from er9x.o using wildcard
      Select section .bss.LongMenuTimer (LongMenuTimer) [size 1] from er9x.o using wildcard
      Select section .bss.g_vbat100mV (g_vbat100mV) [size 1] from er9x.o using wildcard
      Select section .bss.tick10ms (tick10ms) [size 1] from er9x.o using wildcard
      Select section .bss.stickMoved (stickMoved) [size 1] from er9x.o using wildcard
      Select section .bss.Inactivity (Inactivity) [size 6] from er9x.o using wildcard
      Select section .bss.s_anaFilt (s_anaFilt) [size 16] from er9x.o using wildcard
      Select section .bss.g_tmr16KHz (g_tmr16KHz) [size 2] from er9x.o using wildcard
      Select section .bss.tmrEEPROM (tmrEEPROM) [size 2] from er9x.o using wildcard
      Select section .bss.mainSequence()::timer (mainSequence()::timer) [size 2] from er9x.o using wildcard
      Select section .bss.audioQueue::driver()::toneCounter (audioQueue::driver()::toneCounter) [size 1] from er9x.o using wildcard
      Select section .bss.perMain()::lastTMR (perMain()::lastTMR) [size 4] from er9x.o using wildcard
      Select section .bss.perMain()::repeater (perMain()::repeater) [size 1] from er9x.o using wildcard
      Select section .bss.perMain()::alertKey (perMain()::alertKey) [size 1] from er9x.o using wildcard
      Select section .bss.perMain()::s_batCheck (perMain()::s_batCheck) [size 1] from er9x.o using wildcard
      Select section .bss.RadioState (RadioState) [size 1] from A7105_SPI.o using wildcard
      Select section .bss.protocol_flags (protocol_flags) [size 1] from A7105_SPI.o using wildcard
      Select section .bss.packet (packet) [size 40] from A7105_SPI.o using wildcard
      Select section .bss.ID (ID) [size 4] from A7105_SPI.o using wildcard
      Select section .bss.packet_count (packet_count) [size 1] from A7105_SPI.o using wildcard
      Select section .bss.bind_phase (bind_phase) [size 1] from A7105_SPI.o using wildcard
      Select section .bss.hopping_frequency (hopping_frequency) [size 16] from A7105_SPI.o using wildcard
      Select section .bss.hopping_frequency_no (hopping_frequency_no) [size 1] from A7105_SPI.o using wildcard
      Select section .bss.A7105_AntSwitch()::sw (A7105_AntSwitch()::sw) [size 1] from A7105_SPI.o using wildcard
      Select section .bss.AFHDS2A_tel_data (AFHDS2A_tel_data) [size 172] from AFHDS2A_a7105.o using wildcard
      Select section .bss.AFHDS2A_tel_status (AFHDS2A_tel_status) [size 8] from AFHDS2A_a7105.o using wildcard
      Select section .bss.AFHDS2A_tel_res_cnt (AFHDS2A_tel_res_cnt) [size 43] from AFHDS2A_a7105.o using wildcard
      Select section .bss.AltOffset (AltOffset) [size 2] from AFHDS2A_a7105.o using wildcard
      Select section .bss.GAltOffset (GAltOffset) [size 2] from AFHDS2A_a7105.o using wildcard
      Select section .bss.ActionAFHDS2A::packet_type (ActionAFHDS2A::packet_type) [size 1] from AFHDS2A_a7105.o using wildcard
      Select section .bss.ActionAFHDS2A::packet_counter (ActionAFHDS2A::packet_counter) [size 2] from AFHDS2A_a7105.o using wildcard
      Select section .bss.Voice (Voice) [size 36] from audio.o using wildcard
      Select section .bss.wait_fin_count (wait_fin_count) [size 1] from audio.o using wildcard
      Select section .bss.i2c_buffer (i2c_buffer) [size 12] from drivers.o using wildcard
      Select section .bss.s_evt (s_evt) [size 1] from drivers.o using wildcard
      Select section .bss.keys (keys) [size 45] from drivers.o using wildcard
      Select section .bss.g_tmr10ms (g_tmr10ms) [size 4] from drivers.o using wildcard
      Select section .bss.g_blinkTmr10ms (g_blinkTmr10ms) [size 1] from drivers.o using wildcard
      Select section .bss.per10ms()::current (per10ms()::current) [size 1] from drivers.o using wildcard
      Select section .bss.eeFs (eeFs) [size 64] from file.o using wildcard
      Select section .bss.Xmem (Xmem) [size 106] from menus.o using wildcard
      Select section .bss.PopupData (PopupData) [size 4] from menus.o using wildcard
      Select section .bss.MenuControl (MenuControl) [size 3] from menus.o using wildcard
      Select section .bss.s_timer (s_timer) [size 32] from menus.o using wildcard
      Select section .bss.RotaryState (RotaryState) [size 1] from menus.o using wildcard
      Select section .bss.CalcScaleNest (CalcScaleNest) [size 1] from menus.o using wildcard
      Select section .bss.ThrottleStickyOn (ThrottleStickyOn) [size 1] from menus.o using wildcard
      Select section .bss.phyStick (phyStick) [size 4] from menus.o using wildcard
      Select section .bss.calibratedStick (calibratedStick) [size 14] from menus.o using wildcard
      Select section .bss.Ex_chans (Ex_chans) [size 32] from menus.o using wildcard
      Select section .bss.s_pgOfs (s_pgOfs) [size 1] from menus.o using wildcard
      Select section .bss.s_editMode (s_editMode) [size 1] from menus.o using wildcard
      Select section .bss.s_editing (s_editing) [size 1] from menus.o using wildcard
      Select section .bss.s_noHi (s_noHi) [size 1] from menus.o using wildcard
      Select section .bss.scrollLR (scrollLR) [size 1] from menus.o using wildcard
      Select section .bss.scroll_disabled (scroll_disabled) [size 1] from menus.o using wildcard
      Select section .bss.scrollUD (scrollUD) [size 1] from menus.o using wildcard
      Select section .bss.InverseBlink (InverseBlink) [size 1] from menus.o using wildcard
      Select section .bss.EditType (EditType) [size 1] from menus.o using wildcard
      Select section .bss.EditColumns (EditColumns) [size 1] from menus.o using wildcard
      Select section .bss.g_chans512 (g_chans512) [size 32] from menus.o using wildcard
      Select section .bss.g_posHorz (g_posHorz) [size 1] from menus.o using wildcard
      Select section .bss.M_longMenuTimer (M_longMenuTimer) [size 1] from menus.o using wildcard
      Select section .bss.Columns (Columns) [size 1] from menus.o using wildcard
      Select section .bss.MState2::check_columns(unsigned char, unsigned char)::lateUp (MState2::check_columns(unsigned char, unsigned char)::lateUp) [size 1] from menus.o using wildcard
      Select section .bss.s_curveChan (s_curveChan) [size 1] from menus.o using wildcard
      Select section .bss.s_expoChan (s_expoChan) [size 1] from menus.o using wildcard
      Select section .bss.menuProcCurveOne(unsigned char)::dfltCrv (menuProcCurveOne(unsigned char)::dfltCrv) [size 1] from menus.o using wildcard
      Select section .bss.menuProcCurveOne(unsigned char)::mstate2 (menuProcCurveOne(unsigned char)::mstate2) [size 1] from menus.o using wildcard
      Select section .bss.menuProcCurve(unsigned char)::mstate2 (menuProcCurve(unsigned char)::mstate2) [size 1] from menus.o using wildcard
      Select section .bss.CurrentPhase (CurrentPhase) [size 1] from menus.o using wildcard
      Select section .bss.menuProcTelemetry(unsigned char)::mstate2 (menuProcTelemetry(unsigned char)::mstate2) [size 1] from menus.o using wildcard
      Select section .bss.menuScaleOne(unsigned char)::mstate2 (menuScaleOne(unsigned char)::mstate2) [size 1] from menus.o using wildcard
      Select section .bss.s_currIdx (s_currIdx) [size 1] from menus.o using wildcard
      Select section .bss.menuProcGlobals(unsigned char)::mstate2 (menuProcGlobals(unsigned char)::mstate2) [size 1] from menus.o using wildcard
      Select section .bss.s_currMixIdx (s_currMixIdx) [size 1] from menus.o using wildcard
      Select section .bss.menuProcMixOne(unsigned char)::mstate2 (menuProcMixOne(unsigned char)::mstate2) [size 1] from menus.o using wildcard
      Select section .bss.s_mixMaxSel (s_mixMaxSel) [size 1] from menus.o using wildcard
      Select section .bss.mixToDelete (mixToDelete) [size 1] from menus.o using wildcard
      Select section .bss.s_moveMode (s_moveMode) [size 1] from menus.o using wildcard
      Select section .bss.menuProcMix(unsigned char)::mstate2 (menuProcMix(unsigned char)::mstate2) [size 1] from menus.o using wildcard
      Select section .bss.s_currDestCh (s_currDestCh) [size 1] from menus.o using wildcard
      Select section .bss.s_moveMixIdx (s_moveMixIdx) [size 1] from menus.o using wildcard
      Select section .bss.DupIfNonzero (DupIfNonzero) [size 1] from menus.o using wildcard
      Select section .bss.DupSub (DupSub) [size 1] from menus.o using wildcard
      Select section .bss.menuRangeBind(unsigned char)::timer (menuRangeBind(unsigned char)::timer) [size 1] from menus.o using wildcard
      Select section .bss.menuPhaseOne(unsigned char)::mstate2 (menuPhaseOne(unsigned char)::mstate2) [size 1] from menus.o using wildcard
      Select section .bss.menuModelPhases(unsigned char)::mstate2 (menuModelPhases(unsigned char)::mstate2) [size 1] from menus.o using wildcard
      Select section .bss.menuProcModelSelect(unsigned char)::mstate2 (menuProcModelSelect(unsigned char)::mstate2) [size 1] from menus.o using wildcard
      Select section .bss.menuProcModelSelect(unsigned char)::sel_editMode (menuProcModelSelect(unsigned char)::sel_editMode) [size 1] from menus.o using wildcard
      Select section .bss.TimeGlobals (TimeGlobals) [size 8] from menus.o using wildcard
      Select section .bss.trace()::s_time (trace()::s_time) [size 2] from menus.o using wildcard
      Select section .bss.g_latency (g_latency) [size 2] from menus.o using wildcard
      Select section .bss.menuProc0(unsigned char)::trimSwLock (menuProc0(unsigned char)::trimSwLock) [size 1] from menus.o using wildcard
      Select section .bss.inputs_subview (inputs_subview) [size 1] from menus.o using wildcard
      Select section .bss.bpanaCenter (bpanaCenter) [size 1] from menus.o using wildcard
      Select section .bss.Output (Output) [size 256] from menus.o using wildcard
      Select section .bss.Fade (Fade) [size 80] from menus.o using wildcard
      Select section .bss.perOutPhase(short*, unsigned char)::lastPhase (perOutPhase(short*, unsigned char)::lastPhase) [size 1] from menus.o using wildcard
      Select section .bss.perOut(short*, unsigned char)::sticky (perOut(short*, unsigned char)::sticky) [size 1] from menus.o using wildcard
      Select section .bss.menuProcIndex(unsigned char)::mstate (menuProcIndex(unsigned char)::mstate) [size 1] from menus.o using wildcard
      Select section .bss.IlinesCount (IlinesCount) [size 1] from menus.o using wildcard
      Select section .bss.menuProcVoiceOne(unsigned char)::mstate2 (menuProcVoiceOne(unsigned char)::mstate2) [size 1] from menus.o using wildcard
      Select section .bss.menuProcVoiceAlarm(unsigned char)::mstate2 (menuProcVoiceAlarm(unsigned char)::mstate2) [size 1] from menus.o using wildcard
      Select section .bss.menuRXSetup(unsigned char)::mstate2 (menuRXSetup(unsigned char)::mstate2) [size 1] from menus.o using wildcard
      Select section .bss.menuSetFailsafe(unsigned char)::mstate2 (menuSetFailsafe(unsigned char)::mstate2) [size 1] from menus.o using wildcard
      Select section .bss.menuProcProtocol(unsigned char)::mstate2 (menuProcProtocol(unsigned char)::mstate2) [size 1] from menus.o using wildcard
      Select section .bss.menuProcModelIndex(unsigned char)::mstate (menuProcModelIndex(unsigned char)::mstate) [size 1] from menus.o using wildcard
      Select section .bss.pulses2MHz (pulses2MHz) [size 144] from pulses.o using wildcard
      Select section .bss.heartbeat (heartbeat) [size 1] from pulses.o using wildcard
      Select section .bss.Current_protocol (Current_protocol) [size 1] from pulses.o using wildcard
      Select section .bss.pxxFlag (pxxFlag) [size 1] from pulses.o using wildcard
      Select section .bss.PausePulses (PausePulses) [size 1] from pulses.o using wildcard
      Select section .bss.serialDat0 (serialDat0) [size 1] from pulses.o using wildcard
      Select section .bss.RadioActive (RadioActive) [size 1] from pulses.o using wildcard
      Select section .bss.B3_comp_value (B3_comp_value) [size 2] from pulses.o using wildcard
      Select section .bss.namesBufferOffset (namesBufferOffset) [size 1] from elrsV2.o using wildcard
      Select section .bss.valuesBufferOffset (valuesBufferOffset) [size 1] from elrsV2.o using wildcard
      Select section .bss.fieldDataLen (fieldDataLen) [size 1] from elrsV2.o using wildcard
      Select section .bss.fieldsLen (fieldsLen) [size 1] from elrsV2.o using wildcard
      Select section .bss.devicesLen (devicesLen) [size 1] from elrsV2.o using wildcard
      Select section .bss.deviceIsELRS_TX (deviceIsELRS_TX) [size 1] from elrsV2.o using wildcard
      Select section .bss.pageOffset (pageOffset) [size 1] from elrsV2.o using wildcard
      Select section .bss.edit (edit) [size 1] from elrsV2.o using wildcard
      Select section .bss.fieldTimeout (fieldTimeout) [size 4] from elrsV2.o using wildcard
      Select section .bss.fieldChunk (fieldChunk) [size 1] from elrsV2.o using wildcard
      Select section .bss.fields_count (fields_count) [size 1] from elrsV2.o using wildcard
      Select section .bss.allParamsLoaded (allParamsLoaded) [size 1] from elrsV2.o using wildcard
      Select section .bss.folderAccess (folderAccess) [size 1] from elrsV2.o using wildcard
      Select section .bss.statusComplete (statusComplete) [size 1] from elrsV2.o using wildcard
      Select section .bss.reloadFolder (reloadFolder) [size 1] from elrsV2.o using wildcard
      Select section .bss.fields (fields) [size 256] from elrsV2.o using wildcard
      Select section .bss.fieldPopup (fieldPopup) [size 4] from elrsV2.o using wildcard
      Select section .bss.deviceIds (deviceIds) [size 8] from elrsV2.o using wildcard
      Select section .bss.reusableBuffer (reusableBuffer) [size 512] from elrsV2.o using wildcard
      Select section .bss.outputTelemetryBuffer (outputTelemetryBuffer) [size 16] from crossfire.o using wildcard
      Select section .bss.outputTelemetryBufferSize (outputTelemetryBufferSize) [size 1] from crossfire.o using wildcard
      Select section .bss.outputTelemetryBufferTrigger (outputTelemetryBufferTrigger) [size 1] from crossfire.o using wildcard
      Select section .bss.telemetryRxBuffer (telemetryRxBuffer) [size 128] from crossfire.o using wildcard
      Select section .bss.telemetryRxBufferCount (telemetryRxBufferCount) [size 1] from crossfire.o using wildcard
      Select section .bss.g_crossfire (g_crossfire) [size 65] from crossfire.o using wildcard
      Select section .bss.telemetryErrors (telemetryErrors) [size 4] from crossfire.o using wildcard
      Select section .bss.g_elrs_update_rate (g_elrs_update_rate) [size 4] from crossfire.o using wildcard
      Select section .bss.g_elrs_lag (g_elrs_lag) [size 4] from crossfire.o using wildcard
      Select section .bss.theFile (theFile) [size 10] from pers.o using wildcard
      Select section .bss.theWriteFile (theWriteFile) [size 10] from pers.o using wildcard
      Select section .bss.s_eeDirtyMsk (s_eeDirtyMsk) [size 1] from pers.o using wildcard
      Select section .bss.s_eeDirtyTime10ms (s_eeDirtyTime10ms) [size 2] from pers.o using wildcard
      Select section .bss.s_eeLongTimer (s_eeLongTimer) [size 1] from pers.o using wildcard
      Select section .bss.Ee_lock (Ee_lock) [size 1] from pers.o using wildcard
      Select section .bss.hal (hal) [size 4] from SX127x.o using wildcard
      Select section .bss.SX127xDriver::instance (SX127xDriver::instance) [size 4] from SX127x.o using wildcard
      Select section .bss.SX127xHal::instance (SX127xHal::instance) [size 4] from SX127xHal.o using wildcard
      Select section .bss.Radio (Radio) [size 48] from ELRS.o using wildcard
      Select section .bss.ota_crc (ota_crc) [size 514] from ELRS.o using wildcard
      Select section .bss.LQCalc (LQCalc) [size 12] from ELRS.o using wildcard
      Select section .bss.TelemetryReceiver (TelemetryReceiver) [size 12] from ELRS.o using wildcard
      Select section .bss.MspSender (MspSender) [size 16] from ELRS.o using wildcard
      Select section .bss.__SEGGER_RTL_heap_globals (__SEGGER_RTL_heap_globals) [size 4] from heapops_basic.o (heapops_basic_v6m_little.a) using wildcard
  Select inputs for 'place in' block <#13> at line 128, col 45
      Select block heap ([heap]) [size 256] from [ Linker created ] using name


***************************************************************************************
***                                                                                 ***
***                                 Pad sections #1                                 ***
***                                                                                 ***
***************************************************************************************

  Padding sections for section alignment


***************************************************************************************
***                                                                                 ***
***                               Assign init methods                               ***
***                                                                                 ***
***************************************************************************************

  Applying default initialization methods for mapped sections
  Applying user initialization 'do not initialize': (0 inputs)
  Applying user initialization 'do not initialize': (0 inputs)
  Applying user initialization 'do not initialize': (0 inputs)
  Applying user initialization 'do not initialize': (1 inputs)
  Applying user initialization 'auto': (14 inputs)
      AlarmControl from er9x.o
      prev_power from A7105_SPI.o
      A7105_AdjustLOBaseFreq()::old_offset from A7105_SPI.o
      AFHDS2A_update_telemetry()::Dacc from AFHDS2A_a7105.o
      play_cmd_buf from audio.o
      ISR_TIMER1_COMPA_vect::pulsePtr from pulses.o
      otherDevicesId from elrsV2.o
      deviceId from elrsV2.o
      handsetId from elrsV2.o
      lineIndex from elrsV2.o
      fieldId from elrsV2.o
      backButtonId from elrsV2.o
      devicesRefreshTimeout from elrsV2.o
      expectedChunks from elrsV2.o
  Applying user initialization 'auto': (0 inputs)


***************************************************************************************
***                                                                                 ***
***                                   Sort inputs                                   ***
***                                                                                 ***
***************************************************************************************

  Sorting sections with auto order for block vectors
  Sorting sections with auto order for block vectors_ram
  Sorting sections with alphabetical order for inline block <#1> at line 61, col 85
  Sorting sections with auto order for block ctors
  Sorting sections with reverse alphabetical order for inline block <#2> at line 62, col 85
  Sorting sections with auto order for block dtors
  Sorting sections with auto order for block exidx
  Sorting sections with auto order for block tbss
  Sorting sections with auto order for block tdata
  Sorting sections with auto order for block tls
  Sorting sections with auto order for block tdata_load
  Sorting sections with auto order for block heap
  Sorting sections with auto order for block stack
  Sorting sections with auto order for block cfm
  Sorting sections with auto order for place at
  Sorting sections with auto order for place at
  Sorting sections with auto order for place at
  Sorting sections with auto order for place at
  Sorting sections with auto order for place in [0x00000000 to 0x0000ffff]
  Sorting sections with auto order for place in [0x00000400 to 0x0000040f]
  Sorting sections with auto order for place in [0x00000000 to 0x0000ffff]
  Sorting sections with auto order for place in [0x00000000 to 0x0000ffff]
  Sorting sections with auto order for place in [0x1ffff800 to 0x200017ff]
  Sorting sections with auto order for place in [0x1ffff800 to 0x200017ff]
  Sorting sections with auto order for place in [0x1ffff800 to 0x200017ff]
  Sorting sections with auto order for place in [0x1ffff800 to 0x200017ff]


***************************************************************************************
***                                                                                 ***
***                               Size and alignment                                ***
***                                                                                 ***
***************************************************************************************

  Process block vectors:
      size = 192, alignment = 4
  Process block vectors_ram:
      size = 0, alignment = 0
  Process inline block <#1> at line 61, col 85:
      size = 12, alignment = 4
  Process block ctors:
      size = 12, alignment = 4
  Process inline block <#2> at line 62, col 85:
      size = 0, alignment = 0
  Process block dtors:
      size = 0, alignment = 1
  Process block exidx:
      size = 0, alignment = 0
  Process block tbss:
      size = 0, alignment = 0
  Process block tdata:
      size = 0, alignment = 0
  Process block tls:
      size = 0, alignment = 1
  Process block tdata_load:
      Process block tdata:
          size = 0, alignment = 0
      size = 0, alignment = 1
  Process block heap:
      size = 256, alignment = 8
  Process block stack:
      size = 256, alignment = 8
  Process block cfm:
      size = 16, alignment = 2
  Process 'place at start' block <#5> at line 97, col 45:
      size = 192, alignment = 4
  Process 'place at start' block <#6> at line 98, col 45:
      size = 16, alignment = 2
  Process 'place at start' block <#10> at line 119, col 45:
      size = 0, alignment = 1
  Process 'place at end' block <#14> at line 129, col 45:
      size = 256, alignment = 8
  Testing input sections to see if nonzero selected size
      block ctors has size 12
  Initialize by calling __SEGGER_init_ctors has nonzero selector size, must include


***************************************************************************************
***                                                                                 ***
***                                Dump Script tasks                                ***
***                                                                                 ***
***************************************************************************************

  Internal linker script
      define symbol __STACKSIZE__
      define symbol __STACKSIZE_PROCESS__
      define symbol __HEAPSIZE__
      define symbol __SEGGER_RTL_vfprintf
      define symbol __SEGGER_RTL_vfscanf
      define symbol __dso_handle
      define region FLASH = [0x00000000 to 0x0000ffff]
      define region CFM = [0x00000400 to 0x0000040f]
      define region RAM = [0x1ffff800 to 0x200017ff]
      define block vectors
          input section .vectors from MKL16Z4_Vectors.o, size 192, align 4
      define block vectors_ram
      define inline block <#1> at line 61, col 85
          input section .init_array from er9x.o, size 4, align 4
          input section .init_array from SX127x.o, size 4, align 4
          input section .init_array from ELRS.o, size 4, align 4
      define block ctors
          input inline block <#1> at line 61, col 85 from [ Linker created ], size 12, align 4
      define inline block <#2> at line 62, col 85
      define block dtors
          input inline block <#2> at line 62, col 85 from [ Linker created ], size 0, align 1
      define block exidx
      define block tbss
      define block tdata
      define block tls
          input block tdata from [ Linker created ], size 0, align 1
          input block tbss from [ Linker created ], size 0, align 1
      define block tdata_load
          input copy of block tdata from [ Linker created ], size 0, align 1
          copy of block tdata
      define block heap
          with fixed size 0x100
      define block stack
          with fixed size 0x100
      define block cfm
          input section .cfm from MKL16Z4_Vectors.o, size 16, align 2
      do not initialize {
          section .non_init,
          section .non_init.*,
          section .*.non_init,
          section .*.non_init.*,
      }
      do not initialize {
          section .no_init,
          section .no_init.*,
          section .*.no_init,
          section .*.no_init.*,
      }
      do not initialize {
          section .noinit,
          section .noinit.*,
          section .*.noinit,
          section .*.noinit.*,
      }
      do not initialize {
          block vectors_ram,
      }
      initialize by auto {
          section .data,
          section .data.*,
          section .*.data,
          section .*.data.*,
      }
      initialize by auto {
          section .fast,
          section .fast.*,
      }
      initialize by calling __SEGGER_init_heap {
          block heap,
      }
      initialize by calling __SEGGER_init_ctors {
          block ctors,
      }
      keep {
          section .cfm,
      }
      place at 0x00000000
          input block vectors from [ Linker created ], size 192, align 4
      place at 0x00000400
          input block cfm from [ Linker created ], size 16, align 2
      place at 0x1ffff800
          input block vectors_ram from [ Linker created ], size 0, align 1
      place at 0x20001800
          input block stack from [ Linker created ], size 256, align 8
      place in [0x00000000 to 0x0000ffff] with auto order
      place in [0x00000400 to 0x0000040f] with auto order
      place in [0x00000000 to 0x0000ffff] with auto order
          input section .text.menuProcModelIndex(unsigned char) from menus.o, size 4324, align 4
          input section .text.menuProcIndex(unsigned char) from menus.o, size 3216, align 4
          input section .text.perOut(short*, unsigned char) from menus.o, size 3016, align 4
          input section .text.mainSequence() from er9x.o, size 1940, align 4
          input section .text.menuProc0(unsigned char) from menus.o, size 1420, align 4
          input section .text.menuProcMixOne(unsigned char) from menus.o, size 1216, align 4
          input section .text.menuProcMix(unsigned char) from menus.o, size 1196, align 4
          input section .text.menuProcVoiceOne(unsigned char) from menus.o, size 1140, align 4
          input section .text.ActionAFHDS2A from AFHDS2A_a7105.o, size 976, align 4
          input section .text.HW_Init from BoardI6.o, size 944, align 4
          input section .text.MState2::check_columns(unsigned char, unsigned char) from menus.o, size 828, align 4
          input section .text.processCrossfireTelemetryFrame() from crossfire.o, size 824, align 4
          input section .text.menuProcModelSelect(unsigned char) from menus.o, size 796, align 4
          input section .text.timer() from menus.o, size 792, align 4
          input section .text.audioQueue::event(unsigned char, unsigned char) from audio.o, size 760, align 4
          input section .text.procOneVoiceAlarm(t_voiceAlarm*, unsigned char) from er9x.o, size 736, align 4
          input section .text.menuProcProtocol(unsigned char) from menus.o, size 676, align 4
          input section .text.menuScaleOne(unsigned char) from menus.o, size 660, align 4
          input section .text.mainER() from er9x.o, size 544, align 4
          input section .text.eeLoadModel(unsigned char) from pers.o, size 524, align 4
          input section .text.parseParameterInfoMessage(unsigned char*, unsigned char) from elrsV2.o, size 508, align 4
          input section .text.getSwitch(signed char, bool, unsigned char) from er9x.o, size 488, align 4
          input section .text.menuProcTelemetry(unsigned char) from menus.o, size 488, align 4
          input section .text.menuProcGlobals(unsigned char) from menus.o, size 488, align 4
          input section .text.lcd_outdezNAtt(unsigned char, unsigned char, int, unsigned char, signed char, unsigned char) from lcd.o, size 488, align 4
          input section .text.menuPhaseOne(unsigned char) from menus.o, size 476, align 4
          input section .text.menuSetFailsafe(unsigned char) from menus.o, size 456, align 4
          input section .text.putsTelemetryChannel(unsigned char, unsigned char, signed char, int, unsigned char, unsigned char) from menus.o, size 444, align 4
          input section .text.checkIncDec16(short, short, short, unsigned char) from er9x.o, size 392, align 4
          input section .text.perOutPhase(short*, unsigned char) from menus.o, size 388, align 4
          input section .text.parseDeviceInfoMessage(unsigned char*) from elrsV2.o, size 380, align 4
          input section .text.handleDevicePageEvent(unsigned char) from elrsV2.o, size 356, align 4
          input section .text.AFHDS2A_build_packet(unsigned char) from AFHDS2A_a7105.o, size 356, align 4
          input section .text.i2c_master from BoardI6.o, size 352, align 4
          input section .text.eeCheck(bool) from pers.o, size 352, align 4
          input section .text.menuProcCurveOne(unsigned char) from menus.o, size 352, align 4
          input section .text.eeprom_write_page_cmp(char const*, unsigned short, unsigned int) from drivers.o, size 348, align 4
          input section .text.processFlySkySensor(unsigned char const*, unsigned char) from AFHDS2A_a7105.o, size 344, align 4
          input section .text.doPopup(char const*, unsigned char, unsigned char) from menus.o, size 324, align 4
          input section .text.lcd_putcAtt(unsigned char, unsigned char, char, unsigned char) from lcd.o, size 300, align 4
          input section .text.menuProcVoiceAlarm(unsigned char) from menus.o, size 280, align 4
          input section .text.runCrossfireTelemetryCallback(unsigned char, unsigned char*, unsigned char) from elrsV2.o, size 236, align 4
          input section .text.menuModelPhases(unsigned char) from menus.o, size 236, align 4
          input section .text.setupPulsesPPM(unsigned char) from pulses.o, size 236, align 4
          input section .text.checkSwitches() from er9x.o, size 228, align 4
          input section .text.runPopupPage(unsigned char) from elrsV2.o, size 228, align 4
          input section .text.per10ms() from drivers.o, size 216, align 4
          input section .text.setStickCenter() from menus.o, size 216, align 4
          input section .text.voice_telem_item(unsigned char) from menus.o, size 204, align 4
          input section .text.calc_scaler(unsigned char, unsigned char*, unsigned char*) from menus.o, size 204, align 4
          input section .text.runDevicePage(unsigned char) from elrsV2.o, size 200, align 4
          input section .text.EFile::write(unsigned char*, unsigned char) from file.o, size 196, align 4
          input section .text.Key::input(bool, EnumKeys) from drivers.o, size 196, align 4
          input section .text.audioQueue::play(unsigned char, unsigned char, unsigned char, unsigned char) from audio.o, size 192, align 4
          input section .text.menuProcStatistic(unsigned char) from menus.o, size 192, align 4
          input section .text.menuRXSetup(unsigned char) from menus.o, size 192, align 4
          input section .text.A7105_Init() from A7105_SPI.o, size 192, align 4
          input section .text.calcExpo(unsigned char, short) from menus.o, size 188, align 4
          input section .text.initAFHDS2A from AFHDS2A_a7105.o, size 184, align 4
          input section .text.menuProcCurve(unsigned char) from menus.o, size 184, align 4
          input section .text.indexProcess(unsigned char, MState2*, unsigned char) from menus.o, size 180, align 4
          input section .text.setupPulses() from pulses.o, size 180, align 4
          input section .text.editName(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char) from menus.o, size 176, align 4
          input section .text.editExpoVals(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) from menus.o, size 176, align 4
          input section .text.EeFsck() from file.o, size 164, align 4
          input section .text.menuDeleteDupModel(unsigned char) from menus.o, size 164, align 4
          input section .text.menuRangeBind(unsigned char) from menus.o, size 164, align 4
          input section .text.putsTmrMode(unsigned char, unsigned char, unsigned char, unsigned char) from er9x.o, size 164, align 4
          input section .text.drawFunction(unsigned char, unsigned char) from menus.o, size 160, align 4
          input section .init.SystemInit from system_MKL16Z4.o, size 148, align 4
          input section .text.checkIndexed(unsigned char, char const*, unsigned char, unsigned char) from menus.o, size 144, align 4
          input section .text.doMainScreenGrphics() from menus.o, size 140, align 4
          input section .text.refreshDiplay() from lcd.o, size 140, align 4
          input section .text.gvarMenuItem(unsigned char, unsigned char, signed char, signed char, signed char, unsigned char) from menus.o, size 140, align 4
          input section .text.drawCurve(unsigned char) from menus.o, size 136, align 4
          input section .text.keyState(EnumKeys) from drivers.o, size 136, align 4
          input section .text.createCrossfireChannelsFrame(unsigned char*, short*) from crossfire.o, size 136, align 4
          input section .text.eeGeneralDefault() from pers.o, size 136, align 4
          input section .text.putsChnRaw(unsigned char, unsigned char, unsigned char, unsigned char) from er9x.o, size 136, align 4
          input section .text.setup_crsf_serial_port from BoardI6.o, size 132, align 4
          input section .text.t_voice::voice_process() from audio.o, size 132, align 4
          input section .text.audioQueue::heartbeat() from audio.o, size 128, align 4
          input section .text.fieldTextSelectionLoad(FieldProps*, unsigned char*, unsigned char) from elrsV2.o, size 124, align 4
          input section .text.selectField(signed char) from elrsV2.o, size 124, align 4
          input section .text.scaleAnalog(short, unsigned char) from menus.o, size 124, align 4
          input section .text.EFile::read(unsigned char*, unsigned short) from file.o, size 120, align 4
          input section .text.lcd_vline(unsigned char, unsigned char, signed char) from lcd.o, size 120, align 4
          input section .text.fieldTextSelectionDisplay(FieldProps*, unsigned char, unsigned char) from elrsV2.o, size 120, align 4
          input section .text.eeReadGeneral() from pers.o, size 120, align 4
          input section .text.get_telemetry_value(unsigned char) from menus.o, size 116, align 4
          input section .text.getGvarSourceValue(unsigned char) from er9x.o, size 116, align 4
          input section .text.fieldFolderOpen(FieldProps*) from elrsV2.o, size 116, align 4
          input section .text.putsDrSwitches(unsigned char, unsigned char, signed char, unsigned char) from er9x.o, size 116, align 4
          input section .text.UIbackExec(FieldProps*) from elrsV2.o, size 116, align 4
          input section .text.insertMix(unsigned char, unsigned char) from menus.o, size 112, align 4
          input section .text.getValue(unsigned char) from er9x.o, size 112, align 4
          input section .text.alertx(char const*, bool) from er9x.o, size 112, align 4
          input section .text.modelDefaultWrite(unsigned char) from pers.o, size 112, align 4
          input section .text.menuDeleteMix(unsigned char) from menus.o, size 112, align 4
          input section .text.UART2_IRQHandler from BoardI6.o, size 112, align 4
          input section .text.processCrossfireTelemetryData(unsigned char) from crossfire.o, size 108, align 4
          input section .text.dispSignalQality(unsigned char) from menus.o, size 108, align 4
          input section .text.putsTelemValue(unsigned char, unsigned char, int, unsigned char, unsigned char) from er9x.o, size 108, align 4
          input section .text.SPI0_IRQHandler from BoardI6.o, size 108, align 4
          input section .text.eeDuplicateModel(unsigned char) from pers.o, size 104, align 4
          input section .text.crossfireTelemetryPush(unsigned char, unsigned char*, unsigned char) from crossfire.o, size 100, align 4
          input section .text.A7105_AdjustLOBaseFreq() from A7105_SPI.o, size 100, align 4
          input section .text.lcd_hlineStip(unsigned char, unsigned char, signed char, unsigned char) from lcd.o, size 100, align 4
          input section .text.PIND from BoardI6.o, size 100, align 4
          input section .text.eeLoadModelName(unsigned char, char*, unsigned char) from pers.o, size 96, align 4
          input section .text.setTrimValue(unsigned char, unsigned char, short) from er9x.o, size 96, align 4
          input section .text.PINB from BoardI6.o, size 96, align 4
          input section .text.crsf_send_data from BoardI6.o, size 92, align 4
          input section .text.almess(char const*, unsigned char) from er9x.o, size 92, align 4
          input section .text.doBackLightVoice(unsigned char) from er9x.o, size 92, align 4
          input section .text.calcStickScroll(unsigned char) from er9x.o, size 92, align 4
          input section .text.allocateFields() from elrsV2.o, size 92, align 4
          input section .text.applyTemplate() from templates.o, size 92, align 4
          input section .text.getADC_osmp from BoardI6.o, size 88, align 4
          input section .text.EFile::closeTrunc() from file.o, size 88, align 4
          input section .text.lcd_init() from lcd.o, size 88, align 4
          input section .text.setMix(unsigned char, unsigned char) from templates.o, size 88, align 4
          input section .text.serialVoiceInit(void (*)(unsigned char*, unsigned char)) from BoardI6.o, size 88, align 4
          input section .text.eeWriteGeneral() from pers.o, size 84, align 4
          input section .text.putsChnOpRaw(unsigned char, unsigned char, t_MixData*, unsigned char) from menus.o, size 84, align 4
          input section .text.TPM0_IRQHandler from BoardI6.o, size 84, align 4
          input section .text.PINE from BoardI6.o, size 84, align 4
          input section .text.fieldUnifiedDisplay(FieldProps*, unsigned char, unsigned char) from elrsV2.o, size 80, align 4
          input section .text.A7105_WriteData(unsigned char, unsigned char) from A7105_SPI.o, size 80, align 4
          input section .text.putsTrimMode(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) from menus.o, size 80, align 4
          input section .text.ISR_TIMER0_COMP_vect from er9x.o, size 80, align 4
          input section .text.incrField(signed char) from elrsV2.o, size 76, align 4
          input section .text.checkTHR() from er9x.o, size 76, align 4
          input section .text.lcd_img(unsigned char, unsigned char, unsigned char const*, unsigned char) from lcd.o, size 76, align 4
          input section .text.check_backlight_voice() from er9x.o, size 76, align 4
          input section .text.checkThrottlePosition() from er9x.o, size 76, align 4
          input section .text.setupPulsesCrossfire() from crossfire.o, size 76, align 4
          input section .text.uart_clear_error() from BoardI6.o, size 76, align 4
          input section .text.SPI_RADIO_ReceiveBlock from BoardI6.o, size 76, align 4
          input section .text.SetStartPulsePol() from pulses.o, size 72, align 4
          input section .text.yesNoMenuExit(unsigned char, char const*) from menus.o, size 72, align 4
          input section .text._GLOBAL__sub_I_ELRS.cpp from ELRS.o, size 72, align 4
          input section .text.PIT_IRQHandler from BoardI6.o, size 72, align 4
          input section .rodata.functions from elrsV2.o, size 72, align 4
          input section .text.shutdown_crsf_serial_port from BoardI6.o, size 68, align 4
          input section .text.eeprom_read_block(void*, void const*, unsigned int) from drivers.o, size 68, align 4
          input section .text.eeWriteBlockCmp(void const*, unsigned short, unsigned int) from drivers.o, size 68, align 4
          input section .text.ISR_TIMER1_COMPA_vect from pulses.o, size 68, align 4
          input section .init from MKL16Z4_Vectors.o, size 68, align 4
          input section .text.EFile::swap(unsigned char, unsigned char) from file.o, size 64, align 4
          input section .text.audioQueue::getToneLength(unsigned char) from audio.o, size 64, align 4
          input section .text.processCrossfireTelemetryValue(unsigned char, int) from crossfire.o, size 64, align 4
          input section .text.crossfileMenu(MState2&, unsigned char, unsigned char, unsigned char, unsigned char) from elrsV2.o, size 64, align 4
          input section .text.ELRSV2_run(unsigned char) from elrsV2.o, size 64, align 4
          input section .text.getField(unsigned char) from elrsV2.o, size 60, align 4
          input section .text.editSlowDelay(unsigned char, unsigned char, unsigned char) from menus.o, size 60, align 4
          input section .text.anaIn(unsigned char) from er9x.o, size 60, align 4
          input section .text.displayOneSwitch(unsigned char, unsigned char, unsigned char) from menus.o, size 60, align 4
          input section .text.rangeBindAction(unsigned char, unsigned char) from menus.o, size 60, align 4
          input section .text.getRawTrimValue(unsigned char, unsigned char) from er9x.o, size 60, align 4
          input section .text.ELRSV2_stop() from elrsV2.o, size 60, align 4
          input section .text.EeFsFormat() from file.o, size 60, align 4
          input section .text.audioQueue::driver() from er9x.o, size 56, align 4
          input section .text.REG(signed char, signed char, signed char) from er9x.o, size 56, align 4
          input section .text.getCrossfireTelemetryValue(unsigned char, int&, int) from crossfire.o, size 56, align 4
          input section .text.convert_failsafe_ppm(unsigned char) from A7105_SPI.o, size 56, align 4
          input section .text.lcd_char_inverse(unsigned char, unsigned char, unsigned char, unsigned char) from lcd.o, size 56, align 4
          input section .text.get_dr_state(unsigned char) from menus.o, size 56, align 4
          input section .text.resetTimern(unsigned char) from menus.o, size 56, align 4
          input section .text.PORTC_PORTD_IRQHandler from BoardI6.o, size 56, align 4
          input section .rodata.menuProcModelIndex(unsigned char)::n_Strings from menus.o, size 56, align 4
          input section .rodata..Lswitch.table.menuProcModelIndex(unsigned char) from menus.o, size 56, align 4
          input section .text.put_curve(unsigned char, unsigned char, signed char, unsigned char) from menus.o, size 52, align 4
          input section .text.pushMenu(void (*)(unsigned char)) from er9x.o, size 52, align 4
          input section .text.eeLoadModelForBackup(unsigned char) from pers.o, size 52, align 4
          input section .text.fieldCommandSave(FieldProps*) from elrsV2.o, size 52, align 4
          input section .text.lcd_write_bits(unsigned char*, unsigned char) from lcd.o, size 52, align 4
          input section .text.getFlightPhase() from er9x.o, size 52, align 4
          input section .text.A7105_SetPower() from A7105_SPI.o, size 52, align 4
          input section .text.SPI_RADIO_SendBlock from BoardI6.o, size 52, align 4
          input section .text.EFile::create(unsigned char, unsigned char, unsigned short) from file.o, size 48, align 4
          input section .text.EeFsFree(unsigned char) from file.o, size 48, align 4
          input section .text.modelSave(unsigned char) from pers.o, size 48, align 4
          input section .text.char2idx(char) from menus.o, size 48, align 4
          input section .text.EeFsOpen() from file.o, size 48, align 4
          input section .text.eeDirty(unsigned char) from pers.o, size 48, align 4
          input section .text.displayVoiceRate(unsigned char, unsigned char, unsigned char, unsigned char) from menus.o, size 48, align 4
          input section .text.A7105_ReadData(unsigned char) from A7105_SPI.o, size 48, align 4
          input section .text.UART0_IRQHandler from BoardI6.o, size 48, align 4
          input section .text.SX127xDriver::SX127xDriver() from SX127x.o, size 44, align 4
          input section .text.dispGvar(unsigned char, unsigned char, unsigned char, unsigned char) from menus.o, size 44, align 4
          input section .text.popMenu(bool) from er9x.o, size 44, align 4
          input section .text.crossfireTelemetryPush4(unsigned char, unsigned char, unsigned char) from elrsV2.o, size 44, align 4
          input section .text.sendSerialVoiceData(unsigned char*, unsigned int) from BoardI6.o, size 44, align 4
          input section .text.putVoiceQueueLong(unsigned short) from audio.o, size 44, align 4
          input section .text.fieldCommandLoad(FieldProps*, unsigned char*, unsigned char) from elrsV2.o, size 44, align 4
          input section .text.menuMixersLimit(unsigned char) from menus.o, size 44, align 4
          input section .text.PING from BoardI6.o, size 44, align 4
          input section .rodata.menuProcIndex(unsigned char)::n_Strings from menus.o, size 44, align 4
          input section .text.mDelay from BoardI6.o, size 40, align 4
          input section .text.EFile::rm(unsigned char) from file.o, size 40, align 4
          input section .text.EeFsAlloc() from file.o, size 40, align 4
          input section .text.popupCompat(unsigned char) from elrsV2.o, size 40, align 4
          input section .text.putsVolts(unsigned char, unsigned char, short, unsigned char) from lcd.o, size 40, align 4
          input section .text.putsVBat(unsigned char, unsigned char, unsigned char) from lcd.o, size 40, align 4
          input section .text.lcd_plot(unsigned char, unsigned char) from lcd.o, size 40, align 4
          input section .text.A7105_AntSwitch() from A7105_SPI.o, size 40, align 4
          input section .text.eeWaitComplete() from pers.o, size 40, align 4
          input section .text.switchDisplay(unsigned char, unsigned char) from menus.o, size 40, align 4
          input section .text.Uart_SendCMD(unsigned char, unsigned char, unsigned short) from audio.o, size 40, align 4
          input section .text.startPulses() from pulses.o, size 40, align 4
          input section .text.evalOffset(signed char) from menus.o, size 40, align 4
          input section .init from Kinetis_KL_Startup.o, size 40, align 4
          input section .text.EFile::openRd(unsigned char) from file.o, size 36, align 4
          input section .text.curveAddress(unsigned char) from menus.o, size 36, align 4
          input section .text.crsf_init() from crossfire.o, size 36, align 4
          input section .text.ee_waite() from drivers.o, size 36, align 4
          input section .text.reachMixerCountLimit() from menus.o, size 36, align 4
          input section .text.dispFlightModename(unsigned char, unsigned char, unsigned char) from menus.o, size 36, align 4
          input section .text.evalChkSum() from pers.o, size 36, align 4
          input section .text.LCD_DATA from BoardI6.o, size 36, align 4
          input section .rodata.processCrossfireTelemetryFrame()::power_values from crossfire.o, size 36, align 4
          input section .text.EFile::size() from file.o, size 32, align 4
          input section .text.setVolume(unsigned char) from audio.o, size 32, align 4
          input section .text.chainMenu(void (*)(unsigned char)) from er9x.o, size 32, align 4
          input section .text.trace() from menus.o, size 32, align 4
          input section .text.crc8(unsigned char const*, unsigned int) from crc_crsf.o, size 32, align 4
          input section .text.checkCrossfireTelemetryFrameCRC() from crossfire.o, size 32, align 4
          input section .text.processVoiceAlarms() from er9x.o, size 32, align 4
          input section .text.fieldStringDisplay(FieldProps*, unsigned char, unsigned char) from elrsV2.o, size 32, align 4
          input section .text.putsOffDecimal(unsigned char, unsigned char, unsigned short, unsigned char) from menus.o, size 32, align 4
          input section .text.lcdSetRefVolt(unsigned char) from lcd.o, size 32, align 4
          input section .text.backlightKey() from er9x.o, size 32, align 4
          input section .text.pauseEvents(unsigned char) from drivers.o, size 32, align 4
          input section .text.menuPressed() from drivers.o, size 32, align 4
          input section .text.EeFsGetFree() from file.o, size 32, align 4
          input section .text.SetPRTTimPeriod from BoardI6.o, size 32, align 4
          input section .text.audioVoiceDefevent(unsigned char, unsigned char) from audio.o, size 28, align 4
          input section .text.throttleReversed() from er9x.o, size 28, align 4
          input section .text.putWarnSwitch(unsigned char, unsigned char) from er9x.o, size 28, align 4
          input section .text.modeFixValue(unsigned char) from er9x.o, size 28, align 4
          input section .text.displayTimer(unsigned char, unsigned char, unsigned char, unsigned char) from menus.o, size 28, align 4
          input section .text.on_voice_cb(unsigned char*, unsigned char) from audio.o, size 28, align 4
          input section .text.crsf_action() from crossfire.o, size 28, align 4
          input section .text.killEvents(unsigned char) from drivers.o, size 28, align 4
          input section .text.TPM2_IRQHandler from BoardI6.o, size 28, align 4
          input section .text.TPM1_IRQHandler from BoardI6.o, size 28, align 4
          input section .text.EnableGIO from BoardI6.o, size 28, align 4
          input section .text.clearKeyEvents() from er9x.o, size 24, align 4
          input section .text.lcd_rect(unsigned char, unsigned char, unsigned char, unsigned char) from lcd.o, size 24, align 4
          input section .text.putsAttIdxTelemItems(unsigned char, unsigned char, unsigned char, unsigned char) from menus.o, size 24, align 4
          input section .text.IS_EXPO_THROTTLE(unsigned char) from er9x.o, size 24, align 4
          input section .text.hyphinvMenuItem(unsigned char, unsigned char, unsigned char) from menus.o, size 24, align 4
          input section .text.ISR_TIMER2_OVF_vect from er9x.o, size 24, align 4
          input section .text.GetChipID from BoardI6.o, size 24, align 4
          input section .segger.init.__SEGGER_init_heap from SEGGER_crtinit_v6m_little.o, size 24, align 4
          input section .rodata..Lswitch.table.fieldUnifiedDisplay(FieldProps*, unsigned char, unsigned char) from elrsV2.o, size 24, align 4
          input section .text.__SEGGER_RTL_init_heap from heapops_basic.o (heapops_basic_v6m_little.a), size 20, align 4
          input section .text.EFile::exists(unsigned char) from file.o, size 20, align 4
          input section .text.EeFsFlush() from file.o, size 20, align 4
          input section .text.EeFsFlushFreelist() from file.o, size 20, align 4
          input section .text.lcd_clear() from lcd.o, size 20, align 4
          input section .text.idx2char(unsigned char) from menus.o, size 20, align 4
          input section .text.checkIncDec_u0(short, unsigned char) from er9x.o, size 20, align 4
          input section .text.checkIncDec_0(signed char, signed char) from er9x.o, size 20, align 4
          input section .text.audioDefevent(unsigned char) from audio.o, size 20, align 4
          input section .text.resetTimer1() from menus.o, size 20, align 4
          input section .text.displayNext() from menus.o, size 20, align 4
          input section .text.clearMixes() from templates.o, size 20, align 4
          input section .text.audioEvent(unsigned char, unsigned short) from audio.o, size 20, align 4
          input section .text.DisableGIO from BoardI6.o, size 20, align 4
          input section .init._start from SEGGER_THUMB_Startup.o, size 20, align 4
          input section .text.rw_0 from BoardI6.o, size 16, align 4
          input section .text.rs_1 from BoardI6.o, size 16, align 4
          input section .text.rs_0 from BoardI6.o, size 16, align 4
          input section .text.rd_1 from BoardI6.o, size 16, align 4
          input section .text.rd_0 from BoardI6.o, size 16, align 4
          input section .text.CS_STATE(unsigned char) from er9x.o, size 16, align 4
          input section .text.lcdSetContrast() from lcd.o, size 16, align 4
          input section .text.checkIncDec_i8(signed char, signed char, signed char) from er9x.o, size 16, align 4
          input section .text.mixaddress(unsigned char) from er9x.o, size 16, align 4
          input section .text._GLOBAL__sub_I_er9x.cpp from er9x.o, size 16, align 4
          input section .text._GLOBAL__sub_I_SX127x.cpp from SX127x.o, size 16, align 4
          input section .text.TX_RX_PutVal from BoardI6.o, size 16, align 4
          input section .text.GetPPMTimCompareInterruptFlag from BoardI6.o, size 16, align 4
          input section .text.GetPPMOutState from BoardI6.o, size 16, align 4
          input section .text.ClearPPMTimCompareInterruptFlag from BoardI6.o, size 16, align 4
          input section .text.Buzzer_SetVal from BoardI6.o, size 16, align 4
          input section .text.Buzzer_ClrVal from BoardI6.o, size 16, align 4
          input section .text.rst_1 from BoardI6.o, size 12, align 4
          input section .text.rst_0 from BoardI6.o, size 12, align 4
          input section .text.cs_0 from BoardI6.o, size 12, align 4
          input section .text.backlight_on from BoardI6.o, size 12, align 4
          input section .text.backlight_off from BoardI6.o, size 12, align 4
          input section .text.a7105_csn_on from BoardI6.o, size 12, align 4
          input section .text.a7105_csn_off from BoardI6.o, size 12, align 4
          input section .text.SX127xHal::SX127xHal() from SX127xHal.o, size 12, align 4
          input section .text.get_tmr10ms() from er9x.o, size 12, align 4
          input section .text.SetPPMTimCompare from BoardI6.o, size 12, align 4
          input section .text.RF1_SetVal from BoardI6.o, size 12, align 4
          input section .text.RF1_ClrVal from BoardI6.o, size 12, align 4
          input section .text.RF0_SetVal from BoardI6.o, size 12, align 4
          input section .text.RF0_ClrVal from BoardI6.o, size 12, align 4
          input section .text.GetPPMTimCompare from BoardI6.o, size 12, align 4
          input section .text.EnablePRTTim from BoardI6.o, size 12, align 4
          input section .text.EnablePPMTim from BoardI6.o, size 12, align 4
          input section .text.EnablePPMOut from BoardI6.o, size 12, align 4
          input section .text.DisablePRTTim from BoardI6.o, size 12, align 4
          input section .text.DisablePPMOut from BoardI6.o, size 12, align 4
          input section .text.voice_numeric(short, unsigned char, unsigned char) from audio.o, size 246, align 2
          input section .text.EFile::writeRlc(unsigned char, unsigned char, unsigned char*, unsigned short, unsigned char) from file.o, size 224, align 2
          input section .text.putsTime(unsigned char, unsigned char, short, unsigned char, unsigned char) from lcd.o, size 132, align 2
          input section .text.intpol(short, unsigned char) from menus.o, size 116, align 2
          input section .text.EFile::readRlc(unsigned char*, unsigned short) from file.o, size 114, align 2
          input section .text.displayIndex(char const* const*, unsigned char, unsigned char, unsigned char) from menus.o, size 108, align 2
          input section .text.telltale(unsigned char, signed char, signed char) from menus.o, size 90, align 2
          input section .text.tiny_sprintf(char*, char const*, char, char, ...) from elrsV2.o, size 88, align 2
          input section .text.lcd_hbar(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) from lcd.o, size 74, align 2
          input section .text.lcd_rect_xor(unsigned char, unsigned char, unsigned char, unsigned char) from lcd.o, size 70, align 2
          input section .text.getTrimFlightPhase(unsigned char, unsigned char) from er9x.o, size 66, align 2
          input section .text.lcd_outhex4(unsigned char, unsigned char, unsigned short) from lcd.o, size 66, align 2
          input section .text.libc.__aeabi_idiv from intasmops_arm.o (libc_v6m_t_le_eabi_small.a), size 64, align 2
          input section .text.displayOneSwitch3Pos(unsigned char, unsigned char, unsigned char) from menus.o, size 62, align 2
          input section .text.expo(short, short) from menus.o, size 60, align 2
          input section .text.libc.__aeabi_uidiv from intasmops_arm.o (libc_v6m_t_le_eabi_small.a), size 56, align 2
          input section .text.edit_dr_switch(unsigned char, unsigned char, signed char, unsigned char, unsigned char) from menus.o, size 56, align 2
          input section .text.libc.strstr from strops.o (libc_v6m_t_le_eabi_small.a), size 52, align 2
          input section .text.lcd_putsAtt(unsigned char, unsigned char, char const*, unsigned char) from lcd.o, size 50, align 2
          input section .text.libc.memcmp from strops.o (libc_v6m_t_le_eabi_small.a), size 46, align 2
          input section .text.GENERIC_CRC14::GENERIC_CRC14(unsigned short) from crc.o, size 46, align 2
          input section .text.putsMomentDrSwitches(unsigned char, unsigned char, signed char, unsigned char) from er9x.o, size 46, align 2
          input section .text.A7105_WriteID(unsigned int) from A7105_SPI.o, size 44, align 2
          input section .text.A7105_ReadReg(unsigned char) from A7105_SPI.o, size 44, align 2
          input section .text.libc.div from intops.o (libc_v6m_t_le_eabi_small.a), size 42, align 2
          input section .text.lcd_putsnAtt(unsigned char, unsigned char, char const*, unsigned char, unsigned char) from lcd.o, size 42, align 2
          input section .text.doVoiceAlarmSource(t_voiceAlarm*) from er9x.o, size 40, align 2
          input section .text.lcd_puts_Pskip(unsigned char, char const*, unsigned char) from lcd.o, size 38, align 2
          input section .text.A7105_Reset() from A7105_SPI.o, size 38, align 2
          input section .text.DoSum(unsigned char*, unsigned char) from audio.o, size 36, align 2
          input section .text.scalerDecimal(unsigned char, unsigned char, unsigned char) from menus.o, size 36, align 2
          input section .text.libc.__aeabi_memmove from strasmops_arm.o (libc_v6m_t_le_eabi_small.a), size 34, align 2
          input section .text.expou(unsigned short, unsigned short) from menus.o, size 34, align 2
          input section .text.getCurrentSwitchStates() from er9x.o, size 34, align 2
          input section .text.lcd_outdezAtt(unsigned char, unsigned char, short, unsigned char) from lcd.o, size 34, align 2
          input section .text.lcd_2_digits(unsigned char, unsigned char, unsigned char, unsigned char) from lcd.o, size 34, align 2
          input section .text.lcdSendCtl(unsigned char) from lcd.o, size 32, align 2
          input section .text.stickMoveValue() from er9x.o, size 32, align 2
          input section .text.libc.__aeabi_llsr from intasmops_arm.o (libc_v6m_t_le_eabi_small.a), size 30, align 2
          input section .text.libc.__aeabi_llsl from intasmops_arm.o (libc_v6m_t_le_eabi_small.a), size 30, align 2
          input section .text.A7105_WriteReg(unsigned char, unsigned char) from A7105_SPI.o, size 30, align 2
          input section .text.onoffMenuItem(unsigned char, unsigned char, char const*, unsigned char) from menus.o, size 28, align 2
          input section .text.validateName(char*, unsigned char) from pers.o, size 28, align 2
          input section .text.voiceMinutes(short) from menus.o, size 28, align 2
          input section .text.A7105_Strobe(unsigned char) from A7105_SPI.o, size 28, align 2
          input section .text.lcd_putsAttIdx(unsigned char, unsigned char, char const*, unsigned char, unsigned char) from lcd.o, size 26, align 2
          input section .text.StubbornSender::ResetState() from stubborn_sender.o, size 24, align 2
          input section .text.EeFsRead(unsigned char, unsigned char) from file.o, size 24, align 2
          input section .text.crossfireTelemetryPing() from elrsV2.o, size 24, align 2
          input section .text.semicolonPos(char const*, unsigned char) from elrsV2.o, size 22, align 2
          input section .text.EeFsSetLink(unsigned char, unsigned char) from file.o, size 22, align 2
          input section .text.gvarMenuItem125(unsigned char, unsigned char, signed char, unsigned char) from menus.o, size 22, align 2
          input section .text.calc100toRESX(signed char) from er9x.o, size 22, align 2
          input section .text.libc.__aeabi_memclr from strasmops_arm.o (libc_v6m_t_le_eabi_small.a), size 20, align 2
          input section .text.StubbornReceiver::StubbornReceiver(unsigned char) from stubborn_receiver.o, size 20, align 2
          input section .text.setNameP(char*, char const*) from pers.o, size 20, align 2
          input section .text.lcd_xlabel_decimal(unsigned char, unsigned char, unsigned short, unsigned char, char const*) from menus.o, size 20, align 2
          input section .text.onoffItem(unsigned char, unsigned char, unsigned char) from menus.o, size 18, align 2
          input section .text.offonItem(unsigned char, unsigned char, unsigned char) from menus.o, size 18, align 2
          input section .text.offonMenuItem(unsigned char, unsigned char, char const*, unsigned char) from menus.o, size 18, align 2
          input section .text.putc_0_1(unsigned char, unsigned char, unsigned char) from menus.o, size 18, align 2
          input section .text.libc.__aeabi_uidivmod from intasmops_arm.o (libc_v6m_t_le_eabi_small.a), size 16, align 2
          input section .text.putsChn(unsigned char, unsigned char, unsigned char, unsigned char) from er9x.o, size 16, align 2
          input section .text.TITLEP(char const*) from menus.o, size 16, align 2
          input section .text.lcd_puts_Pleft(unsigned char, char const*) from lcd.o, size 16, align 2
          input section .text.calc1000toRESX(short) from er9x.o, size 16, align 2
          input section .text.putsTimeNoAtt(unsigned char, unsigned char, short) from menus.o, size 16, align 2
          input section .text.getTrimValue(unsigned char, unsigned char) from er9x.o, size 16, align 2
          input section .text.lcd_putsn_P(unsigned char, unsigned char, char const*, unsigned char) from lcd.o, size 16, align 2
          input section .text.A7105_Sleep() from A7105_SPI.o, size 16, align 2
          input section .text.main from main.o, size 14, align 2
          input section .text.libc.strlen from strasmops_arm.o (libc_v6m_t_le_eabi_small.a), size 14, align 2
          input section .text.libc.strcpy from strasmops_arm.o (libc_v6m_t_le_eabi_small.a), size 14, align 2
          input section .text.libc.memcpy from strasmops_arm.o (libc_v6m_t_le_eabi_small.a), size 14, align 2
          input section .text.libc.__aeabi_idivmod from intasmops_arm.o (libc_v6m_t_le_eabi_small.a), size 14, align 2
          input section .text.StubbornSender::StubbornSender(unsigned char) from stubborn_sender.o, size 14, align 2
          input section .text.message(char const*) from er9x.o, size 14, align 2
          input section .text.keyDown() from er9x.o, size 14, align 2
          input section .text.fieldTextSelectionSave(FieldProps*) from elrsV2.o, size 14, align 2
          input section .text.putVoiceQueueUpper(unsigned char) from audio.o, size 14, align 2
          input section .text.REG100_100(signed char) from er9x.o, size 14, align 2
          input section .text.switchPosition(unsigned char) from drivers.o, size 12, align 2
          input section .text.eeModelExists(unsigned char) from pers.o, size 12, align 2
          input section .text.getSwitch00(signed char) from er9x.o, size 12, align 2
          input section .text.EeFsGetLink(unsigned char) from file.o, size 10, align 2
          input section .text.lcd_hline(unsigned char, unsigned char, signed char) from lcd.o, size 10, align 2
          input section .text.lcd_putc(unsigned char, unsigned char, char) from lcd.o, size 10, align 2
          input section .text.alert(char const*) from er9x.o, size 10, align 2
          input section .text.resetTimer2() from menus.o, size 10, align 2
          input section .text.checkIncDec(signed char, signed char, signed char, unsigned char) from er9x.o, size 10, align 2
          input section .text.lcd_puts_P(unsigned char, unsigned char, char const*) from lcd.o, size 10, align 2
          input section .text.lcd_outdez(unsigned char, unsigned char, short) from lcd.o, size 10, align 2
          input section .text.audioQueue::busy() from audio.o, size 8, align 2
          input section .text.A7105_SetTxRxMode(unsigned char) from A7105_SPI.o, size 8, align 2
          input section .text.putVoiceQueue(unsigned char) from audio.o, size 8, align 2
          input section .text.crsf_shutdown() from crossfire.o, size 8, align 2
          input section .text.noopOpen(FieldProps*) from elrsV2.o, size 2, align 2
          input section .rodata.font_dblsize from lcd.o, size 1380, align 1
          input section .rodata.font from lcd.o, size 495, align 1
          input section .rodata.Str_telemItems from menus.o, size 296, align 1
          input section .rodata.crc8tab from crc_crsf.o, size 256, align 1
          input section .rodata.Str_Chans_Gv from menus.o, size 166, align 1
          input section .rodata..L.str.11 from menus.o, size 125, align 1
          input section .rodata.Str_Cswitch from menus.o, size 114, align 1
          input section .rodata.Str_Sounds from menus.o, size 98, align 1
          input section .rodata.AFHDS2A_tel from AFHDS2A_a7105.o, size 88, align 1
          input section .rodata..L.str.52 from menus.o, size 82, align 1
          input section .rodata..L.str.46 from menus.o, size 76, align 1
          input section .rodata.sticks from menus.o, size 75, align 1
          input section .rodata..L.str.110 from menus.o, size 75, align 1
          input section .rodata.Curve_Str from menus.o, size 74, align 1
          input section .rodata..L.str.105 from menus.o, size 71, align 1
          input section .rodata.s_charTab from menus.o, size 67, align 1
          input section .rodata.Str_Switches from er9x.o, size 65, align 1
          input section .rodata..L.str.4 from menus.o, size 65, align 1
          input section .rodata..L.str.6 from menus.o, size 63, align 1
          input section .rodata.Str_Main_Popup from menus.o, size 58, align 1
          input section .rodata.TelemIndex from menus.o, size 58, align 1
          input section .rodata..L.str.49 from menus.o, size 54, align 1
          input section .rodata..L.str.103 from menus.o, size 53, align 1
          input section .rodata..L.str.107 from menus.o, size 52, align 1
          input section .rodata.AFHDS2A_A7105_regs from BoardI6.o, size 50, align 1
          input section .rodata.Stamps from stamp.o, size 49, align 1
          input section .rodata..L.str.51 from menus.o, size 46, align 1
          input section .rodata..L.str.48 from menus.o, size 46, align 1
          input section .rodata..L.str.16 from menus.o, size 46, align 1
          input section .rodata..L.str.93 from menus.o, size 43, align 1
          input section .rodata..L.str.13 from er9x.o, size 43, align 1
          input section .rodata..L.str.115 from menus.o, size 43, align 1
          input section .rodata.UnitsString from menus.o, size 42, align 1
          input section .rodata.Str_Gv_Source from menus.o, size 41, align 1
          input section .rodata..L.str.71 from menus.o, size 41, align 1
          input section .rodata..L.str.47 from menus.o, size 40, align 1
          input section .rodata.MixPopList from menus.o, size 39, align 1
          input section .rodata.ModelPopList from menus.o, size 38, align 1
          input section .rodata..L.str.99 from menus.o, size 38, align 1
          input section .rodata..L.str.72 from menus.o, size 37, align 1
          input section .rodata..L.str.6 from er9x.o, size 37, align 1
          input section .rodata..L.str.108 from menus.o, size 34, align 1
          input section .rodata..L.str.5 from er9x.o, size 33, align 1
          input section .rodata..L.str.75 from menus.o, size 32, align 1
          input section .rodata..L.str.58 from menus.o, size 32, align 1
          input section .rodata..L.str.113 from menus.o, size 32, align 1
          input section .rodata.SW_3_IDX from menus.o, size 30, align 1
          input section .rodata.idx_to_afhds2a from crossfire.o, size 30, align 1
          input section .rodata..L.str.94 from menus.o, size 30, align 1
          input section .rodata..L.str.27 from menus.o, size 30, align 1
          input section .rodata..L.str.101 from menus.o, size 29, align 1
          input section .rodata..L.str.15 from menus.o, size 28, align 1
          input section .rodata..L.str.104 from menus.o, size 28, align 1
          input section .rodata..L.str.86 from menus.o, size 27, align 1
          input section .rodata..L.str.54 from menus.o, size 26, align 1
          input section .rodata..L.str.17 from menus.o, size 25, align 1
          input section .rodata.bchout_ar from er9x.o, size 24, align 1
          input section .rodata..L.str.116 from menus.o, size 24, align 1
          input section .rodata..L.str.111 from menus.o, size 24, align 1
          input section .rodata..L.str.35 from menus.o, size 23, align 1
          input section .rodata.Str_On_Off_Both from menus.o, size 22, align 1
          input section .rodata..L.str.78 from menus.o, size 22, align 1
          input section .rodata..L.str.76 from menus.o, size 22, align 1
          input section .rodata..L.str.2 from er9x.o, size 22, align 1
          input section .rodata..L.str.2 from pers.o, size 21, align 1
          input section .rodata..L.str.44 from menus.o, size 20, align 1
          input section .rodata..L.str.34 from menus.o, size 19, align 1
          input section .rodata..L.str.3 from pers.o, size 19, align 1
          input section .rodata.modi12x3 from er9x.o, size 18, align 1
          input section .rodata..L.str.69 from menus.o, size 18, align 1
          input section .rodata..L.str.5 from pers.o, size 18, align 1
          input section .rodata..L.str.25 from menus.o, size 18, align 1
          input section .rodata..L.str.23 from menus.o, size 18, align 1
          input section .rodata.menuWhenDone from menus.o, size 17, align 1
          input section .rodata..L.str.67 from menus.o, size 17, align 1
          input section .rodata..L.str.50 from menus.o, size 17, align 1
          input section .rodata..L.str.41 from menus.o, size 17, align 1
          input section .rodata..L.str.18 from menus.o, size 17, align 1
          input section .rodata..L.str.119 from menus.o, size 17, align 1
          input section .rodata..L.str.117 from menus.o, size 17, align 1
          input section .rodata..L.str.102 from menus.o, size 17, align 1
          input section .rodata.stickScramble from er9x.o, size 16, align 1
          input section .rodata.Str_EEPROM_Overflow from pers.o, size 16, align 1
          input section .rodata..L.str.74 from menus.o, size 16, align 1
          input section .rodata..L.str.62 from menus.o, size 16, align 1
          input section .rodata..L.str.4 from pers.o, size 16, align 1
          input section .rodata..L.str.21 from menus.o, size 16, align 1
          input section .rodata..L.str.121 from menus.o, size 16, align 1
          input section .rodata..L.str.120 from menus.o, size 16, align 1
          input section .rodata..L.str.12 from er9x.o, size 16, align 1
          input section .rodata..L.str.106 from menus.o, size 16, align 1
          input section .rodata.Str_Beep_Countdown from menus.o, size 15, align 1
          input section .rodata.csTypeTable from er9x.o, size 15, align 1
          input section .rodata..L.str.96 from menus.o, size 15, align 1
          input section .rodata..L.str.90 from menus.o, size 15, align 1
          input section .rodata..L.str.6 from pers.o, size 15, align 1
          input section .rodata..L.str.5 from menus.o, size 15, align 1
          input section .rodata..L.str.4 from elrsV2.o, size 15, align 1
          input section .rodata..L.str.12 from menus.o, size 15, align 1
          input section .rodata..L.str.114 from menus.o, size 15, align 1
          input section .rodata..L.str.11 from er9x.o, size 15, align 1
          input section .rodata..L.str.87 from menus.o, size 14, align 1
          input section .rodata..L.str.7 from menus.o, size 14, align 1
          input section .rodata..L.str.68 from menus.o, size 14, align 1
          input section .rodata..L.str.53 from menus.o, size 14, align 1
          input section .rodata..L.str.3 from er9x.o, size 14, align 1
          input section .rodata..L.str.100 from menus.o, size 14, align 1
          input section .rodata..L.str.7 from er9x.o, size 13, align 1
          input section .rodata..L.str.63 from menus.o, size 13, align 1
          input section .rodata..L.str.22 from menus.o, size 13, align 1
          input section .rodata..L.str from er9x.o, size 13, align 1
          input section .rodata.Lcdinit from lcd.o, size 12, align 1
          input section .rodata.Str_minute_Beep from menus.o, size 12, align 1
          input section .rodata.Str_Calibration from menus.o, size 12, align 1
          input section .rodata.Str_AudioHaptic from menus.o, size 12, align 1
          input section .rodata..L.str.8 from elrsV2.o, size 12, align 1
          input section .rodata..L.str.77 from menus.o, size 12, align 1
          input section .rodata..L.str.70 from menus.o, size 12, align 1
          input section .rodata..L.str.56 from menus.o, size 12, align 1
          input section .rodata..L.str.19 from menus.o, size 12, align 1
          input section .rodata..L.str.112 from menus.o, size 12, align 1
          input section .rodata.Str_heli_setup from menus.o, size 11, align 1
          input section .rodata.Str_Cswitches from menus.o, size 11, align 1
          input section .rodata.Str_Globals from menus.o, size 11, align 1
          input section .rodata.Str_Safety from menus.o, size 11, align 1
          input section .rodata..L.str.91 from menus.o, size 11, align 1
          input section .rodata..L.str.9 from er9x.o, size 11, align 1
          input section .rodata..L.str.79 from menus.o, size 11, align 1
          input section .rodata..L.str.64 from menus.o, size 11, align 1
          input section .rodata..L.str.1 from pers.o, size 11, align 1
          input section .rodata..L.str from pers.o, size 11, align 1
          input section .rodata.Str_Telemetry from menus.o, size 10, align 1
          input section .rodata.Str_DiagSwtch from menus.o, size 10, align 1
          input section .rodata.Str_TRE012AG from menus.o, size 10, align 1
          input section .rodata..L.str.97 from menus.o, size 10, align 1
          input section .rodata..L.str.81 from menus.o, size 10, align 1
          input section .rodata..L.str.55 from menus.o, size 10, align 1
          input section .rodata..L.str.29 from menus.o, size 10, align 1
          input section .rodata..L.str.10 from menus.o, size 10, align 1
          input section .rodata..L.str from menus.o, size 10, align 1
          input section .rodata.Str_Protocol from menus.o, size 9, align 1
          input section .rodata.Str_Hardware from menus.o, size 9, align 1
          input section .rodata.Str_Controls from menus.o, size 9, align 1
          input section .rodata..L.str.98 from menus.o, size 9, align 1
          input section .rodata..L.str.89 from menus.o, size 9, align 1
          input section .rodata..L.str.88 from menus.o, size 9, align 1
          input section .rodata..L.str.84 from menus.o, size 9, align 1
          input section .rodata..L.str.8 from er9x.o, size 9, align 1
          input section .rodata..L.str.8 from menus.o, size 9, align 1
          input section .rodata..L.str.7 from elrsV2.o, size 9, align 1
          input section .rodata..L.str.45 from menus.o, size 9, align 1
          input section .rodata..L.str.33 from menus.o, size 9, align 1
          input section .rodata..L.str.30 from menus.o, size 9, align 1
          input section .rodata..L.str.24 from menus.o, size 9, align 1
          input section .rodata.per10ms()::crossTrim from drivers.o, size 8, align 1
          input section .rodata.UnitsText from menus.o, size 8, align 1
          input section .rodata._bitmask from lcd.o, size 8, align 1
          input section .rodata.Str_Expo from menus.o, size 8, align 1
          input section .rodata.rate from er9x.o, size 8, align 1
          input section .rodata.Str_Version from menus.o, size 8, align 1
          input section .rodata.Str_Trainer from menus.o, size 8, align 1
          input section .rodata.Str_General from menus.o, size 8, align 1
          input section .rodata.Str_Display from menus.o, size 8, align 1
          input section .rodata.Str_DiagAna from menus.o, size 8, align 1
          input section .rodata.UnitsVoice from menus.o, size 8, align 1
          input section .rodata..L.str.85 from menus.o, size 8, align 1
          input section .rodata..L.str.66 from menus.o, size 8, align 1
          input section .rodata..L.str.59 from menus.o, size 8, align 1
          input section .rodata..L.str.4 from er9x.o, size 8, align 1
          input section .rodata..L.str.26 from menus.o, size 8, align 1
          input section .rodata..L.str.109 from menus.o, size 8, align 1
          input section .rodata.Str_Alert from er9x.o, size 7, align 1
          input section .rodata.ChannelToPin from BoardI6.o, size 7, align 1
          input section .rodata.Str_limits from menus.o, size 7, align 1
          input section .rodata.Str_Curves from menus.o, size 7, align 1
          input section .rodata.Str_Alarms from menus.o, size 7, align 1
          input section .rodata..L.str.80 from menus.o, size 7, align 1
          input section .rodata..L.str.61 from menus.o, size 7, align 1
          input section .rodata..L.str.2 from elrsV2.o, size 7, align 1
          input section .rodata..L.str.10 from er9x.o, size 7, align 1
          input section .rodata..L.str.1 from menus.o, size 7, align 1
          input section .rodata.Str_Timer from menus.o, size 6, align 1
          input section .rodata.Str_Modes from menus.o, size 6, align 1
          input section .rodata.Str_Mixer from menus.o, size 6, align 1
          input section .rodata.Str_Curve from menus.o, size 6, align 1
          input section .rodata.Str_1_RETA from menus.o, size 6, align 1
          input section .rodata..L.str.92 from menus.o, size 6, align 1
          input section .rodata..L.str.82 from menus.o, size 6, align 1
          input section .rodata..L.str.31 from menus.o, size 6, align 1
          input section .rodata..L.str.14 from menus.o, size 6, align 1
          input section .rodata..L.str.13 from menus.o, size 6, align 1
          input section .rodata.Str_Name from menus.o, size 5, align 1
          input section .rodata.Str_Hyphens from er9x.o, size 5, align 1
          input section .rodata..L.str.73 from menus.o, size 5, align 1
          input section .rodata..L.str.57 from menus.o, size 5, align 1
          input section .rodata..L.str.5 from elrsV2.o, size 5, align 1
          input section .rodata..L.str.38 from menus.o, size 5, align 1
          input section .rodata..L.str.32 from menus.o, size 5, align 1
          input section .rodata..L.str.3 from menus.o, size 5, align 1
          input section .rodata..L.str.20 from menus.o, size 5, align 1
          input section .rodata.menuProc0(unsigned char)::xt from menus.o, size 4, align 1
          input section .rodata.Str_ON from er9x.o, size 4, align 1
          input section .rodata.Str_OFF from er9x.o, size 4, align 1
          input section .rodata..L.str.95 from menus.o, size 4, align 1
          input section .rodata..L.str.65 from menus.o, size 4, align 1
          input section .rodata..L.str.60 from menus.o, size 4, align 1
          input section .rodata..L.str.40 from menus.o, size 4, align 1
          input section .rodata..L.str.3 from elrsV2.o, size 4, align 1
          input section .rodata..L.str.28 from menus.o, size 4, align 1
          input section .rodata..L.str.118 from menus.o, size 4, align 1
          input section .rodata..L.str.1 from er9x.o, size 4, align 1
          input section .rodata..L.str.1 from elrsV2.o, size 4, align 1
          input section .rodata.Str_SC from menus.o, size 3, align 1
          input section .rodata.Str_GV from menus.o, size 3, align 1
          input section .rodata..L.str.9 from menus.o, size 3, align 1
          input section .rodata..L.str.83 from menus.o, size 3, align 1
          input section .rodata..L.str.43 from menus.o, size 3, align 1
          input section .rodata..L.str.42 from menus.o, size 3, align 1
          input section .rodata..L.str.39 from menus.o, size 3, align 1
          input section .rodata..L.str.2 from menus.o, size 3, align 1
          input section .rodata..L.str from elrsV2.o, size 3, align 1
          input block exidx from [ Linker created ], size 0, align 1
          input block dtors from [ Linker created ], size 0, align 1
          input block ctors from [ Linker created ], size 12, align 4
      place in [0x00000000 to 0x0000ffff] with auto order
          input block tdata_load from [ Linker created ], size 0, align 1
      place in [0x1ffff800 to 0x200017ff] with auto order
      place in [0x1ffff800 to 0x200017ff] with auto order
          input block tls from [ Linker created ], size 0, align 1
      place in [0x1ffff800 to 0x200017ff] with auto order
          input section .bss.AFHDS2A_tel_status from AFHDS2A_a7105.o, size 8, align 8
          input section .bss.DisplayBuf from lcd.o, size 1024, align 4
          input section .bss.reusableBuffer from elrsV2.o, size 512, align 4
          input section .bss.Output from menus.o, size 256, align 4
          input section .bss.AFHDS2A_tel_data from AFHDS2A_a7105.o, size 172, align 4
          input section .bss.Fade from menus.o, size 80, align 4
          input section .bss.g_crossfire from crossfire.o, size 65, align 4
          input section .bss.eeFs from file.o, size 64, align 4
          input section .bss.Radio from ELRS.o, size 48, align 4
          input section .bss.packet from A7105_SPI.o, size 40, align 4
          input section .bss.g_menuStack from er9x.o, size 20, align 4
          input section .bss.outputTelemetryBuffer from crossfire.o, size 16, align 4
          input section .bss.MspSender from ELRS.o, size 16, align 4
          input section .bss.i2c_buffer from drivers.o, size 12, align 4
          input section .bss.TelemetryReceiver from ELRS.o, size 12, align 4
          input section .bss.LQCalc from ELRS.o, size 12, align 4
          input section .bss.voice_uart_send_buf from BoardI6.o, size 10, align 4
          input section .bss.telemetryErrors from crossfire.o, size 4, align 4
          input section .bss.hal from SX127x.o, size 4, align 4
          input section .bss.g_voice_cb from BoardI6.o, size 4, align 4
          input section .bss.g_tmr10ms from drivers.o, size 4, align 4
          input section .bss.g_elrs_update_rate from crossfire.o, size 4, align 4
          input section .bss.g_elrs_lag from crossfire.o, size 4, align 4
          input section .bss.fieldTimeout from elrsV2.o, size 4, align 4
          input section .bss.__SEGGER_RTL_heap_globals from heapops_basic.o (heapops_basic_v6m_little.a), size 4, align 4
          input section .bss.perMain()::lastTMR from er9x.o, size 4, align 4
          input section .bss.SX127xHal::instance from SX127xHal.o, size 4, align 4
          input section .bss.SX127xDriver::instance from SX127x.o, size 4, align 4
          input section .bss.g_crsf_read_callback from BoardI6.o, size 4, align 4
          input section .bss.fieldPopup from elrsV2.o, size 4, align 4
          input section .bss.SPI_BufferPtr from BoardI6.o, size 4, align 4
          input section .bss.ID from A7105_SPI.o, size 4, align 4
          input section .bss.AlertMessage from er9x.o, size 4, align 4
          input section .bss.ota_crc from ELRS.o, size 514, align 2
          input section .bss.pulses2MHz from pulses.o, size 144, align 2
          input section .bss.Xmem from menus.o, size 106, align 2
          input section .bss.Voice from audio.o, size 36, align 2
          input section .bss.s_timer from menus.o, size 32, align 2
          input section .bss.g_chans512 from menus.o, size 32, align 2
          input section .bss.Ex_chans from menus.o, size 32, align 2
          input section .bss.CsTimer from er9x.o, size 24, align 2
          input section .bss.s_anaFilt from er9x.o, size 16, align 2
          input section .bss.g_ppmIns from er9x.o, size 16, align 2
          input section .bss.Nvs_timer from er9x.o, size 16, align 2
          input section .bss.calibratedStick from menus.o, size 14, align 2
          input section .bss.theWriteFile from pers.o, size 10, align 2
          input section .bss.theFile from pers.o, size 10, align 2
          input section .bss.P1values from er9x.o, size 10, align 2
          input section .bss.TimeGlobals from menus.o, size 8, align 2
          input section .bss.Inactivity from er9x.o, size 6, align 2
          input section .bss.tmrEEPROM from er9x.o, size 2, align 2
          input section .bss.g_tmr16KHz from er9x.o, size 2, align 2
          input section .bss.g_latency from menus.o, size 2, align 2
          input section .bss.g_LightOffCounter from er9x.o, size 2, align 2
          input section .bss.trace()::s_time from menus.o, size 2, align 2
          input section .bss.ActionAFHDS2A::packet_counter from AFHDS2A_a7105.o, size 2, align 2
          input section .bss.mainSequence()::timer from er9x.o, size 2, align 2
          input section .bss.s_eeDirtyTime10ms from pers.o, size 2, align 2
          input section .bss.SPI_Size from BoardI6.o, size 2, align 2
          input section .bss.GAltOffset from AFHDS2A_a7105.o, size 2, align 2
          input section .bss.B3_comp_value from pulses.o, size 2, align 2
          input section .bss.AltOffset from AFHDS2A_a7105.o, size 2, align 2
          input section .bss.g_model from er9x.o, size 1002, align 1
          input section .bss.fields from elrsV2.o, size 256, align 1
          input section .bss.telemetryRxBuffer from crossfire.o, size 128, align 1
          input section .bss.g_eeGeneral from er9x.o, size 118, align 1
          input section .bss.audio from er9x.o, size 56, align 1
          input section .bss.keys from drivers.o, size 45, align 1
          input section .bss.AFHDS2A_tel_res_cnt from AFHDS2A_a7105.o, size 43, align 1
          input section .bss.hopping_frequency from A7105_SPI.o, size 16, align 1
          input section .bss.Last_switch from er9x.o, size 12, align 1
          input section .bss.voice_uart_recv_buf from BoardI6.o, size 10, align 1
          input section .bss.TimerConfig from er9x.o, size 10, align 1
          input section .bss.Rotary from er9x.o, size 9, align 1
          input section .bss.deviceIds from elrsV2.o, size 8, align 1
          input section .bss.Nvs_state from er9x.o, size 8, align 1
          input section .bss.phyStick from menus.o, size 4, align 1
          input section .bss.PopupData from menus.o, size 4, align 1
          input section .bss.MenuControl from menus.o, size 3, align 1
          input section .bss.voice_tx_idx from BoardI6.o, size 1, align 1
          input section .bss.voice_rx_idx from BoardI6.o, size 1, align 1
          input section .bss.valuesBufferOffset from elrsV2.o, size 1, align 1
          input section .bss.tick10ms from er9x.o, size 1, align 1
          input section .bss.telemetryRxBufferCount from crossfire.o, size 1, align 1
          input section .bss.sysFlags from er9x.o, size 1, align 1
          input section .bss.stickMoved from er9x.o, size 1, align 1
          input section .bss.statusComplete from elrsV2.o, size 1, align 1
          input section .bss.serialDat0 from pulses.o, size 1, align 1
          input section .bss.scroll_disabled from menus.o, size 1, align 1
          input section .bss.scrollUD from menus.o, size 1, align 1
          input section .bss.scrollLR from menus.o, size 1, align 1
          input section .bss.s_pgOfs from menus.o, size 1, align 1
          input section .bss.s_noHi from menus.o, size 1, align 1
          input section .bss.s_moveMode from menus.o, size 1, align 1
          input section .bss.s_mixMaxSel from menus.o, size 1, align 1
          input section .bss.s_evt from drivers.o, size 1, align 1
          input section .bss.s_editing from menus.o, size 1, align 1
          input section .bss.s_editMode from menus.o, size 1, align 1
          input section .bss.reloadFolder from elrsV2.o, size 1, align 1
          input section .bss.pxxFlag from pulses.o, size 1, align 1
          input section .bss.protocol_flags from A7105_SPI.o, size 1, align 1
          input section .bss.ppmInAvailable from er9x.o, size 1, align 1
          input section .bss.plotType from lcd.o, size 1, align 1
          input section .bss.pageOffset from elrsV2.o, size 1, align 1
          input section .bss.packet_count from A7105_SPI.o, size 1, align 1
          input section .bss.outputTelemetryBufferTrigger from crossfire.o, size 1, align 1
          input section .bss.outputTelemetryBufferSize from crossfire.o, size 1, align 1
          input section .bss.namesBufferOffset from elrsV2.o, size 1, align 1
          input section .bss.mixToDelete from menus.o, size 1, align 1
          input section .bss.hopping_frequency_no from A7105_SPI.o, size 1, align 1
          input section .bss.heartbeat from pulses.o, size 1, align 1
          input section .bss.g_vbat100mV from er9x.o, size 1, align 1
          input section .bss.g_posHorz from menus.o, size 1, align 1
          input section .bss.g_menuStackPtr from er9x.o, size 1, align 1
          input section .bss.g_blinkTmr10ms from drivers.o, size 1, align 1
          input section .bss.folderAccess from elrsV2.o, size 1, align 1
          input section .bss.fields_count from elrsV2.o, size 1, align 1
          input section .bss.fieldsLen from elrsV2.o, size 1, align 1
          input section .bss.fieldDataLen from elrsV2.o, size 1, align 1
          input section .bss.fieldChunk from elrsV2.o, size 1, align 1
          input section .bss.edit from elrsV2.o, size 1, align 1
          input section .bss.devicesLen from elrsV2.o, size 1, align 1
          input section .bss.deviceIsELRS_TX from elrsV2.o, size 1, align 1
          input section .bss.bpanaCenter from menus.o, size 1, align 1
          input section .bss.bind_phase from A7105_SPI.o, size 1, align 1
          input section .bss.allParamsLoaded from elrsV2.o, size 1, align 1
          input section .bss.MState2::check_columns(unsigned char, unsigned char)::lateUp from menus.o, size 1, align 1
          input section .bss.audioQueue::driver()::toneCounter from er9x.o, size 1, align 1
          input section .bss.perMain()::repeater from er9x.o, size 1, align 1
          input section .bss.perMain()::alertKey from er9x.o, size 1, align 1
          input section .bss.perMain()::s_batCheck from er9x.o, size 1, align 1
          input section .bss.menuProc0(unsigned char)::trimSwLock from menus.o, size 1, align 1
          input section .bss.per10ms()::current from drivers.o, size 1, align 1
          input section .bss.perOut(short*, unsigned char)::sticky from menus.o, size 1, align 1
          input section .bss.check_backlight_voice()::tmr10ms from er9x.o, size 1, align 1
          input section .bss.menuProcModelSelect(unsigned char)::mstate2 from menus.o, size 1, align 1
          input section .bss.menuProcModelSelect(unsigned char)::sel_editMode from menus.o, size 1, align 1
          input section .bss.menuProcVoiceAlarm(unsigned char)::mstate2 from menus.o, size 1, align 1
          input section .bss.menuProcModelIndex(unsigned char)::mstate from menus.o, size 1, align 1
          input section .bss.menuProcTelemetry(unsigned char)::mstate2 from menus.o, size 1, align 1
          input section .bss.menuProcVoiceOne(unsigned char)::mstate2 from menus.o, size 1, align 1
          input section .bss.menuProcProtocol(unsigned char)::mstate2 from menus.o, size 1, align 1
          input section .bss.menuProcCurveOne(unsigned char)::mstate2 from menus.o, size 1, align 1
          input section .bss.menuProcCurveOne(unsigned char)::dfltCrv from menus.o, size 1, align 1
          input section .bss.menuSetFailsafe(unsigned char)::mstate2 from menus.o, size 1, align 1
          input section .bss.menuProcGlobals(unsigned char)::mstate2 from menus.o, size 1, align 1
          input section .bss.menuModelPhases(unsigned char)::mstate2 from menus.o, size 1, align 1
          input section .bss.A7105_AntSwitch()::sw from A7105_SPI.o, size 1, align 1
          input section .bss.menuProcMixOne(unsigned char)::mstate2 from menus.o, size 1, align 1
          input section .bss.menuRangeBind(unsigned char)::timer from menus.o, size 1, align 1
          input section .bss.menuProcIndex(unsigned char)::mstate from menus.o, size 1, align 1
          input section .bss.menuProcCurve(unsigned char)::mstate2 from menus.o, size 1, align 1
          input section .bss.ActionAFHDS2A::packet_type from AFHDS2A_a7105.o, size 1, align 1
          input section .bss.menuScaleOne(unsigned char)::mstate2 from menus.o, size 1, align 1
          input section .bss.menuPhaseOne(unsigned char)::mstate2 from menus.o, size 1, align 1
          input section .bss.perOutPhase(short*, unsigned char)::lastPhase from menus.o, size 1, align 1
          input section .bss.menuRXSetup(unsigned char)::mstate2 from menus.o, size 1, align 1
          input section .bss.menuProcMix(unsigned char)::mstate2 from menus.o, size 1, align 1
          input section .bss.s_currIdx from menus.o, size 1, align 1
          input section .bss.Columns from menus.o, size 1, align 1
          input section .bss.wait_fin_count from audio.o, size 1, align 1
          input section .bss.inputs_subview from menus.o, size 1, align 1
          input section .bss.s_eeLongTimer from pers.o, size 1, align 1
          input section .bss.LongMenuTimer from er9x.o, size 1, align 1
          input section .bss.s_moveMixIdx from menus.o, size 1, align 1
          input section .bss.s_eeDirtyMsk from pers.o, size 1, align 1
          input section .bss.s_currMixIdx from menus.o, size 1, align 1
          input section .bss.s_currDestCh from menus.o, size 1, align 1
          input section .bss.s_curveChan from menus.o, size 1, align 1
          input section .bss.IlinesCount from menus.o, size 1, align 1
          input section .bss.s_expoChan from menus.o, size 1, align 1
          input section .bss.ThrottleStickyOn from menus.o, size 1, align 1
          input section .bss.Tevent from er9x.o, size 1, align 1
          input section .bss.SystemOptions from er9x.o, size 1, align 1
          input section .bss.StickScrollTimer from er9x.o, size 1, align 1
          input section .bss.StickScrollAllowed from er9x.o, size 1, align 1
          input section .bss.StepSize from er9x.o, size 1, align 1
          input section .bss.RotaryState from menus.o, size 1, align 1
          input section .bss.RadioState from A7105_SPI.o, size 1, align 1
          input section .bss.RadioActive from pulses.o, size 1, align 1
          input section .bss.PausePulses from pulses.o, size 1, align 1
          input section .bss.Main_running from er9x.o, size 1, align 1
          input section .bss.M_longMenuTimer from menus.o, size 1, align 1
          input section .bss.Lcd_lastPos from lcd.o, size 1, align 1
          input section .bss.LcdLock from lcd.o, size 1, align 1
          input section .bss.InverseBlink from menus.o, size 1, align 1
          input section .bss.EnterMenu from er9x.o, size 1, align 1
          input section .bss.EepromActive from lcd.o, size 1, align 1
          input section .bss.Ee_lock from pers.o, size 1, align 1
          input section .bss.EditType from menus.o, size 1, align 1
          input section .bss.EditColumns from menus.o, size 1, align 1
          input section .bss.DupSub from menus.o, size 1, align 1
          input section .bss.DupIfNonzero from menus.o, size 1, align 1
          input section .bss.Current_protocol from pulses.o, size 1, align 1
          input section .bss.CurrentVolume from er9x.o, size 1, align 1
          input section .bss.CurrentPhase from menus.o, size 1, align 1
          input section .bss.CalcScaleNest from menus.o, size 1, align 1
          input section .data.devicesRefreshTimeout from elrsV2.o, size 4, align 4
          input section .data.AFHDS2A_update_telemetry()::Dacc from AFHDS2A_a7105.o, size 4, align 4
          input section .data.ISR_TIMER1_COMPA_vect::pulsePtr from pulses.o, size 4, align 4
          input section .data.A7105_AdjustLOBaseFreq()::old_offset from A7105_SPI.o, size 2, align 2
          input section .data.play_cmd_buf from audio.o, size 10, align 1
          input section .data.AlarmControl from er9x.o, size 4, align 1
          input section .data.prev_power from A7105_SPI.o, size 1, align 1
          input section .data.otherDevicesId from elrsV2.o, size 1, align 1
          input section .data.lineIndex from elrsV2.o, size 1, align 1
          input section .data.handsetId from elrsV2.o, size 1, align 1
          input section .data.fieldId from elrsV2.o, size 1, align 1
          input section .data.expectedChunks from elrsV2.o, size 1, align 1
          input section .data.deviceId from elrsV2.o, size 1, align 1
          input section .data.backButtonId from elrsV2.o, size 1, align 1
      place in [0x1ffff800 to 0x200017ff] with auto order
          input block heap from [ Linker created ], size 256, align 8


***************************************************************************************
***                                                                                 ***
***                                    Placement                                    ***
***                                                                                 ***
***************************************************************************************

  Executing place at [0x00000000 to 0x000000bf] for 'place at start' block <#5> at line 97, col 45 (1 inputs selected)
      Inputs to 'place at start' block <#5> at line 97, col 45
          Inputs to block vectors
              Allocate [0x00000000 to 0x000000bf] to section .vectors from MKL16Z4_Vectors.o
          Allocate [0x00000000 to 0x000000bf] to block vectors from [ Linker created ]
  Executing place at [0x00000400 to 0x0000040f] for 'place at start' block <#6> at line 98, col 45 (1 inputs selected)
      Inputs to 'place at start' block <#6> at line 98, col 45
          Inputs to block cfm
              Allocate [0x00000400 to 0x0000040f] to section .cfm from MKL16Z4_Vectors.o
          Allocate [0x00000400 to 0x0000040f] to block cfm from [ Linker created ]
  Executing place at [0x1ffff800 size 0] for 'place at start' block <#10> at line 119, col 45 (1 inputs selected)
      Inputs to 'place at start' block <#10> at line 119, col 45
          Allocate [0x1ffff800 size 0] to block vectors_ram from [ Linker created ]
  Executing place at [0x20001700 to 0x200017ff] for 'place at end' block <#14> at line 129, col 45 (1 inputs selected)
      Inputs to 'place at end' block <#14> at line 129, col 45
          Allocate [0x20001700 to 0x200017ff] to block stack from [ Linker created ]
  Executing place in [0x000000c0 to 0x000003ff] + [0x00000410 to 0x0000ffff] (630 inputs selected)
      Candidate regions: [0x00000000 to 0x0000ffff]
      Allocate [0x00000410 to 0x000014f3] to section .text.menuProcModelIndex(unsigned char) from menus.o
      Allocate [0x000014f4 to 0x00002183] to section .text.menuProcIndex(unsigned char) from menus.o
      Allocate [0x00002184 to 0x00002d4b] to section .text.perOut(short*, unsigned char) from menus.o
      Allocate [0x00002d4c to 0x000034df] to section .text.mainSequence() from er9x.o
      Allocate [0x000034e0 to 0x00003a6b] to section .text.menuProc0(unsigned char) from menus.o
      Allocate [0x00003a6c to 0x00003f2b] to section .text.menuProcMixOne(unsigned char) from menus.o
      Allocate [0x00003f2c to 0x000043d7] to section .text.menuProcMix(unsigned char) from menus.o
      Allocate [0x000043d8 to 0x0000484b] to section .text.menuProcVoiceOne(unsigned char) from menus.o
      Allocate [0x0000484c to 0x00004c1b] to section .text.ActionAFHDS2A from AFHDS2A_a7105.o
      Allocate [0x00004c1c to 0x00004fcb] to section .text.HW_Init from BoardI6.o
      Allocate [0x000000c0 to 0x000003fb] to section .text.MState2::check_columns(unsigned char, unsigned char) from menus.o
      Allocate [0x00004fcc to 0x00005303] to section .text.processCrossfireTelemetryFrame() from crossfire.o
      Allocate [0x00005304 to 0x0000561f] to section .text.menuProcModelSelect(unsigned char) from menus.o
      Allocate [0x00005620 to 0x00005937] to section .text.timer() from menus.o
      Allocate [0x00005938 to 0x00005c2f] to section .text.audioQueue::event(unsigned char, unsigned char) from audio.o
      Allocate [0x00005c30 to 0x00005f0f] to section .text.procOneVoiceAlarm(t_voiceAlarm*, unsigned char) from er9x.o
      Allocate [0x00005f10 to 0x000061b3] to section .text.menuProcProtocol(unsigned char) from menus.o
      Allocate [0x000061b4 to 0x00006447] to section .text.menuScaleOne(unsigned char) from menus.o
      Allocate [0x00006448 to 0x00006667] to section .text.mainER() from er9x.o
      Allocate [0x00006668 to 0x00006873] to section .text.eeLoadModel(unsigned char) from pers.o
      Allocate [0x00006874 to 0x00006a6f] to section .text.parseParameterInfoMessage(unsigned char*, unsigned char) from elrsV2.o
      Allocate [0x00006a70 to 0x00006c57] to section .text.getSwitch(signed char, bool, unsigned char) from er9x.o
      Allocate [0x00006c58 to 0x00006e3f] to section .text.menuProcTelemetry(unsigned char) from menus.o
      Allocate [0x00006e40 to 0x00007027] to section .text.menuProcGlobals(unsigned char) from menus.o
      Allocate [0x00007028 to 0x0000720f] to section .text.lcd_outdezNAtt(unsigned char, unsigned char, int, unsigned char, signed char, unsigned char) from lcd.o
      Allocate [0x00007210 to 0x000073eb] to section .text.menuPhaseOne(unsigned char) from menus.o
      Allocate [0x000073ec to 0x000075b3] to section .text.menuSetFailsafe(unsigned char) from menus.o
      Allocate [0x000075b4 to 0x0000776f] to section .text.putsTelemetryChannel(unsigned char, unsigned char, signed char, int, unsigned char, unsigned char) from menus.o
      Allocate [0x00007770 to 0x000078f7] to section .text.checkIncDec16(short, short, short, unsigned char) from er9x.o
      Allocate [0x000078f8 to 0x00007a7b] to section .text.perOutPhase(short*, unsigned char) from menus.o
      Allocate [0x00007a7c to 0x00007bf7] to section .text.parseDeviceInfoMessage(unsigned char*) from elrsV2.o
      Allocate [0x00007bf8 to 0x00007d5b] to section .text.handleDevicePageEvent(unsigned char) from elrsV2.o
      Allocate [0x00007d5c to 0x00007ebf] to section .text.AFHDS2A_build_packet(unsigned char) from AFHDS2A_a7105.o
      Allocate [0x00007ec0 to 0x0000801f] to section .text.i2c_master from BoardI6.o
      Allocate [0x00008020 to 0x0000817f] to section .text.eeCheck(bool) from pers.o
      Allocate [0x00008180 to 0x000082df] to section .text.menuProcCurveOne(unsigned char) from menus.o
      Allocate [0x000082e0 to 0x0000843b] to section .text.eeprom_write_page_cmp(char const*, unsigned short, unsigned int) from drivers.o
      Allocate [0x0000843c to 0x00008593] to section .text.processFlySkySensor(unsigned char const*, unsigned char) from AFHDS2A_a7105.o
      Allocate [0x00008594 to 0x000086d7] to section .text.doPopup(char const*, unsigned char, unsigned char) from menus.o
      Allocate [0x000086d8 to 0x00008803] to section .text.lcd_putcAtt(unsigned char, unsigned char, char, unsigned char) from lcd.o
      Allocate [0x00008804 to 0x0000891b] to section .text.menuProcVoiceAlarm(unsigned char) from menus.o
      Allocate [0x0000891c to 0x00008a07] to section .text.runCrossfireTelemetryCallback(unsigned char, unsigned char*, unsigned char) from elrsV2.o
      Allocate [0x00008a08 to 0x00008af3] to section .text.menuModelPhases(unsigned char) from menus.o
      Allocate [0x00008af4 to 0x00008bdf] to section .text.setupPulsesPPM(unsigned char) from pulses.o
      Allocate [0x00008be0 to 0x00008cc3] to section .text.checkSwitches() from er9x.o
      Allocate [0x00008cc4 to 0x00008da7] to section .text.runPopupPage(unsigned char) from elrsV2.o
      Allocate [0x00008da8 to 0x00008e7f] to section .text.per10ms() from drivers.o
      Allocate [0x00008e80 to 0x00008f57] to section .text.setStickCenter() from menus.o
      Allocate [0x00008f58 to 0x00009023] to section .text.voice_telem_item(unsigned char) from menus.o
      Allocate [0x00009024 to 0x000090ef] to section .text.calc_scaler(unsigned char, unsigned char*, unsigned char*) from menus.o
      Allocate [0x000090f0 to 0x000091b7] to section .text.runDevicePage(unsigned char) from elrsV2.o
      Allocate [0x000091b8 to 0x0000927b] to section .text.EFile::write(unsigned char*, unsigned char) from file.o
      Allocate [0x0000927c to 0x0000933f] to section .text.Key::input(bool, EnumKeys) from drivers.o
      Allocate [0x00009340 to 0x000093ff] to section .text.audioQueue::play(unsigned char, unsigned char, unsigned char, unsigned char) from audio.o
      Allocate [0x00009400 to 0x000094bf] to section .text.menuProcStatistic(unsigned char) from menus.o
      Allocate [0x000094c0 to 0x0000957f] to section .text.menuRXSetup(unsigned char) from menus.o
      Allocate [0x00009580 to 0x0000963f] to section .text.A7105_Init() from A7105_SPI.o
      Allocate [0x00009640 to 0x000096fb] to section .text.calcExpo(unsigned char, short) from menus.o
      Allocate [0x000096fc to 0x000097b3] to section .text.initAFHDS2A from AFHDS2A_a7105.o
      Allocate [0x000097b4 to 0x0000986b] to section .text.menuProcCurve(unsigned char) from menus.o
      Allocate [0x0000986c to 0x0000991f] to section .text.indexProcess(unsigned char, MState2*, unsigned char) from menus.o
      Allocate [0x00009920 to 0x000099d3] to section .text.setupPulses() from pulses.o
      Allocate [0x000099d4 to 0x00009a83] to section .text.editName(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char) from menus.o
      Allocate [0x00009a84 to 0x00009b33] to section .text.editExpoVals(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) from menus.o
      Allocate [0x00009b34 to 0x00009bd7] to section .text.EeFsck() from file.o
      Allocate [0x00009bd8 to 0x00009c7b] to section .text.menuDeleteDupModel(unsigned char) from menus.o
      Allocate [0x00009c7c to 0x00009d1f] to section .text.menuRangeBind(unsigned char) from menus.o
      Allocate [0x00009d20 to 0x00009dc3] to section .text.putsTmrMode(unsigned char, unsigned char, unsigned char, unsigned char) from er9x.o
      Allocate [0x00009dc4 to 0x00009e63] to section .text.drawFunction(unsigned char, unsigned char) from menus.o
      Allocate [0x00009e64 to 0x00009ef7] to section .init.SystemInit from system_MKL16Z4.o
      Allocate [0x00009ef8 to 0x00009f87] to section .text.checkIndexed(unsigned char, char const*, unsigned char, unsigned char) from menus.o
      Allocate [0x00009f88 to 0x0000a013] to section .text.doMainScreenGrphics() from menus.o
      Allocate [0x0000a014 to 0x0000a09f] to section .text.refreshDiplay() from lcd.o
      Allocate [0x0000a0a0 to 0x0000a12b] to section .text.gvarMenuItem(unsigned char, unsigned char, signed char, signed char, signed char, unsigned char) from menus.o
      Allocate [0x0000a12c to 0x0000a1b3] to section .text.drawCurve(unsigned char) from menus.o
      Allocate [0x0000a1b4 to 0x0000a23b] to section .text.keyState(EnumKeys) from drivers.o
      Allocate [0x0000a23c to 0x0000a2c3] to section .text.createCrossfireChannelsFrame(unsigned char*, short*) from crossfire.o
      Allocate [0x0000a2c4 to 0x0000a34b] to section .text.eeGeneralDefault() from pers.o
      Allocate [0x0000a34c to 0x0000a3d3] to section .text.putsChnRaw(unsigned char, unsigned char, unsigned char, unsigned char) from er9x.o
      Allocate [0x0000a3d4 to 0x0000a457] to section .text.setup_crsf_serial_port from BoardI6.o
      Allocate [0x0000a458 to 0x0000a4db] to section .text.t_voice::voice_process() from audio.o
      Allocate [0x0000a4dc to 0x0000a55b] to section .text.audioQueue::heartbeat() from audio.o
      Allocate [0x0000a55c to 0x0000a5d7] to section .text.fieldTextSelectionLoad(FieldProps*, unsigned char*, unsigned char) from elrsV2.o
      Allocate [0x0000a5d8 to 0x0000a653] to section .text.selectField(signed char) from elrsV2.o
      Allocate [0x0000a654 to 0x0000a6cf] to section .text.scaleAnalog(short, unsigned char) from menus.o
      Allocate [0x0000a6d0 to 0x0000a747] to section .text.EFile::read(unsigned char*, unsigned short) from file.o
      Allocate [0x0000a748 to 0x0000a7bf] to section .text.lcd_vline(unsigned char, unsigned char, signed char) from lcd.o
      Allocate [0x0000a7c0 to 0x0000a837] to section .text.fieldTextSelectionDisplay(FieldProps*, unsigned char, unsigned char) from elrsV2.o
      Allocate [0x0000a838 to 0x0000a8af] to section .text.eeReadGeneral() from pers.o
      Allocate [0x0000a8b0 to 0x0000a923] to section .text.get_telemetry_value(unsigned char) from menus.o
      Allocate [0x0000a924 to 0x0000a997] to section .text.getGvarSourceValue(unsigned char) from er9x.o
      Allocate [0x0000a998 to 0x0000aa0b] to section .text.fieldFolderOpen(FieldProps*) from elrsV2.o
      Allocate [0x0000aa0c to 0x0000aa7f] to section .text.putsDrSwitches(unsigned char, unsigned char, signed char, unsigned char) from er9x.o
      Allocate [0x0000aa80 to 0x0000aaf3] to section .text.UIbackExec(FieldProps*) from elrsV2.o
      Allocate [0x0000aaf4 to 0x0000ab63] to section .text.insertMix(unsigned char, unsigned char) from menus.o
      Allocate [0x0000ab64 to 0x0000abd3] to section .text.getValue(unsigned char) from er9x.o
      Allocate [0x0000abd4 to 0x0000ac43] to section .text.alertx(char const*, bool) from er9x.o
      Allocate [0x0000ac44 to 0x0000acb3] to section .text.modelDefaultWrite(unsigned char) from pers.o
      Allocate [0x0000acb4 to 0x0000ad23] to section .text.menuDeleteMix(unsigned char) from menus.o
      Allocate [0x0000ad24 to 0x0000ad93] to section .text.UART2_IRQHandler from BoardI6.o
      Allocate [0x0000ad94 to 0x0000adff] to section .text.processCrossfireTelemetryData(unsigned char) from crossfire.o
      Allocate [0x0000ae00 to 0x0000ae6b] to section .text.dispSignalQality(unsigned char) from menus.o
      Allocate [0x0000ae6c to 0x0000aed7] to section .text.putsTelemValue(unsigned char, unsigned char, int, unsigned char, unsigned char) from er9x.o
      Allocate [0x0000aed8 to 0x0000af43] to section .text.SPI0_IRQHandler from BoardI6.o
      Allocate [0x0000af44 to 0x0000afab] to section .text.eeDuplicateModel(unsigned char) from pers.o
      Allocate [0x0000afac to 0x0000b00f] to section .text.crossfireTelemetryPush(unsigned char, unsigned char*, unsigned char) from crossfire.o
      Allocate [0x0000b010 to 0x0000b073] to section .text.A7105_AdjustLOBaseFreq() from A7105_SPI.o
      Allocate [0x0000b074 to 0x0000b0d7] to section .text.lcd_hlineStip(unsigned char, unsigned char, signed char, unsigned char) from lcd.o
      Allocate [0x0000b0d8 to 0x0000b13b] to section .text.PIND from BoardI6.o
      Allocate [0x0000b13c to 0x0000b19b] to section .text.eeLoadModelName(unsigned char, char*, unsigned char) from pers.o
      Allocate [0x0000b19c to 0x0000b1fb] to section .text.setTrimValue(unsigned char, unsigned char, short) from er9x.o
      Allocate [0x0000b1fc to 0x0000b25b] to section .text.PINB from BoardI6.o
      Allocate [0x0000b25c to 0x0000b2b7] to section .text.crsf_send_data from BoardI6.o
      Allocate [0x0000b2b8 to 0x0000b313] to section .text.almess(char const*, unsigned char) from er9x.o
      Allocate [0x0000b314 to 0x0000b36f] to section .text.doBackLightVoice(unsigned char) from er9x.o
      Allocate [0x0000b370 to 0x0000b3cb] to section .text.calcStickScroll(unsigned char) from er9x.o
      Allocate [0x0000b3cc to 0x0000b427] to section .text.allocateFields() from elrsV2.o
      Allocate [0x0000b428 to 0x0000b483] to section .text.applyTemplate() from templates.o
      Allocate [0x0000b484 to 0x0000b4db] to section .text.getADC_osmp from BoardI6.o
      Allocate [0x0000b4dc to 0x0000b533] to section .text.EFile::closeTrunc() from file.o
      Allocate [0x0000b534 to 0x0000b58b] to section .text.lcd_init() from lcd.o
      Allocate [0x0000b58c to 0x0000b5e3] to section .text.setMix(unsigned char, unsigned char) from templates.o
      Allocate [0x0000b5e4 to 0x0000b63b] to section .text.serialVoiceInit(void (*)(unsigned char*, unsigned char)) from BoardI6.o
      Allocate [0x0000b63c to 0x0000b68f] to section .text.eeWriteGeneral() from pers.o
      Allocate [0x0000b690 to 0x0000b6e3] to section .text.putsChnOpRaw(unsigned char, unsigned char, t_MixData*, unsigned char) from menus.o
      Allocate [0x0000b6e4 to 0x0000b737] to section .text.TPM0_IRQHandler from BoardI6.o
      Allocate [0x0000b738 to 0x0000b78b] to section .text.PINE from BoardI6.o
      Allocate [0x0000b78c to 0x0000b7db] to section .text.fieldUnifiedDisplay(FieldProps*, unsigned char, unsigned char) from elrsV2.o
      Allocate [0x0000b7dc to 0x0000b82b] to section .text.A7105_WriteData(unsigned char, unsigned char) from A7105_SPI.o
      Allocate [0x0000b82c to 0x0000b87b] to section .text.putsTrimMode(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) from menus.o
      Allocate [0x0000b87c to 0x0000b8cb] to section .text.ISR_TIMER0_COMP_vect from er9x.o
      Allocate [0x0000b8cc to 0x0000b917] to section .text.incrField(signed char) from elrsV2.o
      Allocate [0x0000b918 to 0x0000b963] to section .text.checkTHR() from er9x.o
      Allocate [0x0000b964 to 0x0000b9af] to section .text.lcd_img(unsigned char, unsigned char, unsigned char const*, unsigned char) from lcd.o
      Allocate [0x0000b9b0 to 0x0000b9fb] to section .text.check_backlight_voice() from er9x.o
      Allocate [0x0000b9fc to 0x0000ba47] to section .text.checkThrottlePosition() from er9x.o
      Allocate [0x0000ba48 to 0x0000ba93] to section .text.setupPulsesCrossfire() from crossfire.o
      Allocate [0x0000ba94 to 0x0000badf] to section .text.uart_clear_error() from BoardI6.o
      Allocate [0x0000bae0 to 0x0000bb2b] to section .text.SPI_RADIO_ReceiveBlock from BoardI6.o
      Allocate [0x0000bb2c to 0x0000bb73] to section .text.SetStartPulsePol() from pulses.o
      Allocate [0x0000bb74 to 0x0000bbbb] to section .text.yesNoMenuExit(unsigned char, char const*) from menus.o
      Allocate [0x0000bbbc to 0x0000bc03] to section .text._GLOBAL__sub_I_ELRS.cpp from ELRS.o
      Allocate [0x0000bc04 to 0x0000bc4b] to section .text.PIT_IRQHandler from BoardI6.o
      Allocate [0x0000bc4c to 0x0000bc93] to section .rodata.functions from elrsV2.o
      Allocate [0x0000bc94 to 0x0000bcd7] to section .text.shutdown_crsf_serial_port from BoardI6.o
      Allocate [0x0000bcd8 to 0x0000bd1b] to section .text.eeprom_read_block(void*, void const*, unsigned int) from drivers.o
      Allocate [0x0000bd1c to 0x0000bd5f] to section .text.eeWriteBlockCmp(void const*, unsigned short, unsigned int) from drivers.o
      Allocate [0x0000bd60 to 0x0000bda3] to section .text.ISR_TIMER1_COMPA_vect from pulses.o
      Allocate [0x0000bda4 to 0x0000bde7] to section .init from MKL16Z4_Vectors.o
      Allocate [0x0000bde8 to 0x0000be27] to section .text.EFile::swap(unsigned char, unsigned char) from file.o
      Allocate [0x0000be28 to 0x0000be67] to section .text.audioQueue::getToneLength(unsigned char) from audio.o
      Allocate [0x0000be68 to 0x0000bea7] to section .text.processCrossfireTelemetryValue(unsigned char, int) from crossfire.o
      Allocate [0x0000bea8 to 0x0000bee7] to section .text.crossfileMenu(MState2&, unsigned char, unsigned char, unsigned char, unsigned char) from elrsV2.o
      Allocate [0x0000bee8 to 0x0000bf27] to section .text.ELRSV2_run(unsigned char) from elrsV2.o
      Allocate [0x0000bf28 to 0x0000bf63] to section .text.getField(unsigned char) from elrsV2.o
      Allocate [0x0000bf64 to 0x0000bf9f] to section .text.editSlowDelay(unsigned char, unsigned char, unsigned char) from menus.o
      Allocate [0x0000bfa0 to 0x0000bfdb] to section .text.anaIn(unsigned char) from er9x.o
      Allocate [0x0000bfdc to 0x0000c017] to section .text.displayOneSwitch(unsigned char, unsigned char, unsigned char) from menus.o
      Allocate [0x0000c018 to 0x0000c053] to section .text.rangeBindAction(unsigned char, unsigned char) from menus.o
      Allocate [0x0000c054 to 0x0000c08f] to section .text.getRawTrimValue(unsigned char, unsigned char) from er9x.o
      Allocate [0x0000c090 to 0x0000c0cb] to section .text.ELRSV2_stop() from elrsV2.o
      Allocate [0x0000c0cc to 0x0000c107] to section .text.EeFsFormat() from file.o
      Allocate [0x0000c108 to 0x0000c13f] to section .text.audioQueue::driver() from er9x.o
      Allocate [0x0000c140 to 0x0000c177] to section .text.REG(signed char, signed char, signed char) from er9x.o
      Allocate [0x0000c178 to 0x0000c1af] to section .text.getCrossfireTelemetryValue(unsigned char, int&, int) from crossfire.o
      Allocate [0x0000c1b0 to 0x0000c1e7] to section .text.convert_failsafe_ppm(unsigned char) from A7105_SPI.o
      Allocate [0x0000c1e8 to 0x0000c21f] to section .text.lcd_char_inverse(unsigned char, unsigned char, unsigned char, unsigned char) from lcd.o
      Allocate [0x0000c220 to 0x0000c257] to section .text.get_dr_state(unsigned char) from menus.o
      Allocate [0x0000c258 to 0x0000c28f] to section .text.resetTimern(unsigned char) from menus.o
      Allocate [0x0000c290 to 0x0000c2c7] to section .text.PORTC_PORTD_IRQHandler from BoardI6.o
      Allocate [0x0000c2c8 to 0x0000c2ff] to section .rodata.menuProcModelIndex(unsigned char)::n_Strings from menus.o
      Allocate [0x0000c300 to 0x0000c337] to section .rodata..Lswitch.table.menuProcModelIndex(unsigned char) from menus.o
      Allocate [0x0000c338 to 0x0000c36b] to section .text.put_curve(unsigned char, unsigned char, signed char, unsigned char) from menus.o
      Allocate [0x0000c36c to 0x0000c39f] to section .text.pushMenu(void (*)(unsigned char)) from er9x.o
      Allocate [0x0000c3a0 to 0x0000c3d3] to section .text.eeLoadModelForBackup(unsigned char) from pers.o
      Allocate [0x0000c3d4 to 0x0000c407] to section .text.fieldCommandSave(FieldProps*) from elrsV2.o
      Allocate [0x0000c408 to 0x0000c43b] to section .text.lcd_write_bits(unsigned char*, unsigned char) from lcd.o
      Allocate [0x0000c43c to 0x0000c46f] to section .text.getFlightPhase() from er9x.o
      Allocate [0x0000c470 to 0x0000c4a3] to section .text.A7105_SetPower() from A7105_SPI.o
      Allocate [0x0000c4a4 to 0x0000c4d7] to section .text.SPI_RADIO_SendBlock from BoardI6.o
      Allocate [0x0000c4d8 to 0x0000c507] to section .text.EFile::create(unsigned char, unsigned char, unsigned short) from file.o
      Allocate [0x0000c508 to 0x0000c537] to section .text.EeFsFree(unsigned char) from file.o
      Allocate [0x0000c538 to 0x0000c567] to section .text.modelSave(unsigned char) from pers.o
      Allocate [0x0000c568 to 0x0000c597] to section .text.char2idx(char) from menus.o
      Allocate [0x0000c598 to 0x0000c5c7] to section .text.EeFsOpen() from file.o
      Allocate [0x0000c5c8 to 0x0000c5f7] to section .text.eeDirty(unsigned char) from pers.o
      Allocate [0x0000c5f8 to 0x0000c627] to section .text.displayVoiceRate(unsigned char, unsigned char, unsigned char, unsigned char) from menus.o
      Allocate [0x0000c628 to 0x0000c657] to section .text.A7105_ReadData(unsigned char) from A7105_SPI.o
      Allocate [0x0000c658 to 0x0000c687] to section .text.UART0_IRQHandler from BoardI6.o
      Allocate [0x0000c688 to 0x0000c6b3] to section .text.SX127xDriver::SX127xDriver() from SX127x.o
      Allocate [0x0000c6b4 to 0x0000c6df] to section .text.dispGvar(unsigned char, unsigned char, unsigned char, unsigned char) from menus.o
      Allocate [0x0000c6e0 to 0x0000c70b] to section .text.popMenu(bool) from er9x.o
      Allocate [0x0000c70c to 0x0000c737] to section .text.crossfireTelemetryPush4(unsigned char, unsigned char, unsigned char) from elrsV2.o
      Allocate [0x0000c738 to 0x0000c763] to section .text.sendSerialVoiceData(unsigned char*, unsigned int) from BoardI6.o
      Allocate [0x0000c764 to 0x0000c78f] to section .text.putVoiceQueueLong(unsigned short) from audio.o
      Allocate [0x0000c790 to 0x0000c7bb] to section .text.fieldCommandLoad(FieldProps*, unsigned char*, unsigned char) from elrsV2.o
      Allocate [0x0000c7bc to 0x0000c7e7] to section .text.menuMixersLimit(unsigned char) from menus.o
      Allocate [0x0000c7e8 to 0x0000c813] to section .text.PING from BoardI6.o
      Allocate [0x0000c814 to 0x0000c83f] to section .rodata.menuProcIndex(unsigned char)::n_Strings from menus.o
      Allocate [0x0000c840 to 0x0000c867] to section .text.mDelay from BoardI6.o
      Allocate [0x0000c868 to 0x0000c88f] to section .text.EFile::rm(unsigned char) from file.o
      Allocate [0x0000c890 to 0x0000c8b7] to section .text.EeFsAlloc() from file.o
      Allocate [0x0000c8b8 to 0x0000c8df] to section .text.popupCompat(unsigned char) from elrsV2.o
      Allocate [0x0000c8e0 to 0x0000c907] to section .text.putsVolts(unsigned char, unsigned char, short, unsigned char) from lcd.o
      Allocate [0x0000c908 to 0x0000c92f] to section .text.putsVBat(unsigned char, unsigned char, unsigned char) from lcd.o
      Allocate [0x0000c930 to 0x0000c957] to section .text.lcd_plot(unsigned char, unsigned char) from lcd.o
      Allocate [0x0000c958 to 0x0000c97f] to section .text.A7105_AntSwitch() from A7105_SPI.o
      Allocate [0x0000c980 to 0x0000c9a7] to section .text.eeWaitComplete() from pers.o
      Allocate [0x0000c9a8 to 0x0000c9cf] to section .text.switchDisplay(unsigned char, unsigned char) from menus.o
      Allocate [0x0000c9d0 to 0x0000c9f7] to section .text.Uart_SendCMD(unsigned char, unsigned char, unsigned short) from audio.o
      Allocate [0x0000c9f8 to 0x0000ca1f] to section .text.startPulses() from pulses.o
      Allocate [0x0000ca20 to 0x0000ca47] to section .text.evalOffset(signed char) from menus.o
      Allocate [0x0000ca48 to 0x0000ca6f] to section .init from Kinetis_KL_Startup.o
      Allocate [0x0000ca70 to 0x0000ca93] to section .text.EFile::openRd(unsigned char) from file.o
      Allocate [0x0000ca94 to 0x0000cab7] to section .text.curveAddress(unsigned char) from menus.o
      Allocate [0x0000cab8 to 0x0000cadb] to section .text.crsf_init() from crossfire.o
      Allocate [0x0000cadc to 0x0000caff] to section .text.ee_waite() from drivers.o
      Allocate [0x0000cb00 to 0x0000cb23] to section .text.reachMixerCountLimit() from menus.o
      Allocate [0x0000cb24 to 0x0000cb47] to section .text.dispFlightModename(unsigned char, unsigned char, unsigned char) from menus.o
      Allocate [0x0000cb48 to 0x0000cb6b] to section .text.evalChkSum() from pers.o
      Allocate [0x0000cb6c to 0x0000cb8f] to section .text.LCD_DATA from BoardI6.o
      Allocate [0x0000cb90 to 0x0000cbb3] to section .rodata.processCrossfireTelemetryFrame()::power_values from crossfire.o
      Allocate [0x0000cbb4 to 0x0000cbd3] to section .text.EFile::size() from file.o
      Allocate [0x0000cbd4 to 0x0000cbf3] to section .text.setVolume(unsigned char) from audio.o
      Allocate [0x0000cbf4 to 0x0000cc13] to section .text.chainMenu(void (*)(unsigned char)) from er9x.o
      Allocate [0x0000cc14 to 0x0000cc33] to section .text.trace() from menus.o
      Allocate [0x0000cc34 to 0x0000cc53] to section .text.crc8(unsigned char const*, unsigned int) from crc_crsf.o
      Allocate [0x0000cc54 to 0x0000cc73] to section .text.checkCrossfireTelemetryFrameCRC() from crossfire.o
      Allocate [0x0000cc74 to 0x0000cc93] to section .text.processVoiceAlarms() from er9x.o
      Allocate [0x0000cc94 to 0x0000ccb3] to section .text.fieldStringDisplay(FieldProps*, unsigned char, unsigned char) from elrsV2.o
      Allocate [0x0000ccb4 to 0x0000ccd3] to section .text.putsOffDecimal(unsigned char, unsigned char, unsigned short, unsigned char) from menus.o
      Allocate [0x0000ccd4 to 0x0000ccf3] to section .text.lcdSetRefVolt(unsigned char) from lcd.o
      Allocate [0x0000ccf4 to 0x0000cd13] to section .text.backlightKey() from er9x.o
      Allocate [0x0000cd14 to 0x0000cd33] to section .text.pauseEvents(unsigned char) from drivers.o
      Allocate [0x0000cd34 to 0x0000cd53] to section .text.menuPressed() from drivers.o
      Allocate [0x0000cd54 to 0x0000cd73] to section .text.EeFsGetFree() from file.o
      Allocate [0x0000cd74 to 0x0000cd93] to section .text.SetPRTTimPeriod from BoardI6.o
      Allocate [0x0000cd94 to 0x0000cdaf] to section .text.audioVoiceDefevent(unsigned char, unsigned char) from audio.o
      Allocate [0x0000cdb0 to 0x0000cdcb] to section .text.throttleReversed() from er9x.o
      Allocate [0x0000cdcc to 0x0000cde7] to section .text.putWarnSwitch(unsigned char, unsigned char) from er9x.o
      Allocate [0x0000cde8 to 0x0000ce03] to section .text.modeFixValue(unsigned char) from er9x.o
      Allocate [0x0000ce04 to 0x0000ce1f] to section .text.displayTimer(unsigned char, unsigned char, unsigned char, unsigned char) from menus.o
      Allocate [0x0000ce20 to 0x0000ce3b] to section .text.on_voice_cb(unsigned char*, unsigned char) from audio.o
      Allocate [0x0000ce3c to 0x0000ce57] to section .text.crsf_action() from crossfire.o
      Allocate [0x0000ce58 to 0x0000ce73] to section .text.killEvents(unsigned char) from drivers.o
      Allocate [0x0000ce74 to 0x0000ce8f] to section .text.TPM2_IRQHandler from BoardI6.o
      Allocate [0x0000ce90 to 0x0000ceab] to section .text.TPM1_IRQHandler from BoardI6.o
      Allocate [0x0000ceac to 0x0000cec7] to section .text.EnableGIO from BoardI6.o
      Allocate [0x0000cec8 to 0x0000cedf] to section .text.clearKeyEvents() from er9x.o
      Allocate [0x0000cee0 to 0x0000cef7] to section .text.lcd_rect(unsigned char, unsigned char, unsigned char, unsigned char) from lcd.o
      Allocate [0x0000cef8 to 0x0000cf0f] to section .text.putsAttIdxTelemItems(unsigned char, unsigned char, unsigned char, unsigned char) from menus.o
      Allocate [0x0000cf10 to 0x0000cf27] to section .text.IS_EXPO_THROTTLE(unsigned char) from er9x.o
      Allocate [0x0000cf28 to 0x0000cf3f] to section .text.hyphinvMenuItem(unsigned char, unsigned char, unsigned char) from menus.o
      Allocate [0x0000cf40 to 0x0000cf57] to section .text.ISR_TIMER2_OVF_vect from er9x.o
      Allocate [0x0000cf58 to 0x0000cf6f] to section .text.GetChipID from BoardI6.o
      Allocate [0x0000cf70 to 0x0000cf87] to section .segger.init.__SEGGER_init_heap from SEGGER_crtinit_v6m_little.o
      Allocate [0x0000cf88 to 0x0000cf9f] to section .rodata..Lswitch.table.fieldUnifiedDisplay(FieldProps*, unsigned char, unsigned char) from elrsV2.o
      Allocate [0x0000cfa0 to 0x0000cfb3] to section .text.__SEGGER_RTL_init_heap from heapops_basic.o (heapops_basic_v6m_little.a)
      Allocate [0x0000cfb4 to 0x0000cfc7] to section .text.EFile::exists(unsigned char) from file.o
      Allocate [0x0000cfc8 to 0x0000cfdb] to section .text.EeFsFlush() from file.o
      Allocate [0x0000cfdc to 0x0000cfef] to section .text.EeFsFlushFreelist() from file.o
      Allocate [0x0000cff0 to 0x0000d003] to section .text.lcd_clear() from lcd.o
      Allocate [0x0000d004 to 0x0000d017] to section .text.idx2char(unsigned char) from menus.o
      Allocate [0x0000d018 to 0x0000d02b] to section .text.checkIncDec_u0(short, unsigned char) from er9x.o
      Allocate [0x0000d02c to 0x0000d03f] to section .text.checkIncDec_0(signed char, signed char) from er9x.o
      Allocate [0x0000d040 to 0x0000d053] to section .text.audioDefevent(unsigned char) from audio.o
      Allocate [0x0000d054 to 0x0000d067] to section .text.resetTimer1() from menus.o
      Allocate [0x0000d068 to 0x0000d07b] to section .text.displayNext() from menus.o
      Allocate [0x0000d07c to 0x0000d08f] to section .text.clearMixes() from templates.o
      Allocate [0x0000d090 to 0x0000d0a3] to section .text.audioEvent(unsigned char, unsigned short) from audio.o
      Allocate [0x0000d0a4 to 0x0000d0b7] to section .text.DisableGIO from BoardI6.o
      Allocate [0x0000d0b8 to 0x0000d0cb] to section .init._start from SEGGER_THUMB_Startup.o
      Allocate [0x0000d0cc to 0x0000d0db] to section .text.rw_0 from BoardI6.o
      Allocate [0x0000d0dc to 0x0000d0eb] to section .text.rs_1 from BoardI6.o
      Allocate [0x0000d0ec to 0x0000d0fb] to section .text.rs_0 from BoardI6.o
      Allocate [0x0000d0fc to 0x0000d10b] to section .text.rd_1 from BoardI6.o
      Allocate [0x0000d10c to 0x0000d11b] to section .text.rd_0 from BoardI6.o
      Allocate [0x0000d11c to 0x0000d12b] to section .text.CS_STATE(unsigned char) from er9x.o
      Allocate [0x0000d12c to 0x0000d13b] to section .text.lcdSetContrast() from lcd.o
      Allocate [0x0000d13c to 0x0000d14b] to section .text.checkIncDec_i8(signed char, signed char, signed char) from er9x.o
      Allocate [0x0000d14c to 0x0000d15b] to section .text.mixaddress(unsigned char) from er9x.o
      Allocate [0x0000d15c to 0x0000d16b] to section .text._GLOBAL__sub_I_er9x.cpp from er9x.o
      Allocate [0x0000d16c to 0x0000d17b] to section .text._GLOBAL__sub_I_SX127x.cpp from SX127x.o
      Allocate [0x0000d17c to 0x0000d18b] to section .text.TX_RX_PutVal from BoardI6.o
      Allocate [0x0000d18c to 0x0000d19b] to section .text.GetPPMTimCompareInterruptFlag from BoardI6.o
      Allocate [0x0000d19c to 0x0000d1ab] to section .text.GetPPMOutState from BoardI6.o
      Allocate [0x0000d1ac to 0x0000d1bb] to section .text.ClearPPMTimCompareInterruptFlag from BoardI6.o
      Allocate [0x0000d1bc to 0x0000d1cb] to section .text.Buzzer_SetVal from BoardI6.o
      Allocate [0x0000d1cc to 0x0000d1db] to section .text.Buzzer_ClrVal from BoardI6.o
      Allocate [0x0000d1dc to 0x0000d1e7] to section .text.rst_1 from BoardI6.o
      Allocate [0x0000d1e8 to 0x0000d1f3] to section .text.rst_0 from BoardI6.o
      Allocate [0x0000d1f4 to 0x0000d1ff] to section .text.cs_0 from BoardI6.o
      Allocate [0x0000d200 to 0x0000d20b] to section .text.backlight_on from BoardI6.o
      Allocate [0x0000d20c to 0x0000d217] to section .text.backlight_off from BoardI6.o
      Allocate [0x0000d218 to 0x0000d223] to section .text.a7105_csn_on from BoardI6.o
      Allocate [0x0000d224 to 0x0000d22f] to section .text.a7105_csn_off from BoardI6.o
      Allocate [0x0000d230 to 0x0000d23b] to section .text.SX127xHal::SX127xHal() from SX127xHal.o
      Allocate [0x0000d23c to 0x0000d247] to section .text.get_tmr10ms() from er9x.o
      Allocate [0x0000d248 to 0x0000d253] to section .text.SetPPMTimCompare from BoardI6.o
      Allocate [0x0000d254 to 0x0000d25f] to section .text.RF1_SetVal from BoardI6.o
      Allocate [0x0000d260 to 0x0000d26b] to section .text.RF1_ClrVal from BoardI6.o
      Allocate [0x0000d26c to 0x0000d277] to section .text.RF0_SetVal from BoardI6.o
      Allocate [0x0000d278 to 0x0000d283] to section .text.RF0_ClrVal from BoardI6.o
      Allocate [0x0000d284 to 0x0000d28f] to section .text.GetPPMTimCompare from BoardI6.o
      Allocate [0x0000d290 to 0x0000d29b] to section .text.EnablePRTTim from BoardI6.o
      Allocate [0x0000d29c to 0x0000d2a7] to section .text.EnablePPMTim from BoardI6.o
      Allocate [0x0000d2a8 to 0x0000d2b3] to section .text.EnablePPMOut from BoardI6.o
      Allocate [0x0000d2b4 to 0x0000d2bf] to section .text.DisablePRTTim from BoardI6.o
      Allocate [0x0000d2c0 to 0x0000d2cb] to section .text.DisablePPMOut from BoardI6.o
      Allocate [0x0000d2cc to 0x0000d3c1] to section .text.voice_numeric(short, unsigned char, unsigned char) from audio.o
      Allocate [0x0000d3c2 to 0x0000d4a1] to section .text.EFile::writeRlc(unsigned char, unsigned char, unsigned char*, unsigned short, unsigned char) from file.o
      Allocate [0x0000d4a2 to 0x0000d525] to section .text.putsTime(unsigned char, unsigned char, short, unsigned char, unsigned char) from lcd.o
      Allocate [0x0000d526 to 0x0000d599] to section .text.intpol(short, unsigned char) from menus.o
      Allocate [0x0000d59a to 0x0000d60b] to section .text.EFile::readRlc(unsigned char*, unsigned short) from file.o
      Allocate [0x0000d60c to 0x0000d677] to section .text.displayIndex(char const* const*, unsigned char, unsigned char, unsigned char) from menus.o
      Allocate [0x0000d678 to 0x0000d6d1] to section .text.telltale(unsigned char, signed char, signed char) from menus.o
      Allocate [0x0000d6d2 to 0x0000d729] to section .text.tiny_sprintf(char*, char const*, char, char, ...) from elrsV2.o
      Allocate [0x0000d72a to 0x0000d773] to section .text.lcd_hbar(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) from lcd.o
      Allocate [0x0000d774 to 0x0000d7b9] to section .text.lcd_rect_xor(unsigned char, unsigned char, unsigned char, unsigned char) from lcd.o
      Allocate [0x0000d7ba to 0x0000d7fb] to section .text.getTrimFlightPhase(unsigned char, unsigned char) from er9x.o
      Allocate [0x0000d7fc to 0x0000d83d] to section .text.lcd_outhex4(unsigned char, unsigned char, unsigned short) from lcd.o
      Allocate [0x0000d83e to 0x0000d87d] to section .text.libc.__aeabi_idiv from intasmops_arm.o (libc_v6m_t_le_eabi_small.a)
      Allocate [0x0000d87e to 0x0000d8bb] to section .text.displayOneSwitch3Pos(unsigned char, unsigned char, unsigned char) from menus.o
      Allocate [0x0000d8bc to 0x0000d8f7] to section .text.expo(short, short) from menus.o
      Allocate [0x0000d8f8 to 0x0000d92f] to section .text.libc.__aeabi_uidiv from intasmops_arm.o (libc_v6m_t_le_eabi_small.a)
      Allocate [0x0000d930 to 0x0000d967] to section .text.edit_dr_switch(unsigned char, unsigned char, signed char, unsigned char, unsigned char) from menus.o
      Allocate [0x0000d968 to 0x0000d99b] to section .text.libc.strstr from strops.o (libc_v6m_t_le_eabi_small.a)
      Allocate [0x0000d99c to 0x0000d9cd] to section .text.lcd_putsAtt(unsigned char, unsigned char, char const*, unsigned char) from lcd.o
      Allocate [0x0000d9ce to 0x0000d9fb] to section .text.libc.memcmp from strops.o (libc_v6m_t_le_eabi_small.a)
      Allocate [0x0000d9fc to 0x0000da29] to section .text.GENERIC_CRC14::GENERIC_CRC14(unsigned short) from crc.o
      Allocate [0x0000da2a to 0x0000da57] to section .text.putsMomentDrSwitches(unsigned char, unsigned char, signed char, unsigned char) from er9x.o
      Allocate [0x0000da58 to 0x0000da83] to section .text.A7105_WriteID(unsigned int) from A7105_SPI.o
      Allocate [0x0000da84 to 0x0000daaf] to section .text.A7105_ReadReg(unsigned char) from A7105_SPI.o
      Allocate [0x0000dab0 to 0x0000dad9] to section .text.libc.div from intops.o (libc_v6m_t_le_eabi_small.a)
      Allocate [0x0000dada to 0x0000db03] to section .text.lcd_putsnAtt(unsigned char, unsigned char, char const*, unsigned char, unsigned char) from lcd.o
      Allocate [0x0000db04 to 0x0000db2b] to section .text.doVoiceAlarmSource(t_voiceAlarm*) from er9x.o
      Allocate [0x0000db2c to 0x0000db51] to section .text.lcd_puts_Pskip(unsigned char, char const*, unsigned char) from lcd.o
      Allocate [0x0000db52 to 0x0000db77] to section .text.A7105_Reset() from A7105_SPI.o
      Allocate [0x0000db78 to 0x0000db9b] to section .text.DoSum(unsigned char*, unsigned char) from audio.o
      Allocate [0x0000db9c to 0x0000dbbf] to section .text.scalerDecimal(unsigned char, unsigned char, unsigned char) from menus.o
      Allocate [0x0000dbc0 to 0x0000dbe1] to section .text.libc.__aeabi_memmove from strasmops_arm.o (libc_v6m_t_le_eabi_small.a)
      Allocate [0x0000dbe2 to 0x0000dc03] to section .text.expou(unsigned short, unsigned short) from menus.o
      Allocate [0x0000dc04 to 0x0000dc25] to section .text.getCurrentSwitchStates() from er9x.o
      Allocate [0x0000dc26 to 0x0000dc47] to section .text.lcd_outdezAtt(unsigned char, unsigned char, short, unsigned char) from lcd.o
      Allocate [0x0000dc48 to 0x0000dc69] to section .text.lcd_2_digits(unsigned char, unsigned char, unsigned char, unsigned char) from lcd.o
      Allocate [0x0000dc6a to 0x0000dc89] to section .text.lcdSendCtl(unsigned char) from lcd.o
      Allocate [0x0000dc8a to 0x0000dca9] to section .text.stickMoveValue() from er9x.o
      Allocate [0x0000dcaa to 0x0000dcc7] to section .text.libc.__aeabi_llsr from intasmops_arm.o (libc_v6m_t_le_eabi_small.a)
      Allocate [0x0000dcc8 to 0x0000dce5] to section .text.libc.__aeabi_llsl from intasmops_arm.o (libc_v6m_t_le_eabi_small.a)
      Allocate [0x0000dce6 to 0x0000dd03] to section .text.A7105_WriteReg(unsigned char, unsigned char) from A7105_SPI.o
      Allocate [0x0000dd04 to 0x0000dd1f] to section .text.onoffMenuItem(unsigned char, unsigned char, char const*, unsigned char) from menus.o
      Allocate [0x0000dd20 to 0x0000dd3b] to section .text.validateName(char*, unsigned char) from pers.o
      Allocate [0x0000dd3c to 0x0000dd57] to section .text.voiceMinutes(short) from menus.o
      Allocate [0x0000dd58 to 0x0000dd73] to section .text.A7105_Strobe(unsigned char) from A7105_SPI.o
      Allocate [0x0000dd74 to 0x0000dd8d] to section .text.lcd_putsAttIdx(unsigned char, unsigned char, char const*, unsigned char, unsigned char) from lcd.o
      Allocate [0x0000dd8e to 0x0000dda5] to section .text.StubbornSender::ResetState() from stubborn_sender.o
      Allocate [0x0000dda6 to 0x0000ddbd] to section .text.EeFsRead(unsigned char, unsigned char) from file.o
      Allocate [0x0000ddbe to 0x0000ddd5] to section .text.crossfireTelemetryPing() from elrsV2.o
      Allocate [0x0000ddd6 to 0x0000ddeb] to section .text.semicolonPos(char const*, unsigned char) from elrsV2.o
      Allocate [0x0000ddec to 0x0000de01] to section .text.EeFsSetLink(unsigned char, unsigned char) from file.o
      Allocate [0x0000de02 to 0x0000de17] to section .text.gvarMenuItem125(unsigned char, unsigned char, signed char, unsigned char) from menus.o
      Allocate [0x0000de18 to 0x0000de2d] to section .text.calc100toRESX(signed char) from er9x.o
      Allocate [0x0000de2e to 0x0000de41] to section .text.libc.__aeabi_memclr from strasmops_arm.o (libc_v6m_t_le_eabi_small.a)
      Allocate [0x0000de42 to 0x0000de55] to section .text.StubbornReceiver::StubbornReceiver(unsigned char) from stubborn_receiver.o
      Allocate [0x0000de56 to 0x0000de69] to section .text.setNameP(char*, char const*) from pers.o
      Allocate [0x0000de6a to 0x0000de7d] to section .text.lcd_xlabel_decimal(unsigned char, unsigned char, unsigned short, unsigned char, char const*) from menus.o
      Allocate [0x0000de7e to 0x0000de8f] to section .text.onoffItem(unsigned char, unsigned char, unsigned char) from menus.o
      Allocate [0x0000de90 to 0x0000dea1] to section .text.offonItem(unsigned char, unsigned char, unsigned char) from menus.o
      Allocate [0x0000dea2 to 0x0000deb3] to section .text.offonMenuItem(unsigned char, unsigned char, char const*, unsigned char) from menus.o
      Allocate [0x0000deb4 to 0x0000dec5] to section .text.putc_0_1(unsigned char, unsigned char, unsigned char) from menus.o
      Allocate [0x0000dec6 to 0x0000ded5] to section .text.libc.__aeabi_uidivmod from intasmops_arm.o (libc_v6m_t_le_eabi_small.a)
      Allocate [0x0000ded6 to 0x0000dee5] to section .text.putsChn(unsigned char, unsigned char, unsigned char, unsigned char) from er9x.o
      Allocate [0x0000dee6 to 0x0000def5] to section .text.TITLEP(char const*) from menus.o
      Allocate [0x0000def6 to 0x0000df05] to section .text.lcd_puts_Pleft(unsigned char, char const*) from lcd.o
      Allocate [0x0000df06 to 0x0000df15] to section .text.calc1000toRESX(short) from er9x.o
      Allocate [0x0000df16 to 0x0000df25] to section .text.putsTimeNoAtt(unsigned char, unsigned char, short) from menus.o
      Allocate [0x0000df26 to 0x0000df35] to section .text.getTrimValue(unsigned char, unsigned char) from er9x.o
      Allocate [0x0000df36 to 0x0000df45] to section .text.lcd_putsn_P(unsigned char, unsigned char, char const*, unsigned char) from lcd.o
      Allocate [0x0000df46 to 0x0000df55] to section .text.A7105_Sleep() from A7105_SPI.o
      Allocate [0x0000df56 to 0x0000df63] to section .text.main from main.o
      Allocate [0x0000df64 to 0x0000df71] to section .text.libc.strlen from strasmops_arm.o (libc_v6m_t_le_eabi_small.a)
      Allocate [0x0000df72 to 0x0000df7f] to section .text.libc.strcpy from strasmops_arm.o (libc_v6m_t_le_eabi_small.a)
      Allocate [0x0000df80 to 0x0000df8d] to section .text.libc.memcpy from strasmops_arm.o (libc_v6m_t_le_eabi_small.a)
      Allocate [0x0000df8e to 0x0000df9b] to section .text.libc.__aeabi_idivmod from intasmops_arm.o (libc_v6m_t_le_eabi_small.a)
      Allocate [0x0000df9c to 0x0000dfa9] to section .text.StubbornSender::StubbornSender(unsigned char) from stubborn_sender.o
      Allocate [0x0000dfaa to 0x0000dfb7] to section .text.message(char const*) from er9x.o
      Allocate [0x0000dfb8 to 0x0000dfc5] to section .text.keyDown() from er9x.o
      Allocate [0x0000dfc6 to 0x0000dfd3] to section .text.fieldTextSelectionSave(FieldProps*) from elrsV2.o
      Allocate [0x0000dfd4 to 0x0000dfe1] to section .text.putVoiceQueueUpper(unsigned char) from audio.o
      Allocate [0x0000dfe2 to 0x0000dfef] to section .text.REG100_100(signed char) from er9x.o
      Allocate [0x0000dff0 to 0x0000dffb] to section .text.switchPosition(unsigned char) from drivers.o
      Allocate [0x0000dffc to 0x0000e007] to section .text.eeModelExists(unsigned char) from pers.o
      Allocate [0x0000e008 to 0x0000e013] to section .text.getSwitch00(signed char) from er9x.o
      Allocate [0x0000e014 to 0x0000e01d] to section .text.EeFsGetLink(unsigned char) from file.o
      Allocate [0x0000e01e to 0x0000e027] to section .text.lcd_hline(unsigned char, unsigned char, signed char) from lcd.o
      Allocate [0x0000e028 to 0x0000e031] to section .text.lcd_putc(unsigned char, unsigned char, char) from lcd.o
      Allocate [0x0000e032 to 0x0000e03b] to section .text.alert(char const*) from er9x.o
      Allocate [0x0000e03c to 0x0000e045] to section .text.resetTimer2() from menus.o
      Allocate [0x0000e046 to 0x0000e04f] to section .text.checkIncDec(signed char, signed char, signed char, unsigned char) from er9x.o
      Allocate [0x0000e050 to 0x0000e059] to section .text.lcd_puts_P(unsigned char, unsigned char, char const*) from lcd.o
      Allocate [0x0000e05a to 0x0000e063] to section .text.lcd_outdez(unsigned char, unsigned char, short) from lcd.o
      Allocate [0x0000e064 to 0x0000e06b] to section .text.audioQueue::busy() from audio.o
      Allocate [0x0000e06c to 0x0000e073] to section .text.A7105_SetTxRxMode(unsigned char) from A7105_SPI.o
      Allocate [0x0000e074 to 0x0000e07b] to section .text.putVoiceQueue(unsigned char) from audio.o
      Allocate [0x0000e07c to 0x0000e083] to section .text.crsf_shutdown() from crossfire.o
      Allocate [0x000003fc to 0x000003fd] to section .text.noopOpen(FieldProps*) from elrsV2.o
      Allocate [0x0000e084 to 0x0000e5e7] to section .rodata.font_dblsize from lcd.o
      Allocate [0x0000e5e8 to 0x0000e7d6] to section .rodata.font from lcd.o
      Allocate [0x0000e7d7 to 0x0000e8fe] to section .rodata.Str_telemItems from menus.o
      Allocate [0x0000e8ff to 0x0000e9fe] to section .rodata.crc8tab from crc_crsf.o
      Allocate [0x0000e9ff to 0x0000eaa4] to section .rodata.Str_Chans_Gv from menus.o
      Allocate [0x0000eaa5 to 0x0000eb21] to section .rodata..L.str.11 from menus.o
      Allocate [0x0000eb22 to 0x0000eb93] to section .rodata.Str_Cswitch from menus.o
      Allocate [0x0000eb94 to 0x0000ebf5] to section .rodata.Str_Sounds from menus.o
      Allocate [0x0000ebf6 to 0x0000ec4d] to section .rodata.AFHDS2A_tel from AFHDS2A_a7105.o
      Allocate [0x0000ec4e to 0x0000ec9f] to section .rodata..L.str.52 from menus.o
      Allocate [0x0000eca0 to 0x0000eceb] to section .rodata..L.str.46 from menus.o
      Allocate [0x0000ecec to 0x0000ed36] to section .rodata.sticks from menus.o
      Allocate [0x0000ed37 to 0x0000ed81] to section .rodata..L.str.110 from menus.o
      Allocate [0x0000ed82 to 0x0000edcb] to section .rodata.Curve_Str from menus.o
      Allocate [0x0000edcc to 0x0000ee12] to section .rodata..L.str.105 from menus.o
      Allocate [0x0000ee13 to 0x0000ee55] to section .rodata.s_charTab from menus.o
      Allocate [0x0000ee56 to 0x0000ee96] to section .rodata.Str_Switches from er9x.o
      Allocate [0x0000ee97 to 0x0000eed7] to section .rodata..L.str.4 from menus.o
      Allocate [0x0000eed8 to 0x0000ef16] to section .rodata..L.str.6 from menus.o
      Allocate [0x0000ef17 to 0x0000ef50] to section .rodata.Str_Main_Popup from menus.o
      Allocate [0x0000ef51 to 0x0000ef8a] to section .rodata.TelemIndex from menus.o
      Allocate [0x0000ef8b to 0x0000efc0] to section .rodata..L.str.49 from menus.o
      Allocate [0x0000efc1 to 0x0000eff5] to section .rodata..L.str.103 from menus.o
      Allocate [0x0000eff6 to 0x0000f029] to section .rodata..L.str.107 from menus.o
      Allocate [0x0000f02a to 0x0000f05b] to section .rodata.AFHDS2A_A7105_regs from BoardI6.o
      Allocate [0x0000f05c to 0x0000f08c] to section .rodata.Stamps from stamp.o
      Allocate [0x0000f08d to 0x0000f0ba] to section .rodata..L.str.51 from menus.o
      Allocate [0x0000f0bb to 0x0000f0e8] to section .rodata..L.str.48 from menus.o
      Allocate [0x0000f0e9 to 0x0000f116] to section .rodata..L.str.16 from menus.o
      Allocate [0x0000f117 to 0x0000f141] to section .rodata..L.str.93 from menus.o
      Allocate [0x0000f142 to 0x0000f16c] to section .rodata..L.str.13 from er9x.o
      Allocate [0x0000f16d to 0x0000f197] to section .rodata..L.str.115 from menus.o
      Allocate [0x0000f198 to 0x0000f1c1] to section .rodata.UnitsString from menus.o
      Allocate [0x0000f1c2 to 0x0000f1ea] to section .rodata.Str_Gv_Source from menus.o
      Allocate [0x0000f1eb to 0x0000f213] to section .rodata..L.str.71 from menus.o
      Allocate [0x0000f214 to 0x0000f23b] to section .rodata..L.str.47 from menus.o
      Allocate [0x0000f23c to 0x0000f262] to section .rodata.MixPopList from menus.o
      Allocate [0x0000f263 to 0x0000f288] to section .rodata.ModelPopList from menus.o
      Allocate [0x0000f289 to 0x0000f2ae] to section .rodata..L.str.99 from menus.o
      Allocate [0x0000f2af to 0x0000f2d3] to section .rodata..L.str.72 from menus.o
      Allocate [0x0000f2d4 to 0x0000f2f8] to section .rodata..L.str.6 from er9x.o
      Allocate [0x0000f2f9 to 0x0000f31a] to section .rodata..L.str.108 from menus.o
      Allocate [0x0000f31b to 0x0000f33b] to section .rodata..L.str.5 from er9x.o
      Allocate [0x0000f33c to 0x0000f35b] to section .rodata..L.str.75 from menus.o
      Allocate [0x0000f35c to 0x0000f37b] to section .rodata..L.str.58 from menus.o
      Allocate [0x0000f37c to 0x0000f39b] to section .rodata..L.str.113 from menus.o
      Allocate [0x0000f39c to 0x0000f3b9] to section .rodata.SW_3_IDX from menus.o
      Allocate [0x0000f3ba to 0x0000f3d7] to section .rodata.idx_to_afhds2a from crossfire.o
      Allocate [0x0000f3d8 to 0x0000f3f5] to section .rodata..L.str.94 from menus.o
      Allocate [0x0000f3f6 to 0x0000f413] to section .rodata..L.str.27 from menus.o
      Allocate [0x0000f414 to 0x0000f430] to section .rodata..L.str.101 from menus.o
      Allocate [0x0000f431 to 0x0000f44c] to section .rodata..L.str.15 from menus.o
      Allocate [0x0000f44d to 0x0000f468] to section .rodata..L.str.104 from menus.o
      Allocate [0x0000f469 to 0x0000f483] to section .rodata..L.str.86 from menus.o
      Allocate [0x0000f484 to 0x0000f49d] to section .rodata..L.str.54 from menus.o
      Allocate [0x0000f49e to 0x0000f4b6] to section .rodata..L.str.17 from menus.o
      Allocate [0x0000f4b7 to 0x0000f4ce] to section .rodata.bchout_ar from er9x.o
      Allocate [0x0000f4cf to 0x0000f4e6] to section .rodata..L.str.116 from menus.o
      Allocate [0x0000f4e7 to 0x0000f4fe] to section .rodata..L.str.111 from menus.o
      Allocate [0x0000f4ff to 0x0000f515] to section .rodata..L.str.35 from menus.o
      Allocate [0x0000f516 to 0x0000f52b] to section .rodata.Str_On_Off_Both from menus.o
      Allocate [0x0000f52c to 0x0000f541] to section .rodata..L.str.78 from menus.o
      Allocate [0x0000f542 to 0x0000f557] to section .rodata..L.str.76 from menus.o
      Allocate [0x0000f558 to 0x0000f56d] to section .rodata..L.str.2 from er9x.o
      Allocate [0x0000f56e to 0x0000f582] to section .rodata..L.str.2 from pers.o
      Allocate [0x0000f583 to 0x0000f596] to section .rodata..L.str.44 from menus.o
      Allocate [0x0000f597 to 0x0000f5a9] to section .rodata..L.str.34 from menus.o
      Allocate [0x0000f5aa to 0x0000f5bc] to section .rodata..L.str.3 from pers.o
      Allocate [0x0000f5bd to 0x0000f5ce] to section .rodata.modi12x3 from er9x.o
      Allocate [0x0000f5cf to 0x0000f5e0] to section .rodata..L.str.69 from menus.o
      Allocate [0x0000f5e1 to 0x0000f5f2] to section .rodata..L.str.5 from pers.o
      Allocate [0x0000f5f3 to 0x0000f604] to section .rodata..L.str.25 from menus.o
      Allocate [0x0000f605 to 0x0000f616] to section .rodata..L.str.23 from menus.o
      Allocate [0x0000f617 to 0x0000f627] to section .rodata.menuWhenDone from menus.o
      Allocate [0x0000f628 to 0x0000f638] to section .rodata..L.str.67 from menus.o
      Allocate [0x0000f639 to 0x0000f649] to section .rodata..L.str.50 from menus.o
      Allocate [0x0000f64a to 0x0000f65a] to section .rodata..L.str.41 from menus.o
      Allocate [0x0000f65b to 0x0000f66b] to section .rodata..L.str.18 from menus.o
      Allocate [0x0000f66c to 0x0000f67c] to section .rodata..L.str.119 from menus.o
      Allocate [0x0000f67d to 0x0000f68d] to section .rodata..L.str.117 from menus.o
      Allocate [0x0000f68e to 0x0000f69e] to section .rodata..L.str.102 from menus.o
      Allocate [0x0000f69f to 0x0000f6ae] to section .rodata.stickScramble from er9x.o
      Allocate [0x0000f6af to 0x0000f6be] to section .rodata.Str_EEPROM_Overflow from pers.o
      Allocate [0x0000f6bf to 0x0000f6ce] to section .rodata..L.str.74 from menus.o
      Allocate [0x0000f6cf to 0x0000f6de] to section .rodata..L.str.62 from menus.o
      Allocate [0x0000f6df to 0x0000f6ee] to section .rodata..L.str.4 from pers.o
      Allocate [0x0000f6ef to 0x0000f6fe] to section .rodata..L.str.21 from menus.o
      Allocate [0x0000f6ff to 0x0000f70e] to section .rodata..L.str.121 from menus.o
      Allocate [0x0000f70f to 0x0000f71e] to section .rodata..L.str.120 from menus.o
      Allocate [0x0000f71f to 0x0000f72e] to section .rodata..L.str.12 from er9x.o
      Allocate [0x0000f72f to 0x0000f73e] to section .rodata..L.str.106 from menus.o
      Allocate [0x0000f73f to 0x0000f74d] to section .rodata.Str_Beep_Countdown from menus.o
      Allocate [0x0000f74e to 0x0000f75c] to section .rodata.csTypeTable from er9x.o
      Allocate [0x0000f75d to 0x0000f76b] to section .rodata..L.str.96 from menus.o
      Allocate [0x0000f76c to 0x0000f77a] to section .rodata..L.str.90 from menus.o
      Allocate [0x0000f77b to 0x0000f789] to section .rodata..L.str.6 from pers.o
      Allocate [0x0000f78a to 0x0000f798] to section .rodata..L.str.5 from menus.o
      Allocate [0x0000f799 to 0x0000f7a7] to section .rodata..L.str.4 from elrsV2.o
      Allocate [0x0000f7a8 to 0x0000f7b6] to section .rodata..L.str.12 from menus.o
      Allocate [0x0000f7b7 to 0x0000f7c5] to section .rodata..L.str.114 from menus.o
      Allocate [0x0000f7c6 to 0x0000f7d4] to section .rodata..L.str.11 from er9x.o
      Allocate [0x0000f7d5 to 0x0000f7e2] to section .rodata..L.str.87 from menus.o
      Allocate [0x0000f7e3 to 0x0000f7f0] to section .rodata..L.str.7 from menus.o
      Allocate [0x0000f7f1 to 0x0000f7fe] to section .rodata..L.str.68 from menus.o
      Allocate [0x0000f7ff to 0x0000f80c] to section .rodata..L.str.53 from menus.o
      Allocate [0x0000f80d to 0x0000f81a] to section .rodata..L.str.3 from er9x.o
      Allocate [0x0000f81b to 0x0000f828] to section .rodata..L.str.100 from menus.o
      Allocate [0x0000f829 to 0x0000f835] to section .rodata..L.str.7 from er9x.o
      Allocate [0x0000f836 to 0x0000f842] to section .rodata..L.str.63 from menus.o
      Allocate [0x0000f843 to 0x0000f84f] to section .rodata..L.str.22 from menus.o
      Allocate [0x0000f850 to 0x0000f85c] to section .rodata..L.str from er9x.o
      Allocate [0x0000f85d to 0x0000f868] to section .rodata.Lcdinit from lcd.o
      Allocate [0x0000f869 to 0x0000f874] to section .rodata.Str_minute_Beep from menus.o
      Allocate [0x0000f875 to 0x0000f880] to section .rodata.Str_Calibration from menus.o
      Allocate [0x0000f881 to 0x0000f88c] to section .rodata.Str_AudioHaptic from menus.o
      Allocate [0x0000f88d to 0x0000f898] to section .rodata..L.str.8 from elrsV2.o
      Allocate [0x0000f899 to 0x0000f8a4] to section .rodata..L.str.77 from menus.o
      Allocate [0x0000f8a5 to 0x0000f8b0] to section .rodata..L.str.70 from menus.o
      Allocate [0x0000f8b1 to 0x0000f8bc] to section .rodata..L.str.56 from menus.o
      Allocate [0x0000f8bd to 0x0000f8c8] to section .rodata..L.str.19 from menus.o
      Allocate [0x0000f8c9 to 0x0000f8d4] to section .rodata..L.str.112 from menus.o
      Allocate [0x0000f8d5 to 0x0000f8df] to section .rodata.Str_heli_setup from menus.o
      Allocate [0x0000f8e0 to 0x0000f8ea] to section .rodata.Str_Cswitches from menus.o
      Allocate [0x0000f8eb to 0x0000f8f5] to section .rodata.Str_Globals from menus.o
      Allocate [0x0000f8f6 to 0x0000f900] to section .rodata.Str_Safety from menus.o
      Allocate [0x0000f901 to 0x0000f90b] to section .rodata..L.str.91 from menus.o
      Allocate [0x0000f90c to 0x0000f916] to section .rodata..L.str.9 from er9x.o
      Allocate [0x0000f917 to 0x0000f921] to section .rodata..L.str.79 from menus.o
      Allocate [0x0000f922 to 0x0000f92c] to section .rodata..L.str.64 from menus.o
      Allocate [0x0000f92d to 0x0000f937] to section .rodata..L.str.1 from pers.o
      Allocate [0x0000f938 to 0x0000f942] to section .rodata..L.str from pers.o
      Allocate [0x0000f943 to 0x0000f94c] to section .rodata.Str_Telemetry from menus.o
      Allocate [0x0000f94d to 0x0000f956] to section .rodata.Str_DiagSwtch from menus.o
      Allocate [0x0000f957 to 0x0000f960] to section .rodata.Str_TRE012AG from menus.o
      Allocate [0x0000f961 to 0x0000f96a] to section .rodata..L.str.97 from menus.o
      Allocate [0x0000f96b to 0x0000f974] to section .rodata..L.str.81 from menus.o
      Allocate [0x0000f975 to 0x0000f97e] to section .rodata..L.str.55 from menus.o
      Allocate [0x0000f97f to 0x0000f988] to section .rodata..L.str.29 from menus.o
      Allocate [0x0000f989 to 0x0000f992] to section .rodata..L.str.10 from menus.o
      Allocate [0x0000f993 to 0x0000f99c] to section .rodata..L.str from menus.o
      Allocate [0x0000f99d to 0x0000f9a5] to section .rodata.Str_Protocol from menus.o
      Allocate [0x0000f9a6 to 0x0000f9ae] to section .rodata.Str_Hardware from menus.o
      Allocate [0x0000f9af to 0x0000f9b7] to section .rodata.Str_Controls from menus.o
      Allocate [0x0000f9b8 to 0x0000f9c0] to section .rodata..L.str.98 from menus.o
      Allocate [0x0000f9c1 to 0x0000f9c9] to section .rodata..L.str.89 from menus.o
      Allocate [0x0000f9ca to 0x0000f9d2] to section .rodata..L.str.88 from menus.o
      Allocate [0x0000f9d3 to 0x0000f9db] to section .rodata..L.str.84 from menus.o
      Allocate [0x0000f9dc to 0x0000f9e4] to section .rodata..L.str.8 from er9x.o
      Allocate [0x0000f9e5 to 0x0000f9ed] to section .rodata..L.str.8 from menus.o
      Allocate [0x0000f9ee to 0x0000f9f6] to section .rodata..L.str.7 from elrsV2.o
      Allocate [0x0000f9f7 to 0x0000f9ff] to section .rodata..L.str.45 from menus.o
      Allocate [0x0000fa00 to 0x0000fa08] to section .rodata..L.str.33 from menus.o
      Allocate [0x0000fa09 to 0x0000fa11] to section .rodata..L.str.30 from menus.o
      Allocate [0x0000fa12 to 0x0000fa1a] to section .rodata..L.str.24 from menus.o
      Allocate [0x0000fa1b to 0x0000fa22] to section .rodata.per10ms()::crossTrim from drivers.o
      Allocate [0x0000fa23 to 0x0000fa2a] to section .rodata.UnitsText from menus.o
      Allocate [0x0000fa2b to 0x0000fa32] to section .rodata._bitmask from lcd.o
      Allocate [0x0000fa33 to 0x0000fa3a] to section .rodata.Str_Expo from menus.o
      Allocate [0x0000fa3b to 0x0000fa42] to section .rodata.rate from er9x.o
      Allocate [0x0000fa43 to 0x0000fa4a] to section .rodata.Str_Version from menus.o
      Allocate [0x0000fa4b to 0x0000fa52] to section .rodata.Str_Trainer from menus.o
      Allocate [0x0000fa53 to 0x0000fa5a] to section .rodata.Str_General from menus.o
      Allocate [0x0000fa5b to 0x0000fa62] to section .rodata.Str_Display from menus.o
      Allocate [0x0000fa63 to 0x0000fa6a] to section .rodata.Str_DiagAna from menus.o
      Allocate [0x0000fa6b to 0x0000fa72] to section .rodata.UnitsVoice from menus.o
      Allocate [0x0000fa73 to 0x0000fa7a] to section .rodata..L.str.85 from menus.o
      Allocate [0x0000fa7b to 0x0000fa82] to section .rodata..L.str.66 from menus.o
      Allocate [0x0000fa83 to 0x0000fa8a] to section .rodata..L.str.59 from menus.o
      Allocate [0x0000fa8b to 0x0000fa92] to section .rodata..L.str.4 from er9x.o
      Allocate [0x0000fa93 to 0x0000fa9a] to section .rodata..L.str.26 from menus.o
      Allocate [0x0000fa9b to 0x0000faa2] to section .rodata..L.str.109 from menus.o
      Allocate [0x0000faa3 to 0x0000faa9] to section .rodata.Str_Alert from er9x.o
      Allocate [0x0000faaa to 0x0000fab0] to section .rodata.ChannelToPin from BoardI6.o
      Allocate [0x0000fab1 to 0x0000fab7] to section .rodata.Str_limits from menus.o
      Allocate [0x0000fab8 to 0x0000fabe] to section .rodata.Str_Curves from menus.o
      Allocate [0x0000fabf to 0x0000fac5] to section .rodata.Str_Alarms from menus.o
      Allocate [0x0000fac6 to 0x0000facc] to section .rodata..L.str.80 from menus.o
      Allocate [0x0000facd to 0x0000fad3] to section .rodata..L.str.61 from menus.o
      Allocate [0x0000fad4 to 0x0000fada] to section .rodata..L.str.2 from elrsV2.o
      Allocate [0x0000fadb to 0x0000fae1] to section .rodata..L.str.10 from er9x.o
      Allocate [0x0000fae2 to 0x0000fae8] to section .rodata..L.str.1 from menus.o
      Allocate [0x0000fae9 to 0x0000faee] to section .rodata.Str_Timer from menus.o
      Allocate [0x0000faef to 0x0000faf4] to section .rodata.Str_Modes from menus.o
      Allocate [0x0000faf5 to 0x0000fafa] to section .rodata.Str_Mixer from menus.o
      Allocate [0x0000fafb to 0x0000fb00] to section .rodata.Str_Curve from menus.o
      Allocate [0x0000fb01 to 0x0000fb06] to section .rodata.Str_1_RETA from menus.o
      Allocate [0x0000fb07 to 0x0000fb0c] to section .rodata..L.str.92 from menus.o
      Allocate [0x0000fb0d to 0x0000fb12] to section .rodata..L.str.82 from menus.o
      Allocate [0x0000fb13 to 0x0000fb18] to section .rodata..L.str.31 from menus.o
      Allocate [0x0000fb19 to 0x0000fb1e] to section .rodata..L.str.14 from menus.o
      Allocate [0x0000fb1f to 0x0000fb24] to section .rodata..L.str.13 from menus.o
      Allocate [0x0000fb25 to 0x0000fb29] to section .rodata.Str_Name from menus.o
      Allocate [0x0000fb2a to 0x0000fb2e] to section .rodata.Str_Hyphens from er9x.o
      Allocate [0x0000fb2f to 0x0000fb33] to section .rodata..L.str.73 from menus.o
      Allocate [0x0000fb34 to 0x0000fb38] to section .rodata..L.str.57 from menus.o
      Allocate [0x0000fb39 to 0x0000fb3d] to section .rodata..L.str.5 from elrsV2.o
      Allocate [0x0000fb3e to 0x0000fb42] to section .rodata..L.str.38 from menus.o
      Allocate [0x0000fb43 to 0x0000fb47] to section .rodata..L.str.32 from menus.o
      Allocate [0x0000fb48 to 0x0000fb4c] to section .rodata..L.str.3 from menus.o
      Allocate [0x0000fb4d to 0x0000fb51] to section .rodata..L.str.20 from menus.o
      Allocate [0x0000fb52 to 0x0000fb55] to section .rodata.menuProc0(unsigned char)::xt from menus.o
      Allocate [0x0000fb56 to 0x0000fb59] to section .rodata.Str_ON from er9x.o
      Allocate [0x0000fb5a to 0x0000fb5d] to section .rodata.Str_OFF from er9x.o
      Allocate [0x0000fb5e to 0x0000fb61] to section .rodata..L.str.95 from menus.o
      Allocate [0x0000fb62 to 0x0000fb65] to section .rodata..L.str.65 from menus.o
      Allocate [0x0000fb66 to 0x0000fb69] to section .rodata..L.str.60 from menus.o
      Allocate [0x0000fb6a to 0x0000fb6d] to section .rodata..L.str.40 from menus.o
      Allocate [0x0000fb6e to 0x0000fb71] to section .rodata..L.str.3 from elrsV2.o
      Allocate [0x0000fb72 to 0x0000fb75] to section .rodata..L.str.28 from menus.o
      Allocate [0x0000fb76 to 0x0000fb79] to section .rodata..L.str.118 from menus.o
      Allocate [0x0000fb7a to 0x0000fb7d] to section .rodata..L.str.1 from er9x.o
      Allocate [0x0000fb7e to 0x0000fb81] to section .rodata..L.str.1 from elrsV2.o
      Allocate [0x0000fb82 to 0x0000fb84] to section .rodata.Str_SC from menus.o
      Allocate [0x0000fb85 to 0x0000fb87] to section .rodata.Str_GV from menus.o
      Allocate [0x0000fb88 to 0x0000fb8a] to section .rodata..L.str.9 from menus.o
      Allocate [0x0000fb8b to 0x0000fb8d] to section .rodata..L.str.83 from menus.o
      Allocate [0x0000fb8e to 0x0000fb90] to section .rodata..L.str.43 from menus.o
      Allocate [0x0000fb91 to 0x0000fb93] to section .rodata..L.str.42 from menus.o
      Allocate [0x0000fb94 to 0x0000fb96] to section .rodata..L.str.39 from menus.o
      Allocate [0x0000fb97 to 0x0000fb99] to section .rodata..L.str.2 from menus.o
      Allocate [0x0000fb9a to 0x0000fb9c] to section .rodata..L.str from elrsV2.o
      Allocate [0x000003fe size 0] to block exidx from [ Linker created ]
      Allocate [0x000003fe size 0] to block dtors from [ Linker created ]
      Inputs to block dtors
          Allocate [0x000003fe size 0] to inline block <#2> at line 62, col 85 from [ Linker created ]
      Allocate [0x0000fba0 to 0x0000fbab] to block ctors from [ Linker created ]
      Inputs to block ctors
          Inputs to inline block <#1> at line 61, col 85
              Allocate [0x0000fba0 to 0x0000fba3] to section .init_array from er9x.o
              Allocate [0x0000fba4 to 0x0000fba7] to section .init_array from SX127x.o
              Allocate [0x0000fba8 to 0x0000fbab] to section .init_array from ELRS.o
          Allocate [0x0000fba0 to 0x0000fbab] to inline block <#1> at line 61, col 85 from [ Linker created ]
  Executing place in [0x000003fe to 0x000003ff] + [0x0000fb9d to 0x0000fb9f] + [0x0000fbac to 0x0000ffff] (1 inputs selected)
      Candidate regions: [0x00000000 to 0x0000ffff]
      Allocate [0x000003fe size 0] to block tdata_load from [ Linker created ]
      Inputs to block tdata_load
          Allocate [0x000003fe size 0] to copy of block tdata from [ Linker created ]
  Executing place in [0x1ffff800 to 0x200016ff] (1 inputs selected)
      Candidate regions: [0x1ffff800 to 0x200017ff]
      Allocate [0x1ffff800 size 0] to block tls from [ Linker created ]
      Inputs to block tls
          Allocate [0x1ffff800 size 0] to block tdata from [ Linker created ]
          Allocate [0x1ffff800 size 0] to block tbss from [ Linker created ]
  Executing place in [0x1ffff800 to 0x200016ff] (211 inputs selected)
      Candidate regions: [0x1ffff800 to 0x200017ff]
      Allocate [0x1ffff800 to 0x1ffff807] to section .bss.AFHDS2A_tel_status from AFHDS2A_a7105.o
      Allocate [0x1ffff808 to 0x1ffffc07] to section .bss.DisplayBuf from lcd.o
      Allocate [0x1ffffc08 to 0x1ffffe07] to section .bss.reusableBuffer from elrsV2.o
      Allocate [0x1ffffe08 to 0x1fffff07] to section .bss.Output from menus.o
      Allocate [0x1fffff08 to 0x1fffffb3] to section .bss.AFHDS2A_tel_data from AFHDS2A_a7105.o
      Allocate [0x1fffffb4 to 0x20000003] to section .bss.Fade from menus.o
      Allocate [0x20000004 to 0x20000044] to section .bss.g_crossfire from crossfire.o
      Allocate [0x20000048 to 0x20000087] to section .bss.eeFs from file.o
      Allocate [0x20000088 to 0x200000b7] to section .bss.Radio from ELRS.o
      Allocate [0x200000b8 to 0x200000df] to section .bss.packet from A7105_SPI.o
      Allocate [0x200000e0 to 0x200000f3] to section .bss.g_menuStack from er9x.o
      Allocate [0x200000f4 to 0x20000103] to section .bss.outputTelemetryBuffer from crossfire.o
      Allocate [0x20000104 to 0x20000113] to section .bss.MspSender from ELRS.o
      Allocate [0x20000114 to 0x2000011f] to section .bss.i2c_buffer from drivers.o
      Allocate [0x20000120 to 0x2000012b] to section .bss.TelemetryReceiver from ELRS.o
      Allocate [0x2000012c to 0x20000137] to section .bss.LQCalc from ELRS.o
      Allocate [0x20000138 to 0x20000141] to section .bss.voice_uart_send_buf from BoardI6.o
      Allocate [0x20000144 to 0x20000147] to section .bss.telemetryErrors from crossfire.o
      Allocate [0x20000148 to 0x2000014b] to section .bss.hal from SX127x.o
      Allocate [0x2000014c to 0x2000014f] to section .bss.g_voice_cb from BoardI6.o
      Allocate [0x20000150 to 0x20000153] to section .bss.g_tmr10ms from drivers.o
      Allocate [0x20000154 to 0x20000157] to section .bss.g_elrs_update_rate from crossfire.o
      Allocate [0x20000158 to 0x2000015b] to section .bss.g_elrs_lag from crossfire.o
      Allocate [0x2000015c to 0x2000015f] to section .bss.fieldTimeout from elrsV2.o
      Allocate [0x20000160 to 0x20000163] to section .bss.__SEGGER_RTL_heap_globals from heapops_basic.o (heapops_basic_v6m_little.a)
      Allocate [0x20000164 to 0x20000167] to section .bss.perMain()::lastTMR from er9x.o
      Allocate [0x20000168 to 0x2000016b] to section .bss.SX127xHal::instance from SX127xHal.o
      Allocate [0x2000016c to 0x2000016f] to section .bss.SX127xDriver::instance from SX127x.o
      Allocate [0x20000170 to 0x20000173] to section .bss.g_crsf_read_callback from BoardI6.o
      Allocate [0x20000174 to 0x20000177] to section .bss.fieldPopup from elrsV2.o
      Allocate [0x20000178 to 0x2000017b] to section .bss.SPI_BufferPtr from BoardI6.o
      Allocate [0x2000017c to 0x2000017f] to section .bss.ID from A7105_SPI.o
      Allocate [0x20000180 to 0x20000183] to section .bss.AlertMessage from er9x.o
      Allocate [0x20000184 to 0x20000385] to section .bss.ota_crc from ELRS.o
      Allocate [0x20000386 to 0x20000415] to section .bss.pulses2MHz from pulses.o
      Allocate [0x20000416 to 0x2000047f] to section .bss.Xmem from menus.o
      Allocate [0x20000480 to 0x200004a3] to section .bss.Voice from audio.o
      Allocate [0x200004a4 to 0x200004c3] to section .bss.s_timer from menus.o
      Allocate [0x200004c4 to 0x200004e3] to section .bss.g_chans512 from menus.o
      Allocate [0x200004e4 to 0x20000503] to section .bss.Ex_chans from menus.o
      Allocate [0x20000504 to 0x2000051b] to section .bss.CsTimer from er9x.o
      Allocate [0x2000051c to 0x2000052b] to section .bss.s_anaFilt from er9x.o
      Allocate [0x2000052c to 0x2000053b] to section .bss.g_ppmIns from er9x.o
      Allocate [0x2000053c to 0x2000054b] to section .bss.Nvs_timer from er9x.o
      Allocate [0x2000054c to 0x20000559] to section .bss.calibratedStick from menus.o
      Allocate [0x2000055a to 0x20000563] to section .bss.theWriteFile from pers.o
      Allocate [0x20000564 to 0x2000056d] to section .bss.theFile from pers.o
      Allocate [0x2000056e to 0x20000577] to section .bss.P1values from er9x.o
      Allocate [0x20000578 to 0x2000057f] to section .bss.TimeGlobals from menus.o
      Allocate [0x20000580 to 0x20000585] to section .bss.Inactivity from er9x.o
      Allocate [0x20000046 to 0x20000047] to section .bss.tmrEEPROM from er9x.o
      Allocate [0x20000142 to 0x20000143] to section .bss.g_tmr16KHz from er9x.o
      Allocate [0x20000586 to 0x20000587] to section .bss.g_latency from menus.o
      Allocate [0x20000588 to 0x20000589] to section .bss.g_LightOffCounter from er9x.o
      Allocate [0x2000058a to 0x2000058b] to section .bss.trace()::s_time from menus.o
      Allocate [0x2000058c to 0x2000058d] to section .bss.ActionAFHDS2A::packet_counter from AFHDS2A_a7105.o
      Allocate [0x2000058e to 0x2000058f] to section .bss.mainSequence()::timer from er9x.o
      Allocate [0x20000590 to 0x20000591] to section .bss.s_eeDirtyTime10ms from pers.o
      Allocate [0x20000592 to 0x20000593] to section .bss.SPI_Size from BoardI6.o
      Allocate [0x20000594 to 0x20000595] to section .bss.GAltOffset from AFHDS2A_a7105.o
      Allocate [0x20000596 to 0x20000597] to section .bss.B3_comp_value from pulses.o
      Allocate [0x20000598 to 0x20000599] to section .bss.AltOffset from AFHDS2A_a7105.o
      Allocate [0x2000059a to 0x20000983] to section .bss.g_model from er9x.o
      Allocate [0x20000984 to 0x20000a83] to section .bss.fields from elrsV2.o
      Allocate [0x20000a84 to 0x20000b03] to section .bss.telemetryRxBuffer from crossfire.o
      Allocate [0x20000b04 to 0x20000b79] to section .bss.g_eeGeneral from er9x.o
      Allocate [0x20000b7a to 0x20000bb1] to section .bss.audio from er9x.o
      Allocate [0x20000bb2 to 0x20000bde] to section .bss.keys from drivers.o
      Allocate [0x20000bdf to 0x20000c09] to section .bss.AFHDS2A_tel_res_cnt from AFHDS2A_a7105.o
      Allocate [0x20000c0a to 0x20000c19] to section .bss.hopping_frequency from A7105_SPI.o
      Allocate [0x20000c1a to 0x20000c25] to section .bss.Last_switch from er9x.o
      Allocate [0x20000c26 to 0x20000c2f] to section .bss.voice_uart_recv_buf from BoardI6.o
      Allocate [0x20000c30 to 0x20000c39] to section .bss.TimerConfig from er9x.o
      Allocate [0x20000c3a to 0x20000c42] to section .bss.Rotary from er9x.o
      Allocate [0x20000c43 to 0x20000c4a] to section .bss.deviceIds from elrsV2.o
      Allocate [0x20000c4b to 0x20000c52] to section .bss.Nvs_state from er9x.o
      Allocate [0x20000c53 to 0x20000c56] to section .bss.phyStick from menus.o
      Allocate [0x20000c57 to 0x20000c5a] to section .bss.PopupData from menus.o
      Allocate [0x20000c5b to 0x20000c5d] to section .bss.MenuControl from menus.o
      Allocate [0x20000045 to 0x20000045] to section .bss.voice_tx_idx from BoardI6.o
      Allocate [0x20000c5e to 0x20000c5e] to section .bss.voice_rx_idx from BoardI6.o
      Allocate [0x20000c5f to 0x20000c5f] to section .bss.valuesBufferOffset from elrsV2.o
      Allocate [0x20000c60 to 0x20000c60] to section .bss.tick10ms from er9x.o
      Allocate [0x20000c61 to 0x20000c61] to section .bss.telemetryRxBufferCount from crossfire.o
      Allocate [0x20000c62 to 0x20000c62] to section .bss.sysFlags from er9x.o
      Allocate [0x20000c63 to 0x20000c63] to section .bss.stickMoved from er9x.o
      Allocate [0x20000c64 to 0x20000c64] to section .bss.statusComplete from elrsV2.o
      Allocate [0x20000c65 to 0x20000c65] to section .bss.serialDat0 from pulses.o
      Allocate [0x20000c66 to 0x20000c66] to section .bss.scroll_disabled from menus.o
      Allocate [0x20000c67 to 0x20000c67] to section .bss.scrollUD from menus.o
      Allocate [0x20000c68 to 0x20000c68] to section .bss.scrollLR from menus.o
      Allocate [0x20000c69 to 0x20000c69] to section .bss.s_pgOfs from menus.o
      Allocate [0x20000c6a to 0x20000c6a] to section .bss.s_noHi from menus.o
      Allocate [0x20000c6b to 0x20000c6b] to section .bss.s_moveMode from menus.o
      Allocate [0x20000c6c to 0x20000c6c] to section .bss.s_mixMaxSel from menus.o
      Allocate [0x20000c6d to 0x20000c6d] to section .bss.s_evt from drivers.o
      Allocate [0x20000c6e to 0x20000c6e] to section .bss.s_editing from menus.o
      Allocate [0x20000c6f to 0x20000c6f] to section .bss.s_editMode from menus.o
      Allocate [0x20000c70 to 0x20000c70] to section .bss.reloadFolder from elrsV2.o
      Allocate [0x20000c71 to 0x20000c71] to section .bss.pxxFlag from pulses.o
      Allocate [0x20000c72 to 0x20000c72] to section .bss.protocol_flags from A7105_SPI.o
      Allocate [0x20000c73 to 0x20000c73] to section .bss.ppmInAvailable from er9x.o
      Allocate [0x20000c74 to 0x20000c74] to section .bss.plotType from lcd.o
      Allocate [0x20000c75 to 0x20000c75] to section .bss.pageOffset from elrsV2.o
      Allocate [0x20000c76 to 0x20000c76] to section .bss.packet_count from A7105_SPI.o
      Allocate [0x20000c77 to 0x20000c77] to section .bss.outputTelemetryBufferTrigger from crossfire.o
      Allocate [0x20000c78 to 0x20000c78] to section .bss.outputTelemetryBufferSize from crossfire.o
      Allocate [0x20000c79 to 0x20000c79] to section .bss.namesBufferOffset from elrsV2.o
      Allocate [0x20000c7a to 0x20000c7a] to section .bss.mixToDelete from menus.o
      Allocate [0x20000c7b to 0x20000c7b] to section .bss.hopping_frequency_no from A7105_SPI.o
      Allocate [0x20000c7c to 0x20000c7c] to section .bss.heartbeat from pulses.o
      Allocate [0x20000c7d to 0x20000c7d] to section .bss.g_vbat100mV from er9x.o
      Allocate [0x20000c7e to 0x20000c7e] to section .bss.g_posHorz from menus.o
      Allocate [0x20000c7f to 0x20000c7f] to section .bss.g_menuStackPtr from er9x.o
      Allocate [0x20000c80 to 0x20000c80] to section .bss.g_blinkTmr10ms from drivers.o
      Allocate [0x20000c81 to 0x20000c81] to section .bss.folderAccess from elrsV2.o
      Allocate [0x20000c82 to 0x20000c82] to section .bss.fields_count from elrsV2.o
      Allocate [0x20000c83 to 0x20000c83] to section .bss.fieldsLen from elrsV2.o
      Allocate [0x20000c84 to 0x20000c84] to section .bss.fieldDataLen from elrsV2.o
      Allocate [0x20000c85 to 0x20000c85] to section .bss.fieldChunk from elrsV2.o
      Allocate [0x20000c86 to 0x20000c86] to section .bss.edit from elrsV2.o
      Allocate [0x20000c87 to 0x20000c87] to section .bss.devicesLen from elrsV2.o
      Allocate [0x20000c88 to 0x20000c88] to section .bss.deviceIsELRS_TX from elrsV2.o
      Allocate [0x20000c89 to 0x20000c89] to section .bss.bpanaCenter from menus.o
      Allocate [0x20000c8a to 0x20000c8a] to section .bss.bind_phase from A7105_SPI.o
      Allocate [0x20000c8b to 0x20000c8b] to section .bss.allParamsLoaded from elrsV2.o
      Allocate [0x20000c8c to 0x20000c8c] to section .bss.MState2::check_columns(unsigned char, unsigned char)::lateUp from menus.o
      Allocate [0x20000c8d to 0x20000c8d] to section .bss.audioQueue::driver()::toneCounter from er9x.o
      Allocate [0x20000c8e to 0x20000c8e] to section .bss.perMain()::repeater from er9x.o
      Allocate [0x20000c8f to 0x20000c8f] to section .bss.perMain()::alertKey from er9x.o
      Allocate [0x20000c90 to 0x20000c90] to section .bss.perMain()::s_batCheck from er9x.o
      Allocate [0x20000c91 to 0x20000c91] to section .bss.menuProc0(unsigned char)::trimSwLock from menus.o
      Allocate [0x20000c92 to 0x20000c92] to section .bss.per10ms()::current from drivers.o
      Allocate [0x20000c93 to 0x20000c93] to section .bss.perOut(short*, unsigned char)::sticky from menus.o
      Allocate [0x20000c94 to 0x20000c94] to section .bss.check_backlight_voice()::tmr10ms from er9x.o
      Allocate [0x20000c95 to 0x20000c95] to section .bss.menuProcModelSelect(unsigned char)::mstate2 from menus.o
      Allocate [0x20000c96 to 0x20000c96] to section .bss.menuProcModelSelect(unsigned char)::sel_editMode from menus.o
      Allocate [0x20000c97 to 0x20000c97] to section .bss.menuProcVoiceAlarm(unsigned char)::mstate2 from menus.o
      Allocate [0x20000c98 to 0x20000c98] to section .bss.menuProcModelIndex(unsigned char)::mstate from menus.o
      Allocate [0x20000c99 to 0x20000c99] to section .bss.menuProcTelemetry(unsigned char)::mstate2 from menus.o
      Allocate [0x20000c9a to 0x20000c9a] to section .bss.menuProcVoiceOne(unsigned char)::mstate2 from menus.o
      Allocate [0x20000c9b to 0x20000c9b] to section .bss.menuProcProtocol(unsigned char)::mstate2 from menus.o
      Allocate [0x20000c9c to 0x20000c9c] to section .bss.menuProcCurveOne(unsigned char)::mstate2 from menus.o
      Allocate [0x20000c9d to 0x20000c9d] to section .bss.menuProcCurveOne(unsigned char)::dfltCrv from menus.o
      Allocate [0x20000c9e to 0x20000c9e] to section .bss.menuSetFailsafe(unsigned char)::mstate2 from menus.o
      Allocate [0x20000c9f to 0x20000c9f] to section .bss.menuProcGlobals(unsigned char)::mstate2 from menus.o
      Allocate [0x20000ca0 to 0x20000ca0] to section .bss.menuModelPhases(unsigned char)::mstate2 from menus.o
      Allocate [0x20000ca1 to 0x20000ca1] to section .bss.A7105_AntSwitch()::sw from A7105_SPI.o
      Allocate [0x20000ca2 to 0x20000ca2] to section .bss.menuProcMixOne(unsigned char)::mstate2 from menus.o
      Allocate [0x20000ca3 to 0x20000ca3] to section .bss.menuRangeBind(unsigned char)::timer from menus.o
      Allocate [0x20000ca4 to 0x20000ca4] to section .bss.menuProcIndex(unsigned char)::mstate from menus.o
      Allocate [0x20000ca5 to 0x20000ca5] to section .bss.menuProcCurve(unsigned char)::mstate2 from menus.o
      Allocate [0x20000ca6 to 0x20000ca6] to section .bss.ActionAFHDS2A::packet_type from AFHDS2A_a7105.o
      Allocate [0x20000ca7 to 0x20000ca7] to section .bss.menuScaleOne(unsigned char)::mstate2 from menus.o
      Allocate [0x20000ca8 to 0x20000ca8] to section .bss.menuPhaseOne(unsigned char)::mstate2 from menus.o
      Allocate [0x20000ca9 to 0x20000ca9] to section .bss.perOutPhase(short*, unsigned char)::lastPhase from menus.o
      Allocate [0x20000caa to 0x20000caa] to section .bss.menuRXSetup(unsigned char)::mstate2 from menus.o
      Allocate [0x20000cab to 0x20000cab] to section .bss.menuProcMix(unsigned char)::mstate2 from menus.o
      Allocate [0x20000cac to 0x20000cac] to section .bss.s_currIdx from menus.o
      Allocate [0x20000cad to 0x20000cad] to section .bss.Columns from menus.o
      Allocate [0x20000cae to 0x20000cae] to section .bss.wait_fin_count from audio.o
      Allocate [0x20000caf to 0x20000caf] to section .bss.inputs_subview from menus.o
      Allocate [0x20000cb0 to 0x20000cb0] to section .bss.s_eeLongTimer from pers.o
      Allocate [0x20000cb1 to 0x20000cb1] to section .bss.LongMenuTimer from er9x.o
      Allocate [0x20000cb2 to 0x20000cb2] to section .bss.s_moveMixIdx from menus.o
      Allocate [0x20000cb3 to 0x20000cb3] to section .bss.s_eeDirtyMsk from pers.o
      Allocate [0x20000cb4 to 0x20000cb4] to section .bss.s_currMixIdx from menus.o
      Allocate [0x20000cb5 to 0x20000cb5] to section .bss.s_currDestCh from menus.o
      Allocate [0x20000cb6 to 0x20000cb6] to section .bss.s_curveChan from menus.o
      Allocate [0x20000cb7 to 0x20000cb7] to section .bss.IlinesCount from menus.o
      Allocate [0x20000cb8 to 0x20000cb8] to section .bss.s_expoChan from menus.o
      Allocate [0x20000cb9 to 0x20000cb9] to section .bss.ThrottleStickyOn from menus.o
      Allocate [0x20000cba to 0x20000cba] to section .bss.Tevent from er9x.o
      Allocate [0x20000cbb to 0x20000cbb] to section .bss.SystemOptions from er9x.o
      Allocate [0x20000cbc to 0x20000cbc] to section .bss.StickScrollTimer from er9x.o
      Allocate [0x20000cbd to 0x20000cbd] to section .bss.StickScrollAllowed from er9x.o
      Allocate [0x20000cbe to 0x20000cbe] to section .bss.StepSize from er9x.o
      Allocate [0x20000cbf to 0x20000cbf] to section .bss.RotaryState from menus.o
      Allocate [0x20000cc0 to 0x20000cc0] to section .bss.RadioState from A7105_SPI.o
      Allocate [0x20000cc1 to 0x20000cc1] to section .bss.RadioActive from pulses.o
      Allocate [0x20000cc2 to 0x20000cc2] to section .bss.PausePulses from pulses.o
      Allocate [0x20000cc3 to 0x20000cc3] to section .bss.Main_running from er9x.o
      Allocate [0x20000cc4 to 0x20000cc4] to section .bss.M_longMenuTimer from menus.o
      Allocate [0x20000cc5 to 0x20000cc5] to section .bss.Lcd_lastPos from lcd.o
      Allocate [0x20000cc6 to 0x20000cc6] to section .bss.LcdLock from lcd.o
      Allocate [0x20000cc7 to 0x20000cc7] to section .bss.InverseBlink from menus.o
      Allocate [0x20000cc8 to 0x20000cc8] to section .bss.EnterMenu from er9x.o
      Allocate [0x20000cc9 to 0x20000cc9] to section .bss.EepromActive from lcd.o
      Allocate [0x20000cca to 0x20000cca] to section .bss.Ee_lock from pers.o
      Allocate [0x20000ccb to 0x20000ccb] to section .bss.EditType from menus.o
      Allocate [0x20000ccc to 0x20000ccc] to section .bss.EditColumns from menus.o
      Allocate [0x20000ccd to 0x20000ccd] to section .bss.DupSub from menus.o
      Allocate [0x20000cce to 0x20000cce] to section .bss.DupIfNonzero from menus.o
      Allocate [0x20000ccf to 0x20000ccf] to section .bss.Current_protocol from pulses.o
      Allocate [0x20000cd0 to 0x20000cd0] to section .bss.CurrentVolume from er9x.o
      Allocate [0x20000cd1 to 0x20000cd1] to section .bss.CurrentPhase from menus.o
      Allocate [0x20000cd2 to 0x20000cd2] to section .bss.CalcScaleNest from menus.o
      Allocate [0x20000cd4 to 0x20000cd7] to section .data.devicesRefreshTimeout from elrsV2.o
      Allocate [0x20000cd8 to 0x20000cdb] to section .data.AFHDS2A_update_telemetry()::Dacc from AFHDS2A_a7105.o
      Allocate [0x20000cdc to 0x20000cdf] to section .data.ISR_TIMER1_COMPA_vect::pulsePtr from pulses.o
      Allocate [0x20000ce0 to 0x20000ce1] to section .data.A7105_AdjustLOBaseFreq()::old_offset from A7105_SPI.o
      Allocate [0x20000ce2 to 0x20000ceb] to section .data.play_cmd_buf from audio.o
      Allocate [0x20000cec to 0x20000cef] to section .data.AlarmControl from er9x.o
      Allocate [0x20000cd3 to 0x20000cd3] to section .data.prev_power from A7105_SPI.o
      Allocate [0x20000cf0 to 0x20000cf0] to section .data.otherDevicesId from elrsV2.o
      Allocate [0x20000cf1 to 0x20000cf1] to section .data.lineIndex from elrsV2.o
      Allocate [0x20000cf2 to 0x20000cf2] to section .data.handsetId from elrsV2.o
      Allocate [0x20000cf3 to 0x20000cf3] to section .data.fieldId from elrsV2.o
      Allocate [0x20000cf4 to 0x20000cf4] to section .data.expectedChunks from elrsV2.o
      Allocate [0x20000cf5 to 0x20000cf5] to section .data.deviceId from elrsV2.o
      Allocate [0x20000cf6 to 0x20000cf6] to section .data.backButtonId from elrsV2.o
  Executing place in [0x20000cf7 to 0x200016ff] (1 inputs selected)
      Candidate regions: [0x1ffff800 to 0x200017ff]
      Allocate [0x20000cf8 to 0x20000df7] to block heap from [ Linker created ]


***************************************************************************************
***                                                                                 ***
***                              Normalize relocations                              ***
***                                                                                 ***
***************************************************************************************



***************************************************************************************
***                                                                                 ***
***                             Construct GOT sections                              ***
***                                                                                 ***
***************************************************************************************



***************************************************************************************
***                                                                                 ***
***                                Construct veneers                                ***
***                                                                                 ***
***************************************************************************************



***************************************************************************************
***                                                                                 ***
***                                 Relocate image                                  ***
***                                                                                 ***
***************************************************************************************

  Relocating [.rodata.block.tdata.copy]
  Relocating SystemInit
  Relocating lcdSetRefVolt(unsigned char)
  Relocating lcdSendCtl(unsigned char)
  Relocating lcdSetContrast()
  Relocating lcd_clear()
  Relocating lcd_init()
  Relocating lcd_putcAtt(unsigned char, unsigned char, char, unsigned char)
  Relocating lcd_putsAtt(unsigned char, unsigned char, char const*, unsigned char)
  Relocating lcd_putsnAtt(unsigned char, unsigned char, char const*, unsigned char, unsigned char)
  Relocating lcd_putsAttIdx(unsigned char, unsigned char, char const*, unsigned char, unsigned char)
  Relocating lcd_putc(unsigned char, unsigned char, char)
  Relocating lcd_puts_Pleft(unsigned char, char const*)
  Relocating lcd_puts_Pskip(unsigned char, char const*, unsigned char)
  Relocating lcd_puts_P(unsigned char, unsigned char, char const*)
  Relocating lcd_putsn_P(unsigned char, unsigned char, char const*, unsigned char)
  Relocating lcd_outhex4(unsigned char, unsigned char, unsigned short)
  Relocating lcd_write_bits(unsigned char*, unsigned char)
  Relocating lcd_plot(unsigned char, unsigned char)
  Relocating lcd_vline(unsigned char, unsigned char, signed char)
  Relocating lcd_hlineStip(unsigned char, unsigned char, signed char, unsigned char)
  Relocating lcd_hline(unsigned char, unsigned char, signed char)
  Relocating lcd_2_digits(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating lcd_outdezNAtt(unsigned char, unsigned char, int, unsigned char, signed char, unsigned char)
  Relocating lcd_outdezAtt(unsigned char, unsigned char, short, unsigned char)
  Relocating lcd_outdez(unsigned char, unsigned char, short)
  Relocating lcd_char_inverse(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating lcd_rect_xor(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating lcd_rect(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating lcd_hbar(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating refreshDiplay()
  Relocating lcd_img(unsigned char, unsigned char, unsigned char const*, unsigned char)
  Relocating putsTime(unsigned char, unsigned char, short, unsigned char, unsigned char)
  Relocating putsVolts(unsigned char, unsigned char, short, unsigned char)
  Relocating putsVBat(unsigned char, unsigned char, unsigned char)
  Relocating LcdLock
  Relocating Lcd_lastPos
  Relocating DisplayBuf
  Relocating EepromActive
  Relocating Lcdinit
  Relocating font
  Relocating font_dblsize
  Relocating plotType
  Relocating _bitmask
  Relocating HW_Init
  Relocating mDelay
  Relocating getADC_osmp
  Relocating backlight_on
  Relocating backlight_off
  Relocating rd_1
  Relocating rd_0
  Relocating cs_0
  Relocating rw_0
  Relocating rs_1
  Relocating rs_0
  Relocating rst_1
  Relocating rst_0
  Relocating PINB
  Relocating PIND
  Relocating PINE
  Relocating PING
  Relocating LCD_DATA
  Relocating Buzzer_SetVal
  Relocating Buzzer_ClrVal
  Relocating SPI_RADIO_SendBlock
  Relocating SPI_RADIO_ReceiveBlock
  Relocating a7105_csn_on
  Relocating a7105_csn_off
  Relocating RF0_SetVal
  Relocating RF0_ClrVal
  Relocating RF1_SetVal
  Relocating RF1_ClrVal
  Relocating TX_RX_PutVal
  Relocating EnableGIO
  Relocating DisableGIO
  Relocating i2c_master
  Relocating GetPPMOutState
  Relocating SetPPMTimCompare
  Relocating GetPPMTimCompare
  Relocating GetPPMTimCompareInterruptFlag
  Relocating ClearPPMTimCompareInterruptFlag
  Relocating EnablePPMTim
  Relocating EnablePPMOut
  Relocating DisablePPMOut
  Relocating EnablePRTTim
  Relocating DisablePRTTim
  Relocating SetPRTTimPeriod
  Relocating GetChipID
  Relocating PIT_IRQHandler
  Relocating TPM1_IRQHandler
  Relocating SPI0_IRQHandler
  Relocating PORTC_PORTD_IRQHandler
  Relocating TPM0_IRQHandler
  Relocating TPM2_IRQHandler
  Relocating setup_crsf_serial_port
  Relocating uart_clear_error()
  Relocating crsf_send_data
  Relocating UART0_IRQHandler
  Relocating shutdown_crsf_serial_port
  Relocating serialVoiceInit(void (*)(unsigned char*, unsigned char))
  Relocating sendSerialVoiceData(unsigned char*, unsigned int)
  Relocating UART2_IRQHandler
  Relocating ChannelToPin
  Relocating AFHDS2A_A7105_regs
  Relocating SPI_BufferPtr
  Relocating SPI_Size
  Relocating g_crsf_read_callback
  Relocating g_voice_cb
  Relocating voice_uart_recv_buf
  Relocating voice_rx_idx
  Relocating voice_uart_send_buf
  Relocating voice_tx_idx
  Relocating modeFixValue(unsigned char)
  Relocating get_tmr10ms()
  Relocating CS_STATE(unsigned char)
  Relocating mixaddress(unsigned char)
  Relocating throttleReversed()
  Relocating putsChnRaw(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating putsChn(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating putsMomentDrSwitches(unsigned char, unsigned char, signed char, unsigned char)
  Relocating putsDrSwitches(unsigned char, unsigned char, signed char, unsigned char)
  Relocating putsTmrMode(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating putsTelemValue(unsigned char, unsigned char, int, unsigned char, unsigned char)
  Relocating getValue(unsigned char)
  Relocating getSwitch00(signed char)
  Relocating getSwitch(signed char, bool, unsigned char)
  Relocating calc100toRESX(signed char)
  Relocating check_backlight_voice()
  Relocating stickMoveValue()
  Relocating anaIn(unsigned char)
  Relocating almess(char const*, unsigned char)
  Relocating message(char const*)
  Relocating alert(char const*)
  Relocating alertx(char const*, bool)
  Relocating clearKeyEvents()
  Relocating keyDown()
  Relocating checkThrottlePosition()
  Relocating checkTHR()
  Relocating putWarnSwitch(unsigned char, unsigned char)
  Relocating getCurrentSwitchStates()
  Relocating checkSwitches()
  Relocating getFlightPhase()
  Relocating getRawTrimValue(unsigned char, unsigned char)
  Relocating getTrimFlightPhase(unsigned char, unsigned char)
  Relocating getTrimValue(unsigned char, unsigned char)
  Relocating setTrimValue(unsigned char, unsigned char, short)
  Relocating checkIncDec16(short, short, short, unsigned char)
  Relocating checkIncDec(signed char, signed char, signed char, unsigned char)
  Relocating checkIncDec_i8(signed char, signed char, signed char)
  Relocating checkIncDec_0(signed char, signed char)
  Relocating checkIncDec_u0(short, unsigned char)
  Relocating popMenu(bool)
  Relocating chainMenu(void (*)(unsigned char))
  Relocating pushMenu(void (*)(unsigned char))
  Relocating backlightKey()
  Relocating doBackLightVoice(unsigned char)
  Relocating calcStickScroll(unsigned char)
  Relocating getGvarSourceValue(unsigned char)
  Relocating ISR_TIMER2_OVF_vect
  Relocating audioQueue::driver()
  Relocating ISR_TIMER0_COMP_vect
  Relocating mainER()
  Relocating mainSequence()
  Relocating doVoiceAlarmSource(t_voiceAlarm*)
  Relocating procOneVoiceAlarm(t_voiceAlarm*, unsigned char)
  Relocating processVoiceAlarms()
  Relocating calc1000toRESX(short)
  Relocating REG100_100(signed char)
  Relocating REG(signed char, signed char, signed char)
  Relocating IS_EXPO_THROTTLE(unsigned char)
  Relocating _GLOBAL__sub_I_er9x.cpp
  Relocating Last_switch
  Relocating g_eeGeneral
  Relocating g_model
  Relocating AlertMessage
  Relocating Main_running
  Relocating Nvs_state
  Relocating Nvs_timer
  Relocating CurrentVolume
  Relocating ppmInAvailable
  Relocating Rotary
  Relocating Tevent
  Relocating TimerConfig
  Relocating bchout_ar
  Relocating audio
  Relocating sysFlags
  Relocating SystemOptions
  Relocating AlarmControl
  Relocating CsTimer
  Relocating Str_Switches
  Relocating Str_OFF
  Relocating Str_ON
  Relocating modi12x3
  Relocating stickScramble
  Relocating csTypeTable
  Relocating Str_Hyphens
  Relocating [.rodata..L.str]
  Relocating [.rodata..L.str.1]
  Relocating g_ppmIns
  Relocating check_backlight_voice()::tmr10ms
  Relocating g_LightOffCounter
  Relocating [.rodata..L.str.2]
  Relocating [.rodata..L.str.3]
  Relocating Str_Alert
  Relocating [.rodata..L.str.4]
  Relocating [.rodata..L.str.5]
  Relocating [.rodata..L.str.6]
  Relocating StickScrollAllowed
  Relocating StickScrollTimer
  Relocating g_menuStack
  Relocating g_menuStackPtr
  Relocating EnterMenu
  Relocating P1values
  Relocating StepSize
  Relocating LongMenuTimer
  Relocating [.rodata..L.str.7]
  Relocating g_vbat100mV
  Relocating tick10ms
  Relocating stickMoved
  Relocating rate
  Relocating Inactivity
  Relocating s_anaFilt
  Relocating g_tmr16KHz
  Relocating tmrEEPROM
  Relocating [.rodata..L.str.8]
  Relocating mainSequence()::timer
  Relocating audioQueue::driver()::toneCounter
  Relocating [.rodata..L.str.9]
  Relocating [.rodata..L.str.10]
  Relocating [.rodata..L.str.11]
  Relocating [.rodata..L.str.12]
  Relocating [.rodata..L.str.13]
  Relocating perMain()::lastTMR
  Relocating perMain()::repeater
  Relocating perMain()::alertKey
  Relocating perMain()::s_batCheck
  Relocating [.init_array]
  Relocating A7105_AntSwitch()
  Relocating A7105_SetTxRxMode(unsigned char)
  Relocating A7105_Strobe(unsigned char)
  Relocating A7105_WriteReg(unsigned char, unsigned char)
  Relocating A7105_WriteData(unsigned char, unsigned char)
  Relocating A7105_ReadData(unsigned char)
  Relocating A7105_ReadReg(unsigned char)
  Relocating A7105_Reset()
  Relocating A7105_WriteID(unsigned int)
  Relocating A7105_SetPower()
  Relocating A7105_AdjustLOBaseFreq()
  Relocating A7105_Sleep()
  Relocating A7105_Init()
  Relocating convert_failsafe_ppm(unsigned char)
  Relocating RadioState
  Relocating protocol_flags
  Relocating prev_power
  Relocating packet
  Relocating ID
  Relocating packet_count
  Relocating bind_phase
  Relocating hopping_frequency
  Relocating hopping_frequency_no
  Relocating A7105_AntSwitch()::sw
  Relocating A7105_AdjustLOBaseFreq()::old_offset
  Relocating AFHDS2A_build_packet(unsigned char)
  Relocating ActionAFHDS2A
  Relocating initAFHDS2A
  Relocating processFlySkySensor(unsigned char const*, unsigned char)
  Relocating AFHDS2A_tel
  Relocating AFHDS2A_tel_data
  Relocating AFHDS2A_tel_status
  Relocating AFHDS2A_tel_res_cnt
  Relocating AltOffset
  Relocating GAltOffset
  Relocating ActionAFHDS2A::packet_type
  Relocating ActionAFHDS2A::packet_counter
  Relocating AFHDS2A_update_telemetry()::Dacc
  Relocating DoSum(unsigned char*, unsigned char)
  Relocating Uart_SendCMD(unsigned char, unsigned char, unsigned short)
  Relocating audioQueue::busy()
  Relocating audioQueue::heartbeat()
  Relocating audioQueue::play(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating audioQueue::getToneLength(unsigned char)
  Relocating audioQueue::event(unsigned char, unsigned char)
  Relocating audioDefevent(unsigned char)
  Relocating audioEvent(unsigned char, unsigned short)
  Relocating audioVoiceDefevent(unsigned char, unsigned char)
  Relocating putVoiceQueue(unsigned char)
  Relocating voice_numeric(short, unsigned char, unsigned char)
  Relocating putVoiceQueueUpper(unsigned char)
  Relocating putVoiceQueueLong(unsigned short)
  Relocating setVolume(unsigned char)
  Relocating on_voice_cb(unsigned char*, unsigned char)
  Relocating t_voice::voice_process()
  Relocating play_cmd_buf
  Relocating Voice
  Relocating wait_fin_count
  Relocating ee_waite()
  Relocating eeprom_read_block(void*, void const*, unsigned int)
  Relocating eeprom_write_page_cmp(char const*, unsigned short, unsigned int)
  Relocating eeWriteBlockCmp(void const*, unsigned short, unsigned int)
  Relocating Key::input(bool, EnumKeys)
  Relocating menuPressed()
  Relocating switchPosition(unsigned char)
  Relocating keyState(EnumKeys)
  Relocating pauseEvents(unsigned char)
  Relocating killEvents(unsigned char)
  Relocating per10ms()
  Relocating i2c_buffer
  Relocating s_evt
  Relocating keys
  Relocating g_tmr10ms
  Relocating g_blinkTmr10ms
  Relocating per10ms()::current
  Relocating per10ms()::crossTrim
  Relocating EeFsGetFree()
  Relocating EeFsGetLink(unsigned char)
  Relocating EeFsck()
  Relocating EeFsSetLink(unsigned char, unsigned char)
  Relocating EeFsFlush()
  Relocating EeFsFlushFreelist()
  Relocating EeFsFormat()
  Relocating EeFsOpen()
  Relocating EFile::exists(unsigned char)
  Relocating EFile::swap(unsigned char, unsigned char)
  Relocating EFile::rm(unsigned char)
  Relocating EeFsFree(unsigned char)
  Relocating EFile::size()
  Relocating EFile::openRd(unsigned char)
  Relocating EFile::read(unsigned char*, unsigned short)
  Relocating EFile::readRlc(unsigned char*, unsigned short)
  Relocating EFile::write(unsigned char*, unsigned char)
  Relocating EeFsAlloc()
  Relocating EFile::create(unsigned char, unsigned char, unsigned short)
  Relocating EFile::closeTrunc()
  Relocating EFile::writeRlc(unsigned char, unsigned char, unsigned char*, unsigned short, unsigned char)
  Relocating EeFsRead(unsigned char, unsigned char)
  Relocating eeFs
  Relocating putsAttIdxTelemItems(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating calc_scaler(unsigned char, unsigned char*, unsigned char*)
  Relocating voiceMinutes(short)
  Relocating voice_telem_item(unsigned char)
  Relocating get_telemetry_value(unsigned char)
  Relocating displayTimer(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating putsTelemetryChannel(unsigned char, unsigned char, signed char, int, unsigned char, unsigned char)
  Relocating dispGvar(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating gvarMenuItem(unsigned char, unsigned char, signed char, signed char, signed char, unsigned char)
  Relocating gvarMenuItem125(unsigned char, unsigned char, signed char, unsigned char)
  Relocating get_dr_state(unsigned char)
  Relocating editName(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char)
  Relocating char2idx(char)
  Relocating idx2char(unsigned char)
  Relocating TITLEP(char const*)
  Relocating lcd_xlabel_decimal(unsigned char, unsigned char, unsigned short, unsigned char, char const*)
  Relocating checkIndexed(unsigned char, char const*, unsigned char, unsigned char)
  Relocating hyphinvMenuItem(unsigned char, unsigned char, unsigned char)
  Relocating putsOffDecimal(unsigned char, unsigned char, unsigned short, unsigned char)
  Relocating MState2::check_columns(unsigned char, unsigned char)
  Relocating telltale(unsigned char, signed char, signed char)
  Relocating doMainScreenGrphics()
  Relocating drawFunction(unsigned char, unsigned char)
  Relocating intpol(short, unsigned char)
  Relocating calcExpo(unsigned char, short)
  Relocating drawCurve(unsigned char)
  Relocating curveAddress(unsigned char)
  Relocating menuProcCurveOne(unsigned char)
  Relocating menuProcCurve(unsigned char)
  Relocating evalOffset(signed char)
  Relocating setStickCenter()
  Relocating perOut(short*, unsigned char)
  Relocating displayNext()
  Relocating menuProcTelemetry(unsigned char)
  Relocating put_curve(unsigned char, unsigned char, signed char, unsigned char)
  Relocating scalerDecimal(unsigned char, unsigned char, unsigned char)
  Relocating menuScaleOne(unsigned char)
  Relocating menuProcGlobals(unsigned char)
  Relocating edit_dr_switch(unsigned char, unsigned char, signed char, unsigned char, unsigned char)
  Relocating putsChnOpRaw(unsigned char, unsigned char, t_MixData*, unsigned char)
  Relocating menuProcMixOne(unsigned char)
  Relocating onoffItem(unsigned char, unsigned char, unsigned char)
  Relocating offonItem(unsigned char, unsigned char, unsigned char)
  Relocating onoffMenuItem(unsigned char, unsigned char, char const*, unsigned char)
  Relocating editSlowDelay(unsigned char, unsigned char, unsigned char)
  Relocating menuMixersLimit(unsigned char)
  Relocating menuProcMix(unsigned char)
  Relocating reachMixerCountLimit()
  Relocating yesNoMenuExit(unsigned char, char const*)
  Relocating menuDeleteMix(unsigned char)
  Relocating doPopup(char const*, unsigned char, unsigned char)
  Relocating insertMix(unsigned char, unsigned char)
  Relocating expou(unsigned short, unsigned short)
  Relocating expo(short, short)
  Relocating editExpoVals(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating menuDeleteDupModel(unsigned char)
  Relocating menuProcModelSelect(unsigned char)
  Relocating menuRangeBind(unsigned char)
  Relocating putsTrimMode(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating menuPhaseOne(unsigned char)
  Relocating dispFlightModename(unsigned char, unsigned char, unsigned char)
  Relocating menuModelPhases(unsigned char)
  Relocating menuProcModelIndex(unsigned char)
  Relocating putc_0_1(unsigned char, unsigned char, unsigned char)
  Relocating timer()
  Relocating resetTimer1()
  Relocating resetTimer2()
  Relocating trace()
  Relocating putsTimeNoAtt(unsigned char, unsigned char, short)
  Relocating menuProcStatistic(unsigned char)
  Relocating resetTimern(unsigned char)
  Relocating displayOneSwitch3Pos(unsigned char, unsigned char, unsigned char)
  Relocating displayOneSwitch(unsigned char, unsigned char, unsigned char)
  Relocating switchDisplay(unsigned char, unsigned char)
  Relocating dispSignalQality(unsigned char)
  Relocating menuProc0(unsigned char)
  Relocating menuProcIndex(unsigned char)
  Relocating perOutPhase(short*, unsigned char)
  Relocating scaleAnalog(short, unsigned char)
  Relocating indexProcess(unsigned char, MState2*, unsigned char)
  Relocating displayIndex(char const* const*, unsigned char, unsigned char, unsigned char)
  Relocating offonMenuItem(unsigned char, unsigned char, char const*, unsigned char)
  Relocating displayVoiceRate(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating menuProcVoiceOne(unsigned char)
  Relocating menuProcVoiceAlarm(unsigned char)
  Relocating rangeBindAction(unsigned char, unsigned char)
  Relocating menuRXSetup(unsigned char)
  Relocating menuSetFailsafe(unsigned char)
  Relocating menuProcProtocol(unsigned char)
  Relocating Xmem
  Relocating PopupData
  Relocating MenuControl
  Relocating s_timer
  Relocating RotaryState
  Relocating CalcScaleNest
  Relocating ThrottleStickyOn
  Relocating Str_Chans_Gv
  Relocating Curve_Str
  Relocating phyStick
  Relocating Str_telemItems
  Relocating TelemIndex
  Relocating UnitsVoice
  Relocating UnitsText
  Relocating Str_GV
  Relocating calibratedStick
  Relocating Ex_chans
  Relocating s_pgOfs
  Relocating s_editMode
  Relocating s_editing
  Relocating s_noHi
  Relocating scrollLR
  Relocating scroll_disabled
  Relocating scrollUD
  Relocating InverseBlink
  Relocating EditType
  Relocating EditColumns
  Relocating g_chans512
  Relocating Str_Name
  Relocating [.rodata..L.str]
  Relocating g_posHorz
  Relocating M_longMenuTimer
  Relocating Columns
  Relocating MState2::check_columns(unsigned char, unsigned char)::lateUp
  Relocating s_curveChan
  Relocating s_expoChan
  Relocating menuProcCurveOne(unsigned char)::dfltCrv
  Relocating Str_Curve
  Relocating menuProcCurveOne(unsigned char)::mstate2
  Relocating [.rodata..L.str.1]
  Relocating Str_Curves
  Relocating menuProcCurve(unsigned char)::mstate2
  Relocating [.rodata..L.str.2]
  Relocating CurrentPhase
  Relocating [.rodata..L.str.3]
  Relocating menuProcTelemetry(unsigned char)::mstate2
  Relocating Str_Telemetry
  Relocating [.rodata..L.str.4]
  Relocating [.rodata..L.str.5]
  Relocating menuScaleOne(unsigned char)::mstate2
  Relocating Str_SC
  Relocating s_currIdx
  Relocating [.rodata..L.str.6]
  Relocating UnitsString
  Relocating [.rodata..L.str.7]
  Relocating Str_Globals
  Relocating menuProcGlobals(unsigned char)::mstate2
  Relocating Str_Gv_Source
  Relocating [.rodata..L.str.8]
  Relocating SW_3_IDX
  Relocating [.rodata..L.str.9]
  Relocating s_currMixIdx
  Relocating menuProcMixOne(unsigned char)::mstate2
  Relocating [.rodata..L.str.10]
  Relocating [.rodata..L.str.11]
  Relocating [.rodata..L.str.12]
  Relocating [.rodata..L.str.13]
  Relocating [.rodata..L.str.14]
  Relocating [.rodata..L.str.15]
  Relocating s_mixMaxSel
  Relocating [.rodata..L.str.16]
  Relocating mixToDelete
  Relocating [.rodata..L.str.17]
  Relocating [.rodata..L.str.18]
  Relocating [.rodata..L.str.19]
  Relocating s_moveMode
  Relocating Str_Mixer
  Relocating menuProcMix(unsigned char)::mstate2
  Relocating s_currDestCh
  Relocating [.rodata..L.str.20]
  Relocating s_moveMixIdx
  Relocating s_charTab
  Relocating DupIfNonzero
  Relocating DupSub
  Relocating [.rodata..L.str.21]
  Relocating [.rodata..L.str.22]
  Relocating [.rodata..L.str.23]
  Relocating menuRangeBind(unsigned char)::timer
  Relocating [.rodata..L.str.24]
  Relocating [.rodata..L.str.25]
  Relocating Str_1_RETA
  Relocating [.rodata..L.str.26]
  Relocating menuPhaseOne(unsigned char)::mstate2
  Relocating [.rodata..L.str.27]
  Relocating [.rodata..L.str.28]
  Relocating Str_Modes
  Relocating menuModelPhases(unsigned char)::mstate2
  Relocating [.rodata..L.str.29]
  Relocating menuProcModelSelect(unsigned char)::mstate2
  Relocating [.rodata..L.str.30]
  Relocating [.rodata..L.str.31]
  Relocating menuProcModelSelect(unsigned char)::sel_editMode
  Relocating ModelPopList
  Relocating TimeGlobals
  Relocating trace()::s_time
  Relocating g_latency
  Relocating [.rodata..L.str.32]
  Relocating [.rodata..L.str.33]
  Relocating [.rodata..L.str.34]
  Relocating [.rodata..L.str.35]
  Relocating [.rodata..L.str.38]
  Relocating [.rodata..L.str.39]
  Relocating [.rodata..L.str.40]
  Relocating menuProc0(unsigned char)::trimSwLock
  Relocating inputs_subview
  Relocating [.rodata..L.str.41]
  Relocating menuProc0(unsigned char)::xt
  Relocating [.rodata..L.str.42]
  Relocating [.rodata..L.str.43]
  Relocating [.rodata..L.str.44]
  Relocating Str_Main_Popup
  Relocating bpanaCenter
  Relocating Output
  Relocating Fade
  Relocating perOutPhase(short*, unsigned char)::lastPhase
  Relocating perOut(short*, unsigned char)::sticky
  Relocating menuProcIndex(unsigned char)::mstate
  Relocating IlinesCount
  Relocating menuProcIndex(unsigned char)::n_Strings
  Relocating Str_Display
  Relocating Str_AudioHaptic
  Relocating Str_Alarms
  Relocating Str_General
  Relocating Str_Controls
  Relocating Str_Calibration
  Relocating Str_Trainer
  Relocating Str_Version
  Relocating Str_DiagSwtch
  Relocating Str_DiagAna
  Relocating Str_Hardware
  Relocating [.rodata..L.str.45]
  Relocating [.rodata..L.str.46]
  Relocating [.rodata..L.str.47]
  Relocating [.rodata..L.str.48]
  Relocating [.rodata..L.str.49]
  Relocating [.rodata..L.str.50]
  Relocating Str_minute_Beep
  Relocating [.rodata..L.str.51]
  Relocating sticks
  Relocating [.rodata..L.str.52]
  Relocating [.rodata..L.str.53]
  Relocating Str_Beep_Countdown
  Relocating [.rodata..L.str.54]
  Relocating [.rodata..L.str.55]
  Relocating [.rodata..L.str.56]
  Relocating [.rodata..L.str.57]
  Relocating [.rodata..L.str.58]
  Relocating [.rodata..L.str.59]
  Relocating [.rodata..L.str.60]
  Relocating [.rodata..L.str.61]
  Relocating [.rodata..L.str.62]
  Relocating [.rodata..L.str.63]
  Relocating [.rodata..L.str.64]
  Relocating [.rodata..L.str.65]
  Relocating [.rodata..L.str.66]
  Relocating [.rodata..L.str.67]
  Relocating [.rodata..L.str.68]
  Relocating menuWhenDone
  Relocating [.rodata..L.str.69]
  Relocating Str_On_Off_Both
  Relocating [.rodata..L.str.70]
  Relocating menuProcVoiceOne(unsigned char)::mstate2
  Relocating [.rodata..L.str.71]
  Relocating [.rodata..L.str.72]
  Relocating [.rodata..L.str.73]
  Relocating Str_Cswitch
  Relocating [.rodata..L.str.74]
  Relocating [.rodata..L.str.75]
  Relocating [.rodata..L.str.76]
  Relocating [.rodata..L.str.77]
  Relocating [.rodata..L.str.78]
  Relocating [.rodata..L.str.79]
  Relocating Str_Sounds
  Relocating [.rodata..L.str.80]
  Relocating [.rodata..L.str.81]
  Relocating [.rodata..L.str.82]
  Relocating menuProcVoiceAlarm(unsigned char)::mstate2
  Relocating [.rodata..L.str.83]
  Relocating menuRXSetup(unsigned char)::mstate2
  Relocating [.rodata..L.str.84]
  Relocating [.rodata..L.str.85]
  Relocating [.rodata..L.str.86]
  Relocating [.rodata..L.str.87]
  Relocating menuSetFailsafe(unsigned char)::mstate2
  Relocating [.rodata..L.str.88]
  Relocating [.rodata..L.str.89]
  Relocating [.rodata..L.str.90]
  Relocating [.rodata..L.str.91]
  Relocating menuProcProtocol(unsigned char)::mstate2
  Relocating [.rodata..L.str.92]
  Relocating [.rodata..L.str.93]
  Relocating [.rodata..L.str.94]
  Relocating [.rodata..L.str.95]
  Relocating [.rodata..L.str.96]
  Relocating [.rodata..L.str.97]
  Relocating [.rodata..L.str.98]
  Relocating [.rodata..L.str.99]
  Relocating [.rodata..L.str.100]
  Relocating [.rodata..L.str.101]
  Relocating menuProcModelIndex(unsigned char)::mstate
  Relocating menuProcModelIndex(unsigned char)::n_Strings
  Relocating Str_heli_setup
  Relocating Str_limits
  Relocating Str_Expo
  Relocating Str_Cswitches
  Relocating Str_Safety
  Relocating Str_Timer
  Relocating Str_Protocol
  Relocating [.rodata..L.str.102]
  Relocating [.rodata..L.str.103]
  Relocating Str_TRE012AG
  Relocating [.rodata..L.str.104]
  Relocating [.rodata..L.str.105]
  Relocating [.rodata..L.str.106]
  Relocating [.rodata..L.str.107]
  Relocating [.rodata..L.str.108]
  Relocating [.rodata..L.str.109]
  Relocating [.rodata..L.str.110]
  Relocating [.rodata..L.str.111]
  Relocating [.rodata..L.str.112]
  Relocating [.rodata..L.str.113]
  Relocating [.rodata..L.str.114]
  Relocating MixPopList
  Relocating [.rodata..L.str.115]
  Relocating [.rodata..L.str.116]
  Relocating [.rodata..L.str.117]
  Relocating [.rodata..L.str.118]
  Relocating [.rodata..L.str.119]
  Relocating [.rodata..L.str.120]
  Relocating [.rodata..L.str.121]
  Relocating [.rodata..Lswitch.table.menuProcModelIndex(unsigned char)]
  Relocating SetStartPulsePol()
  Relocating ISR_TIMER1_COMPA_vect
  Relocating setupPulses()
  Relocating startPulses()
  Relocating setupPulsesPPM(unsigned char)
  Relocating pulses2MHz
  Relocating heartbeat
  Relocating Current_protocol
  Relocating pxxFlag
  Relocating PausePulses
  Relocating serialDat0
  Relocating ISR_TIMER1_COMPA_vect::pulsePtr
  Relocating RadioActive
  Relocating B3_comp_value
  Relocating Stamps
  Relocating clearMixes()
  Relocating setMix(unsigned char, unsigned char)
  Relocating applyTemplate()
  Relocating main
  Relocating tiny_sprintf(char*, char const*, char, char, ...)
  Relocating crossfireTelemetryPush4(unsigned char, unsigned char, unsigned char)
  Relocating crossfireTelemetryPing()
  Relocating allocateFields()
  Relocating selectField(signed char)
  Relocating getField(unsigned char)
  Relocating fieldTextSelectionLoad(FieldProps*, unsigned char*, unsigned char)
  Relocating fieldTextSelectionSave(FieldProps*)
  Relocating fieldTextSelectionDisplay(FieldProps*, unsigned char, unsigned char)
  Relocating semicolonPos(char const*, unsigned char)
  Relocating fieldStringDisplay(FieldProps*, unsigned char, unsigned char)
  Relocating fieldFolderOpen(FieldProps*)
  Relocating noopOpen(FieldProps*)
  Relocating fieldCommandLoad(FieldProps*, unsigned char*, unsigned char)
  Relocating fieldCommandSave(FieldProps*)
  Relocating fieldUnifiedDisplay(FieldProps*, unsigned char, unsigned char)
  Relocating UIbackExec(FieldProps*)
  Relocating parseDeviceInfoMessage(unsigned char*)
  Relocating parseParameterInfoMessage(unsigned char*, unsigned char)
  Relocating runCrossfireTelemetryCallback(unsigned char, unsigned char*, unsigned char)
  Relocating handleDevicePageEvent(unsigned char)
  Relocating incrField(signed char)
  Relocating runDevicePage(unsigned char)
  Relocating runPopupPage(unsigned char)
  Relocating popupCompat(unsigned char)
  Relocating ELRSV2_stop()
  Relocating ELRSV2_run(unsigned char)
  Relocating crossfileMenu(MState2&, unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating namesBufferOffset
  Relocating valuesBufferOffset
  Relocating fieldDataLen
  Relocating fieldsLen
  Relocating devicesLen
  Relocating otherDevicesId
  Relocating deviceId
  Relocating handsetId
  Relocating deviceIsELRS_TX
  Relocating lineIndex
  Relocating pageOffset
  Relocating edit
  Relocating fieldTimeout
  Relocating fieldId
  Relocating fieldChunk
  Relocating fields_count
  Relocating backButtonId
  Relocating devicesRefreshTimeout
  Relocating allParamsLoaded
  Relocating folderAccess
  Relocating statusComplete
  Relocating expectedChunks
  Relocating reloadFolder
  Relocating fields
  Relocating [.rodata..L.str]
  Relocating [.rodata..L.str.1]
  Relocating fieldPopup
  Relocating [.rodata..L.str.2]
  Relocating [.rodata..L.str.3]
  Relocating [.rodata..L.str.4]
  Relocating [.rodata..L.str.5]
  Relocating deviceIds
  Relocating functions
  Relocating reusableBuffer
  Relocating [.rodata..L.str.7]
  Relocating [.rodata..L.str.8]
  Relocating [.rodata..Lswitch.table.fieldUnifiedDisplay(FieldProps*, unsigned char, unsigned char)]
  Relocating crc8(unsigned char const*, unsigned int)
  Relocating crc8tab
  Relocating createCrossfireChannelsFrame(unsigned char*, short*)
  Relocating setupPulsesCrossfire()
  Relocating processCrossfireTelemetryValue(unsigned char, int)
  Relocating checkCrossfireTelemetryFrameCRC()
  Relocating getCrossfireTelemetryValue(unsigned char, int&, int)
  Relocating processCrossfireTelemetryFrame()
  Relocating processCrossfireTelemetryData(unsigned char)
  Relocating crossfireTelemetryPush(unsigned char, unsigned char*, unsigned char)
  Relocating crsf_init()
  Relocating crsf_shutdown()
  Relocating crsf_action()
  Relocating outputTelemetryBuffer
  Relocating outputTelemetryBufferSize
  Relocating outputTelemetryBufferTrigger
  Relocating telemetryRxBuffer
  Relocating telemetryRxBufferCount
  Relocating g_crossfire
  Relocating telemetryErrors
  Relocating g_elrs_update_rate
  Relocating g_elrs_lag
  Relocating idx_to_afhds2a
  Relocating processCrossfireTelemetryFrame()::power_values
  Relocating evalChkSum()
  Relocating setNameP(char*, char const*)
  Relocating eeGeneralDefault()
  Relocating modelSave(unsigned char)
  Relocating modelDefaultWrite(unsigned char)
  Relocating eeLoadModelName(unsigned char, char*, unsigned char)
  Relocating eeModelExists(unsigned char)
  Relocating eeLoadModelForBackup(unsigned char)
  Relocating eeLoadModel(unsigned char)
  Relocating validateName(char*, unsigned char)
  Relocating eeDirty(unsigned char)
  Relocating eeWaitComplete()
  Relocating eeDuplicateModel(unsigned char)
  Relocating eeReadGeneral()
  Relocating eeWriteGeneral()
  Relocating eeCheck(bool)
  Relocating theFile
  Relocating theWriteFile
  Relocating [.rodata..L.str]
  Relocating [.rodata..L.str.1]
  Relocating [.rodata..L.str.2]
  Relocating [.rodata..L.str.3]
  Relocating [.rodata..L.str.4]
  Relocating [.rodata..L.str.5]
  Relocating [.rodata..L.str.6]
  Relocating s_eeDirtyMsk
  Relocating s_eeDirtyTime10ms
  Relocating s_eeLongTimer
  Relocating Ee_lock
  Relocating Str_EEPROM_Overflow
  Relocating SX127xDriver::SX127xDriver()
  Relocating _GLOBAL__sub_I_SX127x.cpp
  Relocating hal
  Relocating SX127xDriver::instance
  Relocating [.init_array]
  Relocating SX127xHal::SX127xHal()
  Relocating SX127xHal::instance
  Relocating _GLOBAL__sub_I_ELRS.cpp
  Relocating Radio
  Relocating ota_crc
  Relocating LQCalc
  Relocating TelemetryReceiver
  Relocating MspSender
  Relocating [.init_array]
  Relocating StubbornReceiver::StubbornReceiver(unsigned char)
  Relocating StubbornSender::StubbornSender(unsigned char)
  Relocating StubbornSender::ResetState()
  Relocating GENERIC_CRC14::GENERIC_CRC14(unsigned short)
  Relocating Reset_Handler
  Relocating NMI_Handler
  Relocating _vectors
  Relocating BackDoorKey
  Relocating _start
  Relocating __aeabi_llsl
  Relocating __aeabi_llsr
  Relocating __aeabi_idiv
  Relocating __aeabi_idivmod
  Relocating __aeabi_uidiv
  Relocating __aeabi_uidivmod
  Relocating div
  Relocating strcpy
  Relocating strlen
  Relocating memcpy
  Relocating __aeabi_memclr
  Relocating __aeabi_memmove
  Relocating memcmp
  Relocating strstr
  Relocating __SEGGER_init_heap
  Relocating __SEGGER_RTL_init_heap
  Relocating __SEGGER_RTL_heap_globals


***************************************************************************************
***                                                                                 ***
***                               Synthetic sections                                ***
***                                                                                 ***
***************************************************************************************

  Create copy of block tdata:
      [0x000003fe size 0]
  Create placeholder section for block heap
  Create placeholder section for block stack


***************************************************************************************
***                                                                                 ***
***                                 Relocate image                                  ***
***                                                                                 ***
***************************************************************************************

  Relocating [.rodata.block.tdata.copy]
  Relocating SystemInit
  Relocating lcdSetRefVolt(unsigned char)
  Relocating lcdSendCtl(unsigned char)
  Relocating lcdSetContrast()
  Relocating lcd_clear()
  Relocating lcd_init()
  Relocating lcd_putcAtt(unsigned char, unsigned char, char, unsigned char)
  Relocating lcd_putsAtt(unsigned char, unsigned char, char const*, unsigned char)
  Relocating lcd_putsnAtt(unsigned char, unsigned char, char const*, unsigned char, unsigned char)
  Relocating lcd_putsAttIdx(unsigned char, unsigned char, char const*, unsigned char, unsigned char)
  Relocating lcd_putc(unsigned char, unsigned char, char)
  Relocating lcd_puts_Pleft(unsigned char, char const*)
  Relocating lcd_puts_Pskip(unsigned char, char const*, unsigned char)
  Relocating lcd_puts_P(unsigned char, unsigned char, char const*)
  Relocating lcd_putsn_P(unsigned char, unsigned char, char const*, unsigned char)
  Relocating lcd_outhex4(unsigned char, unsigned char, unsigned short)
  Relocating lcd_write_bits(unsigned char*, unsigned char)
  Relocating lcd_plot(unsigned char, unsigned char)
  Relocating lcd_vline(unsigned char, unsigned char, signed char)
  Relocating lcd_hlineStip(unsigned char, unsigned char, signed char, unsigned char)
  Relocating lcd_hline(unsigned char, unsigned char, signed char)
  Relocating lcd_2_digits(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating lcd_outdezNAtt(unsigned char, unsigned char, int, unsigned char, signed char, unsigned char)
  Relocating lcd_outdezAtt(unsigned char, unsigned char, short, unsigned char)
  Relocating lcd_outdez(unsigned char, unsigned char, short)
  Relocating lcd_char_inverse(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating lcd_rect_xor(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating lcd_rect(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating lcd_hbar(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating refreshDiplay()
  Relocating lcd_img(unsigned char, unsigned char, unsigned char const*, unsigned char)
  Relocating putsTime(unsigned char, unsigned char, short, unsigned char, unsigned char)
  Relocating putsVolts(unsigned char, unsigned char, short, unsigned char)
  Relocating putsVBat(unsigned char, unsigned char, unsigned char)
  Relocating LcdLock
  Relocating Lcd_lastPos
  Relocating DisplayBuf
  Relocating EepromActive
  Relocating Lcdinit
  Relocating font
  Relocating font_dblsize
  Relocating plotType
  Relocating _bitmask
  Relocating HW_Init
  Relocating mDelay
  Relocating getADC_osmp
  Relocating backlight_on
  Relocating backlight_off
  Relocating rd_1
  Relocating rd_0
  Relocating cs_0
  Relocating rw_0
  Relocating rs_1
  Relocating rs_0
  Relocating rst_1
  Relocating rst_0
  Relocating PINB
  Relocating PIND
  Relocating PINE
  Relocating PING
  Relocating LCD_DATA
  Relocating Buzzer_SetVal
  Relocating Buzzer_ClrVal
  Relocating SPI_RADIO_SendBlock
  Relocating SPI_RADIO_ReceiveBlock
  Relocating a7105_csn_on
  Relocating a7105_csn_off
  Relocating RF0_SetVal
  Relocating RF0_ClrVal
  Relocating RF1_SetVal
  Relocating RF1_ClrVal
  Relocating TX_RX_PutVal
  Relocating EnableGIO
  Relocating DisableGIO
  Relocating i2c_master
  Relocating GetPPMOutState
  Relocating SetPPMTimCompare
  Relocating GetPPMTimCompare
  Relocating GetPPMTimCompareInterruptFlag
  Relocating ClearPPMTimCompareInterruptFlag
  Relocating EnablePPMTim
  Relocating EnablePPMOut
  Relocating DisablePPMOut
  Relocating EnablePRTTim
  Relocating DisablePRTTim
  Relocating SetPRTTimPeriod
  Relocating GetChipID
  Relocating PIT_IRQHandler
  Relocating TPM1_IRQHandler
  Relocating SPI0_IRQHandler
  Relocating PORTC_PORTD_IRQHandler
  Relocating TPM0_IRQHandler
  Relocating TPM2_IRQHandler
  Relocating setup_crsf_serial_port
  Relocating uart_clear_error()
  Relocating crsf_send_data
  Relocating UART0_IRQHandler
  Relocating shutdown_crsf_serial_port
  Relocating serialVoiceInit(void (*)(unsigned char*, unsigned char))
  Relocating sendSerialVoiceData(unsigned char*, unsigned int)
  Relocating UART2_IRQHandler
  Relocating ChannelToPin
  Relocating AFHDS2A_A7105_regs
  Relocating SPI_BufferPtr
  Relocating SPI_Size
  Relocating g_crsf_read_callback
  Relocating g_voice_cb
  Relocating voice_uart_recv_buf
  Relocating voice_rx_idx
  Relocating voice_uart_send_buf
  Relocating voice_tx_idx
  Relocating modeFixValue(unsigned char)
  Relocating get_tmr10ms()
  Relocating CS_STATE(unsigned char)
  Relocating mixaddress(unsigned char)
  Relocating throttleReversed()
  Relocating putsChnRaw(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating putsChn(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating putsMomentDrSwitches(unsigned char, unsigned char, signed char, unsigned char)
  Relocating putsDrSwitches(unsigned char, unsigned char, signed char, unsigned char)
  Relocating putsTmrMode(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating putsTelemValue(unsigned char, unsigned char, int, unsigned char, unsigned char)
  Relocating getValue(unsigned char)
  Relocating getSwitch00(signed char)
  Relocating getSwitch(signed char, bool, unsigned char)
  Relocating calc100toRESX(signed char)
  Relocating check_backlight_voice()
  Relocating stickMoveValue()
  Relocating anaIn(unsigned char)
  Relocating almess(char const*, unsigned char)
  Relocating message(char const*)
  Relocating alert(char const*)
  Relocating alertx(char const*, bool)
  Relocating clearKeyEvents()
  Relocating keyDown()
  Relocating checkThrottlePosition()
  Relocating checkTHR()
  Relocating putWarnSwitch(unsigned char, unsigned char)
  Relocating getCurrentSwitchStates()
  Relocating checkSwitches()
  Relocating getFlightPhase()
  Relocating getRawTrimValue(unsigned char, unsigned char)
  Relocating getTrimFlightPhase(unsigned char, unsigned char)
  Relocating getTrimValue(unsigned char, unsigned char)
  Relocating setTrimValue(unsigned char, unsigned char, short)
  Relocating checkIncDec16(short, short, short, unsigned char)
  Relocating checkIncDec(signed char, signed char, signed char, unsigned char)
  Relocating checkIncDec_i8(signed char, signed char, signed char)
  Relocating checkIncDec_0(signed char, signed char)
  Relocating checkIncDec_u0(short, unsigned char)
  Relocating popMenu(bool)
  Relocating chainMenu(void (*)(unsigned char))
  Relocating pushMenu(void (*)(unsigned char))
  Relocating backlightKey()
  Relocating doBackLightVoice(unsigned char)
  Relocating calcStickScroll(unsigned char)
  Relocating getGvarSourceValue(unsigned char)
  Relocating ISR_TIMER2_OVF_vect
  Relocating audioQueue::driver()
  Relocating ISR_TIMER0_COMP_vect
  Relocating mainER()
  Relocating mainSequence()
  Relocating doVoiceAlarmSource(t_voiceAlarm*)
  Relocating procOneVoiceAlarm(t_voiceAlarm*, unsigned char)
  Relocating processVoiceAlarms()
  Relocating calc1000toRESX(short)
  Relocating REG100_100(signed char)
  Relocating REG(signed char, signed char, signed char)
  Relocating IS_EXPO_THROTTLE(unsigned char)
  Relocating _GLOBAL__sub_I_er9x.cpp
  Relocating Last_switch
  Relocating g_eeGeneral
  Relocating g_model
  Relocating AlertMessage
  Relocating Main_running
  Relocating Nvs_state
  Relocating Nvs_timer
  Relocating CurrentVolume
  Relocating ppmInAvailable
  Relocating Rotary
  Relocating Tevent
  Relocating TimerConfig
  Relocating bchout_ar
  Relocating audio
  Relocating sysFlags
  Relocating SystemOptions
  Relocating AlarmControl
  Relocating CsTimer
  Relocating Str_Switches
  Relocating Str_OFF
  Relocating Str_ON
  Relocating modi12x3
  Relocating stickScramble
  Relocating csTypeTable
  Relocating Str_Hyphens
  Relocating [.rodata..L.str]
  Relocating [.rodata..L.str.1]
  Relocating g_ppmIns
  Relocating check_backlight_voice()::tmr10ms
  Relocating g_LightOffCounter
  Relocating [.rodata..L.str.2]
  Relocating [.rodata..L.str.3]
  Relocating Str_Alert
  Relocating [.rodata..L.str.4]
  Relocating [.rodata..L.str.5]
  Relocating [.rodata..L.str.6]
  Relocating StickScrollAllowed
  Relocating StickScrollTimer
  Relocating g_menuStack
  Relocating g_menuStackPtr
  Relocating EnterMenu
  Relocating P1values
  Relocating StepSize
  Relocating LongMenuTimer
  Relocating [.rodata..L.str.7]
  Relocating g_vbat100mV
  Relocating tick10ms
  Relocating stickMoved
  Relocating rate
  Relocating Inactivity
  Relocating s_anaFilt
  Relocating g_tmr16KHz
  Relocating tmrEEPROM
  Relocating [.rodata..L.str.8]
  Relocating mainSequence()::timer
  Relocating audioQueue::driver()::toneCounter
  Relocating [.rodata..L.str.9]
  Relocating [.rodata..L.str.10]
  Relocating [.rodata..L.str.11]
  Relocating [.rodata..L.str.12]
  Relocating [.rodata..L.str.13]
  Relocating perMain()::lastTMR
  Relocating perMain()::repeater
  Relocating perMain()::alertKey
  Relocating perMain()::s_batCheck
  Relocating [.init_array]
  Relocating A7105_AntSwitch()
  Relocating A7105_SetTxRxMode(unsigned char)
  Relocating A7105_Strobe(unsigned char)
  Relocating A7105_WriteReg(unsigned char, unsigned char)
  Relocating A7105_WriteData(unsigned char, unsigned char)
  Relocating A7105_ReadData(unsigned char)
  Relocating A7105_ReadReg(unsigned char)
  Relocating A7105_Reset()
  Relocating A7105_WriteID(unsigned int)
  Relocating A7105_SetPower()
  Relocating A7105_AdjustLOBaseFreq()
  Relocating A7105_Sleep()
  Relocating A7105_Init()
  Relocating convert_failsafe_ppm(unsigned char)
  Relocating RadioState
  Relocating protocol_flags
  Relocating prev_power
  Relocating packet
  Relocating ID
  Relocating packet_count
  Relocating bind_phase
  Relocating hopping_frequency
  Relocating hopping_frequency_no
  Relocating A7105_AntSwitch()::sw
  Relocating A7105_AdjustLOBaseFreq()::old_offset
  Relocating AFHDS2A_build_packet(unsigned char)
  Relocating ActionAFHDS2A
  Relocating initAFHDS2A
  Relocating processFlySkySensor(unsigned char const*, unsigned char)
  Relocating AFHDS2A_tel
  Relocating AFHDS2A_tel_data
  Relocating AFHDS2A_tel_status
  Relocating AFHDS2A_tel_res_cnt
  Relocating AltOffset
  Relocating GAltOffset
  Relocating ActionAFHDS2A::packet_type
  Relocating ActionAFHDS2A::packet_counter
  Relocating AFHDS2A_update_telemetry()::Dacc
  Relocating DoSum(unsigned char*, unsigned char)
  Relocating Uart_SendCMD(unsigned char, unsigned char, unsigned short)
  Relocating audioQueue::busy()
  Relocating audioQueue::heartbeat()
  Relocating audioQueue::play(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating audioQueue::getToneLength(unsigned char)
  Relocating audioQueue::event(unsigned char, unsigned char)
  Relocating audioDefevent(unsigned char)
  Relocating audioEvent(unsigned char, unsigned short)
  Relocating audioVoiceDefevent(unsigned char, unsigned char)
  Relocating putVoiceQueue(unsigned char)
  Relocating voice_numeric(short, unsigned char, unsigned char)
  Relocating putVoiceQueueUpper(unsigned char)
  Relocating putVoiceQueueLong(unsigned short)
  Relocating setVolume(unsigned char)
  Relocating on_voice_cb(unsigned char*, unsigned char)
  Relocating t_voice::voice_process()
  Relocating play_cmd_buf
  Relocating Voice
  Relocating wait_fin_count
  Relocating ee_waite()
  Relocating eeprom_read_block(void*, void const*, unsigned int)
  Relocating eeprom_write_page_cmp(char const*, unsigned short, unsigned int)
  Relocating eeWriteBlockCmp(void const*, unsigned short, unsigned int)
  Relocating Key::input(bool, EnumKeys)
  Relocating menuPressed()
  Relocating switchPosition(unsigned char)
  Relocating keyState(EnumKeys)
  Relocating pauseEvents(unsigned char)
  Relocating killEvents(unsigned char)
  Relocating per10ms()
  Relocating i2c_buffer
  Relocating s_evt
  Relocating keys
  Relocating g_tmr10ms
  Relocating g_blinkTmr10ms
  Relocating per10ms()::current
  Relocating per10ms()::crossTrim
  Relocating EeFsGetFree()
  Relocating EeFsGetLink(unsigned char)
  Relocating EeFsck()
  Relocating EeFsSetLink(unsigned char, unsigned char)
  Relocating EeFsFlush()
  Relocating EeFsFlushFreelist()
  Relocating EeFsFormat()
  Relocating EeFsOpen()
  Relocating EFile::exists(unsigned char)
  Relocating EFile::swap(unsigned char, unsigned char)
  Relocating EFile::rm(unsigned char)
  Relocating EeFsFree(unsigned char)
  Relocating EFile::size()
  Relocating EFile::openRd(unsigned char)
  Relocating EFile::read(unsigned char*, unsigned short)
  Relocating EFile::readRlc(unsigned char*, unsigned short)
  Relocating EFile::write(unsigned char*, unsigned char)
  Relocating EeFsAlloc()
  Relocating EFile::create(unsigned char, unsigned char, unsigned short)
  Relocating EFile::closeTrunc()
  Relocating EFile::writeRlc(unsigned char, unsigned char, unsigned char*, unsigned short, unsigned char)
  Relocating EeFsRead(unsigned char, unsigned char)
  Relocating eeFs
  Relocating putsAttIdxTelemItems(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating calc_scaler(unsigned char, unsigned char*, unsigned char*)
  Relocating voiceMinutes(short)
  Relocating voice_telem_item(unsigned char)
  Relocating get_telemetry_value(unsigned char)
  Relocating displayTimer(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating putsTelemetryChannel(unsigned char, unsigned char, signed char, int, unsigned char, unsigned char)
  Relocating dispGvar(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating gvarMenuItem(unsigned char, unsigned char, signed char, signed char, signed char, unsigned char)
  Relocating gvarMenuItem125(unsigned char, unsigned char, signed char, unsigned char)
  Relocating get_dr_state(unsigned char)
  Relocating editName(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char)
  Relocating char2idx(char)
  Relocating idx2char(unsigned char)
  Relocating TITLEP(char const*)
  Relocating lcd_xlabel_decimal(unsigned char, unsigned char, unsigned short, unsigned char, char const*)
  Relocating checkIndexed(unsigned char, char const*, unsigned char, unsigned char)
  Relocating hyphinvMenuItem(unsigned char, unsigned char, unsigned char)
  Relocating putsOffDecimal(unsigned char, unsigned char, unsigned short, unsigned char)
  Relocating MState2::check_columns(unsigned char, unsigned char)
  Relocating telltale(unsigned char, signed char, signed char)
  Relocating doMainScreenGrphics()
  Relocating drawFunction(unsigned char, unsigned char)
  Relocating intpol(short, unsigned char)
  Relocating calcExpo(unsigned char, short)
  Relocating drawCurve(unsigned char)
  Relocating curveAddress(unsigned char)
  Relocating menuProcCurveOne(unsigned char)
  Relocating menuProcCurve(unsigned char)
  Relocating evalOffset(signed char)
  Relocating setStickCenter()
  Relocating perOut(short*, unsigned char)
  Relocating displayNext()
  Relocating menuProcTelemetry(unsigned char)
  Relocating put_curve(unsigned char, unsigned char, signed char, unsigned char)
  Relocating scalerDecimal(unsigned char, unsigned char, unsigned char)
  Relocating menuScaleOne(unsigned char)
  Relocating menuProcGlobals(unsigned char)
  Relocating edit_dr_switch(unsigned char, unsigned char, signed char, unsigned char, unsigned char)
  Relocating putsChnOpRaw(unsigned char, unsigned char, t_MixData*, unsigned char)
  Relocating menuProcMixOne(unsigned char)
  Relocating onoffItem(unsigned char, unsigned char, unsigned char)
  Relocating offonItem(unsigned char, unsigned char, unsigned char)
  Relocating onoffMenuItem(unsigned char, unsigned char, char const*, unsigned char)
  Relocating editSlowDelay(unsigned char, unsigned char, unsigned char)
  Relocating menuMixersLimit(unsigned char)
  Relocating menuProcMix(unsigned char)
  Relocating reachMixerCountLimit()
  Relocating yesNoMenuExit(unsigned char, char const*)
  Relocating menuDeleteMix(unsigned char)
  Relocating doPopup(char const*, unsigned char, unsigned char)
  Relocating insertMix(unsigned char, unsigned char)
  Relocating expou(unsigned short, unsigned short)
  Relocating expo(short, short)
  Relocating editExpoVals(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating menuDeleteDupModel(unsigned char)
  Relocating menuProcModelSelect(unsigned char)
  Relocating menuRangeBind(unsigned char)
  Relocating putsTrimMode(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating menuPhaseOne(unsigned char)
  Relocating dispFlightModename(unsigned char, unsigned char, unsigned char)
  Relocating menuModelPhases(unsigned char)
  Relocating menuProcModelIndex(unsigned char)
  Relocating putc_0_1(unsigned char, unsigned char, unsigned char)
  Relocating timer()
  Relocating resetTimer1()
  Relocating resetTimer2()
  Relocating trace()
  Relocating putsTimeNoAtt(unsigned char, unsigned char, short)
  Relocating menuProcStatistic(unsigned char)
  Relocating resetTimern(unsigned char)
  Relocating displayOneSwitch3Pos(unsigned char, unsigned char, unsigned char)
  Relocating displayOneSwitch(unsigned char, unsigned char, unsigned char)
  Relocating switchDisplay(unsigned char, unsigned char)
  Relocating dispSignalQality(unsigned char)
  Relocating menuProc0(unsigned char)
  Relocating menuProcIndex(unsigned char)
  Relocating perOutPhase(short*, unsigned char)
  Relocating scaleAnalog(short, unsigned char)
  Relocating indexProcess(unsigned char, MState2*, unsigned char)
  Relocating displayIndex(char const* const*, unsigned char, unsigned char, unsigned char)
  Relocating offonMenuItem(unsigned char, unsigned char, char const*, unsigned char)
  Relocating displayVoiceRate(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating menuProcVoiceOne(unsigned char)
  Relocating menuProcVoiceAlarm(unsigned char)
  Relocating rangeBindAction(unsigned char, unsigned char)
  Relocating menuRXSetup(unsigned char)
  Relocating menuSetFailsafe(unsigned char)
  Relocating menuProcProtocol(unsigned char)
  Relocating Xmem
  Relocating PopupData
  Relocating MenuControl
  Relocating s_timer
  Relocating RotaryState
  Relocating CalcScaleNest
  Relocating ThrottleStickyOn
  Relocating Str_Chans_Gv
  Relocating Curve_Str
  Relocating phyStick
  Relocating Str_telemItems
  Relocating TelemIndex
  Relocating UnitsVoice
  Relocating UnitsText
  Relocating Str_GV
  Relocating calibratedStick
  Relocating Ex_chans
  Relocating s_pgOfs
  Relocating s_editMode
  Relocating s_editing
  Relocating s_noHi
  Relocating scrollLR
  Relocating scroll_disabled
  Relocating scrollUD
  Relocating InverseBlink
  Relocating EditType
  Relocating EditColumns
  Relocating g_chans512
  Relocating Str_Name
  Relocating [.rodata..L.str]
  Relocating g_posHorz
  Relocating M_longMenuTimer
  Relocating Columns
  Relocating MState2::check_columns(unsigned char, unsigned char)::lateUp
  Relocating s_curveChan
  Relocating s_expoChan
  Relocating menuProcCurveOne(unsigned char)::dfltCrv
  Relocating Str_Curve
  Relocating menuProcCurveOne(unsigned char)::mstate2
  Relocating [.rodata..L.str.1]
  Relocating Str_Curves
  Relocating menuProcCurve(unsigned char)::mstate2
  Relocating [.rodata..L.str.2]
  Relocating CurrentPhase
  Relocating [.rodata..L.str.3]
  Relocating menuProcTelemetry(unsigned char)::mstate2
  Relocating Str_Telemetry
  Relocating [.rodata..L.str.4]
  Relocating [.rodata..L.str.5]
  Relocating menuScaleOne(unsigned char)::mstate2
  Relocating Str_SC
  Relocating s_currIdx
  Relocating [.rodata..L.str.6]
  Relocating UnitsString
  Relocating [.rodata..L.str.7]
  Relocating Str_Globals
  Relocating menuProcGlobals(unsigned char)::mstate2
  Relocating Str_Gv_Source
  Relocating [.rodata..L.str.8]
  Relocating SW_3_IDX
  Relocating [.rodata..L.str.9]
  Relocating s_currMixIdx
  Relocating menuProcMixOne(unsigned char)::mstate2
  Relocating [.rodata..L.str.10]
  Relocating [.rodata..L.str.11]
  Relocating [.rodata..L.str.12]
  Relocating [.rodata..L.str.13]
  Relocating [.rodata..L.str.14]
  Relocating [.rodata..L.str.15]
  Relocating s_mixMaxSel
  Relocating [.rodata..L.str.16]
  Relocating mixToDelete
  Relocating [.rodata..L.str.17]
  Relocating [.rodata..L.str.18]
  Relocating [.rodata..L.str.19]
  Relocating s_moveMode
  Relocating Str_Mixer
  Relocating menuProcMix(unsigned char)::mstate2
  Relocating s_currDestCh
  Relocating [.rodata..L.str.20]
  Relocating s_moveMixIdx
  Relocating s_charTab
  Relocating DupIfNonzero
  Relocating DupSub
  Relocating [.rodata..L.str.21]
  Relocating [.rodata..L.str.22]
  Relocating [.rodata..L.str.23]
  Relocating menuRangeBind(unsigned char)::timer
  Relocating [.rodata..L.str.24]
  Relocating [.rodata..L.str.25]
  Relocating Str_1_RETA
  Relocating [.rodata..L.str.26]
  Relocating menuPhaseOne(unsigned char)::mstate2
  Relocating [.rodata..L.str.27]
  Relocating [.rodata..L.str.28]
  Relocating Str_Modes
  Relocating menuModelPhases(unsigned char)::mstate2
  Relocating [.rodata..L.str.29]
  Relocating menuProcModelSelect(unsigned char)::mstate2
  Relocating [.rodata..L.str.30]
  Relocating [.rodata..L.str.31]
  Relocating menuProcModelSelect(unsigned char)::sel_editMode
  Relocating ModelPopList
  Relocating TimeGlobals
  Relocating trace()::s_time
  Relocating g_latency
  Relocating [.rodata..L.str.32]
  Relocating [.rodata..L.str.33]
  Relocating [.rodata..L.str.34]
  Relocating [.rodata..L.str.35]
  Relocating [.rodata..L.str.38]
  Relocating [.rodata..L.str.39]
  Relocating [.rodata..L.str.40]
  Relocating menuProc0(unsigned char)::trimSwLock
  Relocating inputs_subview
  Relocating [.rodata..L.str.41]
  Relocating menuProc0(unsigned char)::xt
  Relocating [.rodata..L.str.42]
  Relocating [.rodata..L.str.43]
  Relocating [.rodata..L.str.44]
  Relocating Str_Main_Popup
  Relocating bpanaCenter
  Relocating Output
  Relocating Fade
  Relocating perOutPhase(short*, unsigned char)::lastPhase
  Relocating perOut(short*, unsigned char)::sticky
  Relocating menuProcIndex(unsigned char)::mstate
  Relocating IlinesCount
  Relocating menuProcIndex(unsigned char)::n_Strings
  Relocating Str_Display
  Relocating Str_AudioHaptic
  Relocating Str_Alarms
  Relocating Str_General
  Relocating Str_Controls
  Relocating Str_Calibration
  Relocating Str_Trainer
  Relocating Str_Version
  Relocating Str_DiagSwtch
  Relocating Str_DiagAna
  Relocating Str_Hardware
  Relocating [.rodata..L.str.45]
  Relocating [.rodata..L.str.46]
  Relocating [.rodata..L.str.47]
  Relocating [.rodata..L.str.48]
  Relocating [.rodata..L.str.49]
  Relocating [.rodata..L.str.50]
  Relocating Str_minute_Beep
  Relocating [.rodata..L.str.51]
  Relocating sticks
  Relocating [.rodata..L.str.52]
  Relocating [.rodata..L.str.53]
  Relocating Str_Beep_Countdown
  Relocating [.rodata..L.str.54]
  Relocating [.rodata..L.str.55]
  Relocating [.rodata..L.str.56]
  Relocating [.rodata..L.str.57]
  Relocating [.rodata..L.str.58]
  Relocating [.rodata..L.str.59]
  Relocating [.rodata..L.str.60]
  Relocating [.rodata..L.str.61]
  Relocating [.rodata..L.str.62]
  Relocating [.rodata..L.str.63]
  Relocating [.rodata..L.str.64]
  Relocating [.rodata..L.str.65]
  Relocating [.rodata..L.str.66]
  Relocating [.rodata..L.str.67]
  Relocating [.rodata..L.str.68]
  Relocating menuWhenDone
  Relocating [.rodata..L.str.69]
  Relocating Str_On_Off_Both
  Relocating [.rodata..L.str.70]
  Relocating menuProcVoiceOne(unsigned char)::mstate2
  Relocating [.rodata..L.str.71]
  Relocating [.rodata..L.str.72]
  Relocating [.rodata..L.str.73]
  Relocating Str_Cswitch
  Relocating [.rodata..L.str.74]
  Relocating [.rodata..L.str.75]
  Relocating [.rodata..L.str.76]
  Relocating [.rodata..L.str.77]
  Relocating [.rodata..L.str.78]
  Relocating [.rodata..L.str.79]
  Relocating Str_Sounds
  Relocating [.rodata..L.str.80]
  Relocating [.rodata..L.str.81]
  Relocating [.rodata..L.str.82]
  Relocating menuProcVoiceAlarm(unsigned char)::mstate2
  Relocating [.rodata..L.str.83]
  Relocating menuRXSetup(unsigned char)::mstate2
  Relocating [.rodata..L.str.84]
  Relocating [.rodata..L.str.85]
  Relocating [.rodata..L.str.86]
  Relocating [.rodata..L.str.87]
  Relocating menuSetFailsafe(unsigned char)::mstate2
  Relocating [.rodata..L.str.88]
  Relocating [.rodata..L.str.89]
  Relocating [.rodata..L.str.90]
  Relocating [.rodata..L.str.91]
  Relocating menuProcProtocol(unsigned char)::mstate2
  Relocating [.rodata..L.str.92]
  Relocating [.rodata..L.str.93]
  Relocating [.rodata..L.str.94]
  Relocating [.rodata..L.str.95]
  Relocating [.rodata..L.str.96]
  Relocating [.rodata..L.str.97]
  Relocating [.rodata..L.str.98]
  Relocating [.rodata..L.str.99]
  Relocating [.rodata..L.str.100]
  Relocating [.rodata..L.str.101]
  Relocating menuProcModelIndex(unsigned char)::mstate
  Relocating menuProcModelIndex(unsigned char)::n_Strings
  Relocating Str_heli_setup
  Relocating Str_limits
  Relocating Str_Expo
  Relocating Str_Cswitches
  Relocating Str_Safety
  Relocating Str_Timer
  Relocating Str_Protocol
  Relocating [.rodata..L.str.102]
  Relocating [.rodata..L.str.103]
  Relocating Str_TRE012AG
  Relocating [.rodata..L.str.104]
  Relocating [.rodata..L.str.105]
  Relocating [.rodata..L.str.106]
  Relocating [.rodata..L.str.107]
  Relocating [.rodata..L.str.108]
  Relocating [.rodata..L.str.109]
  Relocating [.rodata..L.str.110]
  Relocating [.rodata..L.str.111]
  Relocating [.rodata..L.str.112]
  Relocating [.rodata..L.str.113]
  Relocating [.rodata..L.str.114]
  Relocating MixPopList
  Relocating [.rodata..L.str.115]
  Relocating [.rodata..L.str.116]
  Relocating [.rodata..L.str.117]
  Relocating [.rodata..L.str.118]
  Relocating [.rodata..L.str.119]
  Relocating [.rodata..L.str.120]
  Relocating [.rodata..L.str.121]
  Relocating [.rodata..Lswitch.table.menuProcModelIndex(unsigned char)]
  Relocating SetStartPulsePol()
  Relocating ISR_TIMER1_COMPA_vect
  Relocating setupPulses()
  Relocating startPulses()
  Relocating setupPulsesPPM(unsigned char)
  Relocating pulses2MHz
  Relocating heartbeat
  Relocating Current_protocol
  Relocating pxxFlag
  Relocating PausePulses
  Relocating serialDat0
  Relocating ISR_TIMER1_COMPA_vect::pulsePtr
  Relocating RadioActive
  Relocating B3_comp_value
  Relocating Stamps
  Relocating clearMixes()
  Relocating setMix(unsigned char, unsigned char)
  Relocating applyTemplate()
  Relocating main
  Relocating tiny_sprintf(char*, char const*, char, char, ...)
  Relocating crossfireTelemetryPush4(unsigned char, unsigned char, unsigned char)
  Relocating crossfireTelemetryPing()
  Relocating allocateFields()
  Relocating selectField(signed char)
  Relocating getField(unsigned char)
  Relocating fieldTextSelectionLoad(FieldProps*, unsigned char*, unsigned char)
  Relocating fieldTextSelectionSave(FieldProps*)
  Relocating fieldTextSelectionDisplay(FieldProps*, unsigned char, unsigned char)
  Relocating semicolonPos(char const*, unsigned char)
  Relocating fieldStringDisplay(FieldProps*, unsigned char, unsigned char)
  Relocating fieldFolderOpen(FieldProps*)
  Relocating noopOpen(FieldProps*)
  Relocating fieldCommandLoad(FieldProps*, unsigned char*, unsigned char)
  Relocating fieldCommandSave(FieldProps*)
  Relocating fieldUnifiedDisplay(FieldProps*, unsigned char, unsigned char)
  Relocating UIbackExec(FieldProps*)
  Relocating parseDeviceInfoMessage(unsigned char*)
  Relocating parseParameterInfoMessage(unsigned char*, unsigned char)
  Relocating runCrossfireTelemetryCallback(unsigned char, unsigned char*, unsigned char)
  Relocating handleDevicePageEvent(unsigned char)
  Relocating incrField(signed char)
  Relocating runDevicePage(unsigned char)
  Relocating runPopupPage(unsigned char)
  Relocating popupCompat(unsigned char)
  Relocating ELRSV2_stop()
  Relocating ELRSV2_run(unsigned char)
  Relocating crossfileMenu(MState2&, unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating namesBufferOffset
  Relocating valuesBufferOffset
  Relocating fieldDataLen
  Relocating fieldsLen
  Relocating devicesLen
  Relocating otherDevicesId
  Relocating deviceId
  Relocating handsetId
  Relocating deviceIsELRS_TX
  Relocating lineIndex
  Relocating pageOffset
  Relocating edit
  Relocating fieldTimeout
  Relocating fieldId
  Relocating fieldChunk
  Relocating fields_count
  Relocating backButtonId
  Relocating devicesRefreshTimeout
  Relocating allParamsLoaded
  Relocating folderAccess
  Relocating statusComplete
  Relocating expectedChunks
  Relocating reloadFolder
  Relocating fields
  Relocating [.rodata..L.str]
  Relocating [.rodata..L.str.1]
  Relocating fieldPopup
  Relocating [.rodata..L.str.2]
  Relocating [.rodata..L.str.3]
  Relocating [.rodata..L.str.4]
  Relocating [.rodata..L.str.5]
  Relocating deviceIds
  Relocating functions
  Relocating reusableBuffer
  Relocating [.rodata..L.str.7]
  Relocating [.rodata..L.str.8]
  Relocating [.rodata..Lswitch.table.fieldUnifiedDisplay(FieldProps*, unsigned char, unsigned char)]
  Relocating crc8(unsigned char const*, unsigned int)
  Relocating crc8tab
  Relocating createCrossfireChannelsFrame(unsigned char*, short*)
  Relocating setupPulsesCrossfire()
  Relocating processCrossfireTelemetryValue(unsigned char, int)
  Relocating checkCrossfireTelemetryFrameCRC()
  Relocating getCrossfireTelemetryValue(unsigned char, int&, int)
  Relocating processCrossfireTelemetryFrame()
  Relocating processCrossfireTelemetryData(unsigned char)
  Relocating crossfireTelemetryPush(unsigned char, unsigned char*, unsigned char)
  Relocating crsf_init()
  Relocating crsf_shutdown()
  Relocating crsf_action()
  Relocating outputTelemetryBuffer
  Relocating outputTelemetryBufferSize
  Relocating outputTelemetryBufferTrigger
  Relocating telemetryRxBuffer
  Relocating telemetryRxBufferCount
  Relocating g_crossfire
  Relocating telemetryErrors
  Relocating g_elrs_update_rate
  Relocating g_elrs_lag
  Relocating idx_to_afhds2a
  Relocating processCrossfireTelemetryFrame()::power_values
  Relocating evalChkSum()
  Relocating setNameP(char*, char const*)
  Relocating eeGeneralDefault()
  Relocating modelSave(unsigned char)
  Relocating modelDefaultWrite(unsigned char)
  Relocating eeLoadModelName(unsigned char, char*, unsigned char)
  Relocating eeModelExists(unsigned char)
  Relocating eeLoadModelForBackup(unsigned char)
  Relocating eeLoadModel(unsigned char)
  Relocating validateName(char*, unsigned char)
  Relocating eeDirty(unsigned char)
  Relocating eeWaitComplete()
  Relocating eeDuplicateModel(unsigned char)
  Relocating eeReadGeneral()
  Relocating eeWriteGeneral()
  Relocating eeCheck(bool)
  Relocating theFile
  Relocating theWriteFile
  Relocating [.rodata..L.str]
  Relocating [.rodata..L.str.1]
  Relocating [.rodata..L.str.2]
  Relocating [.rodata..L.str.3]
  Relocating [.rodata..L.str.4]
  Relocating [.rodata..L.str.5]
  Relocating [.rodata..L.str.6]
  Relocating s_eeDirtyMsk
  Relocating s_eeDirtyTime10ms
  Relocating s_eeLongTimer
  Relocating Ee_lock
  Relocating Str_EEPROM_Overflow
  Relocating SX127xDriver::SX127xDriver()
  Relocating _GLOBAL__sub_I_SX127x.cpp
  Relocating hal
  Relocating SX127xDriver::instance
  Relocating [.init_array]
  Relocating SX127xHal::SX127xHal()
  Relocating SX127xHal::instance
  Relocating _GLOBAL__sub_I_ELRS.cpp
  Relocating Radio
  Relocating ota_crc
  Relocating LQCalc
  Relocating TelemetryReceiver
  Relocating MspSender
  Relocating [.init_array]
  Relocating StubbornReceiver::StubbornReceiver(unsigned char)
  Relocating StubbornSender::StubbornSender(unsigned char)
  Relocating StubbornSender::ResetState()
  Relocating GENERIC_CRC14::GENERIC_CRC14(unsigned short)
  Relocating Reset_Handler
  Relocating NMI_Handler
  Relocating _vectors
  Relocating BackDoorKey
  Relocating _start
  Relocating __aeabi_llsl
  Relocating __aeabi_llsr
  Relocating __aeabi_idiv
  Relocating __aeabi_idivmod
  Relocating __aeabi_uidiv
  Relocating __aeabi_uidivmod
  Relocating div
  Relocating strcpy
  Relocating strlen
  Relocating memcpy
  Relocating __aeabi_memclr
  Relocating __aeabi_memmove
  Relocating memcmp
  Relocating strstr
  Relocating __SEGGER_init_heap
  Relocating __SEGGER_RTL_init_heap
  Relocating __SEGGER_RTL_heap_globals
  Relocating [.bss.block.heap]
  Relocating [.bss.block.stack]


***************************************************************************************
***                                                                                 ***
***                              Create block symbols                               ***
***                                                                                 ***
***************************************************************************************

  Creating symbols for block vectors
  Creating symbols for block vectors_ram
  Creating symbols for block ctors
  Creating symbols for block dtors
  Creating symbols for block exidx
  Creating symbols for block tbss
  Creating symbols for block tdata
  Creating symbols for block tls
  Creating symbols for block tdata_load
  Creating symbols for block heap
      Define global symbol __heap_start__ = 0x20000cf8
      Define global symbol __heap_end__ = 0x20000df8
  Creating symbols for block stack
      Define global symbol __stack_end__ = 0x20001800
  Creating symbols for block cfm


***************************************************************************************
***                                                                                 ***
***                              Thread-local storage                               ***
***                                                                                 ***
***************************************************************************************

  Total size (excluding padding and alignment): 0 bytes
  Define global symbol __thread_pointer$ = 0x00000000


***************************************************************************************
***                                                                                 ***
***                                 Relocate image                                  ***
***                                                                                 ***
***************************************************************************************

  Relocating [.rodata.block.tdata.copy]
  Relocating SystemInit
  Relocating lcdSetRefVolt(unsigned char)
  Relocating lcdSendCtl(unsigned char)
  Relocating lcdSetContrast()
  Relocating lcd_clear()
  Relocating lcd_init()
  Relocating lcd_putcAtt(unsigned char, unsigned char, char, unsigned char)
  Relocating lcd_putsAtt(unsigned char, unsigned char, char const*, unsigned char)
  Relocating lcd_putsnAtt(unsigned char, unsigned char, char const*, unsigned char, unsigned char)
  Relocating lcd_putsAttIdx(unsigned char, unsigned char, char const*, unsigned char, unsigned char)
  Relocating lcd_putc(unsigned char, unsigned char, char)
  Relocating lcd_puts_Pleft(unsigned char, char const*)
  Relocating lcd_puts_Pskip(unsigned char, char const*, unsigned char)
  Relocating lcd_puts_P(unsigned char, unsigned char, char const*)
  Relocating lcd_putsn_P(unsigned char, unsigned char, char const*, unsigned char)
  Relocating lcd_outhex4(unsigned char, unsigned char, unsigned short)
  Relocating lcd_write_bits(unsigned char*, unsigned char)
  Relocating lcd_plot(unsigned char, unsigned char)
  Relocating lcd_vline(unsigned char, unsigned char, signed char)
  Relocating lcd_hlineStip(unsigned char, unsigned char, signed char, unsigned char)
  Relocating lcd_hline(unsigned char, unsigned char, signed char)
  Relocating lcd_2_digits(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating lcd_outdezNAtt(unsigned char, unsigned char, int, unsigned char, signed char, unsigned char)
  Relocating lcd_outdezAtt(unsigned char, unsigned char, short, unsigned char)
  Relocating lcd_outdez(unsigned char, unsigned char, short)
  Relocating lcd_char_inverse(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating lcd_rect_xor(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating lcd_rect(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating lcd_hbar(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating refreshDiplay()
  Relocating lcd_img(unsigned char, unsigned char, unsigned char const*, unsigned char)
  Relocating putsTime(unsigned char, unsigned char, short, unsigned char, unsigned char)
  Relocating putsVolts(unsigned char, unsigned char, short, unsigned char)
  Relocating putsVBat(unsigned char, unsigned char, unsigned char)
  Relocating LcdLock
  Relocating Lcd_lastPos
  Relocating DisplayBuf
  Relocating EepromActive
  Relocating Lcdinit
  Relocating font
  Relocating font_dblsize
  Relocating plotType
  Relocating _bitmask
  Relocating HW_Init
  Relocating mDelay
  Relocating getADC_osmp
  Relocating backlight_on
  Relocating backlight_off
  Relocating rd_1
  Relocating rd_0
  Relocating cs_0
  Relocating rw_0
  Relocating rs_1
  Relocating rs_0
  Relocating rst_1
  Relocating rst_0
  Relocating PINB
  Relocating PIND
  Relocating PINE
  Relocating PING
  Relocating LCD_DATA
  Relocating Buzzer_SetVal
  Relocating Buzzer_ClrVal
  Relocating SPI_RADIO_SendBlock
  Relocating SPI_RADIO_ReceiveBlock
  Relocating a7105_csn_on
  Relocating a7105_csn_off
  Relocating RF0_SetVal
  Relocating RF0_ClrVal
  Relocating RF1_SetVal
  Relocating RF1_ClrVal
  Relocating TX_RX_PutVal
  Relocating EnableGIO
  Relocating DisableGIO
  Relocating i2c_master
  Relocating GetPPMOutState
  Relocating SetPPMTimCompare
  Relocating GetPPMTimCompare
  Relocating GetPPMTimCompareInterruptFlag
  Relocating ClearPPMTimCompareInterruptFlag
  Relocating EnablePPMTim
  Relocating EnablePPMOut
  Relocating DisablePPMOut
  Relocating EnablePRTTim
  Relocating DisablePRTTim
  Relocating SetPRTTimPeriod
  Relocating GetChipID
  Relocating PIT_IRQHandler
  Relocating TPM1_IRQHandler
  Relocating SPI0_IRQHandler
  Relocating PORTC_PORTD_IRQHandler
  Relocating TPM0_IRQHandler
  Relocating TPM2_IRQHandler
  Relocating setup_crsf_serial_port
  Relocating uart_clear_error()
  Relocating crsf_send_data
  Relocating UART0_IRQHandler
  Relocating shutdown_crsf_serial_port
  Relocating serialVoiceInit(void (*)(unsigned char*, unsigned char))
  Relocating sendSerialVoiceData(unsigned char*, unsigned int)
  Relocating UART2_IRQHandler
  Relocating ChannelToPin
  Relocating AFHDS2A_A7105_regs
  Relocating SPI_BufferPtr
  Relocating SPI_Size
  Relocating g_crsf_read_callback
  Relocating g_voice_cb
  Relocating voice_uart_recv_buf
  Relocating voice_rx_idx
  Relocating voice_uart_send_buf
  Relocating voice_tx_idx
  Relocating modeFixValue(unsigned char)
  Relocating get_tmr10ms()
  Relocating CS_STATE(unsigned char)
  Relocating mixaddress(unsigned char)
  Relocating throttleReversed()
  Relocating putsChnRaw(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating putsChn(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating putsMomentDrSwitches(unsigned char, unsigned char, signed char, unsigned char)
  Relocating putsDrSwitches(unsigned char, unsigned char, signed char, unsigned char)
  Relocating putsTmrMode(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating putsTelemValue(unsigned char, unsigned char, int, unsigned char, unsigned char)
  Relocating getValue(unsigned char)
  Relocating getSwitch00(signed char)
  Relocating getSwitch(signed char, bool, unsigned char)
  Relocating calc100toRESX(signed char)
  Relocating check_backlight_voice()
  Relocating stickMoveValue()
  Relocating anaIn(unsigned char)
  Relocating almess(char const*, unsigned char)
  Relocating message(char const*)
  Relocating alert(char const*)
  Relocating alertx(char const*, bool)
  Relocating clearKeyEvents()
  Relocating keyDown()
  Relocating checkThrottlePosition()
  Relocating checkTHR()
  Relocating putWarnSwitch(unsigned char, unsigned char)
  Relocating getCurrentSwitchStates()
  Relocating checkSwitches()
  Relocating getFlightPhase()
  Relocating getRawTrimValue(unsigned char, unsigned char)
  Relocating getTrimFlightPhase(unsigned char, unsigned char)
  Relocating getTrimValue(unsigned char, unsigned char)
  Relocating setTrimValue(unsigned char, unsigned char, short)
  Relocating checkIncDec16(short, short, short, unsigned char)
  Relocating checkIncDec(signed char, signed char, signed char, unsigned char)
  Relocating checkIncDec_i8(signed char, signed char, signed char)
  Relocating checkIncDec_0(signed char, signed char)
  Relocating checkIncDec_u0(short, unsigned char)
  Relocating popMenu(bool)
  Relocating chainMenu(void (*)(unsigned char))
  Relocating pushMenu(void (*)(unsigned char))
  Relocating backlightKey()
  Relocating doBackLightVoice(unsigned char)
  Relocating calcStickScroll(unsigned char)
  Relocating getGvarSourceValue(unsigned char)
  Relocating ISR_TIMER2_OVF_vect
  Relocating audioQueue::driver()
  Relocating ISR_TIMER0_COMP_vect
  Relocating mainER()
  Relocating mainSequence()
  Relocating doVoiceAlarmSource(t_voiceAlarm*)
  Relocating procOneVoiceAlarm(t_voiceAlarm*, unsigned char)
  Relocating processVoiceAlarms()
  Relocating calc1000toRESX(short)
  Relocating REG100_100(signed char)
  Relocating REG(signed char, signed char, signed char)
  Relocating IS_EXPO_THROTTLE(unsigned char)
  Relocating _GLOBAL__sub_I_er9x.cpp
  Relocating Last_switch
  Relocating g_eeGeneral
  Relocating g_model
  Relocating AlertMessage
  Relocating Main_running
  Relocating Nvs_state
  Relocating Nvs_timer
  Relocating CurrentVolume
  Relocating ppmInAvailable
  Relocating Rotary
  Relocating Tevent
  Relocating TimerConfig
  Relocating bchout_ar
  Relocating audio
  Relocating sysFlags
  Relocating SystemOptions
  Relocating AlarmControl
  Relocating CsTimer
  Relocating Str_Switches
  Relocating Str_OFF
  Relocating Str_ON
  Relocating modi12x3
  Relocating stickScramble
  Relocating csTypeTable
  Relocating Str_Hyphens
  Relocating [.rodata..L.str]
  Relocating [.rodata..L.str.1]
  Relocating g_ppmIns
  Relocating check_backlight_voice()::tmr10ms
  Relocating g_LightOffCounter
  Relocating [.rodata..L.str.2]
  Relocating [.rodata..L.str.3]
  Relocating Str_Alert
  Relocating [.rodata..L.str.4]
  Relocating [.rodata..L.str.5]
  Relocating [.rodata..L.str.6]
  Relocating StickScrollAllowed
  Relocating StickScrollTimer
  Relocating g_menuStack
  Relocating g_menuStackPtr
  Relocating EnterMenu
  Relocating P1values
  Relocating StepSize
  Relocating LongMenuTimer
  Relocating [.rodata..L.str.7]
  Relocating g_vbat100mV
  Relocating tick10ms
  Relocating stickMoved
  Relocating rate
  Relocating Inactivity
  Relocating s_anaFilt
  Relocating g_tmr16KHz
  Relocating tmrEEPROM
  Relocating [.rodata..L.str.8]
  Relocating mainSequence()::timer
  Relocating audioQueue::driver()::toneCounter
  Relocating [.rodata..L.str.9]
  Relocating [.rodata..L.str.10]
  Relocating [.rodata..L.str.11]
  Relocating [.rodata..L.str.12]
  Relocating [.rodata..L.str.13]
  Relocating perMain()::lastTMR
  Relocating perMain()::repeater
  Relocating perMain()::alertKey
  Relocating perMain()::s_batCheck
  Relocating [.init_array]
  Relocating A7105_AntSwitch()
  Relocating A7105_SetTxRxMode(unsigned char)
  Relocating A7105_Strobe(unsigned char)
  Relocating A7105_WriteReg(unsigned char, unsigned char)
  Relocating A7105_WriteData(unsigned char, unsigned char)
  Relocating A7105_ReadData(unsigned char)
  Relocating A7105_ReadReg(unsigned char)
  Relocating A7105_Reset()
  Relocating A7105_WriteID(unsigned int)
  Relocating A7105_SetPower()
  Relocating A7105_AdjustLOBaseFreq()
  Relocating A7105_Sleep()
  Relocating A7105_Init()
  Relocating convert_failsafe_ppm(unsigned char)
  Relocating RadioState
  Relocating protocol_flags
  Relocating prev_power
  Relocating packet
  Relocating ID
  Relocating packet_count
  Relocating bind_phase
  Relocating hopping_frequency
  Relocating hopping_frequency_no
  Relocating A7105_AntSwitch()::sw
  Relocating A7105_AdjustLOBaseFreq()::old_offset
  Relocating AFHDS2A_build_packet(unsigned char)
  Relocating ActionAFHDS2A
  Relocating initAFHDS2A
  Relocating processFlySkySensor(unsigned char const*, unsigned char)
  Relocating AFHDS2A_tel
  Relocating AFHDS2A_tel_data
  Relocating AFHDS2A_tel_status
  Relocating AFHDS2A_tel_res_cnt
  Relocating AltOffset
  Relocating GAltOffset
  Relocating ActionAFHDS2A::packet_type
  Relocating ActionAFHDS2A::packet_counter
  Relocating AFHDS2A_update_telemetry()::Dacc
  Relocating DoSum(unsigned char*, unsigned char)
  Relocating Uart_SendCMD(unsigned char, unsigned char, unsigned short)
  Relocating audioQueue::busy()
  Relocating audioQueue::heartbeat()
  Relocating audioQueue::play(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating audioQueue::getToneLength(unsigned char)
  Relocating audioQueue::event(unsigned char, unsigned char)
  Relocating audioDefevent(unsigned char)
  Relocating audioEvent(unsigned char, unsigned short)
  Relocating audioVoiceDefevent(unsigned char, unsigned char)
  Relocating putVoiceQueue(unsigned char)
  Relocating voice_numeric(short, unsigned char, unsigned char)
  Relocating putVoiceQueueUpper(unsigned char)
  Relocating putVoiceQueueLong(unsigned short)
  Relocating setVolume(unsigned char)
  Relocating on_voice_cb(unsigned char*, unsigned char)
  Relocating t_voice::voice_process()
  Relocating play_cmd_buf
  Relocating Voice
  Relocating wait_fin_count
  Relocating ee_waite()
  Relocating eeprom_read_block(void*, void const*, unsigned int)
  Relocating eeprom_write_page_cmp(char const*, unsigned short, unsigned int)
  Relocating eeWriteBlockCmp(void const*, unsigned short, unsigned int)
  Relocating Key::input(bool, EnumKeys)
  Relocating menuPressed()
  Relocating switchPosition(unsigned char)
  Relocating keyState(EnumKeys)
  Relocating pauseEvents(unsigned char)
  Relocating killEvents(unsigned char)
  Relocating per10ms()
  Relocating i2c_buffer
  Relocating s_evt
  Relocating keys
  Relocating g_tmr10ms
  Relocating g_blinkTmr10ms
  Relocating per10ms()::current
  Relocating per10ms()::crossTrim
  Relocating EeFsGetFree()
  Relocating EeFsGetLink(unsigned char)
  Relocating EeFsck()
  Relocating EeFsSetLink(unsigned char, unsigned char)
  Relocating EeFsFlush()
  Relocating EeFsFlushFreelist()
  Relocating EeFsFormat()
  Relocating EeFsOpen()
  Relocating EFile::exists(unsigned char)
  Relocating EFile::swap(unsigned char, unsigned char)
  Relocating EFile::rm(unsigned char)
  Relocating EeFsFree(unsigned char)
  Relocating EFile::size()
  Relocating EFile::openRd(unsigned char)
  Relocating EFile::read(unsigned char*, unsigned short)
  Relocating EFile::readRlc(unsigned char*, unsigned short)
  Relocating EFile::write(unsigned char*, unsigned char)
  Relocating EeFsAlloc()
  Relocating EFile::create(unsigned char, unsigned char, unsigned short)
  Relocating EFile::closeTrunc()
  Relocating EFile::writeRlc(unsigned char, unsigned char, unsigned char*, unsigned short, unsigned char)
  Relocating EeFsRead(unsigned char, unsigned char)
  Relocating eeFs
  Relocating putsAttIdxTelemItems(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating calc_scaler(unsigned char, unsigned char*, unsigned char*)
  Relocating voiceMinutes(short)
  Relocating voice_telem_item(unsigned char)
  Relocating get_telemetry_value(unsigned char)
  Relocating displayTimer(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating putsTelemetryChannel(unsigned char, unsigned char, signed char, int, unsigned char, unsigned char)
  Relocating dispGvar(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating gvarMenuItem(unsigned char, unsigned char, signed char, signed char, signed char, unsigned char)
  Relocating gvarMenuItem125(unsigned char, unsigned char, signed char, unsigned char)
  Relocating get_dr_state(unsigned char)
  Relocating editName(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char)
  Relocating char2idx(char)
  Relocating idx2char(unsigned char)
  Relocating TITLEP(char const*)
  Relocating lcd_xlabel_decimal(unsigned char, unsigned char, unsigned short, unsigned char, char const*)
  Relocating checkIndexed(unsigned char, char const*, unsigned char, unsigned char)
  Relocating hyphinvMenuItem(unsigned char, unsigned char, unsigned char)
  Relocating putsOffDecimal(unsigned char, unsigned char, unsigned short, unsigned char)
  Relocating MState2::check_columns(unsigned char, unsigned char)
  Relocating telltale(unsigned char, signed char, signed char)
  Relocating doMainScreenGrphics()
  Relocating drawFunction(unsigned char, unsigned char)
  Relocating intpol(short, unsigned char)
  Relocating calcExpo(unsigned char, short)
  Relocating drawCurve(unsigned char)
  Relocating curveAddress(unsigned char)
  Relocating menuProcCurveOne(unsigned char)
  Relocating menuProcCurve(unsigned char)
  Relocating evalOffset(signed char)
  Relocating setStickCenter()
  Relocating perOut(short*, unsigned char)
  Relocating displayNext()
  Relocating menuProcTelemetry(unsigned char)
  Relocating put_curve(unsigned char, unsigned char, signed char, unsigned char)
  Relocating scalerDecimal(unsigned char, unsigned char, unsigned char)
  Relocating menuScaleOne(unsigned char)
  Relocating menuProcGlobals(unsigned char)
  Relocating edit_dr_switch(unsigned char, unsigned char, signed char, unsigned char, unsigned char)
  Relocating putsChnOpRaw(unsigned char, unsigned char, t_MixData*, unsigned char)
  Relocating menuProcMixOne(unsigned char)
  Relocating onoffItem(unsigned char, unsigned char, unsigned char)
  Relocating offonItem(unsigned char, unsigned char, unsigned char)
  Relocating onoffMenuItem(unsigned char, unsigned char, char const*, unsigned char)
  Relocating editSlowDelay(unsigned char, unsigned char, unsigned char)
  Relocating menuMixersLimit(unsigned char)
  Relocating menuProcMix(unsigned char)
  Relocating reachMixerCountLimit()
  Relocating yesNoMenuExit(unsigned char, char const*)
  Relocating menuDeleteMix(unsigned char)
  Relocating doPopup(char const*, unsigned char, unsigned char)
  Relocating insertMix(unsigned char, unsigned char)
  Relocating expou(unsigned short, unsigned short)
  Relocating expo(short, short)
  Relocating editExpoVals(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating menuDeleteDupModel(unsigned char)
  Relocating menuProcModelSelect(unsigned char)
  Relocating menuRangeBind(unsigned char)
  Relocating putsTrimMode(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating menuPhaseOne(unsigned char)
  Relocating dispFlightModename(unsigned char, unsigned char, unsigned char)
  Relocating menuModelPhases(unsigned char)
  Relocating menuProcModelIndex(unsigned char)
  Relocating putc_0_1(unsigned char, unsigned char, unsigned char)
  Relocating timer()
  Relocating resetTimer1()
  Relocating resetTimer2()
  Relocating trace()
  Relocating putsTimeNoAtt(unsigned char, unsigned char, short)
  Relocating menuProcStatistic(unsigned char)
  Relocating resetTimern(unsigned char)
  Relocating displayOneSwitch3Pos(unsigned char, unsigned char, unsigned char)
  Relocating displayOneSwitch(unsigned char, unsigned char, unsigned char)
  Relocating switchDisplay(unsigned char, unsigned char)
  Relocating dispSignalQality(unsigned char)
  Relocating menuProc0(unsigned char)
  Relocating menuProcIndex(unsigned char)
  Relocating perOutPhase(short*, unsigned char)
  Relocating scaleAnalog(short, unsigned char)
  Relocating indexProcess(unsigned char, MState2*, unsigned char)
  Relocating displayIndex(char const* const*, unsigned char, unsigned char, unsigned char)
  Relocating offonMenuItem(unsigned char, unsigned char, char const*, unsigned char)
  Relocating displayVoiceRate(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating menuProcVoiceOne(unsigned char)
  Relocating menuProcVoiceAlarm(unsigned char)
  Relocating rangeBindAction(unsigned char, unsigned char)
  Relocating menuRXSetup(unsigned char)
  Relocating menuSetFailsafe(unsigned char)
  Relocating menuProcProtocol(unsigned char)
  Relocating Xmem
  Relocating PopupData
  Relocating MenuControl
  Relocating s_timer
  Relocating RotaryState
  Relocating CalcScaleNest
  Relocating ThrottleStickyOn
  Relocating Str_Chans_Gv
  Relocating Curve_Str
  Relocating phyStick
  Relocating Str_telemItems
  Relocating TelemIndex
  Relocating UnitsVoice
  Relocating UnitsText
  Relocating Str_GV
  Relocating calibratedStick
  Relocating Ex_chans
  Relocating s_pgOfs
  Relocating s_editMode
  Relocating s_editing
  Relocating s_noHi
  Relocating scrollLR
  Relocating scroll_disabled
  Relocating scrollUD
  Relocating InverseBlink
  Relocating EditType
  Relocating EditColumns
  Relocating g_chans512
  Relocating Str_Name
  Relocating [.rodata..L.str]
  Relocating g_posHorz
  Relocating M_longMenuTimer
  Relocating Columns
  Relocating MState2::check_columns(unsigned char, unsigned char)::lateUp
  Relocating s_curveChan
  Relocating s_expoChan
  Relocating menuProcCurveOne(unsigned char)::dfltCrv
  Relocating Str_Curve
  Relocating menuProcCurveOne(unsigned char)::mstate2
  Relocating [.rodata..L.str.1]
  Relocating Str_Curves
  Relocating menuProcCurve(unsigned char)::mstate2
  Relocating [.rodata..L.str.2]
  Relocating CurrentPhase
  Relocating [.rodata..L.str.3]
  Relocating menuProcTelemetry(unsigned char)::mstate2
  Relocating Str_Telemetry
  Relocating [.rodata..L.str.4]
  Relocating [.rodata..L.str.5]
  Relocating menuScaleOne(unsigned char)::mstate2
  Relocating Str_SC
  Relocating s_currIdx
  Relocating [.rodata..L.str.6]
  Relocating UnitsString
  Relocating [.rodata..L.str.7]
  Relocating Str_Globals
  Relocating menuProcGlobals(unsigned char)::mstate2
  Relocating Str_Gv_Source
  Relocating [.rodata..L.str.8]
  Relocating SW_3_IDX
  Relocating [.rodata..L.str.9]
  Relocating s_currMixIdx
  Relocating menuProcMixOne(unsigned char)::mstate2
  Relocating [.rodata..L.str.10]
  Relocating [.rodata..L.str.11]
  Relocating [.rodata..L.str.12]
  Relocating [.rodata..L.str.13]
  Relocating [.rodata..L.str.14]
  Relocating [.rodata..L.str.15]
  Relocating s_mixMaxSel
  Relocating [.rodata..L.str.16]
  Relocating mixToDelete
  Relocating [.rodata..L.str.17]
  Relocating [.rodata..L.str.18]
  Relocating [.rodata..L.str.19]
  Relocating s_moveMode
  Relocating Str_Mixer
  Relocating menuProcMix(unsigned char)::mstate2
  Relocating s_currDestCh
  Relocating [.rodata..L.str.20]
  Relocating s_moveMixIdx
  Relocating s_charTab
  Relocating DupIfNonzero
  Relocating DupSub
  Relocating [.rodata..L.str.21]
  Relocating [.rodata..L.str.22]
  Relocating [.rodata..L.str.23]
  Relocating menuRangeBind(unsigned char)::timer
  Relocating [.rodata..L.str.24]
  Relocating [.rodata..L.str.25]
  Relocating Str_1_RETA
  Relocating [.rodata..L.str.26]
  Relocating menuPhaseOne(unsigned char)::mstate2
  Relocating [.rodata..L.str.27]
  Relocating [.rodata..L.str.28]
  Relocating Str_Modes
  Relocating menuModelPhases(unsigned char)::mstate2
  Relocating [.rodata..L.str.29]
  Relocating menuProcModelSelect(unsigned char)::mstate2
  Relocating [.rodata..L.str.30]
  Relocating [.rodata..L.str.31]
  Relocating menuProcModelSelect(unsigned char)::sel_editMode
  Relocating ModelPopList
  Relocating TimeGlobals
  Relocating trace()::s_time
  Relocating g_latency
  Relocating [.rodata..L.str.32]
  Relocating [.rodata..L.str.33]
  Relocating [.rodata..L.str.34]
  Relocating [.rodata..L.str.35]
  Relocating [.rodata..L.str.38]
  Relocating [.rodata..L.str.39]
  Relocating [.rodata..L.str.40]
  Relocating menuProc0(unsigned char)::trimSwLock
  Relocating inputs_subview
  Relocating [.rodata..L.str.41]
  Relocating menuProc0(unsigned char)::xt
  Relocating [.rodata..L.str.42]
  Relocating [.rodata..L.str.43]
  Relocating [.rodata..L.str.44]
  Relocating Str_Main_Popup
  Relocating bpanaCenter
  Relocating Output
  Relocating Fade
  Relocating perOutPhase(short*, unsigned char)::lastPhase
  Relocating perOut(short*, unsigned char)::sticky
  Relocating menuProcIndex(unsigned char)::mstate
  Relocating IlinesCount
  Relocating menuProcIndex(unsigned char)::n_Strings
  Relocating Str_Display
  Relocating Str_AudioHaptic
  Relocating Str_Alarms
  Relocating Str_General
  Relocating Str_Controls
  Relocating Str_Calibration
  Relocating Str_Trainer
  Relocating Str_Version
  Relocating Str_DiagSwtch
  Relocating Str_DiagAna
  Relocating Str_Hardware
  Relocating [.rodata..L.str.45]
  Relocating [.rodata..L.str.46]
  Relocating [.rodata..L.str.47]
  Relocating [.rodata..L.str.48]
  Relocating [.rodata..L.str.49]
  Relocating [.rodata..L.str.50]
  Relocating Str_minute_Beep
  Relocating [.rodata..L.str.51]
  Relocating sticks
  Relocating [.rodata..L.str.52]
  Relocating [.rodata..L.str.53]
  Relocating Str_Beep_Countdown
  Relocating [.rodata..L.str.54]
  Relocating [.rodata..L.str.55]
  Relocating [.rodata..L.str.56]
  Relocating [.rodata..L.str.57]
  Relocating [.rodata..L.str.58]
  Relocating [.rodata..L.str.59]
  Relocating [.rodata..L.str.60]
  Relocating [.rodata..L.str.61]
  Relocating [.rodata..L.str.62]
  Relocating [.rodata..L.str.63]
  Relocating [.rodata..L.str.64]
  Relocating [.rodata..L.str.65]
  Relocating [.rodata..L.str.66]
  Relocating [.rodata..L.str.67]
  Relocating [.rodata..L.str.68]
  Relocating menuWhenDone
  Relocating [.rodata..L.str.69]
  Relocating Str_On_Off_Both
  Relocating [.rodata..L.str.70]
  Relocating menuProcVoiceOne(unsigned char)::mstate2
  Relocating [.rodata..L.str.71]
  Relocating [.rodata..L.str.72]
  Relocating [.rodata..L.str.73]
  Relocating Str_Cswitch
  Relocating [.rodata..L.str.74]
  Relocating [.rodata..L.str.75]
  Relocating [.rodata..L.str.76]
  Relocating [.rodata..L.str.77]
  Relocating [.rodata..L.str.78]
  Relocating [.rodata..L.str.79]
  Relocating Str_Sounds
  Relocating [.rodata..L.str.80]
  Relocating [.rodata..L.str.81]
  Relocating [.rodata..L.str.82]
  Relocating menuProcVoiceAlarm(unsigned char)::mstate2
  Relocating [.rodata..L.str.83]
  Relocating menuRXSetup(unsigned char)::mstate2
  Relocating [.rodata..L.str.84]
  Relocating [.rodata..L.str.85]
  Relocating [.rodata..L.str.86]
  Relocating [.rodata..L.str.87]
  Relocating menuSetFailsafe(unsigned char)::mstate2
  Relocating [.rodata..L.str.88]
  Relocating [.rodata..L.str.89]
  Relocating [.rodata..L.str.90]
  Relocating [.rodata..L.str.91]
  Relocating menuProcProtocol(unsigned char)::mstate2
  Relocating [.rodata..L.str.92]
  Relocating [.rodata..L.str.93]
  Relocating [.rodata..L.str.94]
  Relocating [.rodata..L.str.95]
  Relocating [.rodata..L.str.96]
  Relocating [.rodata..L.str.97]
  Relocating [.rodata..L.str.98]
  Relocating [.rodata..L.str.99]
  Relocating [.rodata..L.str.100]
  Relocating [.rodata..L.str.101]
  Relocating menuProcModelIndex(unsigned char)::mstate
  Relocating menuProcModelIndex(unsigned char)::n_Strings
  Relocating Str_heli_setup
  Relocating Str_limits
  Relocating Str_Expo
  Relocating Str_Cswitches
  Relocating Str_Safety
  Relocating Str_Timer
  Relocating Str_Protocol
  Relocating [.rodata..L.str.102]
  Relocating [.rodata..L.str.103]
  Relocating Str_TRE012AG
  Relocating [.rodata..L.str.104]
  Relocating [.rodata..L.str.105]
  Relocating [.rodata..L.str.106]
  Relocating [.rodata..L.str.107]
  Relocating [.rodata..L.str.108]
  Relocating [.rodata..L.str.109]
  Relocating [.rodata..L.str.110]
  Relocating [.rodata..L.str.111]
  Relocating [.rodata..L.str.112]
  Relocating [.rodata..L.str.113]
  Relocating [.rodata..L.str.114]
  Relocating MixPopList
  Relocating [.rodata..L.str.115]
  Relocating [.rodata..L.str.116]
  Relocating [.rodata..L.str.117]
  Relocating [.rodata..L.str.118]
  Relocating [.rodata..L.str.119]
  Relocating [.rodata..L.str.120]
  Relocating [.rodata..L.str.121]
  Relocating [.rodata..Lswitch.table.menuProcModelIndex(unsigned char)]
  Relocating SetStartPulsePol()
  Relocating ISR_TIMER1_COMPA_vect
  Relocating setupPulses()
  Relocating startPulses()
  Relocating setupPulsesPPM(unsigned char)
  Relocating pulses2MHz
  Relocating heartbeat
  Relocating Current_protocol
  Relocating pxxFlag
  Relocating PausePulses
  Relocating serialDat0
  Relocating ISR_TIMER1_COMPA_vect::pulsePtr
  Relocating RadioActive
  Relocating B3_comp_value
  Relocating Stamps
  Relocating clearMixes()
  Relocating setMix(unsigned char, unsigned char)
  Relocating applyTemplate()
  Relocating main
  Relocating tiny_sprintf(char*, char const*, char, char, ...)
  Relocating crossfireTelemetryPush4(unsigned char, unsigned char, unsigned char)
  Relocating crossfireTelemetryPing()
  Relocating allocateFields()
  Relocating selectField(signed char)
  Relocating getField(unsigned char)
  Relocating fieldTextSelectionLoad(FieldProps*, unsigned char*, unsigned char)
  Relocating fieldTextSelectionSave(FieldProps*)
  Relocating fieldTextSelectionDisplay(FieldProps*, unsigned char, unsigned char)
  Relocating semicolonPos(char const*, unsigned char)
  Relocating fieldStringDisplay(FieldProps*, unsigned char, unsigned char)
  Relocating fieldFolderOpen(FieldProps*)
  Relocating noopOpen(FieldProps*)
  Relocating fieldCommandLoad(FieldProps*, unsigned char*, unsigned char)
  Relocating fieldCommandSave(FieldProps*)
  Relocating fieldUnifiedDisplay(FieldProps*, unsigned char, unsigned char)
  Relocating UIbackExec(FieldProps*)
  Relocating parseDeviceInfoMessage(unsigned char*)
  Relocating parseParameterInfoMessage(unsigned char*, unsigned char)
  Relocating runCrossfireTelemetryCallback(unsigned char, unsigned char*, unsigned char)
  Relocating handleDevicePageEvent(unsigned char)
  Relocating incrField(signed char)
  Relocating runDevicePage(unsigned char)
  Relocating runPopupPage(unsigned char)
  Relocating popupCompat(unsigned char)
  Relocating ELRSV2_stop()
  Relocating ELRSV2_run(unsigned char)
  Relocating crossfileMenu(MState2&, unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating namesBufferOffset
  Relocating valuesBufferOffset
  Relocating fieldDataLen
  Relocating fieldsLen
  Relocating devicesLen
  Relocating otherDevicesId
  Relocating deviceId
  Relocating handsetId
  Relocating deviceIsELRS_TX
  Relocating lineIndex
  Relocating pageOffset
  Relocating edit
  Relocating fieldTimeout
  Relocating fieldId
  Relocating fieldChunk
  Relocating fields_count
  Relocating backButtonId
  Relocating devicesRefreshTimeout
  Relocating allParamsLoaded
  Relocating folderAccess
  Relocating statusComplete
  Relocating expectedChunks
  Relocating reloadFolder
  Relocating fields
  Relocating [.rodata..L.str]
  Relocating [.rodata..L.str.1]
  Relocating fieldPopup
  Relocating [.rodata..L.str.2]
  Relocating [.rodata..L.str.3]
  Relocating [.rodata..L.str.4]
  Relocating [.rodata..L.str.5]
  Relocating deviceIds
  Relocating functions
  Relocating reusableBuffer
  Relocating [.rodata..L.str.7]
  Relocating [.rodata..L.str.8]
  Relocating [.rodata..Lswitch.table.fieldUnifiedDisplay(FieldProps*, unsigned char, unsigned char)]
  Relocating crc8(unsigned char const*, unsigned int)
  Relocating crc8tab
  Relocating createCrossfireChannelsFrame(unsigned char*, short*)
  Relocating setupPulsesCrossfire()
  Relocating processCrossfireTelemetryValue(unsigned char, int)
  Relocating checkCrossfireTelemetryFrameCRC()
  Relocating getCrossfireTelemetryValue(unsigned char, int&, int)
  Relocating processCrossfireTelemetryFrame()
  Relocating processCrossfireTelemetryData(unsigned char)
  Relocating crossfireTelemetryPush(unsigned char, unsigned char*, unsigned char)
  Relocating crsf_init()
  Relocating crsf_shutdown()
  Relocating crsf_action()
  Relocating outputTelemetryBuffer
  Relocating outputTelemetryBufferSize
  Relocating outputTelemetryBufferTrigger
  Relocating telemetryRxBuffer
  Relocating telemetryRxBufferCount
  Relocating g_crossfire
  Relocating telemetryErrors
  Relocating g_elrs_update_rate
  Relocating g_elrs_lag
  Relocating idx_to_afhds2a
  Relocating processCrossfireTelemetryFrame()::power_values
  Relocating evalChkSum()
  Relocating setNameP(char*, char const*)
  Relocating eeGeneralDefault()
  Relocating modelSave(unsigned char)
  Relocating modelDefaultWrite(unsigned char)
  Relocating eeLoadModelName(unsigned char, char*, unsigned char)
  Relocating eeModelExists(unsigned char)
  Relocating eeLoadModelForBackup(unsigned char)
  Relocating eeLoadModel(unsigned char)
  Relocating validateName(char*, unsigned char)
  Relocating eeDirty(unsigned char)
  Relocating eeWaitComplete()
  Relocating eeDuplicateModel(unsigned char)
  Relocating eeReadGeneral()
  Relocating eeWriteGeneral()
  Relocating eeCheck(bool)
  Relocating theFile
  Relocating theWriteFile
  Relocating [.rodata..L.str]
  Relocating [.rodata..L.str.1]
  Relocating [.rodata..L.str.2]
  Relocating [.rodata..L.str.3]
  Relocating [.rodata..L.str.4]
  Relocating [.rodata..L.str.5]
  Relocating [.rodata..L.str.6]
  Relocating s_eeDirtyMsk
  Relocating s_eeDirtyTime10ms
  Relocating s_eeLongTimer
  Relocating Ee_lock
  Relocating Str_EEPROM_Overflow
  Relocating SX127xDriver::SX127xDriver()
  Relocating _GLOBAL__sub_I_SX127x.cpp
  Relocating hal
  Relocating SX127xDriver::instance
  Relocating [.init_array]
  Relocating SX127xHal::SX127xHal()
  Relocating SX127xHal::instance
  Relocating _GLOBAL__sub_I_ELRS.cpp
  Relocating Radio
  Relocating ota_crc
  Relocating LQCalc
  Relocating TelemetryReceiver
  Relocating MspSender
  Relocating [.init_array]
  Relocating StubbornReceiver::StubbornReceiver(unsigned char)
  Relocating StubbornSender::StubbornSender(unsigned char)
  Relocating StubbornSender::ResetState()
  Relocating GENERIC_CRC14::GENERIC_CRC14(unsigned short)
  Relocating Reset_Handler
  Relocating NMI_Handler
  Relocating _vectors
  Relocating BackDoorKey
  Relocating _start
  Relocating __aeabi_llsl
  Relocating __aeabi_llsr
  Relocating __aeabi_idiv
  Relocating __aeabi_idivmod
  Relocating __aeabi_uidiv
  Relocating __aeabi_uidivmod
  Relocating div
  Relocating strcpy
  Relocating strlen
  Relocating memcpy
  Relocating __aeabi_memclr
  Relocating __aeabi_memmove
  Relocating memcmp
  Relocating strstr
  Relocating __SEGGER_init_heap
  Relocating __SEGGER_RTL_init_heap
  Relocating __SEGGER_RTL_heap_globals
  Relocating [.bss.block.heap]
  Relocating [.bss.block.stack]


***************************************************************************************
***                                                                                 ***
***                             Warn unintended double                              ***
***                                                                                 ***
***************************************************************************************



***************************************************************************************
***                                                                                 ***
***                                  Make inittab                                   ***
***                                                                                 ***
***************************************************************************************

  Applying default initialization methods for mapped sections
  Applying user initialization 'do not initialize': (0 inputs)
  Applying user initialization 'do not initialize': (0 inputs)
  Applying user initialization 'do not initialize': (0 inputs)
  Applying user initialization 'do not initialize': (1 inputs)
  Applying user initialization 'auto': (14 inputs)
      AlarmControl from er9x.o
      prev_power from A7105_SPI.o
      A7105_AdjustLOBaseFreq()::old_offset from A7105_SPI.o
      AFHDS2A_update_telemetry()::Dacc from AFHDS2A_a7105.o
      play_cmd_buf from audio.o
      ISR_TIMER1_COMPA_vect::pulsePtr from pulses.o
      otherDevicesId from elrsV2.o
      deviceId from elrsV2.o
      handsetId from elrsV2.o
      lineIndex from elrsV2.o
      fieldId from elrsV2.o
      backButtonId from elrsV2.o
      devicesRefreshTimeout from elrsV2.o
      expectedChunks from elrsV2.o
  Applying user initialization 'auto': (0 inputs)
  Applying user initialization 'do not initialize': (1 inputs)
      [heap] from [ Linker created ]
  Applying user initialization 'do not initialize': (1 inputs)
      [stack] from [ Linker created ]
  Initialize by auto:
      [0x20000cd3 to 0x20000cd3] .data.prev_power [from A7105_SPI.o]
      [0x20000cd4 to 0x20000cd7] .data.devicesRefreshTimeout [from elrsV2.o]
      [0x20000cd8 to 0x20000cdb] .data._ZZL24AFHDS2A_update_telemetryvE4Dacc [from AFHDS2A_a7105.o]
      [0x20000cdc to 0x20000cdf] .data._ZZ21ISR_TIMER1_COMPA_vectE8pulsePtr [from pulses.o]
      [0x20000ce0 to 0x20000ce1] .data._ZZ22A7105_AdjustLOBaseFreqvE10old_offset [from A7105_SPI.o]
      [0x20000ce2 to 0x20000ceb] .data.play_cmd_buf [from audio.o]
      [0x20000cec to 0x20000cef] .data.AlarmControl [from er9x.o]
      [0x20000cf0 to 0x20000cf0] .data.otherDevicesId [from elrsV2.o]
      [0x20000cf1 to 0x20000cf1] .data.lineIndex [from elrsV2.o]
      [0x20000cf2 to 0x20000cf2] .data.handsetId [from elrsV2.o]
      [0x20000cf3 to 0x20000cf3] .data.fieldId [from elrsV2.o]
      [0x20000cf4 to 0x20000cf4] .data.expectedChunks [from elrsV2.o]
      [0x20000cf5 to 0x20000cf5] .data.deviceId [from elrsV2.o]
      [0x20000cf6 to 0x20000cf6] .data.backButtonId [from elrsV2.o]
  Selecting best packing for [0x20000cd3 to 0x20000cf6], size=36
      Algorithms:
          Copy with packing=none:     image size=36 + algorithm code=26 for 62 total bytes
          Copy with packing=packbits: image size=40 + algorithm code=52 for 92 total bytes, 30 worse than plain copy
          Copy with packing=lzss:     image size=38 + algorithm code=74 for 112 total bytes, 50 worse than plain copy
          Copy with packing=zpak:     image size=32 + algorithm code=40 for 72 total bytes, 10 worse than plain copy
      Selected packing=copy
  Initialize by zero:
      [0x1ffff800 to 0x1ffff807] .bss.AFHDS2A_tel_status [from AFHDS2A_a7105.o]
      [0x1ffff808 to 0x1ffffc07] .bss.DisplayBuf [from lcd.o]
      [0x1ffffc08 to 0x1ffffe07] .bss._ZL14reusableBuffer [from elrsV2.o]
      [0x1ffffe08 to 0x1fffff07] .bss.Output [from menus.o]
      [0x1fffff08 to 0x1fffffb3] .bss.AFHDS2A_tel_data [from AFHDS2A_a7105.o]
      [0x1fffffb4 to 0x20000003] .bss.Fade [from menus.o]
      [0x20000004 to 0x20000044] .bss.g_crossfire [from crossfire.o]
      [0x20000045 to 0x20000045] .bss.voice_tx_idx [from BoardI6.o]
      [0x20000046 to 0x20000047] .bss.tmrEEPROM [from er9x.o]
      [0x20000048 to 0x20000087] .bss.eeFs [from file.o]
      [0x20000088 to 0x200000b7] .bss.Radio [from ELRS.o]
      [0x200000b8 to 0x200000df] .bss.packet [from A7105_SPI.o]
      [0x200000e0 to 0x200000f3] .bss.g_menuStack [from er9x.o]
      [0x200000f4 to 0x20000103] .bss.outputTelemetryBuffer [from crossfire.o]
      [0x20000104 to 0x20000113] .bss.MspSender [from ELRS.o]
      [0x20000114 to 0x2000011f] .bss.i2c_buffer [from drivers.o]
      [0x20000120 to 0x2000012b] .bss.TelemetryReceiver [from ELRS.o]
      [0x2000012c to 0x20000137] .bss.LQCalc [from ELRS.o]
      [0x20000138 to 0x20000141] .bss.voice_uart_send_buf [from BoardI6.o]
      [0x20000142 to 0x20000143] .bss.g_tmr16KHz [from er9x.o]
      [0x20000144 to 0x20000147] .bss.telemetryErrors [from crossfire.o]
      [0x20000148 to 0x2000014b] .bss.hal [from SX127x.o]
      [0x2000014c to 0x2000014f] .bss.g_voice_cb [from BoardI6.o]
      [0x20000150 to 0x20000153] .bss.g_tmr10ms [from drivers.o]
      [0x20000154 to 0x20000157] .bss.g_elrs_update_rate [from crossfire.o]
      [0x20000158 to 0x2000015b] .bss.g_elrs_lag [from crossfire.o]
      [0x2000015c to 0x2000015f] .bss.fieldTimeout [from elrsV2.o]
      [0x20000160 to 0x20000163] .bss.__SEGGER_RTL_heap_globals [from heapops_basic.o (heapops_basic_v6m_little.a)]
      [0x20000164 to 0x20000167] .bss._ZZL7perMainvE7lastTMR [from er9x.o]
      [0x20000168 to 0x2000016b] .bss._ZN9SX127xHal8instanceE [from SX127xHal.o]
      [0x2000016c to 0x2000016f] .bss._ZN12SX127xDriver8instanceE [from SX127x.o]
      [0x20000170 to 0x20000173] .bss._ZL20g_crsf_read_callback [from BoardI6.o]
      [0x20000174 to 0x20000177] .bss._ZL10fieldPopup [from elrsV2.o]
      [0x20000178 to 0x2000017b] .bss.SPI_BufferPtr [from BoardI6.o]
      [0x2000017c to 0x2000017f] .bss.ID [from A7105_SPI.o]
      [0x20000180 to 0x20000183] .bss.AlertMessage [from er9x.o]
      [0x20000184 to 0x20000385] .bss.ota_crc [from ELRS.o]
      [0x20000386 to 0x20000415] .bss.pulses2MHz [from pulses.o]
      [0x20000416 to 0x2000047f] .bss.Xmem [from menus.o]
      [0x20000480 to 0x200004a3] .bss.Voice [from audio.o]
      [0x200004a4 to 0x200004c3] .bss.s_timer [from menus.o]
      [0x200004c4 to 0x200004e3] .bss.g_chans512 [from menus.o]
      [0x200004e4 to 0x20000503] .bss.Ex_chans [from menus.o]
      [0x20000504 to 0x2000051b] .bss.CsTimer [from er9x.o]
      [0x2000051c to 0x2000052b] .bss.s_anaFilt [from er9x.o]
      [0x2000052c to 0x2000053b] .bss.g_ppmIns [from er9x.o]
      [0x2000053c to 0x2000054b] .bss.Nvs_timer [from er9x.o]
      [0x2000054c to 0x20000559] .bss.calibratedStick [from menus.o]
      [0x2000055a to 0x20000563] .bss.theWriteFile [from pers.o]
      [0x20000564 to 0x2000056d] .bss.theFile [from pers.o]
      [0x2000056e to 0x20000577] .bss.P1values [from er9x.o]
      [0x20000578 to 0x2000057f] .bss.TimeGlobals [from menus.o]
      [0x20000580 to 0x20000585] .bss.Inactivity [from er9x.o]
      [0x20000586 to 0x20000587] .bss.g_latency [from menus.o]
      [0x20000588 to 0x20000589] .bss.g_LightOffCounter [from er9x.o]
      [0x2000058a to 0x2000058b] .bss._ZZ5tracevE6s_time [from menus.o]
      [0x2000058c to 0x2000058d] .bss._ZZ13ActionAFHDS2AE14packet_counter [from AFHDS2A_a7105.o]
      [0x2000058e to 0x2000058f] .bss._ZZ12mainSequencevE5timer [from er9x.o]
      [0x20000590 to 0x20000591] .bss._ZL17s_eeDirtyTime10ms [from pers.o]
      [0x20000592 to 0x20000593] .bss.SPI_Size [from BoardI6.o]
      [0x20000594 to 0x20000595] .bss.GAltOffset [from AFHDS2A_a7105.o]
      [0x20000596 to 0x20000597] .bss.B3_comp_value [from pulses.o]
      [0x20000598 to 0x20000599] .bss.AltOffset [from AFHDS2A_a7105.o]
      [0x2000059a to 0x20000983] .bss.g_model [from er9x.o]
      [0x20000984 to 0x20000a83] .bss._ZL6fields [from elrsV2.o]
      [0x20000a84 to 0x20000b03] .bss.telemetryRxBuffer [from crossfire.o]
      [0x20000b04 to 0x20000b79] .bss.g_eeGeneral [from er9x.o]
      [0x20000b7a to 0x20000bb1] .bss.audio [from er9x.o]
      [0x20000bb2 to 0x20000bde] .bss.keys [from drivers.o]
      [0x20000bdf to 0x20000c09] .bss.AFHDS2A_tel_res_cnt [from AFHDS2A_a7105.o]
      [0x20000c0a to 0x20000c19] .bss.hopping_frequency [from A7105_SPI.o]
      [0x20000c1a to 0x20000c25] .bss.Last_switch [from er9x.o]
      [0x20000c26 to 0x20000c2f] .bss.voice_uart_recv_buf [from BoardI6.o]
      [0x20000c30 to 0x20000c39] .bss.TimerConfig [from er9x.o]
      [0x20000c3a to 0x20000c42] .bss.Rotary [from er9x.o]
      [0x20000c43 to 0x20000c4a] .bss._ZL9deviceIds [from elrsV2.o]
      [0x20000c4b to 0x20000c52] .bss.Nvs_state [from er9x.o]
      [0x20000c53 to 0x20000c56] .bss.phyStick [from menus.o]
      [0x20000c57 to 0x20000c5a] .bss.PopupData [from menus.o]
      [0x20000c5b to 0x20000c5d] .bss.MenuControl [from menus.o]
      [0x20000c5e to 0x20000c5e] .bss.voice_rx_idx [from BoardI6.o]
      [0x20000c5f to 0x20000c5f] .bss.valuesBufferOffset [from elrsV2.o]
      [0x20000c60 to 0x20000c60] .bss.tick10ms [from er9x.o]
      [0x20000c61 to 0x20000c61] .bss.telemetryRxBufferCount [from crossfire.o]
      [0x20000c62 to 0x20000c62] .bss.sysFlags [from er9x.o]
      [0x20000c63 to 0x20000c63] .bss.stickMoved [from er9x.o]
      [0x20000c64 to 0x20000c64] .bss.statusComplete [from elrsV2.o]
      [0x20000c65 to 0x20000c65] .bss.serialDat0 [from pulses.o]
      [0x20000c66 to 0x20000c66] .bss.scroll_disabled [from menus.o]
      [0x20000c67 to 0x20000c67] .bss.scrollUD [from menus.o]
      [0x20000c68 to 0x20000c68] .bss.scrollLR [from menus.o]
      [0x20000c69 to 0x20000c69] .bss.s_pgOfs [from menus.o]
      [0x20000c6a to 0x20000c6a] .bss.s_noHi [from menus.o]
      [0x20000c6b to 0x20000c6b] .bss.s_moveMode [from menus.o]
      [0x20000c6c to 0x20000c6c] .bss.s_mixMaxSel [from menus.o]
      [0x20000c6d to 0x20000c6d] .bss.s_evt [from drivers.o]
      [0x20000c6e to 0x20000c6e] .bss.s_editing [from menus.o]
      [0x20000c6f to 0x20000c6f] .bss.s_editMode [from menus.o]
      [0x20000c70 to 0x20000c70] .bss.reloadFolder [from elrsV2.o]
      [0x20000c71 to 0x20000c71] .bss.pxxFlag [from pulses.o]
      [0x20000c72 to 0x20000c72] .bss.protocol_flags [from A7105_SPI.o]
      [0x20000c73 to 0x20000c73] .bss.ppmInAvailable [from er9x.o]
      [0x20000c74 to 0x20000c74] .bss.plotType [from lcd.o]
      [0x20000c75 to 0x20000c75] .bss.pageOffset [from elrsV2.o]
      [0x20000c76 to 0x20000c76] .bss.packet_count [from A7105_SPI.o]
      [0x20000c77 to 0x20000c77] .bss.outputTelemetryBufferTrigger [from crossfire.o]
      [0x20000c78 to 0x20000c78] .bss.outputTelemetryBufferSize [from crossfire.o]
      [0x20000c79 to 0x20000c79] .bss.namesBufferOffset [from elrsV2.o]
      [0x20000c7a to 0x20000c7a] .bss.mixToDelete [from menus.o]
      [0x20000c7b to 0x20000c7b] .bss.hopping_frequency_no [from A7105_SPI.o]
      [0x20000c7c to 0x20000c7c] .bss.heartbeat [from pulses.o]
      [0x20000c7d to 0x20000c7d] .bss.g_vbat100mV [from er9x.o]
      [0x20000c7e to 0x20000c7e] .bss.g_posHorz [from menus.o]
      [0x20000c7f to 0x20000c7f] .bss.g_menuStackPtr [from er9x.o]
      [0x20000c80 to 0x20000c80] .bss.g_blinkTmr10ms [from drivers.o]
      [0x20000c81 to 0x20000c81] .bss.folderAccess [from elrsV2.o]
      [0x20000c82 to 0x20000c82] .bss.fields_count [from elrsV2.o]
      [0x20000c83 to 0x20000c83] .bss.fieldsLen [from elrsV2.o]
      [0x20000c84 to 0x20000c84] .bss.fieldDataLen [from elrsV2.o]
      [0x20000c85 to 0x20000c85] .bss.fieldChunk [from elrsV2.o]
      [0x20000c86 to 0x20000c86] .bss.edit [from elrsV2.o]
      [0x20000c87 to 0x20000c87] .bss.devicesLen [from elrsV2.o]
      [0x20000c88 to 0x20000c88] .bss.deviceIsELRS_TX [from elrsV2.o]
      [0x20000c89 to 0x20000c89] .bss.bpanaCenter [from menus.o]
      [0x20000c8a to 0x20000c8a] .bss.bind_phase [from A7105_SPI.o]
      [0x20000c8b to 0x20000c8b] .bss.allParamsLoaded [from elrsV2.o]
      [0x20000c8c to 0x20000c8c] .bss._ZZN7MState213check_columnsEhhE6lateUp [from menus.o]
      [0x20000c8d to 0x20000c8d] .bss._ZZN10audioQueue6driverEvE11toneCounter [from er9x.o]
      [0x20000c8e to 0x20000c8e] .bss._ZZL7perMainvE8repeater [from er9x.o]
      [0x20000c8f to 0x20000c8f] .bss._ZZL7perMainvE8alertKey [from er9x.o]
      [0x20000c90 to 0x20000c90] .bss._ZZL7perMainvE10s_batCheck [from er9x.o]
      [0x20000c91 to 0x20000c91] .bss._ZZ9menuProc0hE10trimSwLock [from menus.o]
      [0x20000c92 to 0x20000c92] .bss._ZZ7per10msvE7current [from drivers.o]
      [0x20000c93 to 0x20000c93] .bss._ZZ6perOutPshE6sticky [from menus.o]
      [0x20000c94 to 0x20000c94] .bss._ZZ21check_backlight_voicevE7tmr10ms [from er9x.o]
      [0x20000c95 to 0x20000c95] .bss._ZZ19menuProcModelSelecthE7mstate2 [from menus.o]
      [0x20000c96 to 0x20000c96] .bss._ZZ19menuProcModelSelecthE12sel_editMode [from menus.o]
      [0x20000c97 to 0x20000c97] .bss._ZZ18menuProcVoiceAlarmhE7mstate2 [from menus.o]
      [0x20000c98 to 0x20000c98] .bss._ZZ18menuProcModelIndexhE6mstate [from menus.o]
      [0x20000c99 to 0x20000c99] .bss._ZZ17menuProcTelemetryhE7mstate2 [from menus.o]
      [0x20000c9a to 0x20000c9a] .bss._ZZ16menuProcVoiceOnehE7mstate2 [from menus.o]
      [0x20000c9b to 0x20000c9b] .bss._ZZ16menuProcProtocolhE7mstate2 [from menus.o]
      [0x20000c9c to 0x20000c9c] .bss._ZZ16menuProcCurveOnehE7mstate2 [from menus.o]
      [0x20000c9d to 0x20000c9d] .bss._ZZ16menuProcCurveOnehE7dfltCrv [from menus.o]
      [0x20000c9e to 0x20000c9e] .bss._ZZ15menuSetFailsafehE7mstate2 [from menus.o]
      [0x20000c9f to 0x20000c9f] .bss._ZZ15menuProcGlobalshE7mstate2 [from menus.o]
      [0x20000ca0 to 0x20000ca0] .bss._ZZ15menuModelPhaseshE7mstate2 [from menus.o]
      [0x20000ca1 to 0x20000ca1] .bss._ZZ15A7105_AntSwitchvE2sw [from A7105_SPI.o]
      [0x20000ca2 to 0x20000ca2] .bss._ZZ14menuProcMixOnehE7mstate2 [from menus.o]
      [0x20000ca3 to 0x20000ca3] .bss._ZZ13menuRangeBindhE5timer [from menus.o]
      [0x20000ca4 to 0x20000ca4] .bss._ZZ13menuProcIndexhE6mstate [from menus.o]
      [0x20000ca5 to 0x20000ca5] .bss._ZZ13menuProcCurvehE7mstate2 [from menus.o]
      [0x20000ca6 to 0x20000ca6] .bss._ZZ13ActionAFHDS2AE11packet_type [from AFHDS2A_a7105.o]
      [0x20000ca7 to 0x20000ca7] .bss._ZZ12menuScaleOnehE7mstate2 [from menus.o]
      [0x20000ca8 to 0x20000ca8] .bss._ZZ12menuPhaseOnehE7mstate2 [from menus.o]
      [0x20000ca9 to 0x20000ca9] .bss._ZZ11perOutPhasePshE9lastPhase [from menus.o]
      [0x20000caa to 0x20000caa] .bss._ZZ11menuRXSetuphE7mstate2 [from menus.o]
      [0x20000cab to 0x20000cab] .bss._ZZ11menuProcMixhE7mstate2 [from menus.o]
      [0x20000cac to 0x20000cac] .bss._ZL9s_currIdx [from menus.o]
      [0x20000cad to 0x20000cad] .bss._ZL7Columns [from menus.o]
      [0x20000cae to 0x20000cae] .bss._ZL14wait_fin_count [from audio.o]
      [0x20000caf to 0x20000caf] .bss._ZL14inputs_subview [from menus.o]
      [0x20000cb0 to 0x20000cb0] .bss._ZL13s_eeLongTimer [from pers.o]
      [0x20000cb1 to 0x20000cb1] .bss._ZL13LongMenuTimer [from er9x.o]
      [0x20000cb2 to 0x20000cb2] .bss._ZL12s_moveMixIdx [from menus.o]
      [0x20000cb3 to 0x20000cb3] .bss._ZL12s_eeDirtyMsk [from pers.o]
      [0x20000cb4 to 0x20000cb4] .bss._ZL12s_currMixIdx [from menus.o]
      [0x20000cb5 to 0x20000cb5] .bss._ZL12s_currDestCh [from menus.o]
      [0x20000cb6 to 0x20000cb6] .bss._ZL11s_curveChan [from menus.o]
      [0x20000cb7 to 0x20000cb7] .bss._ZL11IlinesCount [from menus.o]
      [0x20000cb8 to 0x20000cb8] .bss._ZL10s_expoChan [from menus.o]
      [0x20000cb9 to 0x20000cb9] .bss.ThrottleStickyOn [from menus.o]
      [0x20000cba to 0x20000cba] .bss.Tevent [from er9x.o]
      [0x20000cbb to 0x20000cbb] .bss.SystemOptions [from er9x.o]
      [0x20000cbc to 0x20000cbc] .bss.StickScrollTimer [from er9x.o]
      [0x20000cbd to 0x20000cbd] .bss.StickScrollAllowed [from er9x.o]
      [0x20000cbe to 0x20000cbe] .bss.StepSize [from er9x.o]
      [0x20000cbf to 0x20000cbf] .bss.RotaryState [from menus.o]
      [0x20000cc0 to 0x20000cc0] .bss.RadioState [from A7105_SPI.o]
      [0x20000cc1 to 0x20000cc1] .bss.RadioActive [from pulses.o]
      [0x20000cc2 to 0x20000cc2] .bss.PausePulses [from pulses.o]
      [0x20000cc3 to 0x20000cc3] .bss.Main_running [from er9x.o]
      [0x20000cc4 to 0x20000cc4] .bss.M_longMenuTimer [from menus.o]
      [0x20000cc5 to 0x20000cc5] .bss.Lcd_lastPos [from lcd.o]
      [0x20000cc6 to 0x20000cc6] .bss.LcdLock [from lcd.o]
      [0x20000cc7 to 0x20000cc7] .bss.InverseBlink [from menus.o]
      [0x20000cc8 to 0x20000cc8] .bss.EnterMenu [from er9x.o]
      [0x20000cc9 to 0x20000cc9] .bss.EepromActive [from lcd.o]
      [0x20000cca to 0x20000cca] .bss.Ee_lock [from pers.o]
      [0x20000ccb to 0x20000ccb] .bss.EditType [from menus.o]
      [0x20000ccc to 0x20000ccc] .bss.EditColumns [from menus.o]
      [0x20000ccd to 0x20000ccd] .bss.DupSub [from menus.o]
      [0x20000cce to 0x20000cce] .bss.DupIfNonzero [from menus.o]
      [0x20000ccf to 0x20000ccf] .bss.Current_protocol [from pulses.o]
      [0x20000cd0 to 0x20000cd0] .bss.CurrentVolume [from er9x.o]
      [0x20000cd1 to 0x20000cd1] .bss.CurrentPhase [from menus.o]
      [0x20000cd2 to 0x20000cd2] .bss.CalcScaleNest [from menus.o]
  Initialize by copy:
      [0x20000cd3 to 0x20000cd3] .data.prev_power [from A7105_SPI.o]
      [0x20000cd4 to 0x20000cd7] .data.devicesRefreshTimeout [from elrsV2.o]
      [0x20000cd8 to 0x20000cdb] .data._ZZL24AFHDS2A_update_telemetryvE4Dacc [from AFHDS2A_a7105.o]
      [0x20000cdc to 0x20000cdf] .data._ZZ21ISR_TIMER1_COMPA_vectE8pulsePtr [from pulses.o]
      [0x20000ce0 to 0x20000ce1] .data._ZZ22A7105_AdjustLOBaseFreqvE10old_offset [from A7105_SPI.o]
      [0x20000ce2 to 0x20000ceb] .data.play_cmd_buf [from audio.o]
      [0x20000cec to 0x20000cef] .data.AlarmControl [from er9x.o]
      [0x20000cf0 to 0x20000cf0] .data.otherDevicesId [from elrsV2.o]
      [0x20000cf1 to 0x20000cf1] .data.lineIndex [from elrsV2.o]
      [0x20000cf2 to 0x20000cf2] .data.handsetId [from elrsV2.o]
      [0x20000cf3 to 0x20000cf3] .data.fieldId [from elrsV2.o]
      [0x20000cf4 to 0x20000cf4] .data.expectedChunks [from elrsV2.o]
      [0x20000cf5 to 0x20000cf5] .data.deviceId [from elrsV2.o]
      [0x20000cf6 to 0x20000cf6] .data.backButtonId [from elrsV2.o]
  Initialize by lzss:
  Initialize by packbits:
  Initialize by zpak:
  Including call to __SEGGER_init_heap in initialization table as selectors have nonzero size
  Including call to __SEGGER_init_ctors in initialization table as selectors have nonzero size
  Short-circuit initialization table is supported by startup code
  Find and place additional sections required by initialization table
      Defining any required ES block symbols
      
      Selecting SEGGER_crtinit_v6m_little.o to define __SEGGER_init_ctors
          Definition:     __SEGGER_init_ctors
          Pushing section .segger.init.__SEGGER_init_ctors to worklist [originates from symbol __SEGGER_init_ctors]
      
      Processing section: .segger.init.__SEGGER_init_ctors from SEGGER_crtinit_v6m_little.o
          Load REL relocations for .segger.init.__SEGGER_init_ctors (SEGGER_crtinit_v6m_little.o)
          Reference:      __ctors_start__
          Reference:      __ctors_end__
      
      Selecting [ Linker created ] to define __SEGGER_init_table__
          Definition:     __SEGGER_init_table__
          Pushing section .segger.init.table to worklist [originates from symbol __SEGGER_init_table__]
      
      Processing section: .segger.init.table from [ Linker created ]
          Reference:      __SEGGER_init_zero
          Reference:      __SEGGER_init_copy
          Local section:  .segger.init.data from [ Linker created ] using relocation R_ARM_ABS32
          Reference:      __SEGGER_init_done
      
      Processing section: .segger.init.data from [ Linker created ]
      
      Selecting SEGGER_crtinit_v6m_little.o to define __SEGGER_init_copy
          Definition:     __SEGGER_init_copy
          Pushing section .segger.init.__SEGGER_init_copy to worklist [originates from symbol __SEGGER_init_copy]
      
      Processing section: .segger.init.__SEGGER_init_copy from SEGGER_crtinit_v6m_little.o
      
      Selecting SEGGER_THUMB_Startup.o to define __SEGGER_init_done
          Definition:     __SEGGER_init_done
      
      Selecting SEGGER_crtinit_v6m_little.o to define __SEGGER_init_zero
          Definition:     __SEGGER_init_zero
          Pushing section .segger.init.__SEGGER_init_zero to worklist [originates from symbol __SEGGER_init_zero]
      
      Processing section: .segger.init.__SEGGER_init_zero from SEGGER_crtinit_v6m_little.o
      
      Selecting [ Linker created ] to define __heap_end__
          Definition:     __heap_end__
          Pushing section [ Linker absolute ] to worklist [originates from symbol __heap_end__]
      
      Selecting [ Linker created ] to define __heap_start__
          Definition:     __heap_start__
      
      Selecting [ Linker created ] to define __stack_end__
          Definition:     __stack_end__
      Defining any required ES block symbols
      Select inputs for block vectors
      Select inputs for block vectors_ram
      Select inputs for inline block <#1> at line 61, col 85
      Select inputs for block ctors
      Select inputs for inline block <#2> at line 62, col 85
      Select inputs for block dtors
      Select inputs for block exidx
      Select inputs for block tbss
      Select inputs for block tdata
      Select inputs for block tls
      Select inputs for block tdata_load
      Select inputs for block heap
      Select inputs for block stack
      Select inputs for block cfm
      Select inputs for 'place at start' block <#5> at line 97, col 45
      Select inputs for 'place at start' block <#6> at line 98, col 45
      Select inputs for 'place at start' block <#10> at line 119, col 45
      Select inputs for 'place at end' block <#14> at line 129, col 45
      Select inputs for 'place in' block <#3> at line 90, col 44
      Select inputs for 'place in' block <#4> at line 91, col 44
      Select inputs for 'place in' block <#7> at line 99, col 45
          Select section .rodata.block.tdata.copy ([.rodata.block.tdata.copy]) [size 0] from [ Linker created ] using wildcard
          Select section .segger.init.__SEGGER_init_zero (__SEGGER_init_zero) [size 18] from SEGGER_crtinit_v6m_little.o using wildcard
          Select section .segger.init.__SEGGER_init_copy (__SEGGER_init_copy) [size 20] from SEGGER_crtinit_v6m_little.o using wildcard
          Select section .segger.init.__SEGGER_init_ctors (__SEGGER_init_ctors) [size 32] from SEGGER_crtinit_v6m_little.o using wildcard
          Select section .segger.init.table (__SEGGER_init_table__) [size 40] from [ Linker created ] using wildcard
          Select section .segger.init.data (__SEGGER_init_data__) [size 36] from [ Linker created ] using wildcard
      Select inputs for 'place in' block <#8> at line 108, col 45
      Select inputs for 'place in' block <#9> at line 115, col 44
      Select inputs for 'place in' block <#11> at line 120, col 45
      Select inputs for 'place in' block <#12> at line 124, col 45
          Select section .bss.block.heap ([.bss.block.heap]) [size 256] from [ Linker created ] using wildcard
          Select section .bss.block.stack ([.bss.block.stack]) [size 256] from [ Linker created ] using wildcard
      Select inputs for 'place in' block <#13> at line 128, col 45
      Executing place in [0x000003fe to 0x000003ff] + [0x0000fb9d to 0x0000fb9f] + [0x0000fbac to 0x0000ffff] (636 inputs selected)
          Candidate regions: [0x00000000 to 0x0000ffff]
          Allocate [0x0000fbac to 0x0000fbd3] to section .segger.init.table from [ Linker created ]
          Allocate [0x0000fbd4 to 0x0000fbf7] to section .segger.init.data from [ Linker created ]
          Allocate [0x0000fbf8 to 0x0000fc17] to section .segger.init.__SEGGER_init_ctors from SEGGER_crtinit_v6m_little.o
          Allocate [0x0000fc18 to 0x0000fc2b] to section .segger.init.__SEGGER_init_copy from SEGGER_crtinit_v6m_little.o
          Allocate [0x0000fc2c to 0x0000fc3d] to section .segger.init.__SEGGER_init_zero from SEGGER_crtinit_v6m_little.o
      Executing place in [0x000003fe to 0x000003ff] + [0x0000fb9d to 0x0000fb9f] + [0x0000fc3e to 0x0000ffff] (1 inputs selected)
          Candidate regions: [0x00000000 to 0x0000ffff]
      Executing place in [0x20000cf7 to 0x20000cf7] + [0x20000df8 to 0x200016ff] (1 inputs selected)
          Candidate regions: [0x1ffff800 to 0x200017ff]
      Executing place in [0x20000cf7 to 0x20000cf7] + [0x20000df8 to 0x200016ff] (213 inputs selected)
          Candidate regions: [0x1ffff800 to 0x200017ff]
      Executing place in [0x20000cf7 to 0x20000cf7] + [0x20000df8 to 0x200016ff] (1 inputs selected)
          Candidate regions: [0x1ffff800 to 0x200017ff]


***************************************************************************************
***                                                                                 ***
***                                 Pad sections #2                                 ***
***                                                                                 ***
***************************************************************************************

  Padding sections for section alignment


***************************************************************************************
***                                                                                 ***
***                               Make block symbols                                ***
***                                                                                 ***
***************************************************************************************

  Creating symbols for block vectors
  Creating symbols for block vectors_ram
  Creating symbols for block ctors
      Define global symbol __ctors_start__ = 0x0000fba0
      Define global symbol __ctors_end__ = 0x0000fbac
  Creating symbols for block dtors
  Creating symbols for block exidx
  Creating symbols for block tbss
  Creating symbols for block tdata
  Creating symbols for block tls
  Creating symbols for block tdata_load
  Creating symbols for block heap
  Creating symbols for block stack
  Creating symbols for block cfm


***************************************************************************************
***                                                                                 ***
***                                 Relocate image                                  ***
***                                                                                 ***
***************************************************************************************

  Relocating [.rodata.block.tdata.copy]
  Relocating SystemInit
  Relocating lcdSetRefVolt(unsigned char)
  Relocating lcdSendCtl(unsigned char)
  Relocating lcdSetContrast()
  Relocating lcd_clear()
  Relocating lcd_init()
  Relocating lcd_putcAtt(unsigned char, unsigned char, char, unsigned char)
  Relocating lcd_putsAtt(unsigned char, unsigned char, char const*, unsigned char)
  Relocating lcd_putsnAtt(unsigned char, unsigned char, char const*, unsigned char, unsigned char)
  Relocating lcd_putsAttIdx(unsigned char, unsigned char, char const*, unsigned char, unsigned char)
  Relocating lcd_putc(unsigned char, unsigned char, char)
  Relocating lcd_puts_Pleft(unsigned char, char const*)
  Relocating lcd_puts_Pskip(unsigned char, char const*, unsigned char)
  Relocating lcd_puts_P(unsigned char, unsigned char, char const*)
  Relocating lcd_putsn_P(unsigned char, unsigned char, char const*, unsigned char)
  Relocating lcd_outhex4(unsigned char, unsigned char, unsigned short)
  Relocating lcd_write_bits(unsigned char*, unsigned char)
  Relocating lcd_plot(unsigned char, unsigned char)
  Relocating lcd_vline(unsigned char, unsigned char, signed char)
  Relocating lcd_hlineStip(unsigned char, unsigned char, signed char, unsigned char)
  Relocating lcd_hline(unsigned char, unsigned char, signed char)
  Relocating lcd_2_digits(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating lcd_outdezNAtt(unsigned char, unsigned char, int, unsigned char, signed char, unsigned char)
  Relocating lcd_outdezAtt(unsigned char, unsigned char, short, unsigned char)
  Relocating lcd_outdez(unsigned char, unsigned char, short)
  Relocating lcd_char_inverse(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating lcd_rect_xor(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating lcd_rect(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating lcd_hbar(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating refreshDiplay()
  Relocating lcd_img(unsigned char, unsigned char, unsigned char const*, unsigned char)
  Relocating putsTime(unsigned char, unsigned char, short, unsigned char, unsigned char)
  Relocating putsVolts(unsigned char, unsigned char, short, unsigned char)
  Relocating putsVBat(unsigned char, unsigned char, unsigned char)
  Relocating LcdLock
  Relocating Lcd_lastPos
  Relocating DisplayBuf
  Relocating EepromActive
  Relocating Lcdinit
  Relocating font
  Relocating font_dblsize
  Relocating plotType
  Relocating _bitmask
  Relocating HW_Init
  Relocating mDelay
  Relocating getADC_osmp
  Relocating backlight_on
  Relocating backlight_off
  Relocating rd_1
  Relocating rd_0
  Relocating cs_0
  Relocating rw_0
  Relocating rs_1
  Relocating rs_0
  Relocating rst_1
  Relocating rst_0
  Relocating PINB
  Relocating PIND
  Relocating PINE
  Relocating PING
  Relocating LCD_DATA
  Relocating Buzzer_SetVal
  Relocating Buzzer_ClrVal
  Relocating SPI_RADIO_SendBlock
  Relocating SPI_RADIO_ReceiveBlock
  Relocating a7105_csn_on
  Relocating a7105_csn_off
  Relocating RF0_SetVal
  Relocating RF0_ClrVal
  Relocating RF1_SetVal
  Relocating RF1_ClrVal
  Relocating TX_RX_PutVal
  Relocating EnableGIO
  Relocating DisableGIO
  Relocating i2c_master
  Relocating GetPPMOutState
  Relocating SetPPMTimCompare
  Relocating GetPPMTimCompare
  Relocating GetPPMTimCompareInterruptFlag
  Relocating ClearPPMTimCompareInterruptFlag
  Relocating EnablePPMTim
  Relocating EnablePPMOut
  Relocating DisablePPMOut
  Relocating EnablePRTTim
  Relocating DisablePRTTim
  Relocating SetPRTTimPeriod
  Relocating GetChipID
  Relocating PIT_IRQHandler
  Relocating TPM1_IRQHandler
  Relocating SPI0_IRQHandler
  Relocating PORTC_PORTD_IRQHandler
  Relocating TPM0_IRQHandler
  Relocating TPM2_IRQHandler
  Relocating setup_crsf_serial_port
  Relocating uart_clear_error()
  Relocating crsf_send_data
  Relocating UART0_IRQHandler
  Relocating shutdown_crsf_serial_port
  Relocating serialVoiceInit(void (*)(unsigned char*, unsigned char))
  Relocating sendSerialVoiceData(unsigned char*, unsigned int)
  Relocating UART2_IRQHandler
  Relocating ChannelToPin
  Relocating AFHDS2A_A7105_regs
  Relocating SPI_BufferPtr
  Relocating SPI_Size
  Relocating g_crsf_read_callback
  Relocating g_voice_cb
  Relocating voice_uart_recv_buf
  Relocating voice_rx_idx
  Relocating voice_uart_send_buf
  Relocating voice_tx_idx
  Relocating modeFixValue(unsigned char)
  Relocating get_tmr10ms()
  Relocating CS_STATE(unsigned char)
  Relocating mixaddress(unsigned char)
  Relocating throttleReversed()
  Relocating putsChnRaw(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating putsChn(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating putsMomentDrSwitches(unsigned char, unsigned char, signed char, unsigned char)
  Relocating putsDrSwitches(unsigned char, unsigned char, signed char, unsigned char)
  Relocating putsTmrMode(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating putsTelemValue(unsigned char, unsigned char, int, unsigned char, unsigned char)
  Relocating getValue(unsigned char)
  Relocating getSwitch00(signed char)
  Relocating getSwitch(signed char, bool, unsigned char)
  Relocating calc100toRESX(signed char)
  Relocating check_backlight_voice()
  Relocating stickMoveValue()
  Relocating anaIn(unsigned char)
  Relocating almess(char const*, unsigned char)
  Relocating message(char const*)
  Relocating alert(char const*)
  Relocating alertx(char const*, bool)
  Relocating clearKeyEvents()
  Relocating keyDown()
  Relocating checkThrottlePosition()
  Relocating checkTHR()
  Relocating putWarnSwitch(unsigned char, unsigned char)
  Relocating getCurrentSwitchStates()
  Relocating checkSwitches()
  Relocating getFlightPhase()
  Relocating getRawTrimValue(unsigned char, unsigned char)
  Relocating getTrimFlightPhase(unsigned char, unsigned char)
  Relocating getTrimValue(unsigned char, unsigned char)
  Relocating setTrimValue(unsigned char, unsigned char, short)
  Relocating checkIncDec16(short, short, short, unsigned char)
  Relocating checkIncDec(signed char, signed char, signed char, unsigned char)
  Relocating checkIncDec_i8(signed char, signed char, signed char)
  Relocating checkIncDec_0(signed char, signed char)
  Relocating checkIncDec_u0(short, unsigned char)
  Relocating popMenu(bool)
  Relocating chainMenu(void (*)(unsigned char))
  Relocating pushMenu(void (*)(unsigned char))
  Relocating backlightKey()
  Relocating doBackLightVoice(unsigned char)
  Relocating calcStickScroll(unsigned char)
  Relocating getGvarSourceValue(unsigned char)
  Relocating ISR_TIMER2_OVF_vect
  Relocating audioQueue::driver()
  Relocating ISR_TIMER0_COMP_vect
  Relocating mainER()
  Relocating mainSequence()
  Relocating doVoiceAlarmSource(t_voiceAlarm*)
  Relocating procOneVoiceAlarm(t_voiceAlarm*, unsigned char)
  Relocating processVoiceAlarms()
  Relocating calc1000toRESX(short)
  Relocating REG100_100(signed char)
  Relocating REG(signed char, signed char, signed char)
  Relocating IS_EXPO_THROTTLE(unsigned char)
  Relocating _GLOBAL__sub_I_er9x.cpp
  Relocating Last_switch
  Relocating g_eeGeneral
  Relocating g_model
  Relocating AlertMessage
  Relocating Main_running
  Relocating Nvs_state
  Relocating Nvs_timer
  Relocating CurrentVolume
  Relocating ppmInAvailable
  Relocating Rotary
  Relocating Tevent
  Relocating TimerConfig
  Relocating bchout_ar
  Relocating audio
  Relocating sysFlags
  Relocating SystemOptions
  Relocating AlarmControl
  Relocating CsTimer
  Relocating Str_Switches
  Relocating Str_OFF
  Relocating Str_ON
  Relocating modi12x3
  Relocating stickScramble
  Relocating csTypeTable
  Relocating Str_Hyphens
  Relocating [.rodata..L.str]
  Relocating [.rodata..L.str.1]
  Relocating g_ppmIns
  Relocating check_backlight_voice()::tmr10ms
  Relocating g_LightOffCounter
  Relocating [.rodata..L.str.2]
  Relocating [.rodata..L.str.3]
  Relocating Str_Alert
  Relocating [.rodata..L.str.4]
  Relocating [.rodata..L.str.5]
  Relocating [.rodata..L.str.6]
  Relocating StickScrollAllowed
  Relocating StickScrollTimer
  Relocating g_menuStack
  Relocating g_menuStackPtr
  Relocating EnterMenu
  Relocating P1values
  Relocating StepSize
  Relocating LongMenuTimer
  Relocating [.rodata..L.str.7]
  Relocating g_vbat100mV
  Relocating tick10ms
  Relocating stickMoved
  Relocating rate
  Relocating Inactivity
  Relocating s_anaFilt
  Relocating g_tmr16KHz
  Relocating tmrEEPROM
  Relocating [.rodata..L.str.8]
  Relocating mainSequence()::timer
  Relocating audioQueue::driver()::toneCounter
  Relocating [.rodata..L.str.9]
  Relocating [.rodata..L.str.10]
  Relocating [.rodata..L.str.11]
  Relocating [.rodata..L.str.12]
  Relocating [.rodata..L.str.13]
  Relocating perMain()::lastTMR
  Relocating perMain()::repeater
  Relocating perMain()::alertKey
  Relocating perMain()::s_batCheck
  Relocating [.init_array]
  Relocating A7105_AntSwitch()
  Relocating A7105_SetTxRxMode(unsigned char)
  Relocating A7105_Strobe(unsigned char)
  Relocating A7105_WriteReg(unsigned char, unsigned char)
  Relocating A7105_WriteData(unsigned char, unsigned char)
  Relocating A7105_ReadData(unsigned char)
  Relocating A7105_ReadReg(unsigned char)
  Relocating A7105_Reset()
  Relocating A7105_WriteID(unsigned int)
  Relocating A7105_SetPower()
  Relocating A7105_AdjustLOBaseFreq()
  Relocating A7105_Sleep()
  Relocating A7105_Init()
  Relocating convert_failsafe_ppm(unsigned char)
  Relocating RadioState
  Relocating protocol_flags
  Relocating prev_power
  Relocating packet
  Relocating ID
  Relocating packet_count
  Relocating bind_phase
  Relocating hopping_frequency
  Relocating hopping_frequency_no
  Relocating A7105_AntSwitch()::sw
  Relocating A7105_AdjustLOBaseFreq()::old_offset
  Relocating AFHDS2A_build_packet(unsigned char)
  Relocating ActionAFHDS2A
  Relocating initAFHDS2A
  Relocating processFlySkySensor(unsigned char const*, unsigned char)
  Relocating AFHDS2A_tel
  Relocating AFHDS2A_tel_data
  Relocating AFHDS2A_tel_status
  Relocating AFHDS2A_tel_res_cnt
  Relocating AltOffset
  Relocating GAltOffset
  Relocating ActionAFHDS2A::packet_type
  Relocating ActionAFHDS2A::packet_counter
  Relocating AFHDS2A_update_telemetry()::Dacc
  Relocating DoSum(unsigned char*, unsigned char)
  Relocating Uart_SendCMD(unsigned char, unsigned char, unsigned short)
  Relocating audioQueue::busy()
  Relocating audioQueue::heartbeat()
  Relocating audioQueue::play(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating audioQueue::getToneLength(unsigned char)
  Relocating audioQueue::event(unsigned char, unsigned char)
  Relocating audioDefevent(unsigned char)
  Relocating audioEvent(unsigned char, unsigned short)
  Relocating audioVoiceDefevent(unsigned char, unsigned char)
  Relocating putVoiceQueue(unsigned char)
  Relocating voice_numeric(short, unsigned char, unsigned char)
  Relocating putVoiceQueueUpper(unsigned char)
  Relocating putVoiceQueueLong(unsigned short)
  Relocating setVolume(unsigned char)
  Relocating on_voice_cb(unsigned char*, unsigned char)
  Relocating t_voice::voice_process()
  Relocating play_cmd_buf
  Relocating Voice
  Relocating wait_fin_count
  Relocating ee_waite()
  Relocating eeprom_read_block(void*, void const*, unsigned int)
  Relocating eeprom_write_page_cmp(char const*, unsigned short, unsigned int)
  Relocating eeWriteBlockCmp(void const*, unsigned short, unsigned int)
  Relocating Key::input(bool, EnumKeys)
  Relocating menuPressed()
  Relocating switchPosition(unsigned char)
  Relocating keyState(EnumKeys)
  Relocating pauseEvents(unsigned char)
  Relocating killEvents(unsigned char)
  Relocating per10ms()
  Relocating i2c_buffer
  Relocating s_evt
  Relocating keys
  Relocating g_tmr10ms
  Relocating g_blinkTmr10ms
  Relocating per10ms()::current
  Relocating per10ms()::crossTrim
  Relocating EeFsGetFree()
  Relocating EeFsGetLink(unsigned char)
  Relocating EeFsck()
  Relocating EeFsSetLink(unsigned char, unsigned char)
  Relocating EeFsFlush()
  Relocating EeFsFlushFreelist()
  Relocating EeFsFormat()
  Relocating EeFsOpen()
  Relocating EFile::exists(unsigned char)
  Relocating EFile::swap(unsigned char, unsigned char)
  Relocating EFile::rm(unsigned char)
  Relocating EeFsFree(unsigned char)
  Relocating EFile::size()
  Relocating EFile::openRd(unsigned char)
  Relocating EFile::read(unsigned char*, unsigned short)
  Relocating EFile::readRlc(unsigned char*, unsigned short)
  Relocating EFile::write(unsigned char*, unsigned char)
  Relocating EeFsAlloc()
  Relocating EFile::create(unsigned char, unsigned char, unsigned short)
  Relocating EFile::closeTrunc()
  Relocating EFile::writeRlc(unsigned char, unsigned char, unsigned char*, unsigned short, unsigned char)
  Relocating EeFsRead(unsigned char, unsigned char)
  Relocating eeFs
  Relocating putsAttIdxTelemItems(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating calc_scaler(unsigned char, unsigned char*, unsigned char*)
  Relocating voiceMinutes(short)
  Relocating voice_telem_item(unsigned char)
  Relocating get_telemetry_value(unsigned char)
  Relocating displayTimer(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating putsTelemetryChannel(unsigned char, unsigned char, signed char, int, unsigned char, unsigned char)
  Relocating dispGvar(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating gvarMenuItem(unsigned char, unsigned char, signed char, signed char, signed char, unsigned char)
  Relocating gvarMenuItem125(unsigned char, unsigned char, signed char, unsigned char)
  Relocating get_dr_state(unsigned char)
  Relocating editName(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char)
  Relocating char2idx(char)
  Relocating idx2char(unsigned char)
  Relocating TITLEP(char const*)
  Relocating lcd_xlabel_decimal(unsigned char, unsigned char, unsigned short, unsigned char, char const*)
  Relocating checkIndexed(unsigned char, char const*, unsigned char, unsigned char)
  Relocating hyphinvMenuItem(unsigned char, unsigned char, unsigned char)
  Relocating putsOffDecimal(unsigned char, unsigned char, unsigned short, unsigned char)
  Relocating MState2::check_columns(unsigned char, unsigned char)
  Relocating telltale(unsigned char, signed char, signed char)
  Relocating doMainScreenGrphics()
  Relocating drawFunction(unsigned char, unsigned char)
  Relocating intpol(short, unsigned char)
  Relocating calcExpo(unsigned char, short)
  Relocating drawCurve(unsigned char)
  Relocating curveAddress(unsigned char)
  Relocating menuProcCurveOne(unsigned char)
  Relocating menuProcCurve(unsigned char)
  Relocating evalOffset(signed char)
  Relocating setStickCenter()
  Relocating perOut(short*, unsigned char)
  Relocating displayNext()
  Relocating menuProcTelemetry(unsigned char)
  Relocating put_curve(unsigned char, unsigned char, signed char, unsigned char)
  Relocating scalerDecimal(unsigned char, unsigned char, unsigned char)
  Relocating menuScaleOne(unsigned char)
  Relocating menuProcGlobals(unsigned char)
  Relocating edit_dr_switch(unsigned char, unsigned char, signed char, unsigned char, unsigned char)
  Relocating putsChnOpRaw(unsigned char, unsigned char, t_MixData*, unsigned char)
  Relocating menuProcMixOne(unsigned char)
  Relocating onoffItem(unsigned char, unsigned char, unsigned char)
  Relocating offonItem(unsigned char, unsigned char, unsigned char)
  Relocating onoffMenuItem(unsigned char, unsigned char, char const*, unsigned char)
  Relocating editSlowDelay(unsigned char, unsigned char, unsigned char)
  Relocating menuMixersLimit(unsigned char)
  Relocating menuProcMix(unsigned char)
  Relocating reachMixerCountLimit()
  Relocating yesNoMenuExit(unsigned char, char const*)
  Relocating menuDeleteMix(unsigned char)
  Relocating doPopup(char const*, unsigned char, unsigned char)
  Relocating insertMix(unsigned char, unsigned char)
  Relocating expou(unsigned short, unsigned short)
  Relocating expo(short, short)
  Relocating editExpoVals(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating menuDeleteDupModel(unsigned char)
  Relocating menuProcModelSelect(unsigned char)
  Relocating menuRangeBind(unsigned char)
  Relocating putsTrimMode(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating menuPhaseOne(unsigned char)
  Relocating dispFlightModename(unsigned char, unsigned char, unsigned char)
  Relocating menuModelPhases(unsigned char)
  Relocating menuProcModelIndex(unsigned char)
  Relocating putc_0_1(unsigned char, unsigned char, unsigned char)
  Relocating timer()
  Relocating resetTimer1()
  Relocating resetTimer2()
  Relocating trace()
  Relocating putsTimeNoAtt(unsigned char, unsigned char, short)
  Relocating menuProcStatistic(unsigned char)
  Relocating resetTimern(unsigned char)
  Relocating displayOneSwitch3Pos(unsigned char, unsigned char, unsigned char)
  Relocating displayOneSwitch(unsigned char, unsigned char, unsigned char)
  Relocating switchDisplay(unsigned char, unsigned char)
  Relocating dispSignalQality(unsigned char)
  Relocating menuProc0(unsigned char)
  Relocating menuProcIndex(unsigned char)
  Relocating perOutPhase(short*, unsigned char)
  Relocating scaleAnalog(short, unsigned char)
  Relocating indexProcess(unsigned char, MState2*, unsigned char)
  Relocating displayIndex(char const* const*, unsigned char, unsigned char, unsigned char)
  Relocating offonMenuItem(unsigned char, unsigned char, char const*, unsigned char)
  Relocating displayVoiceRate(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating menuProcVoiceOne(unsigned char)
  Relocating menuProcVoiceAlarm(unsigned char)
  Relocating rangeBindAction(unsigned char, unsigned char)
  Relocating menuRXSetup(unsigned char)
  Relocating menuSetFailsafe(unsigned char)
  Relocating menuProcProtocol(unsigned char)
  Relocating Xmem
  Relocating PopupData
  Relocating MenuControl
  Relocating s_timer
  Relocating RotaryState
  Relocating CalcScaleNest
  Relocating ThrottleStickyOn
  Relocating Str_Chans_Gv
  Relocating Curve_Str
  Relocating phyStick
  Relocating Str_telemItems
  Relocating TelemIndex
  Relocating UnitsVoice
  Relocating UnitsText
  Relocating Str_GV
  Relocating calibratedStick
  Relocating Ex_chans
  Relocating s_pgOfs
  Relocating s_editMode
  Relocating s_editing
  Relocating s_noHi
  Relocating scrollLR
  Relocating scroll_disabled
  Relocating scrollUD
  Relocating InverseBlink
  Relocating EditType
  Relocating EditColumns
  Relocating g_chans512
  Relocating Str_Name
  Relocating [.rodata..L.str]
  Relocating g_posHorz
  Relocating M_longMenuTimer
  Relocating Columns
  Relocating MState2::check_columns(unsigned char, unsigned char)::lateUp
  Relocating s_curveChan
  Relocating s_expoChan
  Relocating menuProcCurveOne(unsigned char)::dfltCrv
  Relocating Str_Curve
  Relocating menuProcCurveOne(unsigned char)::mstate2
  Relocating [.rodata..L.str.1]
  Relocating Str_Curves
  Relocating menuProcCurve(unsigned char)::mstate2
  Relocating [.rodata..L.str.2]
  Relocating CurrentPhase
  Relocating [.rodata..L.str.3]
  Relocating menuProcTelemetry(unsigned char)::mstate2
  Relocating Str_Telemetry
  Relocating [.rodata..L.str.4]
  Relocating [.rodata..L.str.5]
  Relocating menuScaleOne(unsigned char)::mstate2
  Relocating Str_SC
  Relocating s_currIdx
  Relocating [.rodata..L.str.6]
  Relocating UnitsString
  Relocating [.rodata..L.str.7]
  Relocating Str_Globals
  Relocating menuProcGlobals(unsigned char)::mstate2
  Relocating Str_Gv_Source
  Relocating [.rodata..L.str.8]
  Relocating SW_3_IDX
  Relocating [.rodata..L.str.9]
  Relocating s_currMixIdx
  Relocating menuProcMixOne(unsigned char)::mstate2
  Relocating [.rodata..L.str.10]
  Relocating [.rodata..L.str.11]
  Relocating [.rodata..L.str.12]
  Relocating [.rodata..L.str.13]
  Relocating [.rodata..L.str.14]
  Relocating [.rodata..L.str.15]
  Relocating s_mixMaxSel
  Relocating [.rodata..L.str.16]
  Relocating mixToDelete
  Relocating [.rodata..L.str.17]
  Relocating [.rodata..L.str.18]
  Relocating [.rodata..L.str.19]
  Relocating s_moveMode
  Relocating Str_Mixer
  Relocating menuProcMix(unsigned char)::mstate2
  Relocating s_currDestCh
  Relocating [.rodata..L.str.20]
  Relocating s_moveMixIdx
  Relocating s_charTab
  Relocating DupIfNonzero
  Relocating DupSub
  Relocating [.rodata..L.str.21]
  Relocating [.rodata..L.str.22]
  Relocating [.rodata..L.str.23]
  Relocating menuRangeBind(unsigned char)::timer
  Relocating [.rodata..L.str.24]
  Relocating [.rodata..L.str.25]
  Relocating Str_1_RETA
  Relocating [.rodata..L.str.26]
  Relocating menuPhaseOne(unsigned char)::mstate2
  Relocating [.rodata..L.str.27]
  Relocating [.rodata..L.str.28]
  Relocating Str_Modes
  Relocating menuModelPhases(unsigned char)::mstate2
  Relocating [.rodata..L.str.29]
  Relocating menuProcModelSelect(unsigned char)::mstate2
  Relocating [.rodata..L.str.30]
  Relocating [.rodata..L.str.31]
  Relocating menuProcModelSelect(unsigned char)::sel_editMode
  Relocating ModelPopList
  Relocating TimeGlobals
  Relocating trace()::s_time
  Relocating g_latency
  Relocating [.rodata..L.str.32]
  Relocating [.rodata..L.str.33]
  Relocating [.rodata..L.str.34]
  Relocating [.rodata..L.str.35]
  Relocating [.rodata..L.str.38]
  Relocating [.rodata..L.str.39]
  Relocating [.rodata..L.str.40]
  Relocating menuProc0(unsigned char)::trimSwLock
  Relocating inputs_subview
  Relocating [.rodata..L.str.41]
  Relocating menuProc0(unsigned char)::xt
  Relocating [.rodata..L.str.42]
  Relocating [.rodata..L.str.43]
  Relocating [.rodata..L.str.44]
  Relocating Str_Main_Popup
  Relocating bpanaCenter
  Relocating Output
  Relocating Fade
  Relocating perOutPhase(short*, unsigned char)::lastPhase
  Relocating perOut(short*, unsigned char)::sticky
  Relocating menuProcIndex(unsigned char)::mstate
  Relocating IlinesCount
  Relocating menuProcIndex(unsigned char)::n_Strings
  Relocating Str_Display
  Relocating Str_AudioHaptic
  Relocating Str_Alarms
  Relocating Str_General
  Relocating Str_Controls
  Relocating Str_Calibration
  Relocating Str_Trainer
  Relocating Str_Version
  Relocating Str_DiagSwtch
  Relocating Str_DiagAna
  Relocating Str_Hardware
  Relocating [.rodata..L.str.45]
  Relocating [.rodata..L.str.46]
  Relocating [.rodata..L.str.47]
  Relocating [.rodata..L.str.48]
  Relocating [.rodata..L.str.49]
  Relocating [.rodata..L.str.50]
  Relocating Str_minute_Beep
  Relocating [.rodata..L.str.51]
  Relocating sticks
  Relocating [.rodata..L.str.52]
  Relocating [.rodata..L.str.53]
  Relocating Str_Beep_Countdown
  Relocating [.rodata..L.str.54]
  Relocating [.rodata..L.str.55]
  Relocating [.rodata..L.str.56]
  Relocating [.rodata..L.str.57]
  Relocating [.rodata..L.str.58]
  Relocating [.rodata..L.str.59]
  Relocating [.rodata..L.str.60]
  Relocating [.rodata..L.str.61]
  Relocating [.rodata..L.str.62]
  Relocating [.rodata..L.str.63]
  Relocating [.rodata..L.str.64]
  Relocating [.rodata..L.str.65]
  Relocating [.rodata..L.str.66]
  Relocating [.rodata..L.str.67]
  Relocating [.rodata..L.str.68]
  Relocating menuWhenDone
  Relocating [.rodata..L.str.69]
  Relocating Str_On_Off_Both
  Relocating [.rodata..L.str.70]
  Relocating menuProcVoiceOne(unsigned char)::mstate2
  Relocating [.rodata..L.str.71]
  Relocating [.rodata..L.str.72]
  Relocating [.rodata..L.str.73]
  Relocating Str_Cswitch
  Relocating [.rodata..L.str.74]
  Relocating [.rodata..L.str.75]
  Relocating [.rodata..L.str.76]
  Relocating [.rodata..L.str.77]
  Relocating [.rodata..L.str.78]
  Relocating [.rodata..L.str.79]
  Relocating Str_Sounds
  Relocating [.rodata..L.str.80]
  Relocating [.rodata..L.str.81]
  Relocating [.rodata..L.str.82]
  Relocating menuProcVoiceAlarm(unsigned char)::mstate2
  Relocating [.rodata..L.str.83]
  Relocating menuRXSetup(unsigned char)::mstate2
  Relocating [.rodata..L.str.84]
  Relocating [.rodata..L.str.85]
  Relocating [.rodata..L.str.86]
  Relocating [.rodata..L.str.87]
  Relocating menuSetFailsafe(unsigned char)::mstate2
  Relocating [.rodata..L.str.88]
  Relocating [.rodata..L.str.89]
  Relocating [.rodata..L.str.90]
  Relocating [.rodata..L.str.91]
  Relocating menuProcProtocol(unsigned char)::mstate2
  Relocating [.rodata..L.str.92]
  Relocating [.rodata..L.str.93]
  Relocating [.rodata..L.str.94]
  Relocating [.rodata..L.str.95]
  Relocating [.rodata..L.str.96]
  Relocating [.rodata..L.str.97]
  Relocating [.rodata..L.str.98]
  Relocating [.rodata..L.str.99]
  Relocating [.rodata..L.str.100]
  Relocating [.rodata..L.str.101]
  Relocating menuProcModelIndex(unsigned char)::mstate
  Relocating menuProcModelIndex(unsigned char)::n_Strings
  Relocating Str_heli_setup
  Relocating Str_limits
  Relocating Str_Expo
  Relocating Str_Cswitches
  Relocating Str_Safety
  Relocating Str_Timer
  Relocating Str_Protocol
  Relocating [.rodata..L.str.102]
  Relocating [.rodata..L.str.103]
  Relocating Str_TRE012AG
  Relocating [.rodata..L.str.104]
  Relocating [.rodata..L.str.105]
  Relocating [.rodata..L.str.106]
  Relocating [.rodata..L.str.107]
  Relocating [.rodata..L.str.108]
  Relocating [.rodata..L.str.109]
  Relocating [.rodata..L.str.110]
  Relocating [.rodata..L.str.111]
  Relocating [.rodata..L.str.112]
  Relocating [.rodata..L.str.113]
  Relocating [.rodata..L.str.114]
  Relocating MixPopList
  Relocating [.rodata..L.str.115]
  Relocating [.rodata..L.str.116]
  Relocating [.rodata..L.str.117]
  Relocating [.rodata..L.str.118]
  Relocating [.rodata..L.str.119]
  Relocating [.rodata..L.str.120]
  Relocating [.rodata..L.str.121]
  Relocating [.rodata..Lswitch.table.menuProcModelIndex(unsigned char)]
  Relocating SetStartPulsePol()
  Relocating ISR_TIMER1_COMPA_vect
  Relocating setupPulses()
  Relocating startPulses()
  Relocating setupPulsesPPM(unsigned char)
  Relocating pulses2MHz
  Relocating heartbeat
  Relocating Current_protocol
  Relocating pxxFlag
  Relocating PausePulses
  Relocating serialDat0
  Relocating ISR_TIMER1_COMPA_vect::pulsePtr
  Relocating RadioActive
  Relocating B3_comp_value
  Relocating Stamps
  Relocating clearMixes()
  Relocating setMix(unsigned char, unsigned char)
  Relocating applyTemplate()
  Relocating main
  Relocating tiny_sprintf(char*, char const*, char, char, ...)
  Relocating crossfireTelemetryPush4(unsigned char, unsigned char, unsigned char)
  Relocating crossfireTelemetryPing()
  Relocating allocateFields()
  Relocating selectField(signed char)
  Relocating getField(unsigned char)
  Relocating fieldTextSelectionLoad(FieldProps*, unsigned char*, unsigned char)
  Relocating fieldTextSelectionSave(FieldProps*)
  Relocating fieldTextSelectionDisplay(FieldProps*, unsigned char, unsigned char)
  Relocating semicolonPos(char const*, unsigned char)
  Relocating fieldStringDisplay(FieldProps*, unsigned char, unsigned char)
  Relocating fieldFolderOpen(FieldProps*)
  Relocating noopOpen(FieldProps*)
  Relocating fieldCommandLoad(FieldProps*, unsigned char*, unsigned char)
  Relocating fieldCommandSave(FieldProps*)
  Relocating fieldUnifiedDisplay(FieldProps*, unsigned char, unsigned char)
  Relocating UIbackExec(FieldProps*)
  Relocating parseDeviceInfoMessage(unsigned char*)
  Relocating parseParameterInfoMessage(unsigned char*, unsigned char)
  Relocating runCrossfireTelemetryCallback(unsigned char, unsigned char*, unsigned char)
  Relocating handleDevicePageEvent(unsigned char)
  Relocating incrField(signed char)
  Relocating runDevicePage(unsigned char)
  Relocating runPopupPage(unsigned char)
  Relocating popupCompat(unsigned char)
  Relocating ELRSV2_stop()
  Relocating ELRSV2_run(unsigned char)
  Relocating crossfileMenu(MState2&, unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating namesBufferOffset
  Relocating valuesBufferOffset
  Relocating fieldDataLen
  Relocating fieldsLen
  Relocating devicesLen
  Relocating otherDevicesId
  Relocating deviceId
  Relocating handsetId
  Relocating deviceIsELRS_TX
  Relocating lineIndex
  Relocating pageOffset
  Relocating edit
  Relocating fieldTimeout
  Relocating fieldId
  Relocating fieldChunk
  Relocating fields_count
  Relocating backButtonId
  Relocating devicesRefreshTimeout
  Relocating allParamsLoaded
  Relocating folderAccess
  Relocating statusComplete
  Relocating expectedChunks
  Relocating reloadFolder
  Relocating fields
  Relocating [.rodata..L.str]
  Relocating [.rodata..L.str.1]
  Relocating fieldPopup
  Relocating [.rodata..L.str.2]
  Relocating [.rodata..L.str.3]
  Relocating [.rodata..L.str.4]
  Relocating [.rodata..L.str.5]
  Relocating deviceIds
  Relocating functions
  Relocating reusableBuffer
  Relocating [.rodata..L.str.7]
  Relocating [.rodata..L.str.8]
  Relocating [.rodata..Lswitch.table.fieldUnifiedDisplay(FieldProps*, unsigned char, unsigned char)]
  Relocating crc8(unsigned char const*, unsigned int)
  Relocating crc8tab
  Relocating createCrossfireChannelsFrame(unsigned char*, short*)
  Relocating setupPulsesCrossfire()
  Relocating processCrossfireTelemetryValue(unsigned char, int)
  Relocating checkCrossfireTelemetryFrameCRC()
  Relocating getCrossfireTelemetryValue(unsigned char, int&, int)
  Relocating processCrossfireTelemetryFrame()
  Relocating processCrossfireTelemetryData(unsigned char)
  Relocating crossfireTelemetryPush(unsigned char, unsigned char*, unsigned char)
  Relocating crsf_init()
  Relocating crsf_shutdown()
  Relocating crsf_action()
  Relocating outputTelemetryBuffer
  Relocating outputTelemetryBufferSize
  Relocating outputTelemetryBufferTrigger
  Relocating telemetryRxBuffer
  Relocating telemetryRxBufferCount
  Relocating g_crossfire
  Relocating telemetryErrors
  Relocating g_elrs_update_rate
  Relocating g_elrs_lag
  Relocating idx_to_afhds2a
  Relocating processCrossfireTelemetryFrame()::power_values
  Relocating evalChkSum()
  Relocating setNameP(char*, char const*)
  Relocating eeGeneralDefault()
  Relocating modelSave(unsigned char)
  Relocating modelDefaultWrite(unsigned char)
  Relocating eeLoadModelName(unsigned char, char*, unsigned char)
  Relocating eeModelExists(unsigned char)
  Relocating eeLoadModelForBackup(unsigned char)
  Relocating eeLoadModel(unsigned char)
  Relocating validateName(char*, unsigned char)
  Relocating eeDirty(unsigned char)
  Relocating eeWaitComplete()
  Relocating eeDuplicateModel(unsigned char)
  Relocating eeReadGeneral()
  Relocating eeWriteGeneral()
  Relocating eeCheck(bool)
  Relocating theFile
  Relocating theWriteFile
  Relocating [.rodata..L.str]
  Relocating [.rodata..L.str.1]
  Relocating [.rodata..L.str.2]
  Relocating [.rodata..L.str.3]
  Relocating [.rodata..L.str.4]
  Relocating [.rodata..L.str.5]
  Relocating [.rodata..L.str.6]
  Relocating s_eeDirtyMsk
  Relocating s_eeDirtyTime10ms
  Relocating s_eeLongTimer
  Relocating Ee_lock
  Relocating Str_EEPROM_Overflow
  Relocating SX127xDriver::SX127xDriver()
  Relocating _GLOBAL__sub_I_SX127x.cpp
  Relocating hal
  Relocating SX127xDriver::instance
  Relocating [.init_array]
  Relocating SX127xHal::SX127xHal()
  Relocating SX127xHal::instance
  Relocating _GLOBAL__sub_I_ELRS.cpp
  Relocating Radio
  Relocating ota_crc
  Relocating LQCalc
  Relocating TelemetryReceiver
  Relocating MspSender
  Relocating [.init_array]
  Relocating StubbornReceiver::StubbornReceiver(unsigned char)
  Relocating StubbornSender::StubbornSender(unsigned char)
  Relocating StubbornSender::ResetState()
  Relocating GENERIC_CRC14::GENERIC_CRC14(unsigned short)
  Relocating Reset_Handler
  Relocating NMI_Handler
  Relocating _vectors
  Relocating BackDoorKey
  Relocating _start
  Relocating __aeabi_llsl
  Relocating __aeabi_llsr
  Relocating __aeabi_idiv
  Relocating __aeabi_idivmod
  Relocating __aeabi_uidiv
  Relocating __aeabi_uidivmod
  Relocating div
  Relocating strcpy
  Relocating strlen
  Relocating memcpy
  Relocating __aeabi_memclr
  Relocating __aeabi_memmove
  Relocating memcmp
  Relocating strstr
  Relocating __SEGGER_init_zero
  Relocating __SEGGER_init_copy
  Relocating __SEGGER_init_heap
  Relocating __SEGGER_init_ctors
  Relocating __SEGGER_RTL_init_heap
  Relocating __SEGGER_RTL_heap_globals
  Relocating [.bss.block.heap]
  Relocating [.bss.block.stack]
  Relocating __SEGGER_init_table__
  Relocating __SEGGER_init_data__


***************************************************************************************
***                                                                                 ***
***                                 Region symbols                                  ***
***                                                                                 ***
***************************************************************************************

  Define region symbols for CFM
  Define region symbols for FLASH
  Define region symbols for RAM


***************************************************************************************
***                                                                                 ***
***                              Final relocate image                               ***
***                                                                                 ***
***************************************************************************************

  Relocating [.rodata.block.tdata.copy]
  Relocating SystemInit
  Relocating lcdSetRefVolt(unsigned char)
  Relocating lcdSendCtl(unsigned char)
  Relocating lcdSetContrast()
  Relocating lcd_clear()
  Relocating lcd_init()
  Relocating lcd_putcAtt(unsigned char, unsigned char, char, unsigned char)
  Relocating lcd_putsAtt(unsigned char, unsigned char, char const*, unsigned char)
  Relocating lcd_putsnAtt(unsigned char, unsigned char, char const*, unsigned char, unsigned char)
  Relocating lcd_putsAttIdx(unsigned char, unsigned char, char const*, unsigned char, unsigned char)
  Relocating lcd_putc(unsigned char, unsigned char, char)
  Relocating lcd_puts_Pleft(unsigned char, char const*)
  Relocating lcd_puts_Pskip(unsigned char, char const*, unsigned char)
  Relocating lcd_puts_P(unsigned char, unsigned char, char const*)
  Relocating lcd_putsn_P(unsigned char, unsigned char, char const*, unsigned char)
  Relocating lcd_outhex4(unsigned char, unsigned char, unsigned short)
  Relocating lcd_write_bits(unsigned char*, unsigned char)
  Relocating lcd_plot(unsigned char, unsigned char)
  Relocating lcd_vline(unsigned char, unsigned char, signed char)
  Relocating lcd_hlineStip(unsigned char, unsigned char, signed char, unsigned char)
  Relocating lcd_hline(unsigned char, unsigned char, signed char)
  Relocating lcd_2_digits(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating lcd_outdezNAtt(unsigned char, unsigned char, int, unsigned char, signed char, unsigned char)
  Relocating lcd_outdezAtt(unsigned char, unsigned char, short, unsigned char)
  Relocating lcd_outdez(unsigned char, unsigned char, short)
  Relocating lcd_char_inverse(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating lcd_rect_xor(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating lcd_rect(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating lcd_hbar(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating refreshDiplay()
  Relocating lcd_img(unsigned char, unsigned char, unsigned char const*, unsigned char)
  Relocating putsTime(unsigned char, unsigned char, short, unsigned char, unsigned char)
  Relocating putsVolts(unsigned char, unsigned char, short, unsigned char)
  Relocating putsVBat(unsigned char, unsigned char, unsigned char)
  Relocating LcdLock
  Relocating Lcd_lastPos
  Relocating DisplayBuf
  Relocating EepromActive
  Relocating Lcdinit
  Relocating font
  Relocating font_dblsize
  Relocating plotType
  Relocating _bitmask
  Relocating HW_Init
  Relocating mDelay
  Relocating getADC_osmp
  Relocating backlight_on
  Relocating backlight_off
  Relocating rd_1
  Relocating rd_0
  Relocating cs_0
  Relocating rw_0
  Relocating rs_1
  Relocating rs_0
  Relocating rst_1
  Relocating rst_0
  Relocating PINB
  Relocating PIND
  Relocating PINE
  Relocating PING
  Relocating LCD_DATA
  Relocating Buzzer_SetVal
  Relocating Buzzer_ClrVal
  Relocating SPI_RADIO_SendBlock
  Relocating SPI_RADIO_ReceiveBlock
  Relocating a7105_csn_on
  Relocating a7105_csn_off
  Relocating RF0_SetVal
  Relocating RF0_ClrVal
  Relocating RF1_SetVal
  Relocating RF1_ClrVal
  Relocating TX_RX_PutVal
  Relocating EnableGIO
  Relocating DisableGIO
  Relocating i2c_master
  Relocating GetPPMOutState
  Relocating SetPPMTimCompare
  Relocating GetPPMTimCompare
  Relocating GetPPMTimCompareInterruptFlag
  Relocating ClearPPMTimCompareInterruptFlag
  Relocating EnablePPMTim
  Relocating EnablePPMOut
  Relocating DisablePPMOut
  Relocating EnablePRTTim
  Relocating DisablePRTTim
  Relocating SetPRTTimPeriod
  Relocating GetChipID
  Relocating PIT_IRQHandler
  Relocating TPM1_IRQHandler
  Relocating SPI0_IRQHandler
  Relocating PORTC_PORTD_IRQHandler
  Relocating TPM0_IRQHandler
  Relocating TPM2_IRQHandler
  Relocating setup_crsf_serial_port
  Relocating uart_clear_error()
  Relocating crsf_send_data
  Relocating UART0_IRQHandler
  Relocating shutdown_crsf_serial_port
  Relocating serialVoiceInit(void (*)(unsigned char*, unsigned char))
  Relocating sendSerialVoiceData(unsigned char*, unsigned int)
  Relocating UART2_IRQHandler
  Relocating ChannelToPin
  Relocating AFHDS2A_A7105_regs
  Relocating SPI_BufferPtr
  Relocating SPI_Size
  Relocating g_crsf_read_callback
  Relocating g_voice_cb
  Relocating voice_uart_recv_buf
  Relocating voice_rx_idx
  Relocating voice_uart_send_buf
  Relocating voice_tx_idx
  Relocating modeFixValue(unsigned char)
  Relocating get_tmr10ms()
  Relocating CS_STATE(unsigned char)
  Relocating mixaddress(unsigned char)
  Relocating throttleReversed()
  Relocating putsChnRaw(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating putsChn(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating putsMomentDrSwitches(unsigned char, unsigned char, signed char, unsigned char)
  Relocating putsDrSwitches(unsigned char, unsigned char, signed char, unsigned char)
  Relocating putsTmrMode(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating putsTelemValue(unsigned char, unsigned char, int, unsigned char, unsigned char)
  Relocating getValue(unsigned char)
  Relocating getSwitch00(signed char)
  Relocating getSwitch(signed char, bool, unsigned char)
  Relocating calc100toRESX(signed char)
  Relocating check_backlight_voice()
  Relocating stickMoveValue()
  Relocating anaIn(unsigned char)
  Relocating almess(char const*, unsigned char)
  Relocating message(char const*)
  Relocating alert(char const*)
  Relocating alertx(char const*, bool)
  Relocating clearKeyEvents()
  Relocating keyDown()
  Relocating checkThrottlePosition()
  Relocating checkTHR()
  Relocating putWarnSwitch(unsigned char, unsigned char)
  Relocating getCurrentSwitchStates()
  Relocating checkSwitches()
  Relocating getFlightPhase()
  Relocating getRawTrimValue(unsigned char, unsigned char)
  Relocating getTrimFlightPhase(unsigned char, unsigned char)
  Relocating getTrimValue(unsigned char, unsigned char)
  Relocating setTrimValue(unsigned char, unsigned char, short)
  Relocating checkIncDec16(short, short, short, unsigned char)
  Relocating checkIncDec(signed char, signed char, signed char, unsigned char)
  Relocating checkIncDec_i8(signed char, signed char, signed char)
  Relocating checkIncDec_0(signed char, signed char)
  Relocating checkIncDec_u0(short, unsigned char)
  Relocating popMenu(bool)
  Relocating chainMenu(void (*)(unsigned char))
  Relocating pushMenu(void (*)(unsigned char))
  Relocating backlightKey()
  Relocating doBackLightVoice(unsigned char)
  Relocating calcStickScroll(unsigned char)
  Relocating getGvarSourceValue(unsigned char)
  Relocating ISR_TIMER2_OVF_vect
  Relocating audioQueue::driver()
  Relocating ISR_TIMER0_COMP_vect
  Relocating mainER()
  Relocating mainSequence()
  Relocating doVoiceAlarmSource(t_voiceAlarm*)
  Relocating procOneVoiceAlarm(t_voiceAlarm*, unsigned char)
  Relocating processVoiceAlarms()
  Relocating calc1000toRESX(short)
  Relocating REG100_100(signed char)
  Relocating REG(signed char, signed char, signed char)
  Relocating IS_EXPO_THROTTLE(unsigned char)
  Relocating _GLOBAL__sub_I_er9x.cpp
  Relocating Last_switch
  Relocating g_eeGeneral
  Relocating g_model
  Relocating AlertMessage
  Relocating Main_running
  Relocating Nvs_state
  Relocating Nvs_timer
  Relocating CurrentVolume
  Relocating ppmInAvailable
  Relocating Rotary
  Relocating Tevent
  Relocating TimerConfig
  Relocating bchout_ar
  Relocating audio
  Relocating sysFlags
  Relocating SystemOptions
  Relocating AlarmControl
  Relocating CsTimer
  Relocating Str_Switches
  Relocating Str_OFF
  Relocating Str_ON
  Relocating modi12x3
  Relocating stickScramble
  Relocating csTypeTable
  Relocating Str_Hyphens
  Relocating [.rodata..L.str]
  Relocating [.rodata..L.str.1]
  Relocating g_ppmIns
  Relocating check_backlight_voice()::tmr10ms
  Relocating g_LightOffCounter
  Relocating [.rodata..L.str.2]
  Relocating [.rodata..L.str.3]
  Relocating Str_Alert
  Relocating [.rodata..L.str.4]
  Relocating [.rodata..L.str.5]
  Relocating [.rodata..L.str.6]
  Relocating StickScrollAllowed
  Relocating StickScrollTimer
  Relocating g_menuStack
  Relocating g_menuStackPtr
  Relocating EnterMenu
  Relocating P1values
  Relocating StepSize
  Relocating LongMenuTimer
  Relocating [.rodata..L.str.7]
  Relocating g_vbat100mV
  Relocating tick10ms
  Relocating stickMoved
  Relocating rate
  Relocating Inactivity
  Relocating s_anaFilt
  Relocating g_tmr16KHz
  Relocating tmrEEPROM
  Relocating [.rodata..L.str.8]
  Relocating mainSequence()::timer
  Relocating audioQueue::driver()::toneCounter
  Relocating [.rodata..L.str.9]
  Relocating [.rodata..L.str.10]
  Relocating [.rodata..L.str.11]
  Relocating [.rodata..L.str.12]
  Relocating [.rodata..L.str.13]
  Relocating perMain()::lastTMR
  Relocating perMain()::repeater
  Relocating perMain()::alertKey
  Relocating perMain()::s_batCheck
  Relocating [.init_array]
  Relocating A7105_AntSwitch()
  Relocating A7105_SetTxRxMode(unsigned char)
  Relocating A7105_Strobe(unsigned char)
  Relocating A7105_WriteReg(unsigned char, unsigned char)
  Relocating A7105_WriteData(unsigned char, unsigned char)
  Relocating A7105_ReadData(unsigned char)
  Relocating A7105_ReadReg(unsigned char)
  Relocating A7105_Reset()
  Relocating A7105_WriteID(unsigned int)
  Relocating A7105_SetPower()
  Relocating A7105_AdjustLOBaseFreq()
  Relocating A7105_Sleep()
  Relocating A7105_Init()
  Relocating convert_failsafe_ppm(unsigned char)
  Relocating RadioState
  Relocating protocol_flags
  Relocating prev_power
  Relocating packet
  Relocating ID
  Relocating packet_count
  Relocating bind_phase
  Relocating hopping_frequency
  Relocating hopping_frequency_no
  Relocating A7105_AntSwitch()::sw
  Relocating A7105_AdjustLOBaseFreq()::old_offset
  Relocating AFHDS2A_build_packet(unsigned char)
  Relocating ActionAFHDS2A
  Relocating initAFHDS2A
  Relocating processFlySkySensor(unsigned char const*, unsigned char)
  Relocating AFHDS2A_tel
  Relocating AFHDS2A_tel_data
  Relocating AFHDS2A_tel_status
  Relocating AFHDS2A_tel_res_cnt
  Relocating AltOffset
  Relocating GAltOffset
  Relocating ActionAFHDS2A::packet_type
  Relocating ActionAFHDS2A::packet_counter
  Relocating AFHDS2A_update_telemetry()::Dacc
  Relocating DoSum(unsigned char*, unsigned char)
  Relocating Uart_SendCMD(unsigned char, unsigned char, unsigned short)
  Relocating audioQueue::busy()
  Relocating audioQueue::heartbeat()
  Relocating audioQueue::play(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating audioQueue::getToneLength(unsigned char)
  Relocating audioQueue::event(unsigned char, unsigned char)
  Relocating audioDefevent(unsigned char)
  Relocating audioEvent(unsigned char, unsigned short)
  Relocating audioVoiceDefevent(unsigned char, unsigned char)
  Relocating putVoiceQueue(unsigned char)
  Relocating voice_numeric(short, unsigned char, unsigned char)
  Relocating putVoiceQueueUpper(unsigned char)
  Relocating putVoiceQueueLong(unsigned short)
  Relocating setVolume(unsigned char)
  Relocating on_voice_cb(unsigned char*, unsigned char)
  Relocating t_voice::voice_process()
  Relocating play_cmd_buf
  Relocating Voice
  Relocating wait_fin_count
  Relocating ee_waite()
  Relocating eeprom_read_block(void*, void const*, unsigned int)
  Relocating eeprom_write_page_cmp(char const*, unsigned short, unsigned int)
  Relocating eeWriteBlockCmp(void const*, unsigned short, unsigned int)
  Relocating Key::input(bool, EnumKeys)
  Relocating menuPressed()
  Relocating switchPosition(unsigned char)
  Relocating keyState(EnumKeys)
  Relocating pauseEvents(unsigned char)
  Relocating killEvents(unsigned char)
  Relocating per10ms()
  Relocating i2c_buffer
  Relocating s_evt
  Relocating keys
  Relocating g_tmr10ms
  Relocating g_blinkTmr10ms
  Relocating per10ms()::current
  Relocating per10ms()::crossTrim
  Relocating EeFsGetFree()
  Relocating EeFsGetLink(unsigned char)
  Relocating EeFsck()
  Relocating EeFsSetLink(unsigned char, unsigned char)
  Relocating EeFsFlush()
  Relocating EeFsFlushFreelist()
  Relocating EeFsFormat()
  Relocating EeFsOpen()
  Relocating EFile::exists(unsigned char)
  Relocating EFile::swap(unsigned char, unsigned char)
  Relocating EFile::rm(unsigned char)
  Relocating EeFsFree(unsigned char)
  Relocating EFile::size()
  Relocating EFile::openRd(unsigned char)
  Relocating EFile::read(unsigned char*, unsigned short)
  Relocating EFile::readRlc(unsigned char*, unsigned short)
  Relocating EFile::write(unsigned char*, unsigned char)
  Relocating EeFsAlloc()
  Relocating EFile::create(unsigned char, unsigned char, unsigned short)
  Relocating EFile::closeTrunc()
  Relocating EFile::writeRlc(unsigned char, unsigned char, unsigned char*, unsigned short, unsigned char)
  Relocating EeFsRead(unsigned char, unsigned char)
  Relocating eeFs
  Relocating putsAttIdxTelemItems(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating calc_scaler(unsigned char, unsigned char*, unsigned char*)
  Relocating voiceMinutes(short)
  Relocating voice_telem_item(unsigned char)
  Relocating get_telemetry_value(unsigned char)
  Relocating displayTimer(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating putsTelemetryChannel(unsigned char, unsigned char, signed char, int, unsigned char, unsigned char)
  Relocating dispGvar(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating gvarMenuItem(unsigned char, unsigned char, signed char, signed char, signed char, unsigned char)
  Relocating gvarMenuItem125(unsigned char, unsigned char, signed char, unsigned char)
  Relocating get_dr_state(unsigned char)
  Relocating editName(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char)
  Relocating char2idx(char)
  Relocating idx2char(unsigned char)
  Relocating TITLEP(char const*)
  Relocating lcd_xlabel_decimal(unsigned char, unsigned char, unsigned short, unsigned char, char const*)
  Relocating checkIndexed(unsigned char, char const*, unsigned char, unsigned char)
  Relocating hyphinvMenuItem(unsigned char, unsigned char, unsigned char)
  Relocating putsOffDecimal(unsigned char, unsigned char, unsigned short, unsigned char)
  Relocating MState2::check_columns(unsigned char, unsigned char)
  Relocating telltale(unsigned char, signed char, signed char)
  Relocating doMainScreenGrphics()
  Relocating drawFunction(unsigned char, unsigned char)
  Relocating intpol(short, unsigned char)
  Relocating calcExpo(unsigned char, short)
  Relocating drawCurve(unsigned char)
  Relocating curveAddress(unsigned char)
  Relocating menuProcCurveOne(unsigned char)
  Relocating menuProcCurve(unsigned char)
  Relocating evalOffset(signed char)
  Relocating setStickCenter()
  Relocating perOut(short*, unsigned char)
  Relocating displayNext()
  Relocating menuProcTelemetry(unsigned char)
  Relocating put_curve(unsigned char, unsigned char, signed char, unsigned char)
  Relocating scalerDecimal(unsigned char, unsigned char, unsigned char)
  Relocating menuScaleOne(unsigned char)
  Relocating menuProcGlobals(unsigned char)
  Relocating edit_dr_switch(unsigned char, unsigned char, signed char, unsigned char, unsigned char)
  Relocating putsChnOpRaw(unsigned char, unsigned char, t_MixData*, unsigned char)
  Relocating menuProcMixOne(unsigned char)
  Relocating onoffItem(unsigned char, unsigned char, unsigned char)
  Relocating offonItem(unsigned char, unsigned char, unsigned char)
  Relocating onoffMenuItem(unsigned char, unsigned char, char const*, unsigned char)
  Relocating editSlowDelay(unsigned char, unsigned char, unsigned char)
  Relocating menuMixersLimit(unsigned char)
  Relocating menuProcMix(unsigned char)
  Relocating reachMixerCountLimit()
  Relocating yesNoMenuExit(unsigned char, char const*)
  Relocating menuDeleteMix(unsigned char)
  Relocating doPopup(char const*, unsigned char, unsigned char)
  Relocating insertMix(unsigned char, unsigned char)
  Relocating expou(unsigned short, unsigned short)
  Relocating expo(short, short)
  Relocating editExpoVals(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating menuDeleteDupModel(unsigned char)
  Relocating menuProcModelSelect(unsigned char)
  Relocating menuRangeBind(unsigned char)
  Relocating putsTrimMode(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating menuPhaseOne(unsigned char)
  Relocating dispFlightModename(unsigned char, unsigned char, unsigned char)
  Relocating menuModelPhases(unsigned char)
  Relocating menuProcModelIndex(unsigned char)
  Relocating putc_0_1(unsigned char, unsigned char, unsigned char)
  Relocating timer()
  Relocating resetTimer1()
  Relocating resetTimer2()
  Relocating trace()
  Relocating putsTimeNoAtt(unsigned char, unsigned char, short)
  Relocating menuProcStatistic(unsigned char)
  Relocating resetTimern(unsigned char)
  Relocating displayOneSwitch3Pos(unsigned char, unsigned char, unsigned char)
  Relocating displayOneSwitch(unsigned char, unsigned char, unsigned char)
  Relocating switchDisplay(unsigned char, unsigned char)
  Relocating dispSignalQality(unsigned char)
  Relocating menuProc0(unsigned char)
  Relocating menuProcIndex(unsigned char)
  Relocating perOutPhase(short*, unsigned char)
  Relocating scaleAnalog(short, unsigned char)
  Relocating indexProcess(unsigned char, MState2*, unsigned char)
  Relocating displayIndex(char const* const*, unsigned char, unsigned char, unsigned char)
  Relocating offonMenuItem(unsigned char, unsigned char, char const*, unsigned char)
  Relocating displayVoiceRate(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating menuProcVoiceOne(unsigned char)
  Relocating menuProcVoiceAlarm(unsigned char)
  Relocating rangeBindAction(unsigned char, unsigned char)
  Relocating menuRXSetup(unsigned char)
  Relocating menuSetFailsafe(unsigned char)
  Relocating menuProcProtocol(unsigned char)
  Relocating Xmem
  Relocating PopupData
  Relocating MenuControl
  Relocating s_timer
  Relocating RotaryState
  Relocating CalcScaleNest
  Relocating ThrottleStickyOn
  Relocating Str_Chans_Gv
  Relocating Curve_Str
  Relocating phyStick
  Relocating Str_telemItems
  Relocating TelemIndex
  Relocating UnitsVoice
  Relocating UnitsText
  Relocating Str_GV
  Relocating calibratedStick
  Relocating Ex_chans
  Relocating s_pgOfs
  Relocating s_editMode
  Relocating s_editing
  Relocating s_noHi
  Relocating scrollLR
  Relocating scroll_disabled
  Relocating scrollUD
  Relocating InverseBlink
  Relocating EditType
  Relocating EditColumns
  Relocating g_chans512
  Relocating Str_Name
  Relocating [.rodata..L.str]
  Relocating g_posHorz
  Relocating M_longMenuTimer
  Relocating Columns
  Relocating MState2::check_columns(unsigned char, unsigned char)::lateUp
  Relocating s_curveChan
  Relocating s_expoChan
  Relocating menuProcCurveOne(unsigned char)::dfltCrv
  Relocating Str_Curve
  Relocating menuProcCurveOne(unsigned char)::mstate2
  Relocating [.rodata..L.str.1]
  Relocating Str_Curves
  Relocating menuProcCurve(unsigned char)::mstate2
  Relocating [.rodata..L.str.2]
  Relocating CurrentPhase
  Relocating [.rodata..L.str.3]
  Relocating menuProcTelemetry(unsigned char)::mstate2
  Relocating Str_Telemetry
  Relocating [.rodata..L.str.4]
  Relocating [.rodata..L.str.5]
  Relocating menuScaleOne(unsigned char)::mstate2
  Relocating Str_SC
  Relocating s_currIdx
  Relocating [.rodata..L.str.6]
  Relocating UnitsString
  Relocating [.rodata..L.str.7]
  Relocating Str_Globals
  Relocating menuProcGlobals(unsigned char)::mstate2
  Relocating Str_Gv_Source
  Relocating [.rodata..L.str.8]
  Relocating SW_3_IDX
  Relocating [.rodata..L.str.9]
  Relocating s_currMixIdx
  Relocating menuProcMixOne(unsigned char)::mstate2
  Relocating [.rodata..L.str.10]
  Relocating [.rodata..L.str.11]
  Relocating [.rodata..L.str.12]
  Relocating [.rodata..L.str.13]
  Relocating [.rodata..L.str.14]
  Relocating [.rodata..L.str.15]
  Relocating s_mixMaxSel
  Relocating [.rodata..L.str.16]
  Relocating mixToDelete
  Relocating [.rodata..L.str.17]
  Relocating [.rodata..L.str.18]
  Relocating [.rodata..L.str.19]
  Relocating s_moveMode
  Relocating Str_Mixer
  Relocating menuProcMix(unsigned char)::mstate2
  Relocating s_currDestCh
  Relocating [.rodata..L.str.20]
  Relocating s_moveMixIdx
  Relocating s_charTab
  Relocating DupIfNonzero
  Relocating DupSub
  Relocating [.rodata..L.str.21]
  Relocating [.rodata..L.str.22]
  Relocating [.rodata..L.str.23]
  Relocating menuRangeBind(unsigned char)::timer
  Relocating [.rodata..L.str.24]
  Relocating [.rodata..L.str.25]
  Relocating Str_1_RETA
  Relocating [.rodata..L.str.26]
  Relocating menuPhaseOne(unsigned char)::mstate2
  Relocating [.rodata..L.str.27]
  Relocating [.rodata..L.str.28]
  Relocating Str_Modes
  Relocating menuModelPhases(unsigned char)::mstate2
  Relocating [.rodata..L.str.29]
  Relocating menuProcModelSelect(unsigned char)::mstate2
  Relocating [.rodata..L.str.30]
  Relocating [.rodata..L.str.31]
  Relocating menuProcModelSelect(unsigned char)::sel_editMode
  Relocating ModelPopList
  Relocating TimeGlobals
  Relocating trace()::s_time
  Relocating g_latency
  Relocating [.rodata..L.str.32]
  Relocating [.rodata..L.str.33]
  Relocating [.rodata..L.str.34]
  Relocating [.rodata..L.str.35]
  Relocating [.rodata..L.str.38]
  Relocating [.rodata..L.str.39]
  Relocating [.rodata..L.str.40]
  Relocating menuProc0(unsigned char)::trimSwLock
  Relocating inputs_subview
  Relocating [.rodata..L.str.41]
  Relocating menuProc0(unsigned char)::xt
  Relocating [.rodata..L.str.42]
  Relocating [.rodata..L.str.43]
  Relocating [.rodata..L.str.44]
  Relocating Str_Main_Popup
  Relocating bpanaCenter
  Relocating Output
  Relocating Fade
  Relocating perOutPhase(short*, unsigned char)::lastPhase
  Relocating perOut(short*, unsigned char)::sticky
  Relocating menuProcIndex(unsigned char)::mstate
  Relocating IlinesCount
  Relocating menuProcIndex(unsigned char)::n_Strings
  Relocating Str_Display
  Relocating Str_AudioHaptic
  Relocating Str_Alarms
  Relocating Str_General
  Relocating Str_Controls
  Relocating Str_Calibration
  Relocating Str_Trainer
  Relocating Str_Version
  Relocating Str_DiagSwtch
  Relocating Str_DiagAna
  Relocating Str_Hardware
  Relocating [.rodata..L.str.45]
  Relocating [.rodata..L.str.46]
  Relocating [.rodata..L.str.47]
  Relocating [.rodata..L.str.48]
  Relocating [.rodata..L.str.49]
  Relocating [.rodata..L.str.50]
  Relocating Str_minute_Beep
  Relocating [.rodata..L.str.51]
  Relocating sticks
  Relocating [.rodata..L.str.52]
  Relocating [.rodata..L.str.53]
  Relocating Str_Beep_Countdown
  Relocating [.rodata..L.str.54]
  Relocating [.rodata..L.str.55]
  Relocating [.rodata..L.str.56]
  Relocating [.rodata..L.str.57]
  Relocating [.rodata..L.str.58]
  Relocating [.rodata..L.str.59]
  Relocating [.rodata..L.str.60]
  Relocating [.rodata..L.str.61]
  Relocating [.rodata..L.str.62]
  Relocating [.rodata..L.str.63]
  Relocating [.rodata..L.str.64]
  Relocating [.rodata..L.str.65]
  Relocating [.rodata..L.str.66]
  Relocating [.rodata..L.str.67]
  Relocating [.rodata..L.str.68]
  Relocating menuWhenDone
  Relocating [.rodata..L.str.69]
  Relocating Str_On_Off_Both
  Relocating [.rodata..L.str.70]
  Relocating menuProcVoiceOne(unsigned char)::mstate2
  Relocating [.rodata..L.str.71]
  Relocating [.rodata..L.str.72]
  Relocating [.rodata..L.str.73]
  Relocating Str_Cswitch
  Relocating [.rodata..L.str.74]
  Relocating [.rodata..L.str.75]
  Relocating [.rodata..L.str.76]
  Relocating [.rodata..L.str.77]
  Relocating [.rodata..L.str.78]
  Relocating [.rodata..L.str.79]
  Relocating Str_Sounds
  Relocating [.rodata..L.str.80]
  Relocating [.rodata..L.str.81]
  Relocating [.rodata..L.str.82]
  Relocating menuProcVoiceAlarm(unsigned char)::mstate2
  Relocating [.rodata..L.str.83]
  Relocating menuRXSetup(unsigned char)::mstate2
  Relocating [.rodata..L.str.84]
  Relocating [.rodata..L.str.85]
  Relocating [.rodata..L.str.86]
  Relocating [.rodata..L.str.87]
  Relocating menuSetFailsafe(unsigned char)::mstate2
  Relocating [.rodata..L.str.88]
  Relocating [.rodata..L.str.89]
  Relocating [.rodata..L.str.90]
  Relocating [.rodata..L.str.91]
  Relocating menuProcProtocol(unsigned char)::mstate2
  Relocating [.rodata..L.str.92]
  Relocating [.rodata..L.str.93]
  Relocating [.rodata..L.str.94]
  Relocating [.rodata..L.str.95]
  Relocating [.rodata..L.str.96]
  Relocating [.rodata..L.str.97]
  Relocating [.rodata..L.str.98]
  Relocating [.rodata..L.str.99]
  Relocating [.rodata..L.str.100]
  Relocating [.rodata..L.str.101]
  Relocating menuProcModelIndex(unsigned char)::mstate
  Relocating menuProcModelIndex(unsigned char)::n_Strings
  Relocating Str_heli_setup
  Relocating Str_limits
  Relocating Str_Expo
  Relocating Str_Cswitches
  Relocating Str_Safety
  Relocating Str_Timer
  Relocating Str_Protocol
  Relocating [.rodata..L.str.102]
  Relocating [.rodata..L.str.103]
  Relocating Str_TRE012AG
  Relocating [.rodata..L.str.104]
  Relocating [.rodata..L.str.105]
  Relocating [.rodata..L.str.106]
  Relocating [.rodata..L.str.107]
  Relocating [.rodata..L.str.108]
  Relocating [.rodata..L.str.109]
  Relocating [.rodata..L.str.110]
  Relocating [.rodata..L.str.111]
  Relocating [.rodata..L.str.112]
  Relocating [.rodata..L.str.113]
  Relocating [.rodata..L.str.114]
  Relocating MixPopList
  Relocating [.rodata..L.str.115]
  Relocating [.rodata..L.str.116]
  Relocating [.rodata..L.str.117]
  Relocating [.rodata..L.str.118]
  Relocating [.rodata..L.str.119]
  Relocating [.rodata..L.str.120]
  Relocating [.rodata..L.str.121]
  Relocating [.rodata..Lswitch.table.menuProcModelIndex(unsigned char)]
  Relocating SetStartPulsePol()
  Relocating ISR_TIMER1_COMPA_vect
  Relocating setupPulses()
  Relocating startPulses()
  Relocating setupPulsesPPM(unsigned char)
  Relocating pulses2MHz
  Relocating heartbeat
  Relocating Current_protocol
  Relocating pxxFlag
  Relocating PausePulses
  Relocating serialDat0
  Relocating ISR_TIMER1_COMPA_vect::pulsePtr
  Relocating RadioActive
  Relocating B3_comp_value
  Relocating Stamps
  Relocating clearMixes()
  Relocating setMix(unsigned char, unsigned char)
  Relocating applyTemplate()
  Relocating main
  Relocating tiny_sprintf(char*, char const*, char, char, ...)
  Relocating crossfireTelemetryPush4(unsigned char, unsigned char, unsigned char)
  Relocating crossfireTelemetryPing()
  Relocating allocateFields()
  Relocating selectField(signed char)
  Relocating getField(unsigned char)
  Relocating fieldTextSelectionLoad(FieldProps*, unsigned char*, unsigned char)
  Relocating fieldTextSelectionSave(FieldProps*)
  Relocating fieldTextSelectionDisplay(FieldProps*, unsigned char, unsigned char)
  Relocating semicolonPos(char const*, unsigned char)
  Relocating fieldStringDisplay(FieldProps*, unsigned char, unsigned char)
  Relocating fieldFolderOpen(FieldProps*)
  Relocating noopOpen(FieldProps*)
  Relocating fieldCommandLoad(FieldProps*, unsigned char*, unsigned char)
  Relocating fieldCommandSave(FieldProps*)
  Relocating fieldUnifiedDisplay(FieldProps*, unsigned char, unsigned char)
  Relocating UIbackExec(FieldProps*)
  Relocating parseDeviceInfoMessage(unsigned char*)
  Relocating parseParameterInfoMessage(unsigned char*, unsigned char)
  Relocating runCrossfireTelemetryCallback(unsigned char, unsigned char*, unsigned char)
  Relocating handleDevicePageEvent(unsigned char)
  Relocating incrField(signed char)
  Relocating runDevicePage(unsigned char)
  Relocating runPopupPage(unsigned char)
  Relocating popupCompat(unsigned char)
  Relocating ELRSV2_stop()
  Relocating ELRSV2_run(unsigned char)
  Relocating crossfileMenu(MState2&, unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating namesBufferOffset
  Relocating valuesBufferOffset
  Relocating fieldDataLen
  Relocating fieldsLen
  Relocating devicesLen
  Relocating otherDevicesId
  Relocating deviceId
  Relocating handsetId
  Relocating deviceIsELRS_TX
  Relocating lineIndex
  Relocating pageOffset
  Relocating edit
  Relocating fieldTimeout
  Relocating fieldId
  Relocating fieldChunk
  Relocating fields_count
  Relocating backButtonId
  Relocating devicesRefreshTimeout
  Relocating allParamsLoaded
  Relocating folderAccess
  Relocating statusComplete
  Relocating expectedChunks
  Relocating reloadFolder
  Relocating fields
  Relocating [.rodata..L.str]
  Relocating [.rodata..L.str.1]
  Relocating fieldPopup
  Relocating [.rodata..L.str.2]
  Relocating [.rodata..L.str.3]
  Relocating [.rodata..L.str.4]
  Relocating [.rodata..L.str.5]
  Relocating deviceIds
  Relocating functions
  Relocating reusableBuffer
  Relocating [.rodata..L.str.7]
  Relocating [.rodata..L.str.8]
  Relocating [.rodata..Lswitch.table.fieldUnifiedDisplay(FieldProps*, unsigned char, unsigned char)]
  Relocating crc8(unsigned char const*, unsigned int)
  Relocating crc8tab
  Relocating createCrossfireChannelsFrame(unsigned char*, short*)
  Relocating setupPulsesCrossfire()
  Relocating processCrossfireTelemetryValue(unsigned char, int)
  Relocating checkCrossfireTelemetryFrameCRC()
  Relocating getCrossfireTelemetryValue(unsigned char, int&, int)
  Relocating processCrossfireTelemetryFrame()
  Relocating processCrossfireTelemetryData(unsigned char)
  Relocating crossfireTelemetryPush(unsigned char, unsigned char*, unsigned char)
  Relocating crsf_init()
  Relocating crsf_shutdown()
  Relocating crsf_action()
  Relocating outputTelemetryBuffer
  Relocating outputTelemetryBufferSize
  Relocating outputTelemetryBufferTrigger
  Relocating telemetryRxBuffer
  Relocating telemetryRxBufferCount
  Relocating g_crossfire
  Relocating telemetryErrors
  Relocating g_elrs_update_rate
  Relocating g_elrs_lag
  Relocating idx_to_afhds2a
  Relocating processCrossfireTelemetryFrame()::power_values
  Relocating evalChkSum()
  Relocating setNameP(char*, char const*)
  Relocating eeGeneralDefault()
  Relocating modelSave(unsigned char)
  Relocating modelDefaultWrite(unsigned char)
  Relocating eeLoadModelName(unsigned char, char*, unsigned char)
  Relocating eeModelExists(unsigned char)
  Relocating eeLoadModelForBackup(unsigned char)
  Relocating eeLoadModel(unsigned char)
  Relocating validateName(char*, unsigned char)
  Relocating eeDirty(unsigned char)
  Relocating eeWaitComplete()
  Relocating eeDuplicateModel(unsigned char)
  Relocating eeReadGeneral()
  Relocating eeWriteGeneral()
  Relocating eeCheck(bool)
  Relocating theFile
  Relocating theWriteFile
  Relocating [.rodata..L.str]
  Relocating [.rodata..L.str.1]
  Relocating [.rodata..L.str.2]
  Relocating [.rodata..L.str.3]
  Relocating [.rodata..L.str.4]
  Relocating [.rodata..L.str.5]
  Relocating [.rodata..L.str.6]
  Relocating s_eeDirtyMsk
  Relocating s_eeDirtyTime10ms
  Relocating s_eeLongTimer
  Relocating Ee_lock
  Relocating Str_EEPROM_Overflow
  Relocating SX127xDriver::SX127xDriver()
  Relocating _GLOBAL__sub_I_SX127x.cpp
  Relocating hal
  Relocating SX127xDriver::instance
  Relocating [.init_array]
  Relocating SX127xHal::SX127xHal()
  Relocating SX127xHal::instance
  Relocating _GLOBAL__sub_I_ELRS.cpp
  Relocating Radio
  Relocating ota_crc
  Relocating LQCalc
  Relocating TelemetryReceiver
  Relocating MspSender
  Relocating [.init_array]
  Relocating StubbornReceiver::StubbornReceiver(unsigned char)
  Relocating StubbornSender::StubbornSender(unsigned char)
  Relocating StubbornSender::ResetState()
  Relocating GENERIC_CRC14::GENERIC_CRC14(unsigned short)
  Relocating Reset_Handler
  Relocating NMI_Handler
  Relocating _vectors
  Relocating BackDoorKey
  Relocating _start
  Relocating __aeabi_llsl
  Relocating __aeabi_llsr
  Relocating __aeabi_idiv
  Relocating __aeabi_idivmod
  Relocating __aeabi_uidiv
  Relocating __aeabi_uidivmod
  Relocating div
  Relocating strcpy
  Relocating strlen
  Relocating memcpy
  Relocating __aeabi_memclr
  Relocating __aeabi_memmove
  Relocating memcmp
  Relocating strstr
  Relocating __SEGGER_init_zero
  Relocating __SEGGER_init_copy
  Relocating __SEGGER_init_heap
  Relocating __SEGGER_init_ctors
  Relocating __SEGGER_RTL_init_heap
  Relocating __SEGGER_RTL_heap_globals
  Relocating [.bss.block.heap]
  Relocating [.bss.block.stack]
  Relocating __SEGGER_init_table__
  Relocating __SEGGER_init_data__


***************************************************************************************
***                                                                                 ***
***                                  Fill regions                                   ***
***                                                                                 ***
***************************************************************************************



***************************************************************************************
***                                                                                 ***
***                                  Combine debug                                  ***
***                                                                                 ***
***************************************************************************************

  Load REL relocations for .debug_aranges (system_MKL16Z4.o)
  Load REL relocations for .debug_aranges (Kinetis_KL_Startup.o)
  Load REL relocations for .debug_aranges (MKL16Z4_Vectors.o)
  Load REL relocations for .debug_aranges (SEGGER_THUMB_Startup.o)
  Load REL relocations for .debug_frame (system_MKL16Z4.o)
  Load REL relocations for .debug_info (system_MKL16Z4.o)
  Load REL relocations for .debug_info (Kinetis_KL_Startup.o)
  Load REL relocations for .debug_info (MKL16Z4_Vectors.o)
  Load REL relocations for .debug_info (SEGGER_THUMB_Startup.o)
  Load REL relocations for .debug_line (system_MKL16Z4.o)
  Load REL relocations for .debug_line (Kinetis_KL_Startup.o)
  Load REL relocations for .debug_line (MKL16Z4_Vectors.o)
  Load REL relocations for .debug_line (SEGGER_THUMB_Startup.o)
  Load REL relocations for .debug_loc (system_MKL16Z4.o)
  Load REL relocations for .debug_pubnames (system_MKL16Z4.o)
  Load REL relocations for .debug_pubtypes (system_MKL16Z4.o)
  Load REL relocations for .debug_ranges (system_MKL16Z4.o)


***************************************************************************************
***                                                                                 ***
***                                Create attributes                                ***
***                                                                                 ***
***************************************************************************************



***************************************************************************************
***                                                                                 ***
***                                    Print map                                    ***
***                                                                                 ***
***************************************************************************************



***************************************************************************************
***                                                                                 ***
***                                 Run assertions                                  ***
***                                                                                 ***
***************************************************************************************



***************************************************************************************
***                                                                                 ***
***                                   Write image                                   ***
***                                                                                 ***
***************************************************************************************

  Create program sections
      Start program header at 0x00000000
        [0x00000000 to 0x000000bf] - _vectors (section .vectors)
        [0x000000c0 to 0x000003fb] - MState2::check_columns(unsigned char, unsigned char) (section .text.MState2::check_columns(unsigned char, unsigned char))
        [0x000003fc to 0x000003fd] - noopOpen(FieldProps*) (section .text.noopOpen(FieldProps*))
        [0x000003fe size 0] - [.rodata.block.tdata.copy] (section .rodata.block.tdata.copy)
        [0x00000400 to 0x0000040f] - BackDoorKey (section .cfm)
        [0x00000410 to 0x000014f3] - menuProcModelIndex(unsigned char) (section .text.menuProcModelIndex(unsigned char))
        [0x000014f4 to 0x00002183] - menuProcIndex(unsigned char) (section .text.menuProcIndex(unsigned char))
        [0x00002184 to 0x00002d4b] - perOut(short*, unsigned char) (section .text.perOut(short*, unsigned char))
        [0x00002d4c to 0x000034df] - mainSequence() (section .text.mainSequence())
        [0x000034e0 to 0x00003a6b] - menuProc0(unsigned char) (section .text.menuProc0(unsigned char))
        [0x00003a6c to 0x00003f2b] - menuProcMixOne(unsigned char) (section .text.menuProcMixOne(unsigned char))
        [0x00003f2c to 0x000043d7] - menuProcMix(unsigned char) (section .text.menuProcMix(unsigned char))
        [0x000043d8 to 0x0000484b] - menuProcVoiceOne(unsigned char) (section .text.menuProcVoiceOne(unsigned char))
        [0x0000484c to 0x00004c1b] - ActionAFHDS2A (section .text.ActionAFHDS2A)
        [0x00004c1c to 0x00004fcb] - HW_Init (section .text.HW_Init)
        [0x00004fcc to 0x00005303] - processCrossfireTelemetryFrame() (section .text.processCrossfireTelemetryFrame())
        [0x00005304 to 0x0000561f] - menuProcModelSelect(unsigned char) (section .text.menuProcModelSelect(unsigned char))
        [0x00005620 to 0x00005937] - timer() (section .text.timer())
        [0x00005938 to 0x00005c2f] - audioQueue::event(unsigned char, unsigned char) (section .text.audioQueue::event(unsigned char, unsigned char))
        [0x00005c30 to 0x00005f0f] - procOneVoiceAlarm(t_voiceAlarm*, unsigned char) (section .text.procOneVoiceAlarm(t_voiceAlarm*, unsigned char))
        [0x00005f10 to 0x000061b3] - menuProcProtocol(unsigned char) (section .text.menuProcProtocol(unsigned char))
        [0x000061b4 to 0x00006447] - menuScaleOne(unsigned char) (section .text.menuScaleOne(unsigned char))
        [0x00006448 to 0x00006667] - mainER() (section .text.mainER())
        [0x00006668 to 0x00006873] - eeLoadModel(unsigned char) (section .text.eeLoadModel(unsigned char))
        [0x00006874 to 0x00006a6f] - parseParameterInfoMessage(unsigned char*, unsigned char) (section .text.parseParameterInfoMessage(unsigned char*, unsigned char))
        [0x00006a70 to 0x00006c57] - getSwitch(signed char, bool, unsigned char) (section .text.getSwitch(signed char, bool, unsigned char))
        [0x00006c58 to 0x00006e3f] - menuProcTelemetry(unsigned char) (section .text.menuProcTelemetry(unsigned char))
        [0x00006e40 to 0x00007027] - menuProcGlobals(unsigned char) (section .text.menuProcGlobals(unsigned char))
        [0x00007028 to 0x0000720f] - lcd_outdezNAtt(unsigned char, unsigned char, int, unsigned char, signed char, unsigned char) (section .text.lcd_outdezNAtt(unsigned char, unsigned char, int, unsigned char, signed char, unsigned char))
        [0x00007210 to 0x000073eb] - menuPhaseOne(unsigned char) (section .text.menuPhaseOne(unsigned char))
        [0x000073ec to 0x000075b3] - menuSetFailsafe(unsigned char) (section .text.menuSetFailsafe(unsigned char))
        [0x000075b4 to 0x0000776f] - putsTelemetryChannel(unsigned char, unsigned char, signed char, int, unsigned char, unsigned char) (section .text.putsTelemetryChannel(unsigned char, unsigned char, signed char, int, unsigned char, unsigned char))
        [0x00007770 to 0x000078f7] - checkIncDec16(short, short, short, unsigned char) (section .text.checkIncDec16(short, short, short, unsigned char))
        [0x000078f8 to 0x00007a7b] - perOutPhase(short*, unsigned char) (section .text.perOutPhase(short*, unsigned char))
        [0x00007a7c to 0x00007bf7] - parseDeviceInfoMessage(unsigned char*) (section .text.parseDeviceInfoMessage(unsigned char*))
        [0x00007bf8 to 0x00007d5b] - handleDevicePageEvent(unsigned char) (section .text.handleDevicePageEvent(unsigned char))
        [0x00007d5c to 0x00007ebf] - AFHDS2A_build_packet(unsigned char) (section .text.AFHDS2A_build_packet(unsigned char))
        [0x00007ec0 to 0x0000801f] - i2c_master (section .text.i2c_master)
        [0x00008020 to 0x0000817f] - eeCheck(bool) (section .text.eeCheck(bool))
        [0x00008180 to 0x000082df] - menuProcCurveOne(unsigned char) (section .text.menuProcCurveOne(unsigned char))
        [0x000082e0 to 0x0000843b] - eeprom_write_page_cmp(char const*, unsigned short, unsigned int) (section .text.eeprom_write_page_cmp(char const*, unsigned short, unsigned int))
        [0x0000843c to 0x00008593] - processFlySkySensor(unsigned char const*, unsigned char) (section .text.processFlySkySensor(unsigned char const*, unsigned char))
        [0x00008594 to 0x000086d7] - doPopup(char const*, unsigned char, unsigned char) (section .text.doPopup(char const*, unsigned char, unsigned char))
        [0x000086d8 to 0x00008803] - lcd_putcAtt(unsigned char, unsigned char, char, unsigned char) (section .text.lcd_putcAtt(unsigned char, unsigned char, char, unsigned char))
        [0x00008804 to 0x0000891b] - menuProcVoiceAlarm(unsigned char) (section .text.menuProcVoiceAlarm(unsigned char))
        [0x0000891c to 0x00008a07] - runCrossfireTelemetryCallback(unsigned char, unsigned char*, unsigned char) (section .text.runCrossfireTelemetryCallback(unsigned char, unsigned char*, unsigned char))
        [0x00008a08 to 0x00008af3] - menuModelPhases(unsigned char) (section .text.menuModelPhases(unsigned char))
        [0x00008af4 to 0x00008bdf] - setupPulsesPPM(unsigned char) (section .text.setupPulsesPPM(unsigned char))
        [0x00008be0 to 0x00008cc3] - checkSwitches() (section .text.checkSwitches())
        [0x00008cc4 to 0x00008da7] - runPopupPage(unsigned char) (section .text.runPopupPage(unsigned char))
        [0x00008da8 to 0x00008e7f] - per10ms() (section .text.per10ms())
        [0x00008e80 to 0x00008f57] - setStickCenter() (section .text.setStickCenter())
        [0x00008f58 to 0x00009023] - voice_telem_item(unsigned char) (section .text.voice_telem_item(unsigned char))
        [0x00009024 to 0x000090ef] - calc_scaler(unsigned char, unsigned char*, unsigned char*) (section .text.calc_scaler(unsigned char, unsigned char*, unsigned char*))
        [0x000090f0 to 0x000091b7] - runDevicePage(unsigned char) (section .text.runDevicePage(unsigned char))
        [0x000091b8 to 0x0000927b] - EFile::write(unsigned char*, unsigned char) (section .text.EFile::write(unsigned char*, unsigned char))
        [0x0000927c to 0x0000933f] - Key::input(bool, EnumKeys) (section .text.Key::input(bool, EnumKeys))
        [0x00009340 to 0x000093ff] - audioQueue::play(unsigned char, unsigned char, unsigned char, unsigned char) (section .text.audioQueue::play(unsigned char, unsigned char, unsigned char, unsigned char))
        [0x00009400 to 0x000094bf] - menuProcStatistic(unsigned char) (section .text.menuProcStatistic(unsigned char))
        [0x000094c0 to 0x0000957f] - menuRXSetup(unsigned char) (section .text.menuRXSetup(unsigned char))
        [0x00009580 to 0x0000963f] - A7105_Init() (section .text.A7105_Init())
        [0x00009640 to 0x000096fb] - calcExpo(unsigned char, short) (section .text.calcExpo(unsigned char, short))
        [0x000096fc to 0x000097b3] - initAFHDS2A (section .text.initAFHDS2A)
        [0x000097b4 to 0x0000986b] - menuProcCurve(unsigned char) (section .text.menuProcCurve(unsigned char))
        [0x0000986c to 0x0000991f] - indexProcess(unsigned char, MState2*, unsigned char) (section .text.indexProcess(unsigned char, MState2*, unsigned char))
        [0x00009920 to 0x000099d3] - setupPulses() (section .text.setupPulses())
        [0x000099d4 to 0x00009a83] - editName(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char) (section .text.editName(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char))
        [0x00009a84 to 0x00009b33] - editExpoVals(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) (section .text.editExpoVals(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char))
        [0x00009b34 to 0x00009bd7] - EeFsck() (section .text.EeFsck())
        [0x00009bd8 to 0x00009c7b] - menuDeleteDupModel(unsigned char) (section .text.menuDeleteDupModel(unsigned char))
        [0x00009c7c to 0x00009d1f] - menuRangeBind(unsigned char) (section .text.menuRangeBind(unsigned char))
        [0x00009d20 to 0x00009dc3] - putsTmrMode(unsigned char, unsigned char, unsigned char, unsigned char) (section .text.putsTmrMode(unsigned char, unsigned char, unsigned char, unsigned char))
        [0x00009dc4 to 0x00009e63] - drawFunction(unsigned char, unsigned char) (section .text.drawFunction(unsigned char, unsigned char))
        [0x00009e64 to 0x00009ef7] - SystemInit (section .init.SystemInit)
        [0x00009ef8 to 0x00009f87] - checkIndexed(unsigned char, char const*, unsigned char, unsigned char) (section .text.checkIndexed(unsigned char, char const*, unsigned char, unsigned char))
        [0x00009f88 to 0x0000a013] - doMainScreenGrphics() (section .text.doMainScreenGrphics())
        [0x0000a014 to 0x0000a09f] - refreshDiplay() (section .text.refreshDiplay())
        [0x0000a0a0 to 0x0000a12b] - gvarMenuItem(unsigned char, unsigned char, signed char, signed char, signed char, unsigned char) (section .text.gvarMenuItem(unsigned char, unsigned char, signed char, signed char, signed char, unsigned char))
        [0x0000a12c to 0x0000a1b3] - drawCurve(unsigned char) (section .text.drawCurve(unsigned char))
        [0x0000a1b4 to 0x0000a23b] - keyState(EnumKeys) (section .text.keyState(EnumKeys))
        [0x0000a23c to 0x0000a2c3] - createCrossfireChannelsFrame(unsigned char*, short*) (section .text.createCrossfireChannelsFrame(unsigned char*, short*))
        [0x0000a2c4 to 0x0000a34b] - eeGeneralDefault() (section .text.eeGeneralDefault())
        [0x0000a34c to 0x0000a3d3] - putsChnRaw(unsigned char, unsigned char, unsigned char, unsigned char) (section .text.putsChnRaw(unsigned char, unsigned char, unsigned char, unsigned char))
        [0x0000a3d4 to 0x0000a457] - setup_crsf_serial_port (section .text.setup_crsf_serial_port)
        [0x0000a458 to 0x0000a4db] - t_voice::voice_process() (section .text.t_voice::voice_process())
        [0x0000a4dc to 0x0000a55b] - audioQueue::heartbeat() (section .text.audioQueue::heartbeat())
        [0x0000a55c to 0x0000a5d7] - fieldTextSelectionLoad(FieldProps*, unsigned char*, unsigned char) (section .text.fieldTextSelectionLoad(FieldProps*, unsigned char*, unsigned char))
        [0x0000a5d8 to 0x0000a653] - selectField(signed char) (section .text.selectField(signed char))
        [0x0000a654 to 0x0000a6cf] - scaleAnalog(short, unsigned char) (section .text.scaleAnalog(short, unsigned char))
        [0x0000a6d0 to 0x0000a747] - EFile::read(unsigned char*, unsigned short) (section .text.EFile::read(unsigned char*, unsigned short))
        [0x0000a748 to 0x0000a7bf] - lcd_vline(unsigned char, unsigned char, signed char) (section .text.lcd_vline(unsigned char, unsigned char, signed char))
        [0x0000a7c0 to 0x0000a837] - fieldTextSelectionDisplay(FieldProps*, unsigned char, unsigned char) (section .text.fieldTextSelectionDisplay(FieldProps*, unsigned char, unsigned char))
        [0x0000a838 to 0x0000a8af] - eeReadGeneral() (section .text.eeReadGeneral())
        [0x0000a8b0 to 0x0000a923] - get_telemetry_value(unsigned char) (section .text.get_telemetry_value(unsigned char))
        [0x0000a924 to 0x0000a997] - getGvarSourceValue(unsigned char) (section .text.getGvarSourceValue(unsigned char))
        [0x0000a998 to 0x0000aa0b] - fieldFolderOpen(FieldProps*) (section .text.fieldFolderOpen(FieldProps*))
        [0x0000aa0c to 0x0000aa7f] - putsDrSwitches(unsigned char, unsigned char, signed char, unsigned char) (section .text.putsDrSwitches(unsigned char, unsigned char, signed char, unsigned char))
        [0x0000aa80 to 0x0000aaf3] - UIbackExec(FieldProps*) (section .text.UIbackExec(FieldProps*))
        [0x0000aaf4 to 0x0000ab63] - insertMix(unsigned char, unsigned char) (section .text.insertMix(unsigned char, unsigned char))
        [0x0000ab64 to 0x0000abd3] - getValue(unsigned char) (section .text.getValue(unsigned char))
        [0x0000abd4 to 0x0000ac43] - alertx(char const*, bool) (section .text.alertx(char const*, bool))
        [0x0000ac44 to 0x0000acb3] - modelDefaultWrite(unsigned char) (section .text.modelDefaultWrite(unsigned char))
        [0x0000acb4 to 0x0000ad23] - menuDeleteMix(unsigned char) (section .text.menuDeleteMix(unsigned char))
        [0x0000ad24 to 0x0000ad93] - UART2_IRQHandler (section .text.UART2_IRQHandler)
        [0x0000ad94 to 0x0000adff] - processCrossfireTelemetryData(unsigned char) (section .text.processCrossfireTelemetryData(unsigned char))
        [0x0000ae00 to 0x0000ae6b] - dispSignalQality(unsigned char) (section .text.dispSignalQality(unsigned char))
        [0x0000ae6c to 0x0000aed7] - putsTelemValue(unsigned char, unsigned char, int, unsigned char, unsigned char) (section .text.putsTelemValue(unsigned char, unsigned char, int, unsigned char, unsigned char))
        [0x0000aed8 to 0x0000af43] - SPI0_IRQHandler (section .text.SPI0_IRQHandler)
        [0x0000af44 to 0x0000afab] - eeDuplicateModel(unsigned char) (section .text.eeDuplicateModel(unsigned char))
        [0x0000afac to 0x0000b00f] - crossfireTelemetryPush(unsigned char, unsigned char*, unsigned char) (section .text.crossfireTelemetryPush(unsigned char, unsigned char*, unsigned char))
        [0x0000b010 to 0x0000b073] - A7105_AdjustLOBaseFreq() (section .text.A7105_AdjustLOBaseFreq())
        [0x0000b074 to 0x0000b0d7] - lcd_hlineStip(unsigned char, unsigned char, signed char, unsigned char) (section .text.lcd_hlineStip(unsigned char, unsigned char, signed char, unsigned char))
        [0x0000b0d8 to 0x0000b13b] - PIND (section .text.PIND)
        [0x0000b13c to 0x0000b19b] - eeLoadModelName(unsigned char, char*, unsigned char) (section .text.eeLoadModelName(unsigned char, char*, unsigned char))
        [0x0000b19c to 0x0000b1fb] - setTrimValue(unsigned char, unsigned char, short) (section .text.setTrimValue(unsigned char, unsigned char, short))
        [0x0000b1fc to 0x0000b25b] - PINB (section .text.PINB)
        [0x0000b25c to 0x0000b2b7] - crsf_send_data (section .text.crsf_send_data)
        [0x0000b2b8 to 0x0000b313] - almess(char const*, unsigned char) (section .text.almess(char const*, unsigned char))
        [0x0000b314 to 0x0000b36f] - doBackLightVoice(unsigned char) (section .text.doBackLightVoice(unsigned char))
        [0x0000b370 to 0x0000b3cb] - calcStickScroll(unsigned char) (section .text.calcStickScroll(unsigned char))
        [0x0000b3cc to 0x0000b427] - allocateFields() (section .text.allocateFields())
        [0x0000b428 to 0x0000b483] - applyTemplate() (section .text.applyTemplate())
        [0x0000b484 to 0x0000b4db] - getADC_osmp (section .text.getADC_osmp)
        [0x0000b4dc to 0x0000b533] - EFile::closeTrunc() (section .text.EFile::closeTrunc())
        [0x0000b534 to 0x0000b58b] - lcd_init() (section .text.lcd_init())
        [0x0000b58c to 0x0000b5e3] - setMix(unsigned char, unsigned char) (section .text.setMix(unsigned char, unsigned char))
        [0x0000b5e4 to 0x0000b63b] - serialVoiceInit(void (*)(unsigned char*, unsigned char)) (section .text.serialVoiceInit(void (*)(unsigned char*, unsigned char)))
        [0x0000b63c to 0x0000b68f] - eeWriteGeneral() (section .text.eeWriteGeneral())
        [0x0000b690 to 0x0000b6e3] - putsChnOpRaw(unsigned char, unsigned char, t_MixData*, unsigned char) (section .text.putsChnOpRaw(unsigned char, unsigned char, t_MixData*, unsigned char))
        [0x0000b6e4 to 0x0000b737] - TPM0_IRQHandler (section .text.TPM0_IRQHandler)
        [0x0000b738 to 0x0000b78b] - PINE (section .text.PINE)
        [0x0000b78c to 0x0000b7db] - fieldUnifiedDisplay(FieldProps*, unsigned char, unsigned char) (section .text.fieldUnifiedDisplay(FieldProps*, unsigned char, unsigned char))
        [0x0000b7dc to 0x0000b82b] - A7105_WriteData(unsigned char, unsigned char) (section .text.A7105_WriteData(unsigned char, unsigned char))
        [0x0000b82c to 0x0000b87b] - putsTrimMode(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) (section .text.putsTrimMode(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char))
        [0x0000b87c to 0x0000b8cb] - ISR_TIMER0_COMP_vect (section .text.ISR_TIMER0_COMP_vect)
        [0x0000b8cc to 0x0000b917] - incrField(signed char) (section .text.incrField(signed char))
        [0x0000b918 to 0x0000b963] - checkTHR() (section .text.checkTHR())
        [0x0000b964 to 0x0000b9af] - lcd_img(unsigned char, unsigned char, unsigned char const*, unsigned char) (section .text.lcd_img(unsigned char, unsigned char, unsigned char const*, unsigned char))
        [0x0000b9b0 to 0x0000b9fb] - check_backlight_voice() (section .text.check_backlight_voice())
        [0x0000b9fc to 0x0000ba47] - checkThrottlePosition() (section .text.checkThrottlePosition())
        [0x0000ba48 to 0x0000ba93] - setupPulsesCrossfire() (section .text.setupPulsesCrossfire())
        [0x0000ba94 to 0x0000badf] - uart_clear_error() (section .text.uart_clear_error())
        [0x0000bae0 to 0x0000bb2b] - SPI_RADIO_ReceiveBlock (section .text.SPI_RADIO_ReceiveBlock)
        [0x0000bb2c to 0x0000bb73] - SetStartPulsePol() (section .text.SetStartPulsePol())
        [0x0000bb74 to 0x0000bbbb] - yesNoMenuExit(unsigned char, char const*) (section .text.yesNoMenuExit(unsigned char, char const*))
        [0x0000bbbc to 0x0000bc03] - _GLOBAL__sub_I_ELRS.cpp (section .text._GLOBAL__sub_I_ELRS.cpp)
        [0x0000bc04 to 0x0000bc4b] - PIT_IRQHandler (section .text.PIT_IRQHandler)
        [0x0000bc4c to 0x0000bc93] - functions (section .rodata.functions)
        [0x0000bc94 to 0x0000bcd7] - shutdown_crsf_serial_port (section .text.shutdown_crsf_serial_port)
        [0x0000bcd8 to 0x0000bd1b] - eeprom_read_block(void*, void const*, unsigned int) (section .text.eeprom_read_block(void*, void const*, unsigned int))
        [0x0000bd1c to 0x0000bd5f] - eeWriteBlockCmp(void const*, unsigned short, unsigned int) (section .text.eeWriteBlockCmp(void const*, unsigned short, unsigned int))
        [0x0000bd60 to 0x0000bda3] - ISR_TIMER1_COMPA_vect (section .text.ISR_TIMER1_COMPA_vect)
        [0x0000bda4 to 0x0000bde7] - NMI_Handler (section .init)
        [0x0000bde8 to 0x0000be27] - EFile::swap(unsigned char, unsigned char) (section .text.EFile::swap(unsigned char, unsigned char))
        [0x0000be28 to 0x0000be67] - audioQueue::getToneLength(unsigned char) (section .text.audioQueue::getToneLength(unsigned char))
        [0x0000be68 to 0x0000bea7] - processCrossfireTelemetryValue(unsigned char, int) (section .text.processCrossfireTelemetryValue(unsigned char, int))
        [0x0000bea8 to 0x0000bee7] - crossfileMenu(MState2&, unsigned char, unsigned char, unsigned char, unsigned char) (section .text.crossfileMenu(MState2&, unsigned char, unsigned char, unsigned char, unsigned char))
        [0x0000bee8 to 0x0000bf27] - ELRSV2_run(unsigned char) (section .text.ELRSV2_run(unsigned char))
        [0x0000bf28 to 0x0000bf63] - getField(unsigned char) (section .text.getField(unsigned char))
        [0x0000bf64 to 0x0000bf9f] - editSlowDelay(unsigned char, unsigned char, unsigned char) (section .text.editSlowDelay(unsigned char, unsigned char, unsigned char))
        [0x0000bfa0 to 0x0000bfdb] - anaIn(unsigned char) (section .text.anaIn(unsigned char))
        [0x0000bfdc to 0x0000c017] - displayOneSwitch(unsigned char, unsigned char, unsigned char) (section .text.displayOneSwitch(unsigned char, unsigned char, unsigned char))
        [0x0000c018 to 0x0000c053] - rangeBindAction(unsigned char, unsigned char) (section .text.rangeBindAction(unsigned char, unsigned char))
        [0x0000c054 to 0x0000c08f] - getRawTrimValue(unsigned char, unsigned char) (section .text.getRawTrimValue(unsigned char, unsigned char))
        [0x0000c090 to 0x0000c0cb] - ELRSV2_stop() (section .text.ELRSV2_stop())
        [0x0000c0cc to 0x0000c107] - EeFsFormat() (section .text.EeFsFormat())
        [0x0000c108 to 0x0000c13f] - audioQueue::driver() (section .text.audioQueue::driver())
        [0x0000c140 to 0x0000c177] - REG(signed char, signed char, signed char) (section .text.REG(signed char, signed char, signed char))
        [0x0000c178 to 0x0000c1af] - getCrossfireTelemetryValue(unsigned char, int&, int) (section .text.getCrossfireTelemetryValue(unsigned char, int&, int))
        [0x0000c1b0 to 0x0000c1e7] - convert_failsafe_ppm(unsigned char) (section .text.convert_failsafe_ppm(unsigned char))
        [0x0000c1e8 to 0x0000c21f] - lcd_char_inverse(unsigned char, unsigned char, unsigned char, unsigned char) (section .text.lcd_char_inverse(unsigned char, unsigned char, unsigned char, unsigned char))
        [0x0000c220 to 0x0000c257] - get_dr_state(unsigned char) (section .text.get_dr_state(unsigned char))
        [0x0000c258 to 0x0000c28f] - resetTimern(unsigned char) (section .text.resetTimern(unsigned char))
        [0x0000c290 to 0x0000c2c7] - PORTC_PORTD_IRQHandler (section .text.PORTC_PORTD_IRQHandler)
        [0x0000c2c8 to 0x0000c2ff] - menuProcModelIndex(unsigned char)::n_Strings (section .rodata.menuProcModelIndex(unsigned char)::n_Strings)
        [0x0000c300 to 0x0000c337] - [.rodata..Lswitch.table.menuProcModelIndex(unsigned char)] (section .rodata..Lswitch.table.menuProcModelIndex(unsigned char))
        [0x0000c338 to 0x0000c36b] - put_curve(unsigned char, unsigned char, signed char, unsigned char) (section .text.put_curve(unsigned char, unsigned char, signed char, unsigned char))
        [0x0000c36c to 0x0000c39f] - pushMenu(void (*)(unsigned char)) (section .text.pushMenu(void (*)(unsigned char)))
        [0x0000c3a0 to 0x0000c3d3] - eeLoadModelForBackup(unsigned char) (section .text.eeLoadModelForBackup(unsigned char))
        [0x0000c3d4 to 0x0000c407] - fieldCommandSave(FieldProps*) (section .text.fieldCommandSave(FieldProps*))
        [0x0000c408 to 0x0000c43b] - lcd_write_bits(unsigned char*, unsigned char) (section .text.lcd_write_bits(unsigned char*, unsigned char))
        [0x0000c43c to 0x0000c46f] - getFlightPhase() (section .text.getFlightPhase())
        [0x0000c470 to 0x0000c4a3] - A7105_SetPower() (section .text.A7105_SetPower())
        [0x0000c4a4 to 0x0000c4d7] - SPI_RADIO_SendBlock (section .text.SPI_RADIO_SendBlock)
        [0x0000c4d8 to 0x0000c507] - EFile::create(unsigned char, unsigned char, unsigned short) (section .text.EFile::create(unsigned char, unsigned char, unsigned short))
        [0x0000c508 to 0x0000c537] - EeFsFree(unsigned char) (section .text.EeFsFree(unsigned char))
        [0x0000c538 to 0x0000c567] - modelSave(unsigned char) (section .text.modelSave(unsigned char))
        [0x0000c568 to 0x0000c597] - char2idx(char) (section .text.char2idx(char))
        [0x0000c598 to 0x0000c5c7] - EeFsOpen() (section .text.EeFsOpen())
        [0x0000c5c8 to 0x0000c5f7] - eeDirty(unsigned char) (section .text.eeDirty(unsigned char))
        [0x0000c5f8 to 0x0000c627] - displayVoiceRate(unsigned char, unsigned char, unsigned char, unsigned char) (section .text.displayVoiceRate(unsigned char, unsigned char, unsigned char, unsigned char))
        [0x0000c628 to 0x0000c657] - A7105_ReadData(unsigned char) (section .text.A7105_ReadData(unsigned char))
        [0x0000c658 to 0x0000c687] - UART0_IRQHandler (section .text.UART0_IRQHandler)
        [0x0000c688 to 0x0000c6b3] - SX127xDriver::SX127xDriver() (section .text.SX127xDriver::SX127xDriver())
        [0x0000c6b4 to 0x0000c6df] - dispGvar(unsigned char, unsigned char, unsigned char, unsigned char) (section .text.dispGvar(unsigned char, unsigned char, unsigned char, unsigned char))
        [0x0000c6e0 to 0x0000c70b] - popMenu(bool) (section .text.popMenu(bool))
        [0x0000c70c to 0x0000c737] - crossfireTelemetryPush4(unsigned char, unsigned char, unsigned char) (section .text.crossfireTelemetryPush4(unsigned char, unsigned char, unsigned char))
        [0x0000c738 to 0x0000c763] - sendSerialVoiceData(unsigned char*, unsigned int) (section .text.sendSerialVoiceData(unsigned char*, unsigned int))
        [0x0000c764 to 0x0000c78f] - putVoiceQueueLong(unsigned short) (section .text.putVoiceQueueLong(unsigned short))
        [0x0000c790 to 0x0000c7bb] - fieldCommandLoad(FieldProps*, unsigned char*, unsigned char) (section .text.fieldCommandLoad(FieldProps*, unsigned char*, unsigned char))
        [0x0000c7bc to 0x0000c7e7] - menuMixersLimit(unsigned char) (section .text.menuMixersLimit(unsigned char))
        [0x0000c7e8 to 0x0000c813] - PING (section .text.PING)
        [0x0000c814 to 0x0000c83f] - menuProcIndex(unsigned char)::n_Strings (section .rodata.menuProcIndex(unsigned char)::n_Strings)
        [0x0000c840 to 0x0000c867] - mDelay (section .text.mDelay)
        [0x0000c868 to 0x0000c88f] - EFile::rm(unsigned char) (section .text.EFile::rm(unsigned char))
        [0x0000c890 to 0x0000c8b7] - EeFsAlloc() (section .text.EeFsAlloc())
        [0x0000c8b8 to 0x0000c8df] - popupCompat(unsigned char) (section .text.popupCompat(unsigned char))
        [0x0000c8e0 to 0x0000c907] - putsVolts(unsigned char, unsigned char, short, unsigned char) (section .text.putsVolts(unsigned char, unsigned char, short, unsigned char))
        [0x0000c908 to 0x0000c92f] - putsVBat(unsigned char, unsigned char, unsigned char) (section .text.putsVBat(unsigned char, unsigned char, unsigned char))
        [0x0000c930 to 0x0000c957] - lcd_plot(unsigned char, unsigned char) (section .text.lcd_plot(unsigned char, unsigned char))
        [0x0000c958 to 0x0000c97f] - A7105_AntSwitch() (section .text.A7105_AntSwitch())
        [0x0000c980 to 0x0000c9a7] - eeWaitComplete() (section .text.eeWaitComplete())
        [0x0000c9a8 to 0x0000c9cf] - switchDisplay(unsigned char, unsigned char) (section .text.switchDisplay(unsigned char, unsigned char))
        [0x0000c9d0 to 0x0000c9f7] - Uart_SendCMD(unsigned char, unsigned char, unsigned short) (section .text.Uart_SendCMD(unsigned char, unsigned char, unsigned short))
        [0x0000c9f8 to 0x0000ca1f] - startPulses() (section .text.startPulses())
        [0x0000ca20 to 0x0000ca47] - evalOffset(signed char) (section .text.evalOffset(signed char))
        [0x0000ca48 to 0x0000ca6f] - Reset_Handler (section .init)
        [0x0000ca70 to 0x0000ca93] - EFile::openRd(unsigned char) (section .text.EFile::openRd(unsigned char))
        [0x0000ca94 to 0x0000cab7] - curveAddress(unsigned char) (section .text.curveAddress(unsigned char))
        [0x0000cab8 to 0x0000cadb] - crsf_init() (section .text.crsf_init())
        [0x0000cadc to 0x0000caff] - ee_waite() (section .text.ee_waite())
        [0x0000cb00 to 0x0000cb23] - reachMixerCountLimit() (section .text.reachMixerCountLimit())
        [0x0000cb24 to 0x0000cb47] - dispFlightModename(unsigned char, unsigned char, unsigned char) (section .text.dispFlightModename(unsigned char, unsigned char, unsigned char))
        [0x0000cb48 to 0x0000cb6b] - evalChkSum() (section .text.evalChkSum())
        [0x0000cb6c to 0x0000cb8f] - LCD_DATA (section .text.LCD_DATA)
        [0x0000cb90 to 0x0000cbb3] - processCrossfireTelemetryFrame()::power_values (section .rodata.processCrossfireTelemetryFrame()::power_values)
        [0x0000cbb4 to 0x0000cbd3] - EFile::size() (section .text.EFile::size())
        [0x0000cbd4 to 0x0000cbf3] - setVolume(unsigned char) (section .text.setVolume(unsigned char))
        [0x0000cbf4 to 0x0000cc13] - chainMenu(void (*)(unsigned char)) (section .text.chainMenu(void (*)(unsigned char)))
        [0x0000cc14 to 0x0000cc33] - trace() (section .text.trace())
        [0x0000cc34 to 0x0000cc53] - crc8(unsigned char const*, unsigned int) (section .text.crc8(unsigned char const*, unsigned int))
        [0x0000cc54 to 0x0000cc73] - checkCrossfireTelemetryFrameCRC() (section .text.checkCrossfireTelemetryFrameCRC())
        [0x0000cc74 to 0x0000cc93] - processVoiceAlarms() (section .text.processVoiceAlarms())
        [0x0000cc94 to 0x0000ccb3] - fieldStringDisplay(FieldProps*, unsigned char, unsigned char) (section .text.fieldStringDisplay(FieldProps*, unsigned char, unsigned char))
        [0x0000ccb4 to 0x0000ccd3] - putsOffDecimal(unsigned char, unsigned char, unsigned short, unsigned char) (section .text.putsOffDecimal(unsigned char, unsigned char, unsigned short, unsigned char))
        [0x0000ccd4 to 0x0000ccf3] - lcdSetRefVolt(unsigned char) (section .text.lcdSetRefVolt(unsigned char))
        [0x0000ccf4 to 0x0000cd13] - backlightKey() (section .text.backlightKey())
        [0x0000cd14 to 0x0000cd33] - pauseEvents(unsigned char) (section .text.pauseEvents(unsigned char))
        [0x0000cd34 to 0x0000cd53] - menuPressed() (section .text.menuPressed())
        [0x0000cd54 to 0x0000cd73] - EeFsGetFree() (section .text.EeFsGetFree())
        [0x0000cd74 to 0x0000cd93] - SetPRTTimPeriod (section .text.SetPRTTimPeriod)
        [0x0000cd94 to 0x0000cdaf] - audioVoiceDefevent(unsigned char, unsigned char) (section .text.audioVoiceDefevent(unsigned char, unsigned char))
        [0x0000cdb0 to 0x0000cdcb] - throttleReversed() (section .text.throttleReversed())
        [0x0000cdcc to 0x0000cde7] - putWarnSwitch(unsigned char, unsigned char) (section .text.putWarnSwitch(unsigned char, unsigned char))
        [0x0000cde8 to 0x0000ce03] - modeFixValue(unsigned char) (section .text.modeFixValue(unsigned char))
        [0x0000ce04 to 0x0000ce1f] - displayTimer(unsigned char, unsigned char, unsigned char, unsigned char) (section .text.displayTimer(unsigned char, unsigned char, unsigned char, unsigned char))
        [0x0000ce20 to 0x0000ce3b] - on_voice_cb(unsigned char*, unsigned char) (section .text.on_voice_cb(unsigned char*, unsigned char))
        [0x0000ce3c to 0x0000ce57] - crsf_action() (section .text.crsf_action())
        [0x0000ce58 to 0x0000ce73] - killEvents(unsigned char) (section .text.killEvents(unsigned char))
        [0x0000ce74 to 0x0000ce8f] - TPM2_IRQHandler (section .text.TPM2_IRQHandler)
        [0x0000ce90 to 0x0000ceab] - TPM1_IRQHandler (section .text.TPM1_IRQHandler)
        [0x0000ceac to 0x0000cec7] - EnableGIO (section .text.EnableGIO)
        [0x0000cec8 to 0x0000cedf] - clearKeyEvents() (section .text.clearKeyEvents())
        [0x0000cee0 to 0x0000cef7] - lcd_rect(unsigned char, unsigned char, unsigned char, unsigned char) (section .text.lcd_rect(unsigned char, unsigned char, unsigned char, unsigned char))
        [0x0000cef8 to 0x0000cf0f] - putsAttIdxTelemItems(unsigned char, unsigned char, unsigned char, unsigned char) (section .text.putsAttIdxTelemItems(unsigned char, unsigned char, unsigned char, unsigned char))
        [0x0000cf10 to 0x0000cf27] - IS_EXPO_THROTTLE(unsigned char) (section .text.IS_EXPO_THROTTLE(unsigned char))
        [0x0000cf28 to 0x0000cf3f] - hyphinvMenuItem(unsigned char, unsigned char, unsigned char) (section .text.hyphinvMenuItem(unsigned char, unsigned char, unsigned char))
        [0x0000cf40 to 0x0000cf57] - ISR_TIMER2_OVF_vect (section .text.ISR_TIMER2_OVF_vect)
        [0x0000cf58 to 0x0000cf6f] - GetChipID (section .text.GetChipID)
        [0x0000cf70 to 0x0000cf87] - __SEGGER_init_heap (section .segger.init.__SEGGER_init_heap)
        [0x0000cf88 to 0x0000cf9f] - [.rodata..Lswitch.table.fieldUnifiedDisplay(FieldProps*, unsigned char, unsigned char)] (section .rodata..Lswitch.table.fieldUnifiedDisplay(FieldProps*, unsigned char, unsigned char))
        [0x0000cfa0 to 0x0000cfb3] - __SEGGER_RTL_init_heap (section .text.__SEGGER_RTL_init_heap)
        [0x0000cfb4 to 0x0000cfc7] - EFile::exists(unsigned char) (section .text.EFile::exists(unsigned char))
        [0x0000cfc8 to 0x0000cfdb] - EeFsFlush() (section .text.EeFsFlush())
        [0x0000cfdc to 0x0000cfef] - EeFsFlushFreelist() (section .text.EeFsFlushFreelist())
        [0x0000cff0 to 0x0000d003] - lcd_clear() (section .text.lcd_clear())
        [0x0000d004 to 0x0000d017] - idx2char(unsigned char) (section .text.idx2char(unsigned char))
        [0x0000d018 to 0x0000d02b] - checkIncDec_u0(short, unsigned char) (section .text.checkIncDec_u0(short, unsigned char))
        [0x0000d02c to 0x0000d03f] - checkIncDec_0(signed char, signed char) (section .text.checkIncDec_0(signed char, signed char))
        [0x0000d040 to 0x0000d053] - audioDefevent(unsigned char) (section .text.audioDefevent(unsigned char))
        [0x0000d054 to 0x0000d067] - resetTimer1() (section .text.resetTimer1())
        [0x0000d068 to 0x0000d07b] - displayNext() (section .text.displayNext())
        [0x0000d07c to 0x0000d08f] - clearMixes() (section .text.clearMixes())
        [0x0000d090 to 0x0000d0a3] - audioEvent(unsigned char, unsigned short) (section .text.audioEvent(unsigned char, unsigned short))
        [0x0000d0a4 to 0x0000d0b7] - DisableGIO (section .text.DisableGIO)
        [0x0000d0b8 to 0x0000d0cb] - _start (section .init._start)
        [0x0000d0cc to 0x0000d0db] - rw_0 (section .text.rw_0)
        [0x0000d0dc to 0x0000d0eb] - rs_1 (section .text.rs_1)
        [0x0000d0ec to 0x0000d0fb] - rs_0 (section .text.rs_0)
        [0x0000d0fc to 0x0000d10b] - rd_1 (section .text.rd_1)
        [0x0000d10c to 0x0000d11b] - rd_0 (section .text.rd_0)
        [0x0000d11c to 0x0000d12b] - CS_STATE(unsigned char) (section .text.CS_STATE(unsigned char))
        [0x0000d12c to 0x0000d13b] - lcdSetContrast() (section .text.lcdSetContrast())
        [0x0000d13c to 0x0000d14b] - checkIncDec_i8(signed char, signed char, signed char) (section .text.checkIncDec_i8(signed char, signed char, signed char))
        [0x0000d14c to 0x0000d15b] - mixaddress(unsigned char) (section .text.mixaddress(unsigned char))
        [0x0000d15c to 0x0000d16b] - _GLOBAL__sub_I_er9x.cpp (section .text._GLOBAL__sub_I_er9x.cpp)
        [0x0000d16c to 0x0000d17b] - _GLOBAL__sub_I_SX127x.cpp (section .text._GLOBAL__sub_I_SX127x.cpp)
        [0x0000d17c to 0x0000d18b] - TX_RX_PutVal (section .text.TX_RX_PutVal)
        [0x0000d18c to 0x0000d19b] - GetPPMTimCompareInterruptFlag (section .text.GetPPMTimCompareInterruptFlag)
        [0x0000d19c to 0x0000d1ab] - GetPPMOutState (section .text.GetPPMOutState)
        [0x0000d1ac to 0x0000d1bb] - ClearPPMTimCompareInterruptFlag (section .text.ClearPPMTimCompareInterruptFlag)
        [0x0000d1bc to 0x0000d1cb] - Buzzer_SetVal (section .text.Buzzer_SetVal)
        [0x0000d1cc to 0x0000d1db] - Buzzer_ClrVal (section .text.Buzzer_ClrVal)
        [0x0000d1dc to 0x0000d1e7] - rst_1 (section .text.rst_1)
        [0x0000d1e8 to 0x0000d1f3] - rst_0 (section .text.rst_0)
        [0x0000d1f4 to 0x0000d1ff] - cs_0 (section .text.cs_0)
        [0x0000d200 to 0x0000d20b] - backlight_on (section .text.backlight_on)
        [0x0000d20c to 0x0000d217] - backlight_off (section .text.backlight_off)
        [0x0000d218 to 0x0000d223] - a7105_csn_on (section .text.a7105_csn_on)
        [0x0000d224 to 0x0000d22f] - a7105_csn_off (section .text.a7105_csn_off)
        [0x0000d230 to 0x0000d23b] - SX127xHal::SX127xHal() (section .text.SX127xHal::SX127xHal())
        [0x0000d23c to 0x0000d247] - get_tmr10ms() (section .text.get_tmr10ms())
        [0x0000d248 to 0x0000d253] - SetPPMTimCompare (section .text.SetPPMTimCompare)
        [0x0000d254 to 0x0000d25f] - RF1_SetVal (section .text.RF1_SetVal)
        [0x0000d260 to 0x0000d26b] - RF1_ClrVal (section .text.RF1_ClrVal)
        [0x0000d26c to 0x0000d277] - RF0_SetVal (section .text.RF0_SetVal)
        [0x0000d278 to 0x0000d283] - RF0_ClrVal (section .text.RF0_ClrVal)
        [0x0000d284 to 0x0000d28f] - GetPPMTimCompare (section .text.GetPPMTimCompare)
        [0x0000d290 to 0x0000d29b] - EnablePRTTim (section .text.EnablePRTTim)
        [0x0000d29c to 0x0000d2a7] - EnablePPMTim (section .text.EnablePPMTim)
        [0x0000d2a8 to 0x0000d2b3] - EnablePPMOut (section .text.EnablePPMOut)
        [0x0000d2b4 to 0x0000d2bf] - DisablePRTTim (section .text.DisablePRTTim)
        [0x0000d2c0 to 0x0000d2cb] - DisablePPMOut (section .text.DisablePPMOut)
        [0x0000d2cc to 0x0000d3c1] - voice_numeric(short, unsigned char, unsigned char) (section .text.voice_numeric(short, unsigned char, unsigned char))
        [0x0000d3c2 to 0x0000d4a1] - EFile::writeRlc(unsigned char, unsigned char, unsigned char*, unsigned short, unsigned char) (section .text.EFile::writeRlc(unsigned char, unsigned char, unsigned char*, unsigned short, unsigned char))
        [0x0000d4a2 to 0x0000d525] - putsTime(unsigned char, unsigned char, short, unsigned char, unsigned char) (section .text.putsTime(unsigned char, unsigned char, short, unsigned char, unsigned char))
        [0x0000d526 to 0x0000d599] - intpol(short, unsigned char) (section .text.intpol(short, unsigned char))
        [0x0000d59a to 0x0000d60b] - EFile::readRlc(unsigned char*, unsigned short) (section .text.EFile::readRlc(unsigned char*, unsigned short))
        [0x0000d60c to 0x0000d677] - displayIndex(char const* const*, unsigned char, unsigned char, unsigned char) (section .text.displayIndex(char const* const*, unsigned char, unsigned char, unsigned char))
        [0x0000d678 to 0x0000d6d1] - telltale(unsigned char, signed char, signed char) (section .text.telltale(unsigned char, signed char, signed char))
        [0x0000d6d2 to 0x0000d729] - tiny_sprintf(char*, char const*, char, char, ...) (section .text.tiny_sprintf(char*, char const*, char, char, ...))
        [0x0000d72a to 0x0000d773] - lcd_hbar(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) (section .text.lcd_hbar(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char))
        [0x0000d774 to 0x0000d7b9] - lcd_rect_xor(unsigned char, unsigned char, unsigned char, unsigned char) (section .text.lcd_rect_xor(unsigned char, unsigned char, unsigned char, unsigned char))
        [0x0000d7ba to 0x0000d7fb] - getTrimFlightPhase(unsigned char, unsigned char) (section .text.getTrimFlightPhase(unsigned char, unsigned char))
        [0x0000d7fc to 0x0000d83d] - lcd_outhex4(unsigned char, unsigned char, unsigned short) (section .text.lcd_outhex4(unsigned char, unsigned char, unsigned short))
        [0x0000d83e to 0x0000d87d] - __aeabi_idiv (section .text.libc.__aeabi_idiv)
        [0x0000d87e to 0x0000d8bb] - displayOneSwitch3Pos(unsigned char, unsigned char, unsigned char) (section .text.displayOneSwitch3Pos(unsigned char, unsigned char, unsigned char))
        [0x0000d8bc to 0x0000d8f7] - expo(short, short) (section .text.expo(short, short))
        [0x0000d8f8 to 0x0000d92f] - __aeabi_uidiv (section .text.libc.__aeabi_uidiv)
        [0x0000d930 to 0x0000d967] - edit_dr_switch(unsigned char, unsigned char, signed char, unsigned char, unsigned char) (section .text.edit_dr_switch(unsigned char, unsigned char, signed char, unsigned char, unsigned char))
        [0x0000d968 to 0x0000d99b] - strstr (section .text.libc.strstr)
        [0x0000d99c to 0x0000d9cd] - lcd_putsAtt(unsigned char, unsigned char, char const*, unsigned char) (section .text.lcd_putsAtt(unsigned char, unsigned char, char const*, unsigned char))
        [0x0000d9ce to 0x0000d9fb] - memcmp (section .text.libc.memcmp)
        [0x0000d9fc to 0x0000da29] - GENERIC_CRC14::GENERIC_CRC14(unsigned short) (section .text.GENERIC_CRC14::GENERIC_CRC14(unsigned short))
        [0x0000da2a to 0x0000da57] - putsMomentDrSwitches(unsigned char, unsigned char, signed char, unsigned char) (section .text.putsMomentDrSwitches(unsigned char, unsigned char, signed char, unsigned char))
        [0x0000da58 to 0x0000da83] - A7105_WriteID(unsigned int) (section .text.A7105_WriteID(unsigned int))
        [0x0000da84 to 0x0000daaf] - A7105_ReadReg(unsigned char) (section .text.A7105_ReadReg(unsigned char))
        [0x0000dab0 to 0x0000dad9] - div (section .text.libc.div)
        [0x0000dada to 0x0000db03] - lcd_putsnAtt(unsigned char, unsigned char, char const*, unsigned char, unsigned char) (section .text.lcd_putsnAtt(unsigned char, unsigned char, char const*, unsigned char, unsigned char))
        [0x0000db04 to 0x0000db2b] - doVoiceAlarmSource(t_voiceAlarm*) (section .text.doVoiceAlarmSource(t_voiceAlarm*))
        [0x0000db2c to 0x0000db51] - lcd_puts_Pskip(unsigned char, char const*, unsigned char) (section .text.lcd_puts_Pskip(unsigned char, char const*, unsigned char))
        [0x0000db52 to 0x0000db77] - A7105_Reset() (section .text.A7105_Reset())
        [0x0000db78 to 0x0000db9b] - DoSum(unsigned char*, unsigned char) (section .text.DoSum(unsigned char*, unsigned char))
        [0x0000db9c to 0x0000dbbf] - scalerDecimal(unsigned char, unsigned char, unsigned char) (section .text.scalerDecimal(unsigned char, unsigned char, unsigned char))
        [0x0000dbc0 to 0x0000dbe1] - __aeabi_memmove (section .text.libc.__aeabi_memmove)
        [0x0000dbe2 to 0x0000dc03] - expou(unsigned short, unsigned short) (section .text.expou(unsigned short, unsigned short))
        [0x0000dc04 to 0x0000dc25] - getCurrentSwitchStates() (section .text.getCurrentSwitchStates())
        [0x0000dc26 to 0x0000dc47] - lcd_outdezAtt(unsigned char, unsigned char, short, unsigned char) (section .text.lcd_outdezAtt(unsigned char, unsigned char, short, unsigned char))
        [0x0000dc48 to 0x0000dc69] - lcd_2_digits(unsigned char, unsigned char, unsigned char, unsigned char) (section .text.lcd_2_digits(unsigned char, unsigned char, unsigned char, unsigned char))
        [0x0000dc6a to 0x0000dc89] - lcdSendCtl(unsigned char) (section .text.lcdSendCtl(unsigned char))
        [0x0000dc8a to 0x0000dca9] - stickMoveValue() (section .text.stickMoveValue())
        [0x0000dcaa to 0x0000dcc7] - __aeabi_llsr (section .text.libc.__aeabi_llsr)
        [0x0000dcc8 to 0x0000dce5] - __aeabi_llsl (section .text.libc.__aeabi_llsl)
        [0x0000dce6 to 0x0000dd03] - A7105_WriteReg(unsigned char, unsigned char) (section .text.A7105_WriteReg(unsigned char, unsigned char))
        [0x0000dd04 to 0x0000dd1f] - onoffMenuItem(unsigned char, unsigned char, char const*, unsigned char) (section .text.onoffMenuItem(unsigned char, unsigned char, char const*, unsigned char))
        [0x0000dd20 to 0x0000dd3b] - validateName(char*, unsigned char) (section .text.validateName(char*, unsigned char))
        [0x0000dd3c to 0x0000dd57] - voiceMinutes(short) (section .text.voiceMinutes(short))
        [0x0000dd58 to 0x0000dd73] - A7105_Strobe(unsigned char) (section .text.A7105_Strobe(unsigned char))
        [0x0000dd74 to 0x0000dd8d] - lcd_putsAttIdx(unsigned char, unsigned char, char const*, unsigned char, unsigned char) (section .text.lcd_putsAttIdx(unsigned char, unsigned char, char const*, unsigned char, unsigned char))
        [0x0000dd8e to 0x0000dda5] - StubbornSender::ResetState() (section .text.StubbornSender::ResetState())
        [0x0000dda6 to 0x0000ddbd] - EeFsRead(unsigned char, unsigned char) (section .text.EeFsRead(unsigned char, unsigned char))
        [0x0000ddbe to 0x0000ddd5] - crossfireTelemetryPing() (section .text.crossfireTelemetryPing())
        [0x0000ddd6 to 0x0000ddeb] - semicolonPos(char const*, unsigned char) (section .text.semicolonPos(char const*, unsigned char))
        [0x0000ddec to 0x0000de01] - EeFsSetLink(unsigned char, unsigned char) (section .text.EeFsSetLink(unsigned char, unsigned char))
        [0x0000de02 to 0x0000de17] - gvarMenuItem125(unsigned char, unsigned char, signed char, unsigned char) (section .text.gvarMenuItem125(unsigned char, unsigned char, signed char, unsigned char))
        [0x0000de18 to 0x0000de2d] - calc100toRESX(signed char) (section .text.calc100toRESX(signed char))
        [0x0000de2e to 0x0000de41] - __aeabi_memclr (section .text.libc.__aeabi_memclr)
        [0x0000de42 to 0x0000de55] - StubbornReceiver::StubbornReceiver(unsigned char) (section .text.StubbornReceiver::StubbornReceiver(unsigned char))
        [0x0000de56 to 0x0000de69] - setNameP(char*, char const*) (section .text.setNameP(char*, char const*))
        [0x0000de6a to 0x0000de7d] - lcd_xlabel_decimal(unsigned char, unsigned char, unsigned short, unsigned char, char const*) (section .text.lcd_xlabel_decimal(unsigned char, unsigned char, unsigned short, unsigned char, char const*))
        [0x0000de7e to 0x0000de8f] - onoffItem(unsigned char, unsigned char, unsigned char) (section .text.onoffItem(unsigned char, unsigned char, unsigned char))
        [0x0000de90 to 0x0000dea1] - offonItem(unsigned char, unsigned char, unsigned char) (section .text.offonItem(unsigned char, unsigned char, unsigned char))
        [0x0000dea2 to 0x0000deb3] - offonMenuItem(unsigned char, unsigned char, char const*, unsigned char) (section .text.offonMenuItem(unsigned char, unsigned char, char const*, unsigned char))
        [0x0000deb4 to 0x0000dec5] - putc_0_1(unsigned char, unsigned char, unsigned char) (section .text.putc_0_1(unsigned char, unsigned char, unsigned char))
        [0x0000dec6 to 0x0000ded5] - __aeabi_uidivmod (section .text.libc.__aeabi_uidivmod)
        [0x0000ded6 to 0x0000dee5] - putsChn(unsigned char, unsigned char, unsigned char, unsigned char) (section .text.putsChn(unsigned char, unsigned char, unsigned char, unsigned char))
        [0x0000dee6 to 0x0000def5] - TITLEP(char const*) (section .text.TITLEP(char const*))
        [0x0000def6 to 0x0000df05] - lcd_puts_Pleft(unsigned char, char const*) (section .text.lcd_puts_Pleft(unsigned char, char const*))
        [0x0000df06 to 0x0000df15] - calc1000toRESX(short) (section .text.calc1000toRESX(short))
        [0x0000df16 to 0x0000df25] - putsTimeNoAtt(unsigned char, unsigned char, short) (section .text.putsTimeNoAtt(unsigned char, unsigned char, short))
        [0x0000df26 to 0x0000df35] - getTrimValue(unsigned char, unsigned char) (section .text.getTrimValue(unsigned char, unsigned char))
        [0x0000df36 to 0x0000df45] - lcd_putsn_P(unsigned char, unsigned char, char const*, unsigned char) (section .text.lcd_putsn_P(unsigned char, unsigned char, char const*, unsigned char))
        [0x0000df46 to 0x0000df55] - A7105_Sleep() (section .text.A7105_Sleep())
        [0x0000df56 to 0x0000df63] - main (section .text.main)
        [0x0000df64 to 0x0000df71] - strlen (section .text.libc.strlen)
        [0x0000df72 to 0x0000df7f] - strcpy (section .text.libc.strcpy)
        [0x0000df80 to 0x0000df8d] - memcpy (section .text.libc.memcpy)
        [0x0000df8e to 0x0000df9b] - __aeabi_idivmod (section .text.libc.__aeabi_idivmod)
        [0x0000df9c to 0x0000dfa9] - StubbornSender::StubbornSender(unsigned char) (section .text.StubbornSender::StubbornSender(unsigned char))
        [0x0000dfaa to 0x0000dfb7] - message(char const*) (section .text.message(char const*))
        [0x0000dfb8 to 0x0000dfc5] - keyDown() (section .text.keyDown())
        [0x0000dfc6 to 0x0000dfd3] - fieldTextSelectionSave(FieldProps*) (section .text.fieldTextSelectionSave(FieldProps*))
        [0x0000dfd4 to 0x0000dfe1] - putVoiceQueueUpper(unsigned char) (section .text.putVoiceQueueUpper(unsigned char))
        [0x0000dfe2 to 0x0000dfef] - REG100_100(signed char) (section .text.REG100_100(signed char))
        [0x0000dff0 to 0x0000dffb] - switchPosition(unsigned char) (section .text.switchPosition(unsigned char))
        [0x0000dffc to 0x0000e007] - eeModelExists(unsigned char) (section .text.eeModelExists(unsigned char))
        [0x0000e008 to 0x0000e013] - getSwitch00(signed char) (section .text.getSwitch00(signed char))
        [0x0000e014 to 0x0000e01d] - EeFsGetLink(unsigned char) (section .text.EeFsGetLink(unsigned char))
        [0x0000e01e to 0x0000e027] - lcd_hline(unsigned char, unsigned char, signed char) (section .text.lcd_hline(unsigned char, unsigned char, signed char))
        [0x0000e028 to 0x0000e031] - lcd_putc(unsigned char, unsigned char, char) (section .text.lcd_putc(unsigned char, unsigned char, char))
        [0x0000e032 to 0x0000e03b] - alert(char const*) (section .text.alert(char const*))
        [0x0000e03c to 0x0000e045] - resetTimer2() (section .text.resetTimer2())
        [0x0000e046 to 0x0000e04f] - checkIncDec(signed char, signed char, signed char, unsigned char) (section .text.checkIncDec(signed char, signed char, signed char, unsigned char))
        [0x0000e050 to 0x0000e059] - lcd_puts_P(unsigned char, unsigned char, char const*) (section .text.lcd_puts_P(unsigned char, unsigned char, char const*))
        [0x0000e05a to 0x0000e063] - lcd_outdez(unsigned char, unsigned char, short) (section .text.lcd_outdez(unsigned char, unsigned char, short))
        [0x0000e064 to 0x0000e06b] - audioQueue::busy() (section .text.audioQueue::busy())
        [0x0000e06c to 0x0000e073] - A7105_SetTxRxMode(unsigned char) (section .text.A7105_SetTxRxMode(unsigned char))
        [0x0000e074 to 0x0000e07b] - putVoiceQueue(unsigned char) (section .text.putVoiceQueue(unsigned char))
        [0x0000e07c to 0x0000e083] - crsf_shutdown() (section .text.crsf_shutdown())
        [0x0000e084 to 0x0000e5e7] - font_dblsize (section .rodata.font_dblsize)
        [0x0000e5e8 to 0x0000e7d6] - font (section .rodata.font)
        [0x0000e7d7 to 0x0000e8fe] - Str_telemItems (section .rodata.Str_telemItems)
        [0x0000e8ff to 0x0000e9fe] - crc8tab (section .rodata.crc8tab)
        [0x0000e9ff to 0x0000eaa4] - Str_Chans_Gv (section .rodata.Str_Chans_Gv)
        [0x0000eaa5 to 0x0000eb21] - [.rodata..L.str.11] (section .rodata..L.str.11)
        [0x0000eb22 to 0x0000eb93] - Str_Cswitch (section .rodata.Str_Cswitch)
        [0x0000eb94 to 0x0000ebf5] - Str_Sounds (section .rodata.Str_Sounds)
        [0x0000ebf6 to 0x0000ec4d] - AFHDS2A_tel (section .rodata.AFHDS2A_tel)
        [0x0000ec4e to 0x0000ec9f] - [.rodata..L.str.52] (section .rodata..L.str.52)
        [0x0000eca0 to 0x0000eceb] - [.rodata..L.str.46] (section .rodata..L.str.46)
        [0x0000ecec to 0x0000ed36] - sticks (section .rodata.sticks)
        [0x0000ed37 to 0x0000ed81] - [.rodata..L.str.110] (section .rodata..L.str.110)
        [0x0000ed82 to 0x0000edcb] - Curve_Str (section .rodata.Curve_Str)
        [0x0000edcc to 0x0000ee12] - [.rodata..L.str.105] (section .rodata..L.str.105)
        [0x0000ee13 to 0x0000ee55] - s_charTab (section .rodata.s_charTab)
        [0x0000ee56 to 0x0000ee96] - Str_Switches (section .rodata.Str_Switches)
        [0x0000ee97 to 0x0000eed7] - [.rodata..L.str.4] (section .rodata..L.str.4)
        [0x0000eed8 to 0x0000ef16] - [.rodata..L.str.6] (section .rodata..L.str.6)
        [0x0000ef17 to 0x0000ef50] - Str_Main_Popup (section .rodata.Str_Main_Popup)
        [0x0000ef51 to 0x0000ef8a] - TelemIndex (section .rodata.TelemIndex)
        [0x0000ef8b to 0x0000efc0] - [.rodata..L.str.49] (section .rodata..L.str.49)
        [0x0000efc1 to 0x0000eff5] - [.rodata..L.str.103] (section .rodata..L.str.103)
        [0x0000eff6 to 0x0000f029] - [.rodata..L.str.107] (section .rodata..L.str.107)
        [0x0000f02a to 0x0000f05b] - AFHDS2A_A7105_regs (section .rodata.AFHDS2A_A7105_regs)
        [0x0000f05c to 0x0000f08c] - Stamps (section .rodata.Stamps)
        [0x0000f08d to 0x0000f0ba] - [.rodata..L.str.51] (section .rodata..L.str.51)
        [0x0000f0bb to 0x0000f0e8] - [.rodata..L.str.48] (section .rodata..L.str.48)
        [0x0000f0e9 to 0x0000f116] - [.rodata..L.str.16] (section .rodata..L.str.16)
        [0x0000f117 to 0x0000f141] - [.rodata..L.str.93] (section .rodata..L.str.93)
        [0x0000f142 to 0x0000f16c] - [.rodata..L.str.13] (section .rodata..L.str.13)
        [0x0000f16d to 0x0000f197] - [.rodata..L.str.115] (section .rodata..L.str.115)
        [0x0000f198 to 0x0000f1c1] - UnitsString (section .rodata.UnitsString)
        [0x0000f1c2 to 0x0000f1ea] - Str_Gv_Source (section .rodata.Str_Gv_Source)
        [0x0000f1eb to 0x0000f213] - [.rodata..L.str.71] (section .rodata..L.str.71)
        [0x0000f214 to 0x0000f23b] - [.rodata..L.str.47] (section .rodata..L.str.47)
        [0x0000f23c to 0x0000f262] - MixPopList (section .rodata.MixPopList)
        [0x0000f263 to 0x0000f288] - ModelPopList (section .rodata.ModelPopList)
        [0x0000f289 to 0x0000f2ae] - [.rodata..L.str.99] (section .rodata..L.str.99)
        [0x0000f2af to 0x0000f2d3] - [.rodata..L.str.72] (section .rodata..L.str.72)
        [0x0000f2d4 to 0x0000f2f8] - [.rodata..L.str.6] (section .rodata..L.str.6)
        [0x0000f2f9 to 0x0000f31a] - [.rodata..L.str.108] (section .rodata..L.str.108)
        [0x0000f31b to 0x0000f33b] - [.rodata..L.str.5] (section .rodata..L.str.5)
        [0x0000f33c to 0x0000f35b] - [.rodata..L.str.75] (section .rodata..L.str.75)
        [0x0000f35c to 0x0000f37b] - [.rodata..L.str.58] (section .rodata..L.str.58)
        [0x0000f37c to 0x0000f39b] - [.rodata..L.str.113] (section .rodata..L.str.113)
        [0x0000f39c to 0x0000f3b9] - SW_3_IDX (section .rodata.SW_3_IDX)
        [0x0000f3ba to 0x0000f3d7] - idx_to_afhds2a (section .rodata.idx_to_afhds2a)
        [0x0000f3d8 to 0x0000f3f5] - [.rodata..L.str.94] (section .rodata..L.str.94)
        [0x0000f3f6 to 0x0000f413] - [.rodata..L.str.27] (section .rodata..L.str.27)
        [0x0000f414 to 0x0000f430] - [.rodata..L.str.101] (section .rodata..L.str.101)
        [0x0000f431 to 0x0000f44c] - [.rodata..L.str.15] (section .rodata..L.str.15)
        [0x0000f44d to 0x0000f468] - [.rodata..L.str.104] (section .rodata..L.str.104)
        [0x0000f469 to 0x0000f483] - [.rodata..L.str.86] (section .rodata..L.str.86)
        [0x0000f484 to 0x0000f49d] - [.rodata..L.str.54] (section .rodata..L.str.54)
        [0x0000f49e to 0x0000f4b6] - [.rodata..L.str.17] (section .rodata..L.str.17)
        [0x0000f4b7 to 0x0000f4ce] - bchout_ar (section .rodata.bchout_ar)
        [0x0000f4cf to 0x0000f4e6] - [.rodata..L.str.116] (section .rodata..L.str.116)
        [0x0000f4e7 to 0x0000f4fe] - [.rodata..L.str.111] (section .rodata..L.str.111)
        [0x0000f4ff to 0x0000f515] - [.rodata..L.str.35] (section .rodata..L.str.35)
        [0x0000f516 to 0x0000f52b] - Str_On_Off_Both (section .rodata.Str_On_Off_Both)
        [0x0000f52c to 0x0000f541] - [.rodata..L.str.78] (section .rodata..L.str.78)
        [0x0000f542 to 0x0000f557] - [.rodata..L.str.76] (section .rodata..L.str.76)
        [0x0000f558 to 0x0000f56d] - [.rodata..L.str.2] (section .rodata..L.str.2)
        [0x0000f56e to 0x0000f582] - [.rodata..L.str.2] (section .rodata..L.str.2)
        [0x0000f583 to 0x0000f596] - [.rodata..L.str.44] (section .rodata..L.str.44)
        [0x0000f597 to 0x0000f5a9] - [.rodata..L.str.34] (section .rodata..L.str.34)
        [0x0000f5aa to 0x0000f5bc] - [.rodata..L.str.3] (section .rodata..L.str.3)
        [0x0000f5bd to 0x0000f5ce] - modi12x3 (section .rodata.modi12x3)
        [0x0000f5cf to 0x0000f5e0] - [.rodata..L.str.69] (section .rodata..L.str.69)
        [0x0000f5e1 to 0x0000f5f2] - [.rodata..L.str.5] (section .rodata..L.str.5)
        [0x0000f5f3 to 0x0000f604] - [.rodata..L.str.25] (section .rodata..L.str.25)
        [0x0000f605 to 0x0000f616] - [.rodata..L.str.23] (section .rodata..L.str.23)
        [0x0000f617 to 0x0000f627] - menuWhenDone (section .rodata.menuWhenDone)
        [0x0000f628 to 0x0000f638] - [.rodata..L.str.67] (section .rodata..L.str.67)
        [0x0000f639 to 0x0000f649] - [.rodata..L.str.50] (section .rodata..L.str.50)
        [0x0000f64a to 0x0000f65a] - [.rodata..L.str.41] (section .rodata..L.str.41)
        [0x0000f65b to 0x0000f66b] - [.rodata..L.str.18] (section .rodata..L.str.18)
        [0x0000f66c to 0x0000f67c] - [.rodata..L.str.119] (section .rodata..L.str.119)
        [0x0000f67d to 0x0000f68d] - [.rodata..L.str.117] (section .rodata..L.str.117)
        [0x0000f68e to 0x0000f69e] - [.rodata..L.str.102] (section .rodata..L.str.102)
        [0x0000f69f to 0x0000f6ae] - stickScramble (section .rodata.stickScramble)
        [0x0000f6af to 0x0000f6be] - Str_EEPROM_Overflow (section .rodata.Str_EEPROM_Overflow)
        [0x0000f6bf to 0x0000f6ce] - [.rodata..L.str.74] (section .rodata..L.str.74)
        [0x0000f6cf to 0x0000f6de] - [.rodata..L.str.62] (section .rodata..L.str.62)
        [0x0000f6df to 0x0000f6ee] - [.rodata..L.str.4] (section .rodata..L.str.4)
        [0x0000f6ef to 0x0000f6fe] - [.rodata..L.str.21] (section .rodata..L.str.21)
        [0x0000f6ff to 0x0000f70e] - [.rodata..L.str.121] (section .rodata..L.str.121)
        [0x0000f70f to 0x0000f71e] - [.rodata..L.str.120] (section .rodata..L.str.120)
        [0x0000f71f to 0x0000f72e] - [.rodata..L.str.12] (section .rodata..L.str.12)
        [0x0000f72f to 0x0000f73e] - [.rodata..L.str.106] (section .rodata..L.str.106)
        [0x0000f73f to 0x0000f74d] - Str_Beep_Countdown (section .rodata.Str_Beep_Countdown)
        [0x0000f74e to 0x0000f75c] - csTypeTable (section .rodata.csTypeTable)
        [0x0000f75d to 0x0000f76b] - [.rodata..L.str.96] (section .rodata..L.str.96)
        [0x0000f76c to 0x0000f77a] - [.rodata..L.str.90] (section .rodata..L.str.90)
        [0x0000f77b to 0x0000f789] - [.rodata..L.str.6] (section .rodata..L.str.6)
        [0x0000f78a to 0x0000f798] - [.rodata..L.str.5] (section .rodata..L.str.5)
        [0x0000f799 to 0x0000f7a7] - [.rodata..L.str.4] (section .rodata..L.str.4)
        [0x0000f7a8 to 0x0000f7b6] - [.rodata..L.str.12] (section .rodata..L.str.12)
        [0x0000f7b7 to 0x0000f7c5] - [.rodata..L.str.114] (section .rodata..L.str.114)
        [0x0000f7c6 to 0x0000f7d4] - [.rodata..L.str.11] (section .rodata..L.str.11)
        [0x0000f7d5 to 0x0000f7e2] - [.rodata..L.str.87] (section .rodata..L.str.87)
        [0x0000f7e3 to 0x0000f7f0] - [.rodata..L.str.7] (section .rodata..L.str.7)
        [0x0000f7f1 to 0x0000f7fe] - [.rodata..L.str.68] (section .rodata..L.str.68)
        [0x0000f7ff to 0x0000f80c] - [.rodata..L.str.53] (section .rodata..L.str.53)
        [0x0000f80d to 0x0000f81a] - [.rodata..L.str.3] (section .rodata..L.str.3)
        [0x0000f81b to 0x0000f828] - [.rodata..L.str.100] (section .rodata..L.str.100)
        [0x0000f829 to 0x0000f835] - [.rodata..L.str.7] (section .rodata..L.str.7)
        [0x0000f836 to 0x0000f842] - [.rodata..L.str.63] (section .rodata..L.str.63)
        [0x0000f843 to 0x0000f84f] - [.rodata..L.str.22] (section .rodata..L.str.22)
        [0x0000f850 to 0x0000f85c] - [.rodata..L.str] (section .rodata..L.str)
        [0x0000f85d to 0x0000f868] - Lcdinit (section .rodata.Lcdinit)
        [0x0000f869 to 0x0000f874] - Str_minute_Beep (section .rodata.Str_minute_Beep)
        [0x0000f875 to 0x0000f880] - Str_Calibration (section .rodata.Str_Calibration)
        [0x0000f881 to 0x0000f88c] - Str_AudioHaptic (section .rodata.Str_AudioHaptic)
        [0x0000f88d to 0x0000f898] - [.rodata..L.str.8] (section .rodata..L.str.8)
        [0x0000f899 to 0x0000f8a4] - [.rodata..L.str.77] (section .rodata..L.str.77)
        [0x0000f8a5 to 0x0000f8b0] - [.rodata..L.str.70] (section .rodata..L.str.70)
        [0x0000f8b1 to 0x0000f8bc] - [.rodata..L.str.56] (section .rodata..L.str.56)
        [0x0000f8bd to 0x0000f8c8] - [.rodata..L.str.19] (section .rodata..L.str.19)
        [0x0000f8c9 to 0x0000f8d4] - [.rodata..L.str.112] (section .rodata..L.str.112)
        [0x0000f8d5 to 0x0000f8df] - Str_heli_setup (section .rodata.Str_heli_setup)
        [0x0000f8e0 to 0x0000f8ea] - Str_Cswitches (section .rodata.Str_Cswitches)
        [0x0000f8eb to 0x0000f8f5] - Str_Globals (section .rodata.Str_Globals)
        [0x0000f8f6 to 0x0000f900] - Str_Safety (section .rodata.Str_Safety)
        [0x0000f901 to 0x0000f90b] - [.rodata..L.str.91] (section .rodata..L.str.91)
        [0x0000f90c to 0x0000f916] - [.rodata..L.str.9] (section .rodata..L.str.9)
        [0x0000f917 to 0x0000f921] - [.rodata..L.str.79] (section .rodata..L.str.79)
        [0x0000f922 to 0x0000f92c] - [.rodata..L.str.64] (section .rodata..L.str.64)
        [0x0000f92d to 0x0000f937] - [.rodata..L.str.1] (section .rodata..L.str.1)
        [0x0000f938 to 0x0000f942] - [.rodata..L.str] (section .rodata..L.str)
        [0x0000f943 to 0x0000f94c] - Str_Telemetry (section .rodata.Str_Telemetry)
        [0x0000f94d to 0x0000f956] - Str_DiagSwtch (section .rodata.Str_DiagSwtch)
        [0x0000f957 to 0x0000f960] - Str_TRE012AG (section .rodata.Str_TRE012AG)
        [0x0000f961 to 0x0000f96a] - [.rodata..L.str.97] (section .rodata..L.str.97)
        [0x0000f96b to 0x0000f974] - [.rodata..L.str.81] (section .rodata..L.str.81)
        [0x0000f975 to 0x0000f97e] - [.rodata..L.str.55] (section .rodata..L.str.55)
        [0x0000f97f to 0x0000f988] - [.rodata..L.str.29] (section .rodata..L.str.29)
        [0x0000f989 to 0x0000f992] - [.rodata..L.str.10] (section .rodata..L.str.10)
        [0x0000f993 to 0x0000f99c] - [.rodata..L.str] (section .rodata..L.str)
        [0x0000f99d to 0x0000f9a5] - Str_Protocol (section .rodata.Str_Protocol)
        [0x0000f9a6 to 0x0000f9ae] - Str_Hardware (section .rodata.Str_Hardware)
        [0x0000f9af to 0x0000f9b7] - Str_Controls (section .rodata.Str_Controls)
        [0x0000f9b8 to 0x0000f9c0] - [.rodata..L.str.98] (section .rodata..L.str.98)
        [0x0000f9c1 to 0x0000f9c9] - [.rodata..L.str.89] (section .rodata..L.str.89)
        [0x0000f9ca to 0x0000f9d2] - [.rodata..L.str.88] (section .rodata..L.str.88)
        [0x0000f9d3 to 0x0000f9db] - [.rodata..L.str.84] (section .rodata..L.str.84)
        [0x0000f9dc to 0x0000f9e4] - [.rodata..L.str.8] (section .rodata..L.str.8)
        [0x0000f9e5 to 0x0000f9ed] - [.rodata..L.str.8] (section .rodata..L.str.8)
        [0x0000f9ee to 0x0000f9f6] - [.rodata..L.str.7] (section .rodata..L.str.7)
        [0x0000f9f7 to 0x0000f9ff] - [.rodata..L.str.45] (section .rodata..L.str.45)
        [0x0000fa00 to 0x0000fa08] - [.rodata..L.str.33] (section .rodata..L.str.33)
        [0x0000fa09 to 0x0000fa11] - [.rodata..L.str.30] (section .rodata..L.str.30)
        [0x0000fa12 to 0x0000fa1a] - [.rodata..L.str.24] (section .rodata..L.str.24)
        [0x0000fa1b to 0x0000fa22] - per10ms()::crossTrim (section .rodata.per10ms()::crossTrim)
        [0x0000fa23 to 0x0000fa2a] - UnitsText (section .rodata.UnitsText)
        [0x0000fa2b to 0x0000fa32] - _bitmask (section .rodata._bitmask)
        [0x0000fa33 to 0x0000fa3a] - Str_Expo (section .rodata.Str_Expo)
        [0x0000fa3b to 0x0000fa42] - rate (section .rodata.rate)
        [0x0000fa43 to 0x0000fa4a] - Str_Version (section .rodata.Str_Version)
        [0x0000fa4b to 0x0000fa52] - Str_Trainer (section .rodata.Str_Trainer)
        [0x0000fa53 to 0x0000fa5a] - Str_General (section .rodata.Str_General)
        [0x0000fa5b to 0x0000fa62] - Str_Display (section .rodata.Str_Display)
        [0x0000fa63 to 0x0000fa6a] - Str_DiagAna (section .rodata.Str_DiagAna)
        [0x0000fa6b to 0x0000fa72] - UnitsVoice (section .rodata.UnitsVoice)
        [0x0000fa73 to 0x0000fa7a] - [.rodata..L.str.85] (section .rodata..L.str.85)
        [0x0000fa7b to 0x0000fa82] - [.rodata..L.str.66] (section .rodata..L.str.66)
        [0x0000fa83 to 0x0000fa8a] - [.rodata..L.str.59] (section .rodata..L.str.59)
        [0x0000fa8b to 0x0000fa92] - [.rodata..L.str.4] (section .rodata..L.str.4)
        [0x0000fa93 to 0x0000fa9a] - [.rodata..L.str.26] (section .rodata..L.str.26)
        [0x0000fa9b to 0x0000faa2] - [.rodata..L.str.109] (section .rodata..L.str.109)
        [0x0000faa3 to 0x0000faa9] - Str_Alert (section .rodata.Str_Alert)
        [0x0000faaa to 0x0000fab0] - ChannelToPin (section .rodata.ChannelToPin)
        [0x0000fab1 to 0x0000fab7] - Str_limits (section .rodata.Str_limits)
        [0x0000fab8 to 0x0000fabe] - Str_Curves (section .rodata.Str_Curves)
        [0x0000fabf to 0x0000fac5] - Str_Alarms (section .rodata.Str_Alarms)
        [0x0000fac6 to 0x0000facc] - [.rodata..L.str.80] (section .rodata..L.str.80)
        [0x0000facd to 0x0000fad3] - [.rodata..L.str.61] (section .rodata..L.str.61)
        [0x0000fad4 to 0x0000fada] - [.rodata..L.str.2] (section .rodata..L.str.2)
        [0x0000fadb to 0x0000fae1] - [.rodata..L.str.10] (section .rodata..L.str.10)
        [0x0000fae2 to 0x0000fae8] - [.rodata..L.str.1] (section .rodata..L.str.1)
        [0x0000fae9 to 0x0000faee] - Str_Timer (section .rodata.Str_Timer)
        [0x0000faef to 0x0000faf4] - Str_Modes (section .rodata.Str_Modes)
        [0x0000faf5 to 0x0000fafa] - Str_Mixer (section .rodata.Str_Mixer)
        [0x0000fafb to 0x0000fb00] - Str_Curve (section .rodata.Str_Curve)
        [0x0000fb01 to 0x0000fb06] - Str_1_RETA (section .rodata.Str_1_RETA)
        [0x0000fb07 to 0x0000fb0c] - [.rodata..L.str.92] (section .rodata..L.str.92)
        [0x0000fb0d to 0x0000fb12] - [.rodata..L.str.82] (section .rodata..L.str.82)
        [0x0000fb13 to 0x0000fb18] - [.rodata..L.str.31] (section .rodata..L.str.31)
        [0x0000fb19 to 0x0000fb1e] - [.rodata..L.str.14] (section .rodata..L.str.14)
        [0x0000fb1f to 0x0000fb24] - [.rodata..L.str.13] (section .rodata..L.str.13)
        [0x0000fb25 to 0x0000fb29] - Str_Name (section .rodata.Str_Name)
        [0x0000fb2a to 0x0000fb2e] - Str_Hyphens (section .rodata.Str_Hyphens)
        [0x0000fb2f to 0x0000fb33] - [.rodata..L.str.73] (section .rodata..L.str.73)
        [0x0000fb34 to 0x0000fb38] - [.rodata..L.str.57] (section .rodata..L.str.57)
        [0x0000fb39 to 0x0000fb3d] - [.rodata..L.str.5] (section .rodata..L.str.5)
        [0x0000fb3e to 0x0000fb42] - [.rodata..L.str.38] (section .rodata..L.str.38)
        [0x0000fb43 to 0x0000fb47] - [.rodata..L.str.32] (section .rodata..L.str.32)
        [0x0000fb48 to 0x0000fb4c] - [.rodata..L.str.3] (section .rodata..L.str.3)
        [0x0000fb4d to 0x0000fb51] - [.rodata..L.str.20] (section .rodata..L.str.20)
        [0x0000fb52 to 0x0000fb55] - menuProc0(unsigned char)::xt (section .rodata.menuProc0(unsigned char)::xt)
        [0x0000fb56 to 0x0000fb59] - Str_ON (section .rodata.Str_ON)
        [0x0000fb5a to 0x0000fb5d] - Str_OFF (section .rodata.Str_OFF)
        [0x0000fb5e to 0x0000fb61] - [.rodata..L.str.95] (section .rodata..L.str.95)
        [0x0000fb62 to 0x0000fb65] - [.rodata..L.str.65] (section .rodata..L.str.65)
        [0x0000fb66 to 0x0000fb69] - [.rodata..L.str.60] (section .rodata..L.str.60)
        [0x0000fb6a to 0x0000fb6d] - [.rodata..L.str.40] (section .rodata..L.str.40)
        [0x0000fb6e to 0x0000fb71] - [.rodata..L.str.3] (section .rodata..L.str.3)
        [0x0000fb72 to 0x0000fb75] - [.rodata..L.str.28] (section .rodata..L.str.28)
        [0x0000fb76 to 0x0000fb79] - [.rodata..L.str.118] (section .rodata..L.str.118)
        [0x0000fb7a to 0x0000fb7d] - [.rodata..L.str.1] (section .rodata..L.str.1)
        [0x0000fb7e to 0x0000fb81] - [.rodata..L.str.1] (section .rodata..L.str.1)
        [0x0000fb82 to 0x0000fb84] - Str_SC (section .rodata.Str_SC)
        [0x0000fb85 to 0x0000fb87] - Str_GV (section .rodata.Str_GV)
        [0x0000fb88 to 0x0000fb8a] - [.rodata..L.str.9] (section .rodata..L.str.9)
        [0x0000fb8b to 0x0000fb8d] - [.rodata..L.str.83] (section .rodata..L.str.83)
        [0x0000fb8e to 0x0000fb90] - [.rodata..L.str.43] (section .rodata..L.str.43)
        [0x0000fb91 to 0x0000fb93] - [.rodata..L.str.42] (section .rodata..L.str.42)
        [0x0000fb94 to 0x0000fb96] - [.rodata..L.str.39] (section .rodata..L.str.39)
        [0x0000fb97 to 0x0000fb99] - [.rodata..L.str.2] (section .rodata..L.str.2)
        [0x0000fb9a to 0x0000fb9c] - [.rodata..L.str] (section .rodata..L.str)
        [0x0000fba0 to 0x0000fba3] - [.init_array] (section .init_array)
        [0x0000fba4 to 0x0000fba7] - [.init_array] (section .init_array)
        [0x0000fba8 to 0x0000fbab] - [.init_array] (section .init_array)
        [0x0000fbac to 0x0000fbd3] - __SEGGER_init_table__ (section .segger.init.table)
        [0x0000fbd4 to 0x0000fbf7] - __SEGGER_init_data__ (section .segger.init.data)
        [0x0000fbf8 to 0x0000fc17] - __SEGGER_init_ctors (section .segger.init.__SEGGER_init_ctors)
        [0x0000fc18 to 0x0000fc2b] - __SEGGER_init_copy (section .segger.init.__SEGGER_init_copy)
        [0x0000fc2c to 0x0000fc3d] - __SEGGER_init_zero (section .segger.init.__SEGGER_init_zero)
      Start program header at 0x1ffff800
        [0x1ffff800 to 0x1ffff807] - AFHDS2A_tel_status (section .bss.AFHDS2A_tel_status)
        [0x1ffff808 to 0x1ffffc07] - DisplayBuf (section .bss.DisplayBuf)
        [0x1ffffc08 to 0x1ffffe07] - reusableBuffer (section .bss.reusableBuffer)
        [0x1ffffe08 to 0x1fffff07] - Output (section .bss.Output)
        [0x1fffff08 to 0x1fffffb3] - AFHDS2A_tel_data (section .bss.AFHDS2A_tel_data)
        [0x1fffffb4 to 0x20000003] - Fade (section .bss.Fade)
        [0x20000004 to 0x20000044] - g_crossfire (section .bss.g_crossfire)
        [0x20000045 to 0x20000045] - voice_tx_idx (section .bss.voice_tx_idx)
        [0x20000046 to 0x20000047] - tmrEEPROM (section .bss.tmrEEPROM)
        [0x20000048 to 0x20000087] - eeFs (section .bss.eeFs)
        [0x20000088 to 0x200000b7] - Radio (section .bss.Radio)
        [0x200000b8 to 0x200000df] - packet (section .bss.packet)
        [0x200000e0 to 0x200000f3] - g_menuStack (section .bss.g_menuStack)
        [0x200000f4 to 0x20000103] - outputTelemetryBuffer (section .bss.outputTelemetryBuffer)
        [0x20000104 to 0x20000113] - MspSender (section .bss.MspSender)
        [0x20000114 to 0x2000011f] - i2c_buffer (section .bss.i2c_buffer)
        [0x20000120 to 0x2000012b] - TelemetryReceiver (section .bss.TelemetryReceiver)
        [0x2000012c to 0x20000137] - LQCalc (section .bss.LQCalc)
        [0x20000138 to 0x20000141] - voice_uart_send_buf (section .bss.voice_uart_send_buf)
        [0x20000142 to 0x20000143] - g_tmr16KHz (section .bss.g_tmr16KHz)
        [0x20000144 to 0x20000147] - telemetryErrors (section .bss.telemetryErrors)
        [0x20000148 to 0x2000014b] - hal (section .bss.hal)
        [0x2000014c to 0x2000014f] - g_voice_cb (section .bss.g_voice_cb)
        [0x20000150 to 0x20000153] - g_tmr10ms (section .bss.g_tmr10ms)
        [0x20000154 to 0x20000157] - g_elrs_update_rate (section .bss.g_elrs_update_rate)
        [0x20000158 to 0x2000015b] - g_elrs_lag (section .bss.g_elrs_lag)
        [0x2000015c to 0x2000015f] - fieldTimeout (section .bss.fieldTimeout)
        [0x20000160 to 0x20000163] - __SEGGER_RTL_heap_globals (section .bss.__SEGGER_RTL_heap_globals)
        [0x20000164 to 0x20000167] - perMain()::lastTMR (section .bss.perMain()::lastTMR)
        [0x20000168 to 0x2000016b] - SX127xHal::instance (section .bss.SX127xHal::instance)
        [0x2000016c to 0x2000016f] - SX127xDriver::instance (section .bss.SX127xDriver::instance)
        [0x20000170 to 0x20000173] - g_crsf_read_callback (section .bss.g_crsf_read_callback)
        [0x20000174 to 0x20000177] - fieldPopup (section .bss.fieldPopup)
        [0x20000178 to 0x2000017b] - SPI_BufferPtr (section .bss.SPI_BufferPtr)
        [0x2000017c to 0x2000017f] - ID (section .bss.ID)
        [0x20000180 to 0x20000183] - AlertMessage (section .bss.AlertMessage)
        [0x20000184 to 0x20000385] - ota_crc (section .bss.ota_crc)
        [0x20000386 to 0x20000415] - pulses2MHz (section .bss.pulses2MHz)
        [0x20000416 to 0x2000047f] - Xmem (section .bss.Xmem)
        [0x20000480 to 0x200004a3] - Voice (section .bss.Voice)
        [0x200004a4 to 0x200004c3] - s_timer (section .bss.s_timer)
        [0x200004c4 to 0x200004e3] - g_chans512 (section .bss.g_chans512)
        [0x200004e4 to 0x20000503] - Ex_chans (section .bss.Ex_chans)
        [0x20000504 to 0x2000051b] - CsTimer (section .bss.CsTimer)
        [0x2000051c to 0x2000052b] - s_anaFilt (section .bss.s_anaFilt)
        [0x2000052c to 0x2000053b] - g_ppmIns (section .bss.g_ppmIns)
        [0x2000053c to 0x2000054b] - Nvs_timer (section .bss.Nvs_timer)
        [0x2000054c to 0x20000559] - calibratedStick (section .bss.calibratedStick)
        [0x2000055a to 0x20000563] - theWriteFile (section .bss.theWriteFile)
        [0x20000564 to 0x2000056d] - theFile (section .bss.theFile)
        [0x2000056e to 0x20000577] - P1values (section .bss.P1values)
        [0x20000578 to 0x2000057f] - TimeGlobals (section .bss.TimeGlobals)
        [0x20000580 to 0x20000585] - Inactivity (section .bss.Inactivity)
        [0x20000586 to 0x20000587] - g_latency (section .bss.g_latency)
        [0x20000588 to 0x20000589] - g_LightOffCounter (section .bss.g_LightOffCounter)
        [0x2000058a to 0x2000058b] - trace()::s_time (section .bss.trace()::s_time)
        [0x2000058c to 0x2000058d] - ActionAFHDS2A::packet_counter (section .bss.ActionAFHDS2A::packet_counter)
        [0x2000058e to 0x2000058f] - mainSequence()::timer (section .bss.mainSequence()::timer)
        [0x20000590 to 0x20000591] - s_eeDirtyTime10ms (section .bss.s_eeDirtyTime10ms)
        [0x20000592 to 0x20000593] - SPI_Size (section .bss.SPI_Size)
        [0x20000594 to 0x20000595] - GAltOffset (section .bss.GAltOffset)
        [0x20000596 to 0x20000597] - B3_comp_value (section .bss.B3_comp_value)
        [0x20000598 to 0x20000599] - AltOffset (section .bss.AltOffset)
        [0x2000059a to 0x20000983] - g_model (section .bss.g_model)
        [0x20000984 to 0x20000a83] - fields (section .bss.fields)
        [0x20000a84 to 0x20000b03] - telemetryRxBuffer (section .bss.telemetryRxBuffer)
        [0x20000b04 to 0x20000b79] - g_eeGeneral (section .bss.g_eeGeneral)
        [0x20000b7a to 0x20000bb1] - audio (section .bss.audio)
        [0x20000bb2 to 0x20000bde] - keys (section .bss.keys)
        [0x20000bdf to 0x20000c09] - AFHDS2A_tel_res_cnt (section .bss.AFHDS2A_tel_res_cnt)
        [0x20000c0a to 0x20000c19] - hopping_frequency (section .bss.hopping_frequency)
        [0x20000c1a to 0x20000c25] - Last_switch (section .bss.Last_switch)
        [0x20000c26 to 0x20000c2f] - voice_uart_recv_buf (section .bss.voice_uart_recv_buf)
        [0x20000c30 to 0x20000c39] - TimerConfig (section .bss.TimerConfig)
        [0x20000c3a to 0x20000c42] - Rotary (section .bss.Rotary)
        [0x20000c43 to 0x20000c4a] - deviceIds (section .bss.deviceIds)
        [0x20000c4b to 0x20000c52] - Nvs_state (section .bss.Nvs_state)
        [0x20000c53 to 0x20000c56] - phyStick (section .bss.phyStick)
        [0x20000c57 to 0x20000c5a] - PopupData (section .bss.PopupData)
        [0x20000c5b to 0x20000c5d] - MenuControl (section .bss.MenuControl)
        [0x20000c5e to 0x20000c5e] - voice_rx_idx (section .bss.voice_rx_idx)
        [0x20000c5f to 0x20000c5f] - valuesBufferOffset (section .bss.valuesBufferOffset)
        [0x20000c60 to 0x20000c60] - tick10ms (section .bss.tick10ms)
        [0x20000c61 to 0x20000c61] - telemetryRxBufferCount (section .bss.telemetryRxBufferCount)
        [0x20000c62 to 0x20000c62] - sysFlags (section .bss.sysFlags)
        [0x20000c63 to 0x20000c63] - stickMoved (section .bss.stickMoved)
        [0x20000c64 to 0x20000c64] - statusComplete (section .bss.statusComplete)
        [0x20000c65 to 0x20000c65] - serialDat0 (section .bss.serialDat0)
        [0x20000c66 to 0x20000c66] - scroll_disabled (section .bss.scroll_disabled)
        [0x20000c67 to 0x20000c67] - scrollUD (section .bss.scrollUD)
        [0x20000c68 to 0x20000c68] - scrollLR (section .bss.scrollLR)
        [0x20000c69 to 0x20000c69] - s_pgOfs (section .bss.s_pgOfs)
        [0x20000c6a to 0x20000c6a] - s_noHi (section .bss.s_noHi)
        [0x20000c6b to 0x20000c6b] - s_moveMode (section .bss.s_moveMode)
        [0x20000c6c to 0x20000c6c] - s_mixMaxSel (section .bss.s_mixMaxSel)
        [0x20000c6d to 0x20000c6d] - s_evt (section .bss.s_evt)
        [0x20000c6e to 0x20000c6e] - s_editing (section .bss.s_editing)
        [0x20000c6f to 0x20000c6f] - s_editMode (section .bss.s_editMode)
        [0x20000c70 to 0x20000c70] - reloadFolder (section .bss.reloadFolder)
        [0x20000c71 to 0x20000c71] - pxxFlag (section .bss.pxxFlag)
        [0x20000c72 to 0x20000c72] - protocol_flags (section .bss.protocol_flags)
        [0x20000c73 to 0x20000c73] - ppmInAvailable (section .bss.ppmInAvailable)
        [0x20000c74 to 0x20000c74] - plotType (section .bss.plotType)
        [0x20000c75 to 0x20000c75] - pageOffset (section .bss.pageOffset)
        [0x20000c76 to 0x20000c76] - packet_count (section .bss.packet_count)
        [0x20000c77 to 0x20000c77] - outputTelemetryBufferTrigger (section .bss.outputTelemetryBufferTrigger)
        [0x20000c78 to 0x20000c78] - outputTelemetryBufferSize (section .bss.outputTelemetryBufferSize)
        [0x20000c79 to 0x20000c79] - namesBufferOffset (section .bss.namesBufferOffset)
        [0x20000c7a to 0x20000c7a] - mixToDelete (section .bss.mixToDelete)
        [0x20000c7b to 0x20000c7b] - hopping_frequency_no (section .bss.hopping_frequency_no)
        [0x20000c7c to 0x20000c7c] - heartbeat (section .bss.heartbeat)
        [0x20000c7d to 0x20000c7d] - g_vbat100mV (section .bss.g_vbat100mV)
        [0x20000c7e to 0x20000c7e] - g_posHorz (section .bss.g_posHorz)
        [0x20000c7f to 0x20000c7f] - g_menuStackPtr (section .bss.g_menuStackPtr)
        [0x20000c80 to 0x20000c80] - g_blinkTmr10ms (section .bss.g_blinkTmr10ms)
        [0x20000c81 to 0x20000c81] - folderAccess (section .bss.folderAccess)
        [0x20000c82 to 0x20000c82] - fields_count (section .bss.fields_count)
        [0x20000c83 to 0x20000c83] - fieldsLen (section .bss.fieldsLen)
        [0x20000c84 to 0x20000c84] - fieldDataLen (section .bss.fieldDataLen)
        [0x20000c85 to 0x20000c85] - fieldChunk (section .bss.fieldChunk)
        [0x20000c86 to 0x20000c86] - edit (section .bss.edit)
        [0x20000c87 to 0x20000c87] - devicesLen (section .bss.devicesLen)
        [0x20000c88 to 0x20000c88] - deviceIsELRS_TX (section .bss.deviceIsELRS_TX)
        [0x20000c89 to 0x20000c89] - bpanaCenter (section .bss.bpanaCenter)
        [0x20000c8a to 0x20000c8a] - bind_phase (section .bss.bind_phase)
        [0x20000c8b to 0x20000c8b] - allParamsLoaded (section .bss.allParamsLoaded)
        [0x20000c8c to 0x20000c8c] - MState2::check_columns(unsigned char, unsigned char)::lateUp (section .bss.MState2::check_columns(unsigned char, unsigned char)::lateUp)
        [0x20000c8d to 0x20000c8d] - audioQueue::driver()::toneCounter (section .bss.audioQueue::driver()::toneCounter)
        [0x20000c8e to 0x20000c8e] - perMain()::repeater (section .bss.perMain()::repeater)
        [0x20000c8f to 0x20000c8f] - perMain()::alertKey (section .bss.perMain()::alertKey)
        [0x20000c90 to 0x20000c90] - perMain()::s_batCheck (section .bss.perMain()::s_batCheck)
        [0x20000c91 to 0x20000c91] - menuProc0(unsigned char)::trimSwLock (section .bss.menuProc0(unsigned char)::trimSwLock)
        [0x20000c92 to 0x20000c92] - per10ms()::current (section .bss.per10ms()::current)
        [0x20000c93 to 0x20000c93] - perOut(short*, unsigned char)::sticky (section .bss.perOut(short*, unsigned char)::sticky)
        [0x20000c94 to 0x20000c94] - check_backlight_voice()::tmr10ms (section .bss.check_backlight_voice()::tmr10ms)
        [0x20000c95 to 0x20000c95] - menuProcModelSelect(unsigned char)::mstate2 (section .bss.menuProcModelSelect(unsigned char)::mstate2)
        [0x20000c96 to 0x20000c96] - menuProcModelSelect(unsigned char)::sel_editMode (section .bss.menuProcModelSelect(unsigned char)::sel_editMode)
        [0x20000c97 to 0x20000c97] - menuProcVoiceAlarm(unsigned char)::mstate2 (section .bss.menuProcVoiceAlarm(unsigned char)::mstate2)
        [0x20000c98 to 0x20000c98] - menuProcModelIndex(unsigned char)::mstate (section .bss.menuProcModelIndex(unsigned char)::mstate)
        [0x20000c99 to 0x20000c99] - menuProcTelemetry(unsigned char)::mstate2 (section .bss.menuProcTelemetry(unsigned char)::mstate2)
        [0x20000c9a to 0x20000c9a] - menuProcVoiceOne(unsigned char)::mstate2 (section .bss.menuProcVoiceOne(unsigned char)::mstate2)
        [0x20000c9b to 0x20000c9b] - menuProcProtocol(unsigned char)::mstate2 (section .bss.menuProcProtocol(unsigned char)::mstate2)
        [0x20000c9c to 0x20000c9c] - menuProcCurveOne(unsigned char)::mstate2 (section .bss.menuProcCurveOne(unsigned char)::mstate2)
        [0x20000c9d to 0x20000c9d] - menuProcCurveOne(unsigned char)::dfltCrv (section .bss.menuProcCurveOne(unsigned char)::dfltCrv)
        [0x20000c9e to 0x20000c9e] - menuSetFailsafe(unsigned char)::mstate2 (section .bss.menuSetFailsafe(unsigned char)::mstate2)
        [0x20000c9f to 0x20000c9f] - menuProcGlobals(unsigned char)::mstate2 (section .bss.menuProcGlobals(unsigned char)::mstate2)
        [0x20000ca0 to 0x20000ca0] - menuModelPhases(unsigned char)::mstate2 (section .bss.menuModelPhases(unsigned char)::mstate2)
        [0x20000ca1 to 0x20000ca1] - A7105_AntSwitch()::sw (section .bss.A7105_AntSwitch()::sw)
        [0x20000ca2 to 0x20000ca2] - menuProcMixOne(unsigned char)::mstate2 (section .bss.menuProcMixOne(unsigned char)::mstate2)
        [0x20000ca3 to 0x20000ca3] - menuRangeBind(unsigned char)::timer (section .bss.menuRangeBind(unsigned char)::timer)
        [0x20000ca4 to 0x20000ca4] - menuProcIndex(unsigned char)::mstate (section .bss.menuProcIndex(unsigned char)::mstate)
        [0x20000ca5 to 0x20000ca5] - menuProcCurve(unsigned char)::mstate2 (section .bss.menuProcCurve(unsigned char)::mstate2)
        [0x20000ca6 to 0x20000ca6] - ActionAFHDS2A::packet_type (section .bss.ActionAFHDS2A::packet_type)
        [0x20000ca7 to 0x20000ca7] - menuScaleOne(unsigned char)::mstate2 (section .bss.menuScaleOne(unsigned char)::mstate2)
        [0x20000ca8 to 0x20000ca8] - menuPhaseOne(unsigned char)::mstate2 (section .bss.menuPhaseOne(unsigned char)::mstate2)
        [0x20000ca9 to 0x20000ca9] - perOutPhase(short*, unsigned char)::lastPhase (section .bss.perOutPhase(short*, unsigned char)::lastPhase)
        [0x20000caa to 0x20000caa] - menuRXSetup(unsigned char)::mstate2 (section .bss.menuRXSetup(unsigned char)::mstate2)
        [0x20000cab to 0x20000cab] - menuProcMix(unsigned char)::mstate2 (section .bss.menuProcMix(unsigned char)::mstate2)
        [0x20000cac to 0x20000cac] - s_currIdx (section .bss.s_currIdx)
        [0x20000cad to 0x20000cad] - Columns (section .bss.Columns)
        [0x20000cae to 0x20000cae] - wait_fin_count (section .bss.wait_fin_count)
        [0x20000caf to 0x20000caf] - inputs_subview (section .bss.inputs_subview)
        [0x20000cb0 to 0x20000cb0] - s_eeLongTimer (section .bss.s_eeLongTimer)
        [0x20000cb1 to 0x20000cb1] - LongMenuTimer (section .bss.LongMenuTimer)
        [0x20000cb2 to 0x20000cb2] - s_moveMixIdx (section .bss.s_moveMixIdx)
        [0x20000cb3 to 0x20000cb3] - s_eeDirtyMsk (section .bss.s_eeDirtyMsk)
        [0x20000cb4 to 0x20000cb4] - s_currMixIdx (section .bss.s_currMixIdx)
        [0x20000cb5 to 0x20000cb5] - s_currDestCh (section .bss.s_currDestCh)
        [0x20000cb6 to 0x20000cb6] - s_curveChan (section .bss.s_curveChan)
        [0x20000cb7 to 0x20000cb7] - IlinesCount (section .bss.IlinesCount)
        [0x20000cb8 to 0x20000cb8] - s_expoChan (section .bss.s_expoChan)
        [0x20000cb9 to 0x20000cb9] - ThrottleStickyOn (section .bss.ThrottleStickyOn)
        [0x20000cba to 0x20000cba] - Tevent (section .bss.Tevent)
        [0x20000cbb to 0x20000cbb] - SystemOptions (section .bss.SystemOptions)
        [0x20000cbc to 0x20000cbc] - StickScrollTimer (section .bss.StickScrollTimer)
        [0x20000cbd to 0x20000cbd] - StickScrollAllowed (section .bss.StickScrollAllowed)
        [0x20000cbe to 0x20000cbe] - StepSize (section .bss.StepSize)
        [0x20000cbf to 0x20000cbf] - RotaryState (section .bss.RotaryState)
        [0x20000cc0 to 0x20000cc0] - RadioState (section .bss.RadioState)
        [0x20000cc1 to 0x20000cc1] - RadioActive (section .bss.RadioActive)
        [0x20000cc2 to 0x20000cc2] - PausePulses (section .bss.PausePulses)
        [0x20000cc3 to 0x20000cc3] - Main_running (section .bss.Main_running)
        [0x20000cc4 to 0x20000cc4] - M_longMenuTimer (section .bss.M_longMenuTimer)
        [0x20000cc5 to 0x20000cc5] - Lcd_lastPos (section .bss.Lcd_lastPos)
        [0x20000cc6 to 0x20000cc6] - LcdLock (section .bss.LcdLock)
        [0x20000cc7 to 0x20000cc7] - InverseBlink (section .bss.InverseBlink)
        [0x20000cc8 to 0x20000cc8] - EnterMenu (section .bss.EnterMenu)
        [0x20000cc9 to 0x20000cc9] - EepromActive (section .bss.EepromActive)
        [0x20000cca to 0x20000cca] - Ee_lock (section .bss.Ee_lock)
        [0x20000ccb to 0x20000ccb] - EditType (section .bss.EditType)
        [0x20000ccc to 0x20000ccc] - EditColumns (section .bss.EditColumns)
        [0x20000ccd to 0x20000ccd] - DupSub (section .bss.DupSub)
        [0x20000cce to 0x20000cce] - DupIfNonzero (section .bss.DupIfNonzero)
        [0x20000ccf to 0x20000ccf] - Current_protocol (section .bss.Current_protocol)
        [0x20000cd0 to 0x20000cd0] - CurrentVolume (section .bss.CurrentVolume)
        [0x20000cd1 to 0x20000cd1] - CurrentPhase (section .bss.CurrentPhase)
        [0x20000cd2 to 0x20000cd2] - CalcScaleNest (section .bss.CalcScaleNest)
        [0x20000cd3 to 0x20000cd3] - prev_power (section .data.prev_power)
        [0x20000cd4 to 0x20000cd7] - devicesRefreshTimeout (section .data.devicesRefreshTimeout)
        [0x20000cd8 to 0x20000cdb] - AFHDS2A_update_telemetry()::Dacc (section .data.AFHDS2A_update_telemetry()::Dacc)
        [0x20000cdc to 0x20000cdf] - ISR_TIMER1_COMPA_vect::pulsePtr (section .data.ISR_TIMER1_COMPA_vect::pulsePtr)
        [0x20000ce0 to 0x20000ce1] - A7105_AdjustLOBaseFreq()::old_offset (section .data.A7105_AdjustLOBaseFreq()::old_offset)
        [0x20000ce2 to 0x20000ceb] - play_cmd_buf (section .data.play_cmd_buf)
        [0x20000cec to 0x20000cef] - AlarmControl (section .data.AlarmControl)
        [0x20000cf0 to 0x20000cf0] - otherDevicesId (section .data.otherDevicesId)
        [0x20000cf1 to 0x20000cf1] - lineIndex (section .data.lineIndex)
        [0x20000cf2 to 0x20000cf2] - handsetId (section .data.handsetId)
        [0x20000cf3 to 0x20000cf3] - fieldId (section .data.fieldId)
        [0x20000cf4 to 0x20000cf4] - expectedChunks (section .data.expectedChunks)
        [0x20000cf5 to 0x20000cf5] - deviceId (section .data.deviceId)
        [0x20000cf6 to 0x20000cf6] - backButtonId (section .data.backButtonId)
        [0x20000cf8 to 0x20000df7] - [.bss.block.heap] (section .bss.block.heap)
      Start program header at 0x20001700
        [0x20001700 to 0x200017ff] - [.bss.block.stack] (section .bss.block.stack)
  Make symbol table
  Finalize copy blocks
  Finalize integrity check sections
  Patch section headers
  Patch program headers
  Patch file header


***************************************************************************************
***                                                                                 ***
***                                  Empty selects                                  ***
***                                                                                 ***
***************************************************************************************

